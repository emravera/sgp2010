//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GyCAP.Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsEstructura")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsEstructura : global::System.Data.DataSet {
        
        private PIEZASXESTRUCTURADataTable tablePIEZASXESTRUCTURA;
        
        private SUBCONJUNTOSXESTRUCTURADataTable tableSUBCONJUNTOSXESTRUCTURA;
        
        private MATERIASPRIMASXESTRUCTURADataTable tableMATERIASPRIMASXESTRUCTURA;
        
        private CONJUNTOSXESTRUCTURADataTable tableCONJUNTOSXESTRUCTURA;
        
        private GRUPOS_ESTRUCTURADataTable tableGRUPOS_ESTRUCTURA;
        
        private MATERIAS_PRIMASDataTable tableMATERIAS_PRIMAS;
        
        private PLANOSDataTable tablePLANOS;
        
        private ESTADO_PARTESDataTable tableESTADO_PARTES;
        
        private TERMINACIONESDataTable tableTERMINACIONES;
        
        private PIEZASXCONJUNTODataTable tablePIEZASXCONJUNTO;
        
        private PIEZASXSUBCONJUNTODataTable tablePIEZASXSUBCONJUNTO;
        
        private SUBCONJUNTOSXCONJUNTODataTable tableSUBCONJUNTOSXCONJUNTO;
        
        private CONJUNTOSDataTable tableCONJUNTOS;
        
        private SUBCONJUNTOSDataTable tableSUBCONJUNTOS;
        
        private PIEZASDataTable tablePIEZAS;
        
        private MATERIASPRIMASXPIEZADataTable tableMATERIASPRIMASXPIEZA;
        
        private ESTRUCTURASDataTable tableESTRUCTURAS;
        
        private LISTA_PARTESDataTable tableLISTA_PARTES;
        
        private global::System.Data.DataRelation relationpiezasXEstructura_grupoEstructura_fk;
        
        private global::System.Data.DataRelation relationsubconjuntosXEstructura_grupoEstructura_fk;
        
        private global::System.Data.DataRelation relationmateriaPrimaXEstructura_grupoEstructura_fk;
        
        private global::System.Data.DataRelation relationconjuntoXEstructura_grupo_fk;
        
        private global::System.Data.DataRelation relationmateriaPrimaXEstructura_materiaPrima_fk;
        
        private global::System.Data.DataRelation relationdetalleconjunto_subconjunto_fk;
        
        private global::System.Data.DataRelation relationdetalleSubconjunto_subconjunto_fk;
        
        private global::System.Data.DataRelation relationdetalleconjunto_conjunto_fk;
        
        private global::System.Data.DataRelation relationdetalleSubconjunto_pieza_fk;
        
        private global::System.Data.DataRelation relationdetallePieza_pieza_fk;
        
        private global::System.Data.DataRelation relationMATERIAS_PRIMAS_MATERIASPRIMASXPIEZA;
        
        private global::System.Data.DataRelation relationCONJUNTOS_PIEZASXCONJUNTO;
        
        private global::System.Data.DataRelation relationPIEZAS_PIEZASXCONJUNTO;
        
        private global::System.Data.DataRelation relationTERMINACIONES_PIEZAS;
        
        private global::System.Data.DataRelation relationESTADO_PARTES_PIEZAS;
        
        private global::System.Data.DataRelation relationESTADO_PARTES_SUBCONJUNTOS;
        
        private global::System.Data.DataRelation relationESTADO_PARTES_CONJUNTOS;
        
        private global::System.Data.DataRelation relationCONJUNTOS_CONJUNTOSXESTRUCTURA;
        
        private global::System.Data.DataRelation relationSUBCONJUNTOS_SUBCONJUNTOSXESTRUCTURA;
        
        private global::System.Data.DataRelation relationPIEZAS_PIEZASXESTRUCTURA;
        
        private global::System.Data.DataRelation relationESTRUCTURAS_GRUPOS_ESTRUCTURA;
        
        private global::System.Data.DataRelation relationESTRUCTURAS_SUBCONJUNTOSXESTRUCTURA;
        
        private global::System.Data.DataRelation relationESTRUCTURAS_PIEZASXESTRUCTURA;
        
        private global::System.Data.DataRelation relationESTRUCTURAS_MATERIASPRIMASXESTRUCTURA;
        
        private global::System.Data.DataRelation relationPLANOS_ESTRUCTURAS;
        
        private global::System.Data.DataRelation relationPLANOS_CONJUNTOS;
        
        private global::System.Data.DataRelation relationPLANOS_SUBCONJUNTOS;
        
        private global::System.Data.DataRelation relationPLANOS_PIEZAS;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsEstructura() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsEstructura(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PIEZASXESTRUCTURA"] != null)) {
                    base.Tables.Add(new PIEZASXESTRUCTURADataTable(ds.Tables["PIEZASXESTRUCTURA"]));
                }
                if ((ds.Tables["SUBCONJUNTOSXESTRUCTURA"] != null)) {
                    base.Tables.Add(new SUBCONJUNTOSXESTRUCTURADataTable(ds.Tables["SUBCONJUNTOSXESTRUCTURA"]));
                }
                if ((ds.Tables["MATERIASPRIMASXESTRUCTURA"] != null)) {
                    base.Tables.Add(new MATERIASPRIMASXESTRUCTURADataTable(ds.Tables["MATERIASPRIMASXESTRUCTURA"]));
                }
                if ((ds.Tables["CONJUNTOSXESTRUCTURA"] != null)) {
                    base.Tables.Add(new CONJUNTOSXESTRUCTURADataTable(ds.Tables["CONJUNTOSXESTRUCTURA"]));
                }
                if ((ds.Tables["GRUPOS_ESTRUCTURA"] != null)) {
                    base.Tables.Add(new GRUPOS_ESTRUCTURADataTable(ds.Tables["GRUPOS_ESTRUCTURA"]));
                }
                if ((ds.Tables["MATERIAS_PRIMAS"] != null)) {
                    base.Tables.Add(new MATERIAS_PRIMASDataTable(ds.Tables["MATERIAS_PRIMAS"]));
                }
                if ((ds.Tables["PLANOS"] != null)) {
                    base.Tables.Add(new PLANOSDataTable(ds.Tables["PLANOS"]));
                }
                if ((ds.Tables["ESTADO_PARTES"] != null)) {
                    base.Tables.Add(new ESTADO_PARTESDataTable(ds.Tables["ESTADO_PARTES"]));
                }
                if ((ds.Tables["TERMINACIONES"] != null)) {
                    base.Tables.Add(new TERMINACIONESDataTable(ds.Tables["TERMINACIONES"]));
                }
                if ((ds.Tables["PIEZASXCONJUNTO"] != null)) {
                    base.Tables.Add(new PIEZASXCONJUNTODataTable(ds.Tables["PIEZASXCONJUNTO"]));
                }
                if ((ds.Tables["PIEZASXSUBCONJUNTO"] != null)) {
                    base.Tables.Add(new PIEZASXSUBCONJUNTODataTable(ds.Tables["PIEZASXSUBCONJUNTO"]));
                }
                if ((ds.Tables["SUBCONJUNTOSXCONJUNTO"] != null)) {
                    base.Tables.Add(new SUBCONJUNTOSXCONJUNTODataTable(ds.Tables["SUBCONJUNTOSXCONJUNTO"]));
                }
                if ((ds.Tables["CONJUNTOS"] != null)) {
                    base.Tables.Add(new CONJUNTOSDataTable(ds.Tables["CONJUNTOS"]));
                }
                if ((ds.Tables["SUBCONJUNTOS"] != null)) {
                    base.Tables.Add(new SUBCONJUNTOSDataTable(ds.Tables["SUBCONJUNTOS"]));
                }
                if ((ds.Tables["PIEZAS"] != null)) {
                    base.Tables.Add(new PIEZASDataTable(ds.Tables["PIEZAS"]));
                }
                if ((ds.Tables["MATERIASPRIMASXPIEZA"] != null)) {
                    base.Tables.Add(new MATERIASPRIMASXPIEZADataTable(ds.Tables["MATERIASPRIMASXPIEZA"]));
                }
                if ((ds.Tables["ESTRUCTURAS"] != null)) {
                    base.Tables.Add(new ESTRUCTURASDataTable(ds.Tables["ESTRUCTURAS"]));
                }
                if ((ds.Tables["LISTA_PARTES"] != null)) {
                    base.Tables.Add(new LISTA_PARTESDataTable(ds.Tables["LISTA_PARTES"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PIEZASXESTRUCTURADataTable PIEZASXESTRUCTURA {
            get {
                return this.tablePIEZASXESTRUCTURA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SUBCONJUNTOSXESTRUCTURADataTable SUBCONJUNTOSXESTRUCTURA {
            get {
                return this.tableSUBCONJUNTOSXESTRUCTURA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MATERIASPRIMASXESTRUCTURADataTable MATERIASPRIMASXESTRUCTURA {
            get {
                return this.tableMATERIASPRIMASXESTRUCTURA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CONJUNTOSXESTRUCTURADataTable CONJUNTOSXESTRUCTURA {
            get {
                return this.tableCONJUNTOSXESTRUCTURA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GRUPOS_ESTRUCTURADataTable GRUPOS_ESTRUCTURA {
            get {
                return this.tableGRUPOS_ESTRUCTURA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MATERIAS_PRIMASDataTable MATERIAS_PRIMAS {
            get {
                return this.tableMATERIAS_PRIMAS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PLANOSDataTable PLANOS {
            get {
                return this.tablePLANOS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ESTADO_PARTESDataTable ESTADO_PARTES {
            get {
                return this.tableESTADO_PARTES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TERMINACIONESDataTable TERMINACIONES {
            get {
                return this.tableTERMINACIONES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PIEZASXCONJUNTODataTable PIEZASXCONJUNTO {
            get {
                return this.tablePIEZASXCONJUNTO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PIEZASXSUBCONJUNTODataTable PIEZASXSUBCONJUNTO {
            get {
                return this.tablePIEZASXSUBCONJUNTO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SUBCONJUNTOSXCONJUNTODataTable SUBCONJUNTOSXCONJUNTO {
            get {
                return this.tableSUBCONJUNTOSXCONJUNTO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CONJUNTOSDataTable CONJUNTOS {
            get {
                return this.tableCONJUNTOS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SUBCONJUNTOSDataTable SUBCONJUNTOS {
            get {
                return this.tableSUBCONJUNTOS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PIEZASDataTable PIEZAS {
            get {
                return this.tablePIEZAS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MATERIASPRIMASXPIEZADataTable MATERIASPRIMASXPIEZA {
            get {
                return this.tableMATERIASPRIMASXPIEZA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ESTRUCTURASDataTable ESTRUCTURAS {
            get {
                return this.tableESTRUCTURAS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LISTA_PARTESDataTable LISTA_PARTES {
            get {
                return this.tableLISTA_PARTES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsEstructura cln = ((dsEstructura)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PIEZASXESTRUCTURA"] != null)) {
                    base.Tables.Add(new PIEZASXESTRUCTURADataTable(ds.Tables["PIEZASXESTRUCTURA"]));
                }
                if ((ds.Tables["SUBCONJUNTOSXESTRUCTURA"] != null)) {
                    base.Tables.Add(new SUBCONJUNTOSXESTRUCTURADataTable(ds.Tables["SUBCONJUNTOSXESTRUCTURA"]));
                }
                if ((ds.Tables["MATERIASPRIMASXESTRUCTURA"] != null)) {
                    base.Tables.Add(new MATERIASPRIMASXESTRUCTURADataTable(ds.Tables["MATERIASPRIMASXESTRUCTURA"]));
                }
                if ((ds.Tables["CONJUNTOSXESTRUCTURA"] != null)) {
                    base.Tables.Add(new CONJUNTOSXESTRUCTURADataTable(ds.Tables["CONJUNTOSXESTRUCTURA"]));
                }
                if ((ds.Tables["GRUPOS_ESTRUCTURA"] != null)) {
                    base.Tables.Add(new GRUPOS_ESTRUCTURADataTable(ds.Tables["GRUPOS_ESTRUCTURA"]));
                }
                if ((ds.Tables["MATERIAS_PRIMAS"] != null)) {
                    base.Tables.Add(new MATERIAS_PRIMASDataTable(ds.Tables["MATERIAS_PRIMAS"]));
                }
                if ((ds.Tables["PLANOS"] != null)) {
                    base.Tables.Add(new PLANOSDataTable(ds.Tables["PLANOS"]));
                }
                if ((ds.Tables["ESTADO_PARTES"] != null)) {
                    base.Tables.Add(new ESTADO_PARTESDataTable(ds.Tables["ESTADO_PARTES"]));
                }
                if ((ds.Tables["TERMINACIONES"] != null)) {
                    base.Tables.Add(new TERMINACIONESDataTable(ds.Tables["TERMINACIONES"]));
                }
                if ((ds.Tables["PIEZASXCONJUNTO"] != null)) {
                    base.Tables.Add(new PIEZASXCONJUNTODataTable(ds.Tables["PIEZASXCONJUNTO"]));
                }
                if ((ds.Tables["PIEZASXSUBCONJUNTO"] != null)) {
                    base.Tables.Add(new PIEZASXSUBCONJUNTODataTable(ds.Tables["PIEZASXSUBCONJUNTO"]));
                }
                if ((ds.Tables["SUBCONJUNTOSXCONJUNTO"] != null)) {
                    base.Tables.Add(new SUBCONJUNTOSXCONJUNTODataTable(ds.Tables["SUBCONJUNTOSXCONJUNTO"]));
                }
                if ((ds.Tables["CONJUNTOS"] != null)) {
                    base.Tables.Add(new CONJUNTOSDataTable(ds.Tables["CONJUNTOS"]));
                }
                if ((ds.Tables["SUBCONJUNTOS"] != null)) {
                    base.Tables.Add(new SUBCONJUNTOSDataTable(ds.Tables["SUBCONJUNTOS"]));
                }
                if ((ds.Tables["PIEZAS"] != null)) {
                    base.Tables.Add(new PIEZASDataTable(ds.Tables["PIEZAS"]));
                }
                if ((ds.Tables["MATERIASPRIMASXPIEZA"] != null)) {
                    base.Tables.Add(new MATERIASPRIMASXPIEZADataTable(ds.Tables["MATERIASPRIMASXPIEZA"]));
                }
                if ((ds.Tables["ESTRUCTURAS"] != null)) {
                    base.Tables.Add(new ESTRUCTURASDataTable(ds.Tables["ESTRUCTURAS"]));
                }
                if ((ds.Tables["LISTA_PARTES"] != null)) {
                    base.Tables.Add(new LISTA_PARTESDataTable(ds.Tables["LISTA_PARTES"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePIEZASXESTRUCTURA = ((PIEZASXESTRUCTURADataTable)(base.Tables["PIEZASXESTRUCTURA"]));
            if ((initTable == true)) {
                if ((this.tablePIEZASXESTRUCTURA != null)) {
                    this.tablePIEZASXESTRUCTURA.InitVars();
                }
            }
            this.tableSUBCONJUNTOSXESTRUCTURA = ((SUBCONJUNTOSXESTRUCTURADataTable)(base.Tables["SUBCONJUNTOSXESTRUCTURA"]));
            if ((initTable == true)) {
                if ((this.tableSUBCONJUNTOSXESTRUCTURA != null)) {
                    this.tableSUBCONJUNTOSXESTRUCTURA.InitVars();
                }
            }
            this.tableMATERIASPRIMASXESTRUCTURA = ((MATERIASPRIMASXESTRUCTURADataTable)(base.Tables["MATERIASPRIMASXESTRUCTURA"]));
            if ((initTable == true)) {
                if ((this.tableMATERIASPRIMASXESTRUCTURA != null)) {
                    this.tableMATERIASPRIMASXESTRUCTURA.InitVars();
                }
            }
            this.tableCONJUNTOSXESTRUCTURA = ((CONJUNTOSXESTRUCTURADataTable)(base.Tables["CONJUNTOSXESTRUCTURA"]));
            if ((initTable == true)) {
                if ((this.tableCONJUNTOSXESTRUCTURA != null)) {
                    this.tableCONJUNTOSXESTRUCTURA.InitVars();
                }
            }
            this.tableGRUPOS_ESTRUCTURA = ((GRUPOS_ESTRUCTURADataTable)(base.Tables["GRUPOS_ESTRUCTURA"]));
            if ((initTable == true)) {
                if ((this.tableGRUPOS_ESTRUCTURA != null)) {
                    this.tableGRUPOS_ESTRUCTURA.InitVars();
                }
            }
            this.tableMATERIAS_PRIMAS = ((MATERIAS_PRIMASDataTable)(base.Tables["MATERIAS_PRIMAS"]));
            if ((initTable == true)) {
                if ((this.tableMATERIAS_PRIMAS != null)) {
                    this.tableMATERIAS_PRIMAS.InitVars();
                }
            }
            this.tablePLANOS = ((PLANOSDataTable)(base.Tables["PLANOS"]));
            if ((initTable == true)) {
                if ((this.tablePLANOS != null)) {
                    this.tablePLANOS.InitVars();
                }
            }
            this.tableESTADO_PARTES = ((ESTADO_PARTESDataTable)(base.Tables["ESTADO_PARTES"]));
            if ((initTable == true)) {
                if ((this.tableESTADO_PARTES != null)) {
                    this.tableESTADO_PARTES.InitVars();
                }
            }
            this.tableTERMINACIONES = ((TERMINACIONESDataTable)(base.Tables["TERMINACIONES"]));
            if ((initTable == true)) {
                if ((this.tableTERMINACIONES != null)) {
                    this.tableTERMINACIONES.InitVars();
                }
            }
            this.tablePIEZASXCONJUNTO = ((PIEZASXCONJUNTODataTable)(base.Tables["PIEZASXCONJUNTO"]));
            if ((initTable == true)) {
                if ((this.tablePIEZASXCONJUNTO != null)) {
                    this.tablePIEZASXCONJUNTO.InitVars();
                }
            }
            this.tablePIEZASXSUBCONJUNTO = ((PIEZASXSUBCONJUNTODataTable)(base.Tables["PIEZASXSUBCONJUNTO"]));
            if ((initTable == true)) {
                if ((this.tablePIEZASXSUBCONJUNTO != null)) {
                    this.tablePIEZASXSUBCONJUNTO.InitVars();
                }
            }
            this.tableSUBCONJUNTOSXCONJUNTO = ((SUBCONJUNTOSXCONJUNTODataTable)(base.Tables["SUBCONJUNTOSXCONJUNTO"]));
            if ((initTable == true)) {
                if ((this.tableSUBCONJUNTOSXCONJUNTO != null)) {
                    this.tableSUBCONJUNTOSXCONJUNTO.InitVars();
                }
            }
            this.tableCONJUNTOS = ((CONJUNTOSDataTable)(base.Tables["CONJUNTOS"]));
            if ((initTable == true)) {
                if ((this.tableCONJUNTOS != null)) {
                    this.tableCONJUNTOS.InitVars();
                }
            }
            this.tableSUBCONJUNTOS = ((SUBCONJUNTOSDataTable)(base.Tables["SUBCONJUNTOS"]));
            if ((initTable == true)) {
                if ((this.tableSUBCONJUNTOS != null)) {
                    this.tableSUBCONJUNTOS.InitVars();
                }
            }
            this.tablePIEZAS = ((PIEZASDataTable)(base.Tables["PIEZAS"]));
            if ((initTable == true)) {
                if ((this.tablePIEZAS != null)) {
                    this.tablePIEZAS.InitVars();
                }
            }
            this.tableMATERIASPRIMASXPIEZA = ((MATERIASPRIMASXPIEZADataTable)(base.Tables["MATERIASPRIMASXPIEZA"]));
            if ((initTable == true)) {
                if ((this.tableMATERIASPRIMASXPIEZA != null)) {
                    this.tableMATERIASPRIMASXPIEZA.InitVars();
                }
            }
            this.tableESTRUCTURAS = ((ESTRUCTURASDataTable)(base.Tables["ESTRUCTURAS"]));
            if ((initTable == true)) {
                if ((this.tableESTRUCTURAS != null)) {
                    this.tableESTRUCTURAS.InitVars();
                }
            }
            this.tableLISTA_PARTES = ((LISTA_PARTESDataTable)(base.Tables["LISTA_PARTES"]));
            if ((initTable == true)) {
                if ((this.tableLISTA_PARTES != null)) {
                    this.tableLISTA_PARTES.InitVars();
                }
            }
            this.relationpiezasXEstructura_grupoEstructura_fk = this.Relations["piezasXEstructura_grupoEstructura_fk"];
            this.relationsubconjuntosXEstructura_grupoEstructura_fk = this.Relations["subconjuntosXEstructura_grupoEstructura_fk"];
            this.relationmateriaPrimaXEstructura_grupoEstructura_fk = this.Relations["materiaPrimaXEstructura_grupoEstructura_fk"];
            this.relationconjuntoXEstructura_grupo_fk = this.Relations["conjuntoXEstructura_grupo_fk"];
            this.relationmateriaPrimaXEstructura_materiaPrima_fk = this.Relations["materiaPrimaXEstructura_materiaPrima_fk"];
            this.relationdetalleconjunto_subconjunto_fk = this.Relations["detalleconjunto_subconjunto_fk"];
            this.relationdetalleSubconjunto_subconjunto_fk = this.Relations["detalleSubconjunto_subconjunto_fk"];
            this.relationdetalleconjunto_conjunto_fk = this.Relations["detalleconjunto_conjunto_fk"];
            this.relationdetalleSubconjunto_pieza_fk = this.Relations["detalleSubconjunto_pieza_fk"];
            this.relationdetallePieza_pieza_fk = this.Relations["detallePieza_pieza_fk"];
            this.relationMATERIAS_PRIMAS_MATERIASPRIMASXPIEZA = this.Relations["MATERIAS_PRIMAS_MATERIASPRIMASXPIEZA"];
            this.relationCONJUNTOS_PIEZASXCONJUNTO = this.Relations["CONJUNTOS_PIEZASXCONJUNTO"];
            this.relationPIEZAS_PIEZASXCONJUNTO = this.Relations["PIEZAS_PIEZASXCONJUNTO"];
            this.relationTERMINACIONES_PIEZAS = this.Relations["TERMINACIONES_PIEZAS"];
            this.relationESTADO_PARTES_PIEZAS = this.Relations["ESTADO_PARTES_PIEZAS"];
            this.relationESTADO_PARTES_SUBCONJUNTOS = this.Relations["ESTADO_PARTES_SUBCONJUNTOS"];
            this.relationESTADO_PARTES_CONJUNTOS = this.Relations["ESTADO_PARTES_CONJUNTOS"];
            this.relationCONJUNTOS_CONJUNTOSXESTRUCTURA = this.Relations["CONJUNTOS_CONJUNTOSXESTRUCTURA"];
            this.relationSUBCONJUNTOS_SUBCONJUNTOSXESTRUCTURA = this.Relations["SUBCONJUNTOS_SUBCONJUNTOSXESTRUCTURA"];
            this.relationPIEZAS_PIEZASXESTRUCTURA = this.Relations["PIEZAS_PIEZASXESTRUCTURA"];
            this.relationESTRUCTURAS_GRUPOS_ESTRUCTURA = this.Relations["ESTRUCTURAS_GRUPOS_ESTRUCTURA"];
            this.relationESTRUCTURAS_SUBCONJUNTOSXESTRUCTURA = this.Relations["ESTRUCTURAS_SUBCONJUNTOSXESTRUCTURA"];
            this.relationESTRUCTURAS_PIEZASXESTRUCTURA = this.Relations["ESTRUCTURAS_PIEZASXESTRUCTURA"];
            this.relationESTRUCTURAS_MATERIASPRIMASXESTRUCTURA = this.Relations["ESTRUCTURAS_MATERIASPRIMASXESTRUCTURA"];
            this.relationPLANOS_ESTRUCTURAS = this.Relations["PLANOS_ESTRUCTURAS"];
            this.relationPLANOS_CONJUNTOS = this.Relations["PLANOS_CONJUNTOS"];
            this.relationPLANOS_SUBCONJUNTOS = this.Relations["PLANOS_SUBCONJUNTOS"];
            this.relationPLANOS_PIEZAS = this.Relations["PLANOS_PIEZAS"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsEstructura";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsEstructura.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePIEZASXESTRUCTURA = new PIEZASXESTRUCTURADataTable();
            base.Tables.Add(this.tablePIEZASXESTRUCTURA);
            this.tableSUBCONJUNTOSXESTRUCTURA = new SUBCONJUNTOSXESTRUCTURADataTable();
            base.Tables.Add(this.tableSUBCONJUNTOSXESTRUCTURA);
            this.tableMATERIASPRIMASXESTRUCTURA = new MATERIASPRIMASXESTRUCTURADataTable();
            base.Tables.Add(this.tableMATERIASPRIMASXESTRUCTURA);
            this.tableCONJUNTOSXESTRUCTURA = new CONJUNTOSXESTRUCTURADataTable();
            base.Tables.Add(this.tableCONJUNTOSXESTRUCTURA);
            this.tableGRUPOS_ESTRUCTURA = new GRUPOS_ESTRUCTURADataTable();
            base.Tables.Add(this.tableGRUPOS_ESTRUCTURA);
            this.tableMATERIAS_PRIMAS = new MATERIAS_PRIMASDataTable();
            base.Tables.Add(this.tableMATERIAS_PRIMAS);
            this.tablePLANOS = new PLANOSDataTable();
            base.Tables.Add(this.tablePLANOS);
            this.tableESTADO_PARTES = new ESTADO_PARTESDataTable();
            base.Tables.Add(this.tableESTADO_PARTES);
            this.tableTERMINACIONES = new TERMINACIONESDataTable();
            base.Tables.Add(this.tableTERMINACIONES);
            this.tablePIEZASXCONJUNTO = new PIEZASXCONJUNTODataTable();
            base.Tables.Add(this.tablePIEZASXCONJUNTO);
            this.tablePIEZASXSUBCONJUNTO = new PIEZASXSUBCONJUNTODataTable();
            base.Tables.Add(this.tablePIEZASXSUBCONJUNTO);
            this.tableSUBCONJUNTOSXCONJUNTO = new SUBCONJUNTOSXCONJUNTODataTable();
            base.Tables.Add(this.tableSUBCONJUNTOSXCONJUNTO);
            this.tableCONJUNTOS = new CONJUNTOSDataTable();
            base.Tables.Add(this.tableCONJUNTOS);
            this.tableSUBCONJUNTOS = new SUBCONJUNTOSDataTable();
            base.Tables.Add(this.tableSUBCONJUNTOS);
            this.tablePIEZAS = new PIEZASDataTable();
            base.Tables.Add(this.tablePIEZAS);
            this.tableMATERIASPRIMASXPIEZA = new MATERIASPRIMASXPIEZADataTable();
            base.Tables.Add(this.tableMATERIASPRIMASXPIEZA);
            this.tableESTRUCTURAS = new ESTRUCTURASDataTable();
            base.Tables.Add(this.tableESTRUCTURAS);
            this.tableLISTA_PARTES = new LISTA_PARTESDataTable();
            base.Tables.Add(this.tableLISTA_PARTES);
            this.relationpiezasXEstructura_grupoEstructura_fk = new global::System.Data.DataRelation("piezasXEstructura_grupoEstructura_fk", new global::System.Data.DataColumn[] {
                        this.tableGRUPOS_ESTRUCTURA.GRP_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tablePIEZASXESTRUCTURA.GRP_CODIGOColumn}, false);
            this.Relations.Add(this.relationpiezasXEstructura_grupoEstructura_fk);
            this.relationsubconjuntosXEstructura_grupoEstructura_fk = new global::System.Data.DataRelation("subconjuntosXEstructura_grupoEstructura_fk", new global::System.Data.DataColumn[] {
                        this.tableGRUPOS_ESTRUCTURA.GRP_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableSUBCONJUNTOSXESTRUCTURA.GRP_CODIGOColumn}, false);
            this.Relations.Add(this.relationsubconjuntosXEstructura_grupoEstructura_fk);
            this.relationmateriaPrimaXEstructura_grupoEstructura_fk = new global::System.Data.DataRelation("materiaPrimaXEstructura_grupoEstructura_fk", new global::System.Data.DataColumn[] {
                        this.tableGRUPOS_ESTRUCTURA.GRP_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableMATERIASPRIMASXESTRUCTURA.GRP_CODIGOColumn}, false);
            this.Relations.Add(this.relationmateriaPrimaXEstructura_grupoEstructura_fk);
            this.relationconjuntoXEstructura_grupo_fk = new global::System.Data.DataRelation("conjuntoXEstructura_grupo_fk", new global::System.Data.DataColumn[] {
                        this.tableGRUPOS_ESTRUCTURA.GRP_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCONJUNTOSXESTRUCTURA.GRP_CODIGOColumn}, false);
            this.Relations.Add(this.relationconjuntoXEstructura_grupo_fk);
            this.relationmateriaPrimaXEstructura_materiaPrima_fk = new global::System.Data.DataRelation("materiaPrimaXEstructura_materiaPrima_fk", new global::System.Data.DataColumn[] {
                        this.tableMATERIAS_PRIMAS.MP_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableMATERIASPRIMASXESTRUCTURA.MP_CODIGOColumn}, false);
            this.Relations.Add(this.relationmateriaPrimaXEstructura_materiaPrima_fk);
            this.relationdetalleconjunto_subconjunto_fk = new global::System.Data.DataRelation("detalleconjunto_subconjunto_fk", new global::System.Data.DataColumn[] {
                        this.tableCONJUNTOS.CONJ_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableSUBCONJUNTOSXCONJUNTO.CONJ_CODIGOColumn}, false);
            this.Relations.Add(this.relationdetalleconjunto_subconjunto_fk);
            this.relationdetalleSubconjunto_subconjunto_fk = new global::System.Data.DataRelation("detalleSubconjunto_subconjunto_fk", new global::System.Data.DataColumn[] {
                        this.tableSUBCONJUNTOS.SCONJ_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tablePIEZASXSUBCONJUNTO.SCONJ_CODIGOColumn}, false);
            this.Relations.Add(this.relationdetalleSubconjunto_subconjunto_fk);
            this.relationdetalleconjunto_conjunto_fk = new global::System.Data.DataRelation("detalleconjunto_conjunto_fk", new global::System.Data.DataColumn[] {
                        this.tableSUBCONJUNTOS.SCONJ_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableSUBCONJUNTOSXCONJUNTO.SCONJ_CODIGOColumn}, false);
            this.Relations.Add(this.relationdetalleconjunto_conjunto_fk);
            this.relationdetalleSubconjunto_pieza_fk = new global::System.Data.DataRelation("detalleSubconjunto_pieza_fk", new global::System.Data.DataColumn[] {
                        this.tablePIEZAS.PZA_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tablePIEZASXSUBCONJUNTO.PZA_CODIGOColumn}, false);
            this.Relations.Add(this.relationdetalleSubconjunto_pieza_fk);
            this.relationdetallePieza_pieza_fk = new global::System.Data.DataRelation("detallePieza_pieza_fk", new global::System.Data.DataColumn[] {
                        this.tablePIEZAS.PZA_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableMATERIASPRIMASXPIEZA.PZA_CODIGOColumn}, false);
            this.Relations.Add(this.relationdetallePieza_pieza_fk);
            this.relationMATERIAS_PRIMAS_MATERIASPRIMASXPIEZA = new global::System.Data.DataRelation("MATERIAS_PRIMAS_MATERIASPRIMASXPIEZA", new global::System.Data.DataColumn[] {
                        this.tableMATERIAS_PRIMAS.MP_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableMATERIASPRIMASXPIEZA.MP_CODIGOColumn}, false);
            this.Relations.Add(this.relationMATERIAS_PRIMAS_MATERIASPRIMASXPIEZA);
            this.relationCONJUNTOS_PIEZASXCONJUNTO = new global::System.Data.DataRelation("CONJUNTOS_PIEZASXCONJUNTO", new global::System.Data.DataColumn[] {
                        this.tableCONJUNTOS.CONJ_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tablePIEZASXCONJUNTO.CONJ_CODIGOColumn}, false);
            this.Relations.Add(this.relationCONJUNTOS_PIEZASXCONJUNTO);
            this.relationPIEZAS_PIEZASXCONJUNTO = new global::System.Data.DataRelation("PIEZAS_PIEZASXCONJUNTO", new global::System.Data.DataColumn[] {
                        this.tablePIEZAS.PZA_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tablePIEZASXCONJUNTO.PZA_CODIGOColumn}, false);
            this.Relations.Add(this.relationPIEZAS_PIEZASXCONJUNTO);
            this.relationTERMINACIONES_PIEZAS = new global::System.Data.DataRelation("TERMINACIONES_PIEZAS", new global::System.Data.DataColumn[] {
                        this.tableTERMINACIONES.TE_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tablePIEZAS.TE_CODIGOColumn}, false);
            this.Relations.Add(this.relationTERMINACIONES_PIEZAS);
            this.relationESTADO_PARTES_PIEZAS = new global::System.Data.DataRelation("ESTADO_PARTES_PIEZAS", new global::System.Data.DataColumn[] {
                        this.tableESTADO_PARTES.PAR_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tablePIEZAS.PAR_CODIGOColumn}, false);
            this.Relations.Add(this.relationESTADO_PARTES_PIEZAS);
            this.relationESTADO_PARTES_SUBCONJUNTOS = new global::System.Data.DataRelation("ESTADO_PARTES_SUBCONJUNTOS", new global::System.Data.DataColumn[] {
                        this.tableESTADO_PARTES.PAR_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableSUBCONJUNTOS.PAR_CODIGOColumn}, false);
            this.Relations.Add(this.relationESTADO_PARTES_SUBCONJUNTOS);
            this.relationESTADO_PARTES_CONJUNTOS = new global::System.Data.DataRelation("ESTADO_PARTES_CONJUNTOS", new global::System.Data.DataColumn[] {
                        this.tableESTADO_PARTES.PAR_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCONJUNTOS.PAR_CODIGOColumn}, false);
            this.Relations.Add(this.relationESTADO_PARTES_CONJUNTOS);
            this.relationCONJUNTOS_CONJUNTOSXESTRUCTURA = new global::System.Data.DataRelation("CONJUNTOS_CONJUNTOSXESTRUCTURA", new global::System.Data.DataColumn[] {
                        this.tableCONJUNTOS.CONJ_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCONJUNTOSXESTRUCTURA.CONJ_CODIGOColumn}, false);
            this.Relations.Add(this.relationCONJUNTOS_CONJUNTOSXESTRUCTURA);
            this.relationSUBCONJUNTOS_SUBCONJUNTOSXESTRUCTURA = new global::System.Data.DataRelation("SUBCONJUNTOS_SUBCONJUNTOSXESTRUCTURA", new global::System.Data.DataColumn[] {
                        this.tableSUBCONJUNTOS.SCONJ_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableSUBCONJUNTOSXESTRUCTURA.SCONJ_CODIGOColumn}, false);
            this.Relations.Add(this.relationSUBCONJUNTOS_SUBCONJUNTOSXESTRUCTURA);
            this.relationPIEZAS_PIEZASXESTRUCTURA = new global::System.Data.DataRelation("PIEZAS_PIEZASXESTRUCTURA", new global::System.Data.DataColumn[] {
                        this.tablePIEZAS.PZA_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tablePIEZASXESTRUCTURA.PZA_CODIGOColumn}, false);
            this.Relations.Add(this.relationPIEZAS_PIEZASXESTRUCTURA);
            this.relationESTRUCTURAS_GRUPOS_ESTRUCTURA = new global::System.Data.DataRelation("ESTRUCTURAS_GRUPOS_ESTRUCTURA", new global::System.Data.DataColumn[] {
                        this.tableESTRUCTURAS.ESTR_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableGRUPOS_ESTRUCTURA.ESTR_CODIGOColumn}, false);
            this.Relations.Add(this.relationESTRUCTURAS_GRUPOS_ESTRUCTURA);
            this.relationESTRUCTURAS_SUBCONJUNTOSXESTRUCTURA = new global::System.Data.DataRelation("ESTRUCTURAS_SUBCONJUNTOSXESTRUCTURA", new global::System.Data.DataColumn[] {
                        this.tableESTRUCTURAS.ESTR_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableSUBCONJUNTOSXESTRUCTURA.ESTR_CODIGOColumn}, false);
            this.Relations.Add(this.relationESTRUCTURAS_SUBCONJUNTOSXESTRUCTURA);
            this.relationESTRUCTURAS_PIEZASXESTRUCTURA = new global::System.Data.DataRelation("ESTRUCTURAS_PIEZASXESTRUCTURA", new global::System.Data.DataColumn[] {
                        this.tableESTRUCTURAS.ESTR_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tablePIEZASXESTRUCTURA.ESTR_CODIGOColumn}, false);
            this.Relations.Add(this.relationESTRUCTURAS_PIEZASXESTRUCTURA);
            this.relationESTRUCTURAS_MATERIASPRIMASXESTRUCTURA = new global::System.Data.DataRelation("ESTRUCTURAS_MATERIASPRIMASXESTRUCTURA", new global::System.Data.DataColumn[] {
                        this.tableESTRUCTURAS.ESTR_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableMATERIASPRIMASXESTRUCTURA.ESTR_CODIGOColumn}, false);
            this.Relations.Add(this.relationESTRUCTURAS_MATERIASPRIMASXESTRUCTURA);
            this.relationPLANOS_ESTRUCTURAS = new global::System.Data.DataRelation("PLANOS_ESTRUCTURAS", new global::System.Data.DataColumn[] {
                        this.tablePLANOS.PNO_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableESTRUCTURAS.PNO_CODIGOColumn}, false);
            this.Relations.Add(this.relationPLANOS_ESTRUCTURAS);
            this.relationPLANOS_CONJUNTOS = new global::System.Data.DataRelation("PLANOS_CONJUNTOS", new global::System.Data.DataColumn[] {
                        this.tablePLANOS.PNO_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCONJUNTOS.PNO_CODIGOColumn}, false);
            this.Relations.Add(this.relationPLANOS_CONJUNTOS);
            this.relationPLANOS_SUBCONJUNTOS = new global::System.Data.DataRelation("PLANOS_SUBCONJUNTOS", new global::System.Data.DataColumn[] {
                        this.tablePLANOS.PNO_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableSUBCONJUNTOS.PNO_CODIGOColumn}, false);
            this.Relations.Add(this.relationPLANOS_SUBCONJUNTOS);
            this.relationPLANOS_PIEZAS = new global::System.Data.DataRelation("PLANOS_PIEZAS", new global::System.Data.DataColumn[] {
                        this.tablePLANOS.PNO_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tablePIEZAS.PNO_CODIGOColumn}, false);
            this.Relations.Add(this.relationPLANOS_PIEZAS);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePIEZASXESTRUCTURA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSUBCONJUNTOSXESTRUCTURA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMATERIASPRIMASXESTRUCTURA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCONJUNTOSXESTRUCTURA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGRUPOS_ESTRUCTURA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMATERIAS_PRIMAS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePLANOS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeESTADO_PARTES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTERMINACIONES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePIEZASXCONJUNTO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePIEZASXSUBCONJUNTO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSUBCONJUNTOSXCONJUNTO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCONJUNTOS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSUBCONJUNTOS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePIEZAS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMATERIASPRIMASXPIEZA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeESTRUCTURAS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLISTA_PARTES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsEstructura ds = new dsEstructura();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void PIEZASXESTRUCTURARowChangeEventHandler(object sender, PIEZASXESTRUCTURARowChangeEvent e);
        
        public delegate void SUBCONJUNTOSXESTRUCTURARowChangeEventHandler(object sender, SUBCONJUNTOSXESTRUCTURARowChangeEvent e);
        
        public delegate void MATERIASPRIMASXESTRUCTURARowChangeEventHandler(object sender, MATERIASPRIMASXESTRUCTURARowChangeEvent e);
        
        public delegate void CONJUNTOSXESTRUCTURARowChangeEventHandler(object sender, CONJUNTOSXESTRUCTURARowChangeEvent e);
        
        public delegate void GRUPOS_ESTRUCTURARowChangeEventHandler(object sender, GRUPOS_ESTRUCTURARowChangeEvent e);
        
        public delegate void MATERIAS_PRIMASRowChangeEventHandler(object sender, MATERIAS_PRIMASRowChangeEvent e);
        
        public delegate void PLANOSRowChangeEventHandler(object sender, PLANOSRowChangeEvent e);
        
        public delegate void ESTADO_PARTESRowChangeEventHandler(object sender, ESTADO_PARTESRowChangeEvent e);
        
        public delegate void TERMINACIONESRowChangeEventHandler(object sender, TERMINACIONESRowChangeEvent e);
        
        public delegate void PIEZASXCONJUNTORowChangeEventHandler(object sender, PIEZASXCONJUNTORowChangeEvent e);
        
        public delegate void PIEZASXSUBCONJUNTORowChangeEventHandler(object sender, PIEZASXSUBCONJUNTORowChangeEvent e);
        
        public delegate void SUBCONJUNTOSXCONJUNTORowChangeEventHandler(object sender, SUBCONJUNTOSXCONJUNTORowChangeEvent e);
        
        public delegate void CONJUNTOSRowChangeEventHandler(object sender, CONJUNTOSRowChangeEvent e);
        
        public delegate void SUBCONJUNTOSRowChangeEventHandler(object sender, SUBCONJUNTOSRowChangeEvent e);
        
        public delegate void PIEZASRowChangeEventHandler(object sender, PIEZASRowChangeEvent e);
        
        public delegate void MATERIASPRIMASXPIEZARowChangeEventHandler(object sender, MATERIASPRIMASXPIEZARowChangeEvent e);
        
        public delegate void ESTRUCTURASRowChangeEventHandler(object sender, ESTRUCTURASRowChangeEvent e);
        
        public delegate void LISTA_PARTESRowChangeEventHandler(object sender, LISTA_PARTESRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PIEZASXESTRUCTURADataTable : global::System.Data.TypedTableBase<PIEZASXESTRUCTURARow> {
            
            private global::System.Data.DataColumn columnPXE_CODIGO;
            
            private global::System.Data.DataColumn columnESTR_CODIGO;
            
            private global::System.Data.DataColumn columnPZA_CODIGO;
            
            private global::System.Data.DataColumn columnPXE_CANTIDAD;
            
            private global::System.Data.DataColumn columnGRP_CODIGO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXESTRUCTURADataTable() {
                this.TableName = "PIEZASXESTRUCTURA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PIEZASXESTRUCTURADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PIEZASXESTRUCTURADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PXE_CODIGOColumn {
                get {
                    return this.columnPXE_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTR_CODIGOColumn {
                get {
                    return this.columnESTR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PZA_CODIGOColumn {
                get {
                    return this.columnPZA_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PXE_CANTIDADColumn {
                get {
                    return this.columnPXE_CANTIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRP_CODIGOColumn {
                get {
                    return this.columnGRP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXESTRUCTURARow this[int index] {
                get {
                    return ((PIEZASXESTRUCTURARow)(this.Rows[index]));
                }
            }
            
            public event PIEZASXESTRUCTURARowChangeEventHandler PIEZASXESTRUCTURARowChanging;
            
            public event PIEZASXESTRUCTURARowChangeEventHandler PIEZASXESTRUCTURARowChanged;
            
            public event PIEZASXESTRUCTURARowChangeEventHandler PIEZASXESTRUCTURARowDeleting;
            
            public event PIEZASXESTRUCTURARowChangeEventHandler PIEZASXESTRUCTURARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPIEZASXESTRUCTURARow(PIEZASXESTRUCTURARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXESTRUCTURARow AddPIEZASXESTRUCTURARow(ESTRUCTURASRow parentESTRUCTURASRowByESTRUCTURAS_PIEZASXESTRUCTURA, PIEZASRow parentPIEZASRowByPIEZAS_PIEZASXESTRUCTURA, decimal PXE_CANTIDAD, GRUPOS_ESTRUCTURARow parentGRUPOS_ESTRUCTURARowBypiezasXEstructura_grupoEstructura_fk) {
                PIEZASXESTRUCTURARow rowPIEZASXESTRUCTURARow = ((PIEZASXESTRUCTURARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        PXE_CANTIDAD,
                        null};
                if ((parentESTRUCTURASRowByESTRUCTURAS_PIEZASXESTRUCTURA != null)) {
                    columnValuesArray[1] = parentESTRUCTURASRowByESTRUCTURAS_PIEZASXESTRUCTURA[0];
                }
                if ((parentPIEZASRowByPIEZAS_PIEZASXESTRUCTURA != null)) {
                    columnValuesArray[2] = parentPIEZASRowByPIEZAS_PIEZASXESTRUCTURA[0];
                }
                if ((parentGRUPOS_ESTRUCTURARowBypiezasXEstructura_grupoEstructura_fk != null)) {
                    columnValuesArray[4] = parentGRUPOS_ESTRUCTURARowBypiezasXEstructura_grupoEstructura_fk[0];
                }
                rowPIEZASXESTRUCTURARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPIEZASXESTRUCTURARow);
                return rowPIEZASXESTRUCTURARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXESTRUCTURARow FindByPXE_CODIGO(decimal PXE_CODIGO) {
                return ((PIEZASXESTRUCTURARow)(this.Rows.Find(new object[] {
                            PXE_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PIEZASXESTRUCTURADataTable cln = ((PIEZASXESTRUCTURADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PIEZASXESTRUCTURADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPXE_CODIGO = base.Columns["PXE_CODIGO"];
                this.columnESTR_CODIGO = base.Columns["ESTR_CODIGO"];
                this.columnPZA_CODIGO = base.Columns["PZA_CODIGO"];
                this.columnPXE_CANTIDAD = base.Columns["PXE_CANTIDAD"];
                this.columnGRP_CODIGO = base.Columns["GRP_CODIGO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPXE_CODIGO = new global::System.Data.DataColumn("PXE_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPXE_CODIGO);
                this.columnESTR_CODIGO = new global::System.Data.DataColumn("ESTR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTR_CODIGO);
                this.columnPZA_CODIGO = new global::System.Data.DataColumn("PZA_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPZA_CODIGO);
                this.columnPXE_CANTIDAD = new global::System.Data.DataColumn("PXE_CANTIDAD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPXE_CANTIDAD);
                this.columnGRP_CODIGO = new global::System.Data.DataColumn("GRP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRP_CODIGO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPXE_CODIGO}, true));
                this.columnPXE_CODIGO.AutoIncrement = true;
                this.columnPXE_CODIGO.AutoIncrementSeed = -1;
                this.columnPXE_CODIGO.AutoIncrementStep = -1;
                this.columnPXE_CODIGO.AllowDBNull = false;
                this.columnPXE_CODIGO.Unique = true;
                this.columnESTR_CODIGO.AllowDBNull = false;
                this.columnPZA_CODIGO.AllowDBNull = false;
                this.columnPXE_CANTIDAD.AllowDBNull = false;
                this.columnGRP_CODIGO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXESTRUCTURARow NewPIEZASXESTRUCTURARow() {
                return ((PIEZASXESTRUCTURARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PIEZASXESTRUCTURARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PIEZASXESTRUCTURARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PIEZASXESTRUCTURARowChanged != null)) {
                    this.PIEZASXESTRUCTURARowChanged(this, new PIEZASXESTRUCTURARowChangeEvent(((PIEZASXESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PIEZASXESTRUCTURARowChanging != null)) {
                    this.PIEZASXESTRUCTURARowChanging(this, new PIEZASXESTRUCTURARowChangeEvent(((PIEZASXESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PIEZASXESTRUCTURARowDeleted != null)) {
                    this.PIEZASXESTRUCTURARowDeleted(this, new PIEZASXESTRUCTURARowChangeEvent(((PIEZASXESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PIEZASXESTRUCTURARowDeleting != null)) {
                    this.PIEZASXESTRUCTURARowDeleting(this, new PIEZASXESTRUCTURARowChangeEvent(((PIEZASXESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePIEZASXESTRUCTURARow(PIEZASXESTRUCTURARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstructura ds = new dsEstructura();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PIEZASXESTRUCTURADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SUBCONJUNTOSXESTRUCTURADataTable : global::System.Data.TypedTableBase<SUBCONJUNTOSXESTRUCTURARow> {
            
            private global::System.Data.DataColumn columnSCXE_CODIGO;
            
            private global::System.Data.DataColumn columnESTR_CODIGO;
            
            private global::System.Data.DataColumn columnSCONJ_CODIGO;
            
            private global::System.Data.DataColumn columnSCXE_CANTIDAD;
            
            private global::System.Data.DataColumn columnGRP_CODIGO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXESTRUCTURADataTable() {
                this.TableName = "SUBCONJUNTOSXESTRUCTURA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SUBCONJUNTOSXESTRUCTURADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SUBCONJUNTOSXESTRUCTURADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCXE_CODIGOColumn {
                get {
                    return this.columnSCXE_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTR_CODIGOColumn {
                get {
                    return this.columnESTR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCONJ_CODIGOColumn {
                get {
                    return this.columnSCONJ_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCXE_CANTIDADColumn {
                get {
                    return this.columnSCXE_CANTIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRP_CODIGOColumn {
                get {
                    return this.columnGRP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXESTRUCTURARow this[int index] {
                get {
                    return ((SUBCONJUNTOSXESTRUCTURARow)(this.Rows[index]));
                }
            }
            
            public event SUBCONJUNTOSXESTRUCTURARowChangeEventHandler SUBCONJUNTOSXESTRUCTURARowChanging;
            
            public event SUBCONJUNTOSXESTRUCTURARowChangeEventHandler SUBCONJUNTOSXESTRUCTURARowChanged;
            
            public event SUBCONJUNTOSXESTRUCTURARowChangeEventHandler SUBCONJUNTOSXESTRUCTURARowDeleting;
            
            public event SUBCONJUNTOSXESTRUCTURARowChangeEventHandler SUBCONJUNTOSXESTRUCTURARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSUBCONJUNTOSXESTRUCTURARow(SUBCONJUNTOSXESTRUCTURARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXESTRUCTURARow AddSUBCONJUNTOSXESTRUCTURARow(ESTRUCTURASRow parentESTRUCTURASRowByESTRUCTURAS_SUBCONJUNTOSXESTRUCTURA, SUBCONJUNTOSRow parentSUBCONJUNTOSRowBySUBCONJUNTOS_SUBCONJUNTOSXESTRUCTURA, decimal SCXE_CANTIDAD, GRUPOS_ESTRUCTURARow parentGRUPOS_ESTRUCTURARowBysubconjuntosXEstructura_grupoEstructura_fk) {
                SUBCONJUNTOSXESTRUCTURARow rowSUBCONJUNTOSXESTRUCTURARow = ((SUBCONJUNTOSXESTRUCTURARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        SCXE_CANTIDAD,
                        null};
                if ((parentESTRUCTURASRowByESTRUCTURAS_SUBCONJUNTOSXESTRUCTURA != null)) {
                    columnValuesArray[1] = parentESTRUCTURASRowByESTRUCTURAS_SUBCONJUNTOSXESTRUCTURA[0];
                }
                if ((parentSUBCONJUNTOSRowBySUBCONJUNTOS_SUBCONJUNTOSXESTRUCTURA != null)) {
                    columnValuesArray[2] = parentSUBCONJUNTOSRowBySUBCONJUNTOS_SUBCONJUNTOSXESTRUCTURA[0];
                }
                if ((parentGRUPOS_ESTRUCTURARowBysubconjuntosXEstructura_grupoEstructura_fk != null)) {
                    columnValuesArray[4] = parentGRUPOS_ESTRUCTURARowBysubconjuntosXEstructura_grupoEstructura_fk[0];
                }
                rowSUBCONJUNTOSXESTRUCTURARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSUBCONJUNTOSXESTRUCTURARow);
                return rowSUBCONJUNTOSXESTRUCTURARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXESTRUCTURARow FindBySCXE_CODIGO(decimal SCXE_CODIGO) {
                return ((SUBCONJUNTOSXESTRUCTURARow)(this.Rows.Find(new object[] {
                            SCXE_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SUBCONJUNTOSXESTRUCTURADataTable cln = ((SUBCONJUNTOSXESTRUCTURADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SUBCONJUNTOSXESTRUCTURADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSCXE_CODIGO = base.Columns["SCXE_CODIGO"];
                this.columnESTR_CODIGO = base.Columns["ESTR_CODIGO"];
                this.columnSCONJ_CODIGO = base.Columns["SCONJ_CODIGO"];
                this.columnSCXE_CANTIDAD = base.Columns["SCXE_CANTIDAD"];
                this.columnGRP_CODIGO = base.Columns["GRP_CODIGO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSCXE_CODIGO = new global::System.Data.DataColumn("SCXE_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCXE_CODIGO);
                this.columnESTR_CODIGO = new global::System.Data.DataColumn("ESTR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTR_CODIGO);
                this.columnSCONJ_CODIGO = new global::System.Data.DataColumn("SCONJ_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCONJ_CODIGO);
                this.columnSCXE_CANTIDAD = new global::System.Data.DataColumn("SCXE_CANTIDAD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCXE_CANTIDAD);
                this.columnGRP_CODIGO = new global::System.Data.DataColumn("GRP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRP_CODIGO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSCXE_CODIGO}, true));
                this.columnSCXE_CODIGO.AutoIncrement = true;
                this.columnSCXE_CODIGO.AutoIncrementSeed = -1;
                this.columnSCXE_CODIGO.AutoIncrementStep = -1;
                this.columnSCXE_CODIGO.AllowDBNull = false;
                this.columnSCXE_CODIGO.Unique = true;
                this.columnESTR_CODIGO.AllowDBNull = false;
                this.columnSCONJ_CODIGO.AllowDBNull = false;
                this.columnSCXE_CANTIDAD.AllowDBNull = false;
                this.columnGRP_CODIGO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXESTRUCTURARow NewSUBCONJUNTOSXESTRUCTURARow() {
                return ((SUBCONJUNTOSXESTRUCTURARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SUBCONJUNTOSXESTRUCTURARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SUBCONJUNTOSXESTRUCTURARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SUBCONJUNTOSXESTRUCTURARowChanged != null)) {
                    this.SUBCONJUNTOSXESTRUCTURARowChanged(this, new SUBCONJUNTOSXESTRUCTURARowChangeEvent(((SUBCONJUNTOSXESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SUBCONJUNTOSXESTRUCTURARowChanging != null)) {
                    this.SUBCONJUNTOSXESTRUCTURARowChanging(this, new SUBCONJUNTOSXESTRUCTURARowChangeEvent(((SUBCONJUNTOSXESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SUBCONJUNTOSXESTRUCTURARowDeleted != null)) {
                    this.SUBCONJUNTOSXESTRUCTURARowDeleted(this, new SUBCONJUNTOSXESTRUCTURARowChangeEvent(((SUBCONJUNTOSXESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SUBCONJUNTOSXESTRUCTURARowDeleting != null)) {
                    this.SUBCONJUNTOSXESTRUCTURARowDeleting(this, new SUBCONJUNTOSXESTRUCTURARowChangeEvent(((SUBCONJUNTOSXESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSUBCONJUNTOSXESTRUCTURARow(SUBCONJUNTOSXESTRUCTURARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstructura ds = new dsEstructura();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SUBCONJUNTOSXESTRUCTURADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MATERIASPRIMASXESTRUCTURADataTable : global::System.Data.TypedTableBase<MATERIASPRIMASXESTRUCTURARow> {
            
            private global::System.Data.DataColumn columnMPXE_CODIGO;
            
            private global::System.Data.DataColumn columnMP_CODIGO;
            
            private global::System.Data.DataColumn columnESTR_CODIGO;
            
            private global::System.Data.DataColumn columnMPXE_CANTIDAD;
            
            private global::System.Data.DataColumn columnGRP_CODIGO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXESTRUCTURADataTable() {
                this.TableName = "MATERIASPRIMASXESTRUCTURA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MATERIASPRIMASXESTRUCTURADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MATERIASPRIMASXESTRUCTURADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MPXE_CODIGOColumn {
                get {
                    return this.columnMPXE_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_CODIGOColumn {
                get {
                    return this.columnMP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTR_CODIGOColumn {
                get {
                    return this.columnESTR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MPXE_CANTIDADColumn {
                get {
                    return this.columnMPXE_CANTIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRP_CODIGOColumn {
                get {
                    return this.columnGRP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXESTRUCTURARow this[int index] {
                get {
                    return ((MATERIASPRIMASXESTRUCTURARow)(this.Rows[index]));
                }
            }
            
            public event MATERIASPRIMASXESTRUCTURARowChangeEventHandler MATERIASPRIMASXESTRUCTURARowChanging;
            
            public event MATERIASPRIMASXESTRUCTURARowChangeEventHandler MATERIASPRIMASXESTRUCTURARowChanged;
            
            public event MATERIASPRIMASXESTRUCTURARowChangeEventHandler MATERIASPRIMASXESTRUCTURARowDeleting;
            
            public event MATERIASPRIMASXESTRUCTURARowChangeEventHandler MATERIASPRIMASXESTRUCTURARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMATERIASPRIMASXESTRUCTURARow(MATERIASPRIMASXESTRUCTURARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXESTRUCTURARow AddMATERIASPRIMASXESTRUCTURARow(MATERIAS_PRIMASRow parentMATERIAS_PRIMASRowBymateriaPrimaXEstructura_materiaPrima_fk, ESTRUCTURASRow parentESTRUCTURASRowByESTRUCTURAS_MATERIASPRIMASXESTRUCTURA, decimal MPXE_CANTIDAD, GRUPOS_ESTRUCTURARow parentGRUPOS_ESTRUCTURARowBymateriaPrimaXEstructura_grupoEstructura_fk) {
                MATERIASPRIMASXESTRUCTURARow rowMATERIASPRIMASXESTRUCTURARow = ((MATERIASPRIMASXESTRUCTURARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        MPXE_CANTIDAD,
                        null};
                if ((parentMATERIAS_PRIMASRowBymateriaPrimaXEstructura_materiaPrima_fk != null)) {
                    columnValuesArray[1] = parentMATERIAS_PRIMASRowBymateriaPrimaXEstructura_materiaPrima_fk[0];
                }
                if ((parentESTRUCTURASRowByESTRUCTURAS_MATERIASPRIMASXESTRUCTURA != null)) {
                    columnValuesArray[2] = parentESTRUCTURASRowByESTRUCTURAS_MATERIASPRIMASXESTRUCTURA[0];
                }
                if ((parentGRUPOS_ESTRUCTURARowBymateriaPrimaXEstructura_grupoEstructura_fk != null)) {
                    columnValuesArray[4] = parentGRUPOS_ESTRUCTURARowBymateriaPrimaXEstructura_grupoEstructura_fk[0];
                }
                rowMATERIASPRIMASXESTRUCTURARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMATERIASPRIMASXESTRUCTURARow);
                return rowMATERIASPRIMASXESTRUCTURARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXESTRUCTURARow FindByMPXE_CODIGO(decimal MPXE_CODIGO) {
                return ((MATERIASPRIMASXESTRUCTURARow)(this.Rows.Find(new object[] {
                            MPXE_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MATERIASPRIMASXESTRUCTURADataTable cln = ((MATERIASPRIMASXESTRUCTURADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MATERIASPRIMASXESTRUCTURADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMPXE_CODIGO = base.Columns["MPXE_CODIGO"];
                this.columnMP_CODIGO = base.Columns["MP_CODIGO"];
                this.columnESTR_CODIGO = base.Columns["ESTR_CODIGO"];
                this.columnMPXE_CANTIDAD = base.Columns["MPXE_CANTIDAD"];
                this.columnGRP_CODIGO = base.Columns["GRP_CODIGO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMPXE_CODIGO = new global::System.Data.DataColumn("MPXE_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMPXE_CODIGO);
                this.columnMP_CODIGO = new global::System.Data.DataColumn("MP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_CODIGO);
                this.columnESTR_CODIGO = new global::System.Data.DataColumn("ESTR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTR_CODIGO);
                this.columnMPXE_CANTIDAD = new global::System.Data.DataColumn("MPXE_CANTIDAD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMPXE_CANTIDAD);
                this.columnGRP_CODIGO = new global::System.Data.DataColumn("GRP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRP_CODIGO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMPXE_CODIGO}, true));
                this.columnMPXE_CODIGO.AutoIncrement = true;
                this.columnMPXE_CODIGO.AutoIncrementSeed = -1;
                this.columnMPXE_CODIGO.AutoIncrementStep = -1;
                this.columnMPXE_CODIGO.AllowDBNull = false;
                this.columnMPXE_CODIGO.Unique = true;
                this.columnMP_CODIGO.AllowDBNull = false;
                this.columnESTR_CODIGO.AllowDBNull = false;
                this.columnMPXE_CANTIDAD.AllowDBNull = false;
                this.columnGRP_CODIGO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXESTRUCTURARow NewMATERIASPRIMASXESTRUCTURARow() {
                return ((MATERIASPRIMASXESTRUCTURARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MATERIASPRIMASXESTRUCTURARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MATERIASPRIMASXESTRUCTURARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MATERIASPRIMASXESTRUCTURARowChanged != null)) {
                    this.MATERIASPRIMASXESTRUCTURARowChanged(this, new MATERIASPRIMASXESTRUCTURARowChangeEvent(((MATERIASPRIMASXESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MATERIASPRIMASXESTRUCTURARowChanging != null)) {
                    this.MATERIASPRIMASXESTRUCTURARowChanging(this, new MATERIASPRIMASXESTRUCTURARowChangeEvent(((MATERIASPRIMASXESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MATERIASPRIMASXESTRUCTURARowDeleted != null)) {
                    this.MATERIASPRIMASXESTRUCTURARowDeleted(this, new MATERIASPRIMASXESTRUCTURARowChangeEvent(((MATERIASPRIMASXESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MATERIASPRIMASXESTRUCTURARowDeleting != null)) {
                    this.MATERIASPRIMASXESTRUCTURARowDeleting(this, new MATERIASPRIMASXESTRUCTURARowChangeEvent(((MATERIASPRIMASXESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMATERIASPRIMASXESTRUCTURARow(MATERIASPRIMASXESTRUCTURARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstructura ds = new dsEstructura();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MATERIASPRIMASXESTRUCTURADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CONJUNTOSXESTRUCTURADataTable : global::System.Data.TypedTableBase<CONJUNTOSXESTRUCTURARow> {
            
            private global::System.Data.DataColumn columnCXE_CODIGO;
            
            private global::System.Data.DataColumn columnESTR_CODIGO;
            
            private global::System.Data.DataColumn columnCONJ_CODIGO;
            
            private global::System.Data.DataColumn columnCXE_CANTIDAD;
            
            private global::System.Data.DataColumn columnGRP_CODIGO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSXESTRUCTURADataTable() {
                this.TableName = "CONJUNTOSXESTRUCTURA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CONJUNTOSXESTRUCTURADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CONJUNTOSXESTRUCTURADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CXE_CODIGOColumn {
                get {
                    return this.columnCXE_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTR_CODIGOColumn {
                get {
                    return this.columnESTR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONJ_CODIGOColumn {
                get {
                    return this.columnCONJ_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CXE_CANTIDADColumn {
                get {
                    return this.columnCXE_CANTIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRP_CODIGOColumn {
                get {
                    return this.columnGRP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSXESTRUCTURARow this[int index] {
                get {
                    return ((CONJUNTOSXESTRUCTURARow)(this.Rows[index]));
                }
            }
            
            public event CONJUNTOSXESTRUCTURARowChangeEventHandler CONJUNTOSXESTRUCTURARowChanging;
            
            public event CONJUNTOSXESTRUCTURARowChangeEventHandler CONJUNTOSXESTRUCTURARowChanged;
            
            public event CONJUNTOSXESTRUCTURARowChangeEventHandler CONJUNTOSXESTRUCTURARowDeleting;
            
            public event CONJUNTOSXESTRUCTURARowChangeEventHandler CONJUNTOSXESTRUCTURARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCONJUNTOSXESTRUCTURARow(CONJUNTOSXESTRUCTURARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSXESTRUCTURARow AddCONJUNTOSXESTRUCTURARow(decimal ESTR_CODIGO, CONJUNTOSRow parentCONJUNTOSRowByCONJUNTOS_CONJUNTOSXESTRUCTURA, decimal CXE_CANTIDAD, GRUPOS_ESTRUCTURARow parentGRUPOS_ESTRUCTURARowByconjuntoXEstructura_grupo_fk) {
                CONJUNTOSXESTRUCTURARow rowCONJUNTOSXESTRUCTURARow = ((CONJUNTOSXESTRUCTURARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ESTR_CODIGO,
                        null,
                        CXE_CANTIDAD,
                        null};
                if ((parentCONJUNTOSRowByCONJUNTOS_CONJUNTOSXESTRUCTURA != null)) {
                    columnValuesArray[2] = parentCONJUNTOSRowByCONJUNTOS_CONJUNTOSXESTRUCTURA[0];
                }
                if ((parentGRUPOS_ESTRUCTURARowByconjuntoXEstructura_grupo_fk != null)) {
                    columnValuesArray[4] = parentGRUPOS_ESTRUCTURARowByconjuntoXEstructura_grupo_fk[0];
                }
                rowCONJUNTOSXESTRUCTURARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCONJUNTOSXESTRUCTURARow);
                return rowCONJUNTOSXESTRUCTURARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSXESTRUCTURARow FindByCXE_CODIGO(decimal CXE_CODIGO) {
                return ((CONJUNTOSXESTRUCTURARow)(this.Rows.Find(new object[] {
                            CXE_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CONJUNTOSXESTRUCTURADataTable cln = ((CONJUNTOSXESTRUCTURADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CONJUNTOSXESTRUCTURADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCXE_CODIGO = base.Columns["CXE_CODIGO"];
                this.columnESTR_CODIGO = base.Columns["ESTR_CODIGO"];
                this.columnCONJ_CODIGO = base.Columns["CONJ_CODIGO"];
                this.columnCXE_CANTIDAD = base.Columns["CXE_CANTIDAD"];
                this.columnGRP_CODIGO = base.Columns["GRP_CODIGO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCXE_CODIGO = new global::System.Data.DataColumn("CXE_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXE_CODIGO);
                this.columnESTR_CODIGO = new global::System.Data.DataColumn("ESTR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTR_CODIGO);
                this.columnCONJ_CODIGO = new global::System.Data.DataColumn("CONJ_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONJ_CODIGO);
                this.columnCXE_CANTIDAD = new global::System.Data.DataColumn("CXE_CANTIDAD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXE_CANTIDAD);
                this.columnGRP_CODIGO = new global::System.Data.DataColumn("GRP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRP_CODIGO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCXE_CODIGO}, true));
                this.columnCXE_CODIGO.AutoIncrement = true;
                this.columnCXE_CODIGO.AutoIncrementSeed = -1;
                this.columnCXE_CODIGO.AutoIncrementStep = -1;
                this.columnCXE_CODIGO.AllowDBNull = false;
                this.columnCXE_CODIGO.Unique = true;
                this.columnESTR_CODIGO.AllowDBNull = false;
                this.columnCONJ_CODIGO.AllowDBNull = false;
                this.columnCXE_CANTIDAD.AllowDBNull = false;
                this.columnGRP_CODIGO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSXESTRUCTURARow NewCONJUNTOSXESTRUCTURARow() {
                return ((CONJUNTOSXESTRUCTURARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CONJUNTOSXESTRUCTURARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CONJUNTOSXESTRUCTURARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CONJUNTOSXESTRUCTURARowChanged != null)) {
                    this.CONJUNTOSXESTRUCTURARowChanged(this, new CONJUNTOSXESTRUCTURARowChangeEvent(((CONJUNTOSXESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CONJUNTOSXESTRUCTURARowChanging != null)) {
                    this.CONJUNTOSXESTRUCTURARowChanging(this, new CONJUNTOSXESTRUCTURARowChangeEvent(((CONJUNTOSXESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CONJUNTOSXESTRUCTURARowDeleted != null)) {
                    this.CONJUNTOSXESTRUCTURARowDeleted(this, new CONJUNTOSXESTRUCTURARowChangeEvent(((CONJUNTOSXESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CONJUNTOSXESTRUCTURARowDeleting != null)) {
                    this.CONJUNTOSXESTRUCTURARowDeleting(this, new CONJUNTOSXESTRUCTURARowChangeEvent(((CONJUNTOSXESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCONJUNTOSXESTRUCTURARow(CONJUNTOSXESTRUCTURARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstructura ds = new dsEstructura();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CONJUNTOSXESTRUCTURADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GRUPOS_ESTRUCTURADataTable : global::System.Data.TypedTableBase<GRUPOS_ESTRUCTURARow> {
            
            private global::System.Data.DataColumn columnGRP_CODIGO;
            
            private global::System.Data.DataColumn columnGRP_NUMERO;
            
            private global::System.Data.DataColumn columnESTR_CODIGO;
            
            private global::System.Data.DataColumn columnGRP_PADRE_CODIGO;
            
            private global::System.Data.DataColumn columnGRP_NOMBRE;
            
            private global::System.Data.DataColumn columnGRP_DESCRIPCION;
            
            private global::System.Data.DataColumn columnGRP_CONCRETO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOS_ESTRUCTURADataTable() {
                this.TableName = "GRUPOS_ESTRUCTURA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GRUPOS_ESTRUCTURADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GRUPOS_ESTRUCTURADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRP_CODIGOColumn {
                get {
                    return this.columnGRP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRP_NUMEROColumn {
                get {
                    return this.columnGRP_NUMERO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTR_CODIGOColumn {
                get {
                    return this.columnESTR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRP_PADRE_CODIGOColumn {
                get {
                    return this.columnGRP_PADRE_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRP_NOMBREColumn {
                get {
                    return this.columnGRP_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRP_DESCRIPCIONColumn {
                get {
                    return this.columnGRP_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRP_CONCRETOColumn {
                get {
                    return this.columnGRP_CONCRETO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOS_ESTRUCTURARow this[int index] {
                get {
                    return ((GRUPOS_ESTRUCTURARow)(this.Rows[index]));
                }
            }
            
            public event GRUPOS_ESTRUCTURARowChangeEventHandler GRUPOS_ESTRUCTURARowChanging;
            
            public event GRUPOS_ESTRUCTURARowChangeEventHandler GRUPOS_ESTRUCTURARowChanged;
            
            public event GRUPOS_ESTRUCTURARowChangeEventHandler GRUPOS_ESTRUCTURARowDeleting;
            
            public event GRUPOS_ESTRUCTURARowChangeEventHandler GRUPOS_ESTRUCTURARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGRUPOS_ESTRUCTURARow(GRUPOS_ESTRUCTURARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOS_ESTRUCTURARow AddGRUPOS_ESTRUCTURARow(decimal GRP_NUMERO, ESTRUCTURASRow parentESTRUCTURASRowByESTRUCTURAS_GRUPOS_ESTRUCTURA, decimal GRP_PADRE_CODIGO, string GRP_NOMBRE, string GRP_DESCRIPCION, decimal GRP_CONCRETO) {
                GRUPOS_ESTRUCTURARow rowGRUPOS_ESTRUCTURARow = ((GRUPOS_ESTRUCTURARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        GRP_NUMERO,
                        null,
                        GRP_PADRE_CODIGO,
                        GRP_NOMBRE,
                        GRP_DESCRIPCION,
                        GRP_CONCRETO};
                if ((parentESTRUCTURASRowByESTRUCTURAS_GRUPOS_ESTRUCTURA != null)) {
                    columnValuesArray[2] = parentESTRUCTURASRowByESTRUCTURAS_GRUPOS_ESTRUCTURA[0];
                }
                rowGRUPOS_ESTRUCTURARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGRUPOS_ESTRUCTURARow);
                return rowGRUPOS_ESTRUCTURARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOS_ESTRUCTURARow FindByGRP_CODIGO(decimal GRP_CODIGO) {
                return ((GRUPOS_ESTRUCTURARow)(this.Rows.Find(new object[] {
                            GRP_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GRUPOS_ESTRUCTURADataTable cln = ((GRUPOS_ESTRUCTURADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GRUPOS_ESTRUCTURADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGRP_CODIGO = base.Columns["GRP_CODIGO"];
                this.columnGRP_NUMERO = base.Columns["GRP_NUMERO"];
                this.columnESTR_CODIGO = base.Columns["ESTR_CODIGO"];
                this.columnGRP_PADRE_CODIGO = base.Columns["GRP_PADRE_CODIGO"];
                this.columnGRP_NOMBRE = base.Columns["GRP_NOMBRE"];
                this.columnGRP_DESCRIPCION = base.Columns["GRP_DESCRIPCION"];
                this.columnGRP_CONCRETO = base.Columns["GRP_CONCRETO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGRP_CODIGO = new global::System.Data.DataColumn("GRP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRP_CODIGO);
                this.columnGRP_NUMERO = new global::System.Data.DataColumn("GRP_NUMERO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRP_NUMERO);
                this.columnESTR_CODIGO = new global::System.Data.DataColumn("ESTR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTR_CODIGO);
                this.columnGRP_PADRE_CODIGO = new global::System.Data.DataColumn("GRP_PADRE_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRP_PADRE_CODIGO);
                this.columnGRP_NOMBRE = new global::System.Data.DataColumn("GRP_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRP_NOMBRE);
                this.columnGRP_DESCRIPCION = new global::System.Data.DataColumn("GRP_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRP_DESCRIPCION);
                this.columnGRP_CONCRETO = new global::System.Data.DataColumn("GRP_CONCRETO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRP_CONCRETO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnGRP_CODIGO}, true));
                this.columnGRP_CODIGO.AutoIncrement = true;
                this.columnGRP_CODIGO.AutoIncrementSeed = -1;
                this.columnGRP_CODIGO.AutoIncrementStep = -1;
                this.columnGRP_CODIGO.AllowDBNull = false;
                this.columnGRP_CODIGO.Unique = true;
                this.columnGRP_NUMERO.AllowDBNull = false;
                this.columnESTR_CODIGO.AllowDBNull = false;
                this.columnGRP_NOMBRE.MaxLength = 80;
                this.columnGRP_DESCRIPCION.MaxLength = 200;
                this.columnGRP_CONCRETO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOS_ESTRUCTURARow NewGRUPOS_ESTRUCTURARow() {
                return ((GRUPOS_ESTRUCTURARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GRUPOS_ESTRUCTURARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GRUPOS_ESTRUCTURARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GRUPOS_ESTRUCTURARowChanged != null)) {
                    this.GRUPOS_ESTRUCTURARowChanged(this, new GRUPOS_ESTRUCTURARowChangeEvent(((GRUPOS_ESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GRUPOS_ESTRUCTURARowChanging != null)) {
                    this.GRUPOS_ESTRUCTURARowChanging(this, new GRUPOS_ESTRUCTURARowChangeEvent(((GRUPOS_ESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GRUPOS_ESTRUCTURARowDeleted != null)) {
                    this.GRUPOS_ESTRUCTURARowDeleted(this, new GRUPOS_ESTRUCTURARowChangeEvent(((GRUPOS_ESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GRUPOS_ESTRUCTURARowDeleting != null)) {
                    this.GRUPOS_ESTRUCTURARowDeleting(this, new GRUPOS_ESTRUCTURARowChangeEvent(((GRUPOS_ESTRUCTURARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGRUPOS_ESTRUCTURARow(GRUPOS_ESTRUCTURARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstructura ds = new dsEstructura();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GRUPOS_ESTRUCTURADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MATERIAS_PRIMASDataTable : global::System.Data.TypedTableBase<MATERIAS_PRIMASRow> {
            
            private global::System.Data.DataColumn columnMP_CODIGO;
            
            private global::System.Data.DataColumn columnUMED_CODIGO;
            
            private global::System.Data.DataColumn columnMP_NOMBRE;
            
            private global::System.Data.DataColumn columnMP_DESCRIPCION;
            
            private global::System.Data.DataColumn columnMP_CANTIDADSTOCK;
            
            private global::System.Data.DataColumn columnMP_COSTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASDataTable() {
                this.TableName = "MATERIAS_PRIMAS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MATERIAS_PRIMASDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MATERIAS_PRIMASDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_CODIGOColumn {
                get {
                    return this.columnMP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_CODIGOColumn {
                get {
                    return this.columnUMED_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_NOMBREColumn {
                get {
                    return this.columnMP_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_DESCRIPCIONColumn {
                get {
                    return this.columnMP_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_CANTIDADSTOCKColumn {
                get {
                    return this.columnMP_CANTIDADSTOCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_COSTOColumn {
                get {
                    return this.columnMP_COSTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow this[int index] {
                get {
                    return ((MATERIAS_PRIMASRow)(this.Rows[index]));
                }
            }
            
            public event MATERIAS_PRIMASRowChangeEventHandler MATERIAS_PRIMASRowChanging;
            
            public event MATERIAS_PRIMASRowChangeEventHandler MATERIAS_PRIMASRowChanged;
            
            public event MATERIAS_PRIMASRowChangeEventHandler MATERIAS_PRIMASRowDeleting;
            
            public event MATERIAS_PRIMASRowChangeEventHandler MATERIAS_PRIMASRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMATERIAS_PRIMASRow(MATERIAS_PRIMASRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow AddMATERIAS_PRIMASRow(decimal UMED_CODIGO, string MP_NOMBRE, string MP_DESCRIPCION, int MP_CANTIDADSTOCK, decimal MP_COSTO) {
                MATERIAS_PRIMASRow rowMATERIAS_PRIMASRow = ((MATERIAS_PRIMASRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        UMED_CODIGO,
                        MP_NOMBRE,
                        MP_DESCRIPCION,
                        MP_CANTIDADSTOCK,
                        MP_COSTO};
                rowMATERIAS_PRIMASRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMATERIAS_PRIMASRow);
                return rowMATERIAS_PRIMASRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow FindByMP_CODIGO(decimal MP_CODIGO) {
                return ((MATERIAS_PRIMASRow)(this.Rows.Find(new object[] {
                            MP_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MATERIAS_PRIMASDataTable cln = ((MATERIAS_PRIMASDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MATERIAS_PRIMASDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMP_CODIGO = base.Columns["MP_CODIGO"];
                this.columnUMED_CODIGO = base.Columns["UMED_CODIGO"];
                this.columnMP_NOMBRE = base.Columns["MP_NOMBRE"];
                this.columnMP_DESCRIPCION = base.Columns["MP_DESCRIPCION"];
                this.columnMP_CANTIDADSTOCK = base.Columns["MP_CANTIDADSTOCK"];
                this.columnMP_COSTO = base.Columns["MP_COSTO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMP_CODIGO = new global::System.Data.DataColumn("MP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_CODIGO);
                this.columnUMED_CODIGO = new global::System.Data.DataColumn("UMED_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_CODIGO);
                this.columnMP_NOMBRE = new global::System.Data.DataColumn("MP_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_NOMBRE);
                this.columnMP_DESCRIPCION = new global::System.Data.DataColumn("MP_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_DESCRIPCION);
                this.columnMP_CANTIDADSTOCK = new global::System.Data.DataColumn("MP_CANTIDADSTOCK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_CANTIDADSTOCK);
                this.columnMP_COSTO = new global::System.Data.DataColumn("MP_COSTO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_COSTO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMP_CODIGO}, true));
                this.columnMP_CODIGO.AutoIncrement = true;
                this.columnMP_CODIGO.AutoIncrementSeed = -1;
                this.columnMP_CODIGO.AutoIncrementStep = -1;
                this.columnMP_CODIGO.AllowDBNull = false;
                this.columnMP_CODIGO.Unique = true;
                this.columnMP_NOMBRE.MaxLength = 80;
                this.columnMP_DESCRIPCION.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow NewMATERIAS_PRIMASRow() {
                return ((MATERIAS_PRIMASRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MATERIAS_PRIMASRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MATERIAS_PRIMASRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MATERIAS_PRIMASRowChanged != null)) {
                    this.MATERIAS_PRIMASRowChanged(this, new MATERIAS_PRIMASRowChangeEvent(((MATERIAS_PRIMASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MATERIAS_PRIMASRowChanging != null)) {
                    this.MATERIAS_PRIMASRowChanging(this, new MATERIAS_PRIMASRowChangeEvent(((MATERIAS_PRIMASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MATERIAS_PRIMASRowDeleted != null)) {
                    this.MATERIAS_PRIMASRowDeleted(this, new MATERIAS_PRIMASRowChangeEvent(((MATERIAS_PRIMASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MATERIAS_PRIMASRowDeleting != null)) {
                    this.MATERIAS_PRIMASRowDeleting(this, new MATERIAS_PRIMASRowChangeEvent(((MATERIAS_PRIMASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMATERIAS_PRIMASRow(MATERIAS_PRIMASRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstructura ds = new dsEstructura();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MATERIAS_PRIMASDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PLANOSDataTable : global::System.Data.TypedTableBase<PLANOSRow> {
            
            private global::System.Data.DataColumn columnPNO_CODIGO;
            
            private global::System.Data.DataColumn columnPNO_FECHACREACION;
            
            private global::System.Data.DataColumn columnPNO_OBSERVACIONES;
            
            private global::System.Data.DataColumn columnPNO_NOMBRE;
            
            private global::System.Data.DataColumn columnPNO_NUMERO;
            
            private global::System.Data.DataColumn columnPNO_HABILITADO;
            
            private global::System.Data.DataColumn columnPNO_FECHAHABILITADO;
            
            private global::System.Data.DataColumn columnPNO_FECHADESHABILITADO;
            
            private global::System.Data.DataColumn columnPNO_FECHAMODIFICACION;
            
            private global::System.Data.DataColumn columnPNO_LETRACAMBIO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANOSDataTable() {
                this.TableName = "PLANOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PLANOSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PLANOSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNO_CODIGOColumn {
                get {
                    return this.columnPNO_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNO_FECHACREACIONColumn {
                get {
                    return this.columnPNO_FECHACREACION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNO_OBSERVACIONESColumn {
                get {
                    return this.columnPNO_OBSERVACIONES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNO_NOMBREColumn {
                get {
                    return this.columnPNO_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNO_NUMEROColumn {
                get {
                    return this.columnPNO_NUMERO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNO_HABILITADOColumn {
                get {
                    return this.columnPNO_HABILITADO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNO_FECHAHABILITADOColumn {
                get {
                    return this.columnPNO_FECHAHABILITADO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNO_FECHADESHABILITADOColumn {
                get {
                    return this.columnPNO_FECHADESHABILITADO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNO_FECHAMODIFICACIONColumn {
                get {
                    return this.columnPNO_FECHAMODIFICACION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNO_LETRACAMBIOColumn {
                get {
                    return this.columnPNO_LETRACAMBIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANOSRow this[int index] {
                get {
                    return ((PLANOSRow)(this.Rows[index]));
                }
            }
            
            public event PLANOSRowChangeEventHandler PLANOSRowChanging;
            
            public event PLANOSRowChangeEventHandler PLANOSRowChanged;
            
            public event PLANOSRowChangeEventHandler PLANOSRowDeleting;
            
            public event PLANOSRowChangeEventHandler PLANOSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPLANOSRow(PLANOSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANOSRow AddPLANOSRow(System.DateTime PNO_FECHACREACION, string PNO_OBSERVACIONES, string PNO_NOMBRE, string PNO_NUMERO, decimal PNO_HABILITADO, System.DateTime PNO_FECHAHABILITADO, System.DateTime PNO_FECHADESHABILITADO, System.DateTime PNO_FECHAMODIFICACION, string PNO_LETRACAMBIO) {
                PLANOSRow rowPLANOSRow = ((PLANOSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PNO_FECHACREACION,
                        PNO_OBSERVACIONES,
                        PNO_NOMBRE,
                        PNO_NUMERO,
                        PNO_HABILITADO,
                        PNO_FECHAHABILITADO,
                        PNO_FECHADESHABILITADO,
                        PNO_FECHAMODIFICACION,
                        PNO_LETRACAMBIO};
                rowPLANOSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPLANOSRow);
                return rowPLANOSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANOSRow FindByPNO_CODIGO(decimal PNO_CODIGO) {
                return ((PLANOSRow)(this.Rows.Find(new object[] {
                            PNO_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PLANOSDataTable cln = ((PLANOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PLANOSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPNO_CODIGO = base.Columns["PNO_CODIGO"];
                this.columnPNO_FECHACREACION = base.Columns["PNO_FECHACREACION"];
                this.columnPNO_OBSERVACIONES = base.Columns["PNO_OBSERVACIONES"];
                this.columnPNO_NOMBRE = base.Columns["PNO_NOMBRE"];
                this.columnPNO_NUMERO = base.Columns["PNO_NUMERO"];
                this.columnPNO_HABILITADO = base.Columns["PNO_HABILITADO"];
                this.columnPNO_FECHAHABILITADO = base.Columns["PNO_FECHAHABILITADO"];
                this.columnPNO_FECHADESHABILITADO = base.Columns["PNO_FECHADESHABILITADO"];
                this.columnPNO_FECHAMODIFICACION = base.Columns["PNO_FECHAMODIFICACION"];
                this.columnPNO_LETRACAMBIO = base.Columns["PNO_LETRACAMBIO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPNO_CODIGO = new global::System.Data.DataColumn("PNO_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNO_CODIGO);
                this.columnPNO_FECHACREACION = new global::System.Data.DataColumn("PNO_FECHACREACION", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNO_FECHACREACION);
                this.columnPNO_OBSERVACIONES = new global::System.Data.DataColumn("PNO_OBSERVACIONES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNO_OBSERVACIONES);
                this.columnPNO_NOMBRE = new global::System.Data.DataColumn("PNO_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNO_NOMBRE);
                this.columnPNO_NUMERO = new global::System.Data.DataColumn("PNO_NUMERO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNO_NUMERO);
                this.columnPNO_HABILITADO = new global::System.Data.DataColumn("PNO_HABILITADO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNO_HABILITADO);
                this.columnPNO_FECHAHABILITADO = new global::System.Data.DataColumn("PNO_FECHAHABILITADO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNO_FECHAHABILITADO);
                this.columnPNO_FECHADESHABILITADO = new global::System.Data.DataColumn("PNO_FECHADESHABILITADO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNO_FECHADESHABILITADO);
                this.columnPNO_FECHAMODIFICACION = new global::System.Data.DataColumn("PNO_FECHAMODIFICACION", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNO_FECHAMODIFICACION);
                this.columnPNO_LETRACAMBIO = new global::System.Data.DataColumn("PNO_LETRACAMBIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNO_LETRACAMBIO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPNO_CODIGO}, true));
                this.columnPNO_CODIGO.AutoIncrement = true;
                this.columnPNO_CODIGO.AutoIncrementSeed = -1;
                this.columnPNO_CODIGO.AutoIncrementStep = -1;
                this.columnPNO_CODIGO.AllowDBNull = false;
                this.columnPNO_CODIGO.Unique = true;
                this.columnPNO_OBSERVACIONES.MaxLength = 200;
                this.columnPNO_NOMBRE.MaxLength = 80;
                this.columnPNO_NUMERO.AllowDBNull = false;
                this.columnPNO_NUMERO.MaxLength = 10;
                this.columnPNO_HABILITADO.AllowDBNull = false;
                this.columnPNO_LETRACAMBIO.MaxLength = 2;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANOSRow NewPLANOSRow() {
                return ((PLANOSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PLANOSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PLANOSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PLANOSRowChanged != null)) {
                    this.PLANOSRowChanged(this, new PLANOSRowChangeEvent(((PLANOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PLANOSRowChanging != null)) {
                    this.PLANOSRowChanging(this, new PLANOSRowChangeEvent(((PLANOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PLANOSRowDeleted != null)) {
                    this.PLANOSRowDeleted(this, new PLANOSRowChangeEvent(((PLANOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PLANOSRowDeleting != null)) {
                    this.PLANOSRowDeleting(this, new PLANOSRowChangeEvent(((PLANOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePLANOSRow(PLANOSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstructura ds = new dsEstructura();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PLANOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ESTADO_PARTESDataTable : global::System.Data.TypedTableBase<ESTADO_PARTESRow> {
            
            private global::System.Data.DataColumn columnPAR_CODIGO;
            
            private global::System.Data.DataColumn columnPAR_NOMBRE;
            
            private global::System.Data.DataColumn columnPAR_DESCRIPCION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_PARTESDataTable() {
                this.TableName = "ESTADO_PARTES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ESTADO_PARTESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ESTADO_PARTESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAR_CODIGOColumn {
                get {
                    return this.columnPAR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAR_NOMBREColumn {
                get {
                    return this.columnPAR_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAR_DESCRIPCIONColumn {
                get {
                    return this.columnPAR_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_PARTESRow this[int index] {
                get {
                    return ((ESTADO_PARTESRow)(this.Rows[index]));
                }
            }
            
            public event ESTADO_PARTESRowChangeEventHandler ESTADO_PARTESRowChanging;
            
            public event ESTADO_PARTESRowChangeEventHandler ESTADO_PARTESRowChanged;
            
            public event ESTADO_PARTESRowChangeEventHandler ESTADO_PARTESRowDeleting;
            
            public event ESTADO_PARTESRowChangeEventHandler ESTADO_PARTESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddESTADO_PARTESRow(ESTADO_PARTESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_PARTESRow AddESTADO_PARTESRow(string PAR_NOMBRE, string PAR_DESCRIPCION) {
                ESTADO_PARTESRow rowESTADO_PARTESRow = ((ESTADO_PARTESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PAR_NOMBRE,
                        PAR_DESCRIPCION};
                rowESTADO_PARTESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowESTADO_PARTESRow);
                return rowESTADO_PARTESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_PARTESRow FindByPAR_CODIGO(decimal PAR_CODIGO) {
                return ((ESTADO_PARTESRow)(this.Rows.Find(new object[] {
                            PAR_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ESTADO_PARTESDataTable cln = ((ESTADO_PARTESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ESTADO_PARTESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPAR_CODIGO = base.Columns["PAR_CODIGO"];
                this.columnPAR_NOMBRE = base.Columns["PAR_NOMBRE"];
                this.columnPAR_DESCRIPCION = base.Columns["PAR_DESCRIPCION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPAR_CODIGO = new global::System.Data.DataColumn("PAR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAR_CODIGO);
                this.columnPAR_NOMBRE = new global::System.Data.DataColumn("PAR_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAR_NOMBRE);
                this.columnPAR_DESCRIPCION = new global::System.Data.DataColumn("PAR_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAR_DESCRIPCION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPAR_CODIGO}, true));
                this.columnPAR_CODIGO.AutoIncrement = true;
                this.columnPAR_CODIGO.AutoIncrementSeed = -1;
                this.columnPAR_CODIGO.AutoIncrementStep = -1;
                this.columnPAR_CODIGO.AllowDBNull = false;
                this.columnPAR_CODIGO.Unique = true;
                this.columnPAR_NOMBRE.MaxLength = 80;
                this.columnPAR_DESCRIPCION.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_PARTESRow NewESTADO_PARTESRow() {
                return ((ESTADO_PARTESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ESTADO_PARTESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ESTADO_PARTESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ESTADO_PARTESRowChanged != null)) {
                    this.ESTADO_PARTESRowChanged(this, new ESTADO_PARTESRowChangeEvent(((ESTADO_PARTESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ESTADO_PARTESRowChanging != null)) {
                    this.ESTADO_PARTESRowChanging(this, new ESTADO_PARTESRowChangeEvent(((ESTADO_PARTESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ESTADO_PARTESRowDeleted != null)) {
                    this.ESTADO_PARTESRowDeleted(this, new ESTADO_PARTESRowChangeEvent(((ESTADO_PARTESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ESTADO_PARTESRowDeleting != null)) {
                    this.ESTADO_PARTESRowDeleting(this, new ESTADO_PARTESRowChangeEvent(((ESTADO_PARTESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveESTADO_PARTESRow(ESTADO_PARTESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstructura ds = new dsEstructura();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ESTADO_PARTESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TERMINACIONESDataTable : global::System.Data.TypedTableBase<TERMINACIONESRow> {
            
            private global::System.Data.DataColumn columnTE_CODIGO;
            
            private global::System.Data.DataColumn columnTE_NOMBRE;
            
            private global::System.Data.DataColumn columnTE_DESCRIPCION;
            
            private global::System.Data.DataColumn columnTE_ABREVIATURA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TERMINACIONESDataTable() {
                this.TableName = "TERMINACIONES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TERMINACIONESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TERMINACIONESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TE_CODIGOColumn {
                get {
                    return this.columnTE_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TE_NOMBREColumn {
                get {
                    return this.columnTE_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TE_DESCRIPCIONColumn {
                get {
                    return this.columnTE_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TE_ABREVIATURAColumn {
                get {
                    return this.columnTE_ABREVIATURA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TERMINACIONESRow this[int index] {
                get {
                    return ((TERMINACIONESRow)(this.Rows[index]));
                }
            }
            
            public event TERMINACIONESRowChangeEventHandler TERMINACIONESRowChanging;
            
            public event TERMINACIONESRowChangeEventHandler TERMINACIONESRowChanged;
            
            public event TERMINACIONESRowChangeEventHandler TERMINACIONESRowDeleting;
            
            public event TERMINACIONESRowChangeEventHandler TERMINACIONESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTERMINACIONESRow(TERMINACIONESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TERMINACIONESRow AddTERMINACIONESRow(string TE_NOMBRE, string TE_DESCRIPCION, string TE_ABREVIATURA) {
                TERMINACIONESRow rowTERMINACIONESRow = ((TERMINACIONESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TE_NOMBRE,
                        TE_DESCRIPCION,
                        TE_ABREVIATURA};
                rowTERMINACIONESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTERMINACIONESRow);
                return rowTERMINACIONESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TERMINACIONESRow FindByTE_CODIGO(decimal TE_CODIGO) {
                return ((TERMINACIONESRow)(this.Rows.Find(new object[] {
                            TE_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TERMINACIONESDataTable cln = ((TERMINACIONESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TERMINACIONESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTE_CODIGO = base.Columns["TE_CODIGO"];
                this.columnTE_NOMBRE = base.Columns["TE_NOMBRE"];
                this.columnTE_DESCRIPCION = base.Columns["TE_DESCRIPCION"];
                this.columnTE_ABREVIATURA = base.Columns["TE_ABREVIATURA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTE_CODIGO = new global::System.Data.DataColumn("TE_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTE_CODIGO);
                this.columnTE_NOMBRE = new global::System.Data.DataColumn("TE_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTE_NOMBRE);
                this.columnTE_DESCRIPCION = new global::System.Data.DataColumn("TE_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTE_DESCRIPCION);
                this.columnTE_ABREVIATURA = new global::System.Data.DataColumn("TE_ABREVIATURA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTE_ABREVIATURA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTE_CODIGO}, true));
                this.columnTE_CODIGO.AutoIncrement = true;
                this.columnTE_CODIGO.AutoIncrementSeed = -1;
                this.columnTE_CODIGO.AutoIncrementStep = -1;
                this.columnTE_CODIGO.AllowDBNull = false;
                this.columnTE_CODIGO.Unique = true;
                this.columnTE_NOMBRE.MaxLength = 80;
                this.columnTE_DESCRIPCION.MaxLength = 200;
                this.columnTE_ABREVIATURA.AllowDBNull = false;
                this.columnTE_ABREVIATURA.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TERMINACIONESRow NewTERMINACIONESRow() {
                return ((TERMINACIONESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TERMINACIONESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TERMINACIONESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TERMINACIONESRowChanged != null)) {
                    this.TERMINACIONESRowChanged(this, new TERMINACIONESRowChangeEvent(((TERMINACIONESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TERMINACIONESRowChanging != null)) {
                    this.TERMINACIONESRowChanging(this, new TERMINACIONESRowChangeEvent(((TERMINACIONESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TERMINACIONESRowDeleted != null)) {
                    this.TERMINACIONESRowDeleted(this, new TERMINACIONESRowChangeEvent(((TERMINACIONESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TERMINACIONESRowDeleting != null)) {
                    this.TERMINACIONESRowDeleting(this, new TERMINACIONESRowChangeEvent(((TERMINACIONESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTERMINACIONESRow(TERMINACIONESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstructura ds = new dsEstructura();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TERMINACIONESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PIEZASXCONJUNTODataTable : global::System.Data.TypedTableBase<PIEZASXCONJUNTORow> {
            
            private global::System.Data.DataColumn columnPXCJ_CODIGO;
            
            private global::System.Data.DataColumn columnCONJ_CODIGO;
            
            private global::System.Data.DataColumn columnPZA_CODIGO;
            
            private global::System.Data.DataColumn columnPXCJ_CANTIDAD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXCONJUNTODataTable() {
                this.TableName = "PIEZASXCONJUNTO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PIEZASXCONJUNTODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PIEZASXCONJUNTODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PXCJ_CODIGOColumn {
                get {
                    return this.columnPXCJ_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONJ_CODIGOColumn {
                get {
                    return this.columnCONJ_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PZA_CODIGOColumn {
                get {
                    return this.columnPZA_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PXCJ_CANTIDADColumn {
                get {
                    return this.columnPXCJ_CANTIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXCONJUNTORow this[int index] {
                get {
                    return ((PIEZASXCONJUNTORow)(this.Rows[index]));
                }
            }
            
            public event PIEZASXCONJUNTORowChangeEventHandler PIEZASXCONJUNTORowChanging;
            
            public event PIEZASXCONJUNTORowChangeEventHandler PIEZASXCONJUNTORowChanged;
            
            public event PIEZASXCONJUNTORowChangeEventHandler PIEZASXCONJUNTORowDeleting;
            
            public event PIEZASXCONJUNTORowChangeEventHandler PIEZASXCONJUNTORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPIEZASXCONJUNTORow(PIEZASXCONJUNTORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXCONJUNTORow AddPIEZASXCONJUNTORow(CONJUNTOSRow parentCONJUNTOSRowByCONJUNTOS_PIEZASXCONJUNTO, PIEZASRow parentPIEZASRowByPIEZAS_PIEZASXCONJUNTO, decimal PXCJ_CANTIDAD) {
                PIEZASXCONJUNTORow rowPIEZASXCONJUNTORow = ((PIEZASXCONJUNTORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        PXCJ_CANTIDAD};
                if ((parentCONJUNTOSRowByCONJUNTOS_PIEZASXCONJUNTO != null)) {
                    columnValuesArray[1] = parentCONJUNTOSRowByCONJUNTOS_PIEZASXCONJUNTO[0];
                }
                if ((parentPIEZASRowByPIEZAS_PIEZASXCONJUNTO != null)) {
                    columnValuesArray[2] = parentPIEZASRowByPIEZAS_PIEZASXCONJUNTO[0];
                }
                rowPIEZASXCONJUNTORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPIEZASXCONJUNTORow);
                return rowPIEZASXCONJUNTORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXCONJUNTORow FindByPXCJ_CODIGO(decimal PXCJ_CODIGO) {
                return ((PIEZASXCONJUNTORow)(this.Rows.Find(new object[] {
                            PXCJ_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PIEZASXCONJUNTODataTable cln = ((PIEZASXCONJUNTODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PIEZASXCONJUNTODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPXCJ_CODIGO = base.Columns["PXCJ_CODIGO"];
                this.columnCONJ_CODIGO = base.Columns["CONJ_CODIGO"];
                this.columnPZA_CODIGO = base.Columns["PZA_CODIGO"];
                this.columnPXCJ_CANTIDAD = base.Columns["PXCJ_CANTIDAD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPXCJ_CODIGO = new global::System.Data.DataColumn("PXCJ_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPXCJ_CODIGO);
                this.columnCONJ_CODIGO = new global::System.Data.DataColumn("CONJ_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONJ_CODIGO);
                this.columnPZA_CODIGO = new global::System.Data.DataColumn("PZA_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPZA_CODIGO);
                this.columnPXCJ_CANTIDAD = new global::System.Data.DataColumn("PXCJ_CANTIDAD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPXCJ_CANTIDAD);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPXCJ_CODIGO}, true));
                this.columnPXCJ_CODIGO.AutoIncrement = true;
                this.columnPXCJ_CODIGO.AutoIncrementSeed = -1;
                this.columnPXCJ_CODIGO.AutoIncrementStep = -1;
                this.columnPXCJ_CODIGO.AllowDBNull = false;
                this.columnPXCJ_CODIGO.Unique = true;
                this.columnCONJ_CODIGO.AllowDBNull = false;
                this.columnPZA_CODIGO.AllowDBNull = false;
                this.columnPXCJ_CANTIDAD.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXCONJUNTORow NewPIEZASXCONJUNTORow() {
                return ((PIEZASXCONJUNTORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PIEZASXCONJUNTORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PIEZASXCONJUNTORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PIEZASXCONJUNTORowChanged != null)) {
                    this.PIEZASXCONJUNTORowChanged(this, new PIEZASXCONJUNTORowChangeEvent(((PIEZASXCONJUNTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PIEZASXCONJUNTORowChanging != null)) {
                    this.PIEZASXCONJUNTORowChanging(this, new PIEZASXCONJUNTORowChangeEvent(((PIEZASXCONJUNTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PIEZASXCONJUNTORowDeleted != null)) {
                    this.PIEZASXCONJUNTORowDeleted(this, new PIEZASXCONJUNTORowChangeEvent(((PIEZASXCONJUNTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PIEZASXCONJUNTORowDeleting != null)) {
                    this.PIEZASXCONJUNTORowDeleting(this, new PIEZASXCONJUNTORowChangeEvent(((PIEZASXCONJUNTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePIEZASXCONJUNTORow(PIEZASXCONJUNTORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstructura ds = new dsEstructura();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PIEZASXCONJUNTODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PIEZASXSUBCONJUNTODataTable : global::System.Data.TypedTableBase<PIEZASXSUBCONJUNTORow> {
            
            private global::System.Data.DataColumn columnPXSC_CODIGO;
            
            private global::System.Data.DataColumn columnPZA_CODIGO;
            
            private global::System.Data.DataColumn columnSCONJ_CODIGO;
            
            private global::System.Data.DataColumn columnPXSC_CANTIDAD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXSUBCONJUNTODataTable() {
                this.TableName = "PIEZASXSUBCONJUNTO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PIEZASXSUBCONJUNTODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PIEZASXSUBCONJUNTODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PXSC_CODIGOColumn {
                get {
                    return this.columnPXSC_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PZA_CODIGOColumn {
                get {
                    return this.columnPZA_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCONJ_CODIGOColumn {
                get {
                    return this.columnSCONJ_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PXSC_CANTIDADColumn {
                get {
                    return this.columnPXSC_CANTIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXSUBCONJUNTORow this[int index] {
                get {
                    return ((PIEZASXSUBCONJUNTORow)(this.Rows[index]));
                }
            }
            
            public event PIEZASXSUBCONJUNTORowChangeEventHandler PIEZASXSUBCONJUNTORowChanging;
            
            public event PIEZASXSUBCONJUNTORowChangeEventHandler PIEZASXSUBCONJUNTORowChanged;
            
            public event PIEZASXSUBCONJUNTORowChangeEventHandler PIEZASXSUBCONJUNTORowDeleting;
            
            public event PIEZASXSUBCONJUNTORowChangeEventHandler PIEZASXSUBCONJUNTORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPIEZASXSUBCONJUNTORow(PIEZASXSUBCONJUNTORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXSUBCONJUNTORow AddPIEZASXSUBCONJUNTORow(PIEZASRow parentPIEZASRowBydetalleSubconjunto_pieza_fk, SUBCONJUNTOSRow parentSUBCONJUNTOSRowBydetalleSubconjunto_subconjunto_fk, decimal PXSC_CANTIDAD) {
                PIEZASXSUBCONJUNTORow rowPIEZASXSUBCONJUNTORow = ((PIEZASXSUBCONJUNTORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        PXSC_CANTIDAD};
                if ((parentPIEZASRowBydetalleSubconjunto_pieza_fk != null)) {
                    columnValuesArray[1] = parentPIEZASRowBydetalleSubconjunto_pieza_fk[0];
                }
                if ((parentSUBCONJUNTOSRowBydetalleSubconjunto_subconjunto_fk != null)) {
                    columnValuesArray[2] = parentSUBCONJUNTOSRowBydetalleSubconjunto_subconjunto_fk[0];
                }
                rowPIEZASXSUBCONJUNTORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPIEZASXSUBCONJUNTORow);
                return rowPIEZASXSUBCONJUNTORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXSUBCONJUNTORow FindByPXSC_CODIGO(decimal PXSC_CODIGO) {
                return ((PIEZASXSUBCONJUNTORow)(this.Rows.Find(new object[] {
                            PXSC_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PIEZASXSUBCONJUNTODataTable cln = ((PIEZASXSUBCONJUNTODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PIEZASXSUBCONJUNTODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPXSC_CODIGO = base.Columns["PXSC_CODIGO"];
                this.columnPZA_CODIGO = base.Columns["PZA_CODIGO"];
                this.columnSCONJ_CODIGO = base.Columns["SCONJ_CODIGO"];
                this.columnPXSC_CANTIDAD = base.Columns["PXSC_CANTIDAD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPXSC_CODIGO = new global::System.Data.DataColumn("PXSC_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPXSC_CODIGO);
                this.columnPZA_CODIGO = new global::System.Data.DataColumn("PZA_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPZA_CODIGO);
                this.columnSCONJ_CODIGO = new global::System.Data.DataColumn("SCONJ_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCONJ_CODIGO);
                this.columnPXSC_CANTIDAD = new global::System.Data.DataColumn("PXSC_CANTIDAD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPXSC_CANTIDAD);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPXSC_CODIGO}, true));
                this.columnPXSC_CODIGO.AutoIncrement = true;
                this.columnPXSC_CODIGO.AutoIncrementSeed = -1;
                this.columnPXSC_CODIGO.AutoIncrementStep = -1;
                this.columnPXSC_CODIGO.AllowDBNull = false;
                this.columnPXSC_CODIGO.Unique = true;
                this.columnPZA_CODIGO.AllowDBNull = false;
                this.columnSCONJ_CODIGO.AllowDBNull = false;
                this.columnPXSC_CANTIDAD.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXSUBCONJUNTORow NewPIEZASXSUBCONJUNTORow() {
                return ((PIEZASXSUBCONJUNTORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PIEZASXSUBCONJUNTORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PIEZASXSUBCONJUNTORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PIEZASXSUBCONJUNTORowChanged != null)) {
                    this.PIEZASXSUBCONJUNTORowChanged(this, new PIEZASXSUBCONJUNTORowChangeEvent(((PIEZASXSUBCONJUNTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PIEZASXSUBCONJUNTORowChanging != null)) {
                    this.PIEZASXSUBCONJUNTORowChanging(this, new PIEZASXSUBCONJUNTORowChangeEvent(((PIEZASXSUBCONJUNTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PIEZASXSUBCONJUNTORowDeleted != null)) {
                    this.PIEZASXSUBCONJUNTORowDeleted(this, new PIEZASXSUBCONJUNTORowChangeEvent(((PIEZASXSUBCONJUNTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PIEZASXSUBCONJUNTORowDeleting != null)) {
                    this.PIEZASXSUBCONJUNTORowDeleting(this, new PIEZASXSUBCONJUNTORowChangeEvent(((PIEZASXSUBCONJUNTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePIEZASXSUBCONJUNTORow(PIEZASXSUBCONJUNTORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstructura ds = new dsEstructura();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PIEZASXSUBCONJUNTODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SUBCONJUNTOSXCONJUNTODataTable : global::System.Data.TypedTableBase<SUBCONJUNTOSXCONJUNTORow> {
            
            private global::System.Data.DataColumn columnSCXCJ_CODIGO;
            
            private global::System.Data.DataColumn columnCONJ_CODIGO;
            
            private global::System.Data.DataColumn columnSCONJ_CODIGO;
            
            private global::System.Data.DataColumn columnSCXCJ_CANTIDAD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXCONJUNTODataTable() {
                this.TableName = "SUBCONJUNTOSXCONJUNTO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SUBCONJUNTOSXCONJUNTODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SUBCONJUNTOSXCONJUNTODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCXCJ_CODIGOColumn {
                get {
                    return this.columnSCXCJ_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONJ_CODIGOColumn {
                get {
                    return this.columnCONJ_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCONJ_CODIGOColumn {
                get {
                    return this.columnSCONJ_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCXCJ_CANTIDADColumn {
                get {
                    return this.columnSCXCJ_CANTIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXCONJUNTORow this[int index] {
                get {
                    return ((SUBCONJUNTOSXCONJUNTORow)(this.Rows[index]));
                }
            }
            
            public event SUBCONJUNTOSXCONJUNTORowChangeEventHandler SUBCONJUNTOSXCONJUNTORowChanging;
            
            public event SUBCONJUNTOSXCONJUNTORowChangeEventHandler SUBCONJUNTOSXCONJUNTORowChanged;
            
            public event SUBCONJUNTOSXCONJUNTORowChangeEventHandler SUBCONJUNTOSXCONJUNTORowDeleting;
            
            public event SUBCONJUNTOSXCONJUNTORowChangeEventHandler SUBCONJUNTOSXCONJUNTORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSUBCONJUNTOSXCONJUNTORow(SUBCONJUNTOSXCONJUNTORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXCONJUNTORow AddSUBCONJUNTOSXCONJUNTORow(CONJUNTOSRow parentCONJUNTOSRowBydetalleconjunto_subconjunto_fk, SUBCONJUNTOSRow parentSUBCONJUNTOSRowBydetalleconjunto_conjunto_fk, decimal SCXCJ_CANTIDAD) {
                SUBCONJUNTOSXCONJUNTORow rowSUBCONJUNTOSXCONJUNTORow = ((SUBCONJUNTOSXCONJUNTORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        SCXCJ_CANTIDAD};
                if ((parentCONJUNTOSRowBydetalleconjunto_subconjunto_fk != null)) {
                    columnValuesArray[1] = parentCONJUNTOSRowBydetalleconjunto_subconjunto_fk[0];
                }
                if ((parentSUBCONJUNTOSRowBydetalleconjunto_conjunto_fk != null)) {
                    columnValuesArray[2] = parentSUBCONJUNTOSRowBydetalleconjunto_conjunto_fk[0];
                }
                rowSUBCONJUNTOSXCONJUNTORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSUBCONJUNTOSXCONJUNTORow);
                return rowSUBCONJUNTOSXCONJUNTORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXCONJUNTORow FindBySCXCJ_CODIGO(decimal SCXCJ_CODIGO) {
                return ((SUBCONJUNTOSXCONJUNTORow)(this.Rows.Find(new object[] {
                            SCXCJ_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SUBCONJUNTOSXCONJUNTODataTable cln = ((SUBCONJUNTOSXCONJUNTODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SUBCONJUNTOSXCONJUNTODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSCXCJ_CODIGO = base.Columns["SCXCJ_CODIGO"];
                this.columnCONJ_CODIGO = base.Columns["CONJ_CODIGO"];
                this.columnSCONJ_CODIGO = base.Columns["SCONJ_CODIGO"];
                this.columnSCXCJ_CANTIDAD = base.Columns["SCXCJ_CANTIDAD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSCXCJ_CODIGO = new global::System.Data.DataColumn("SCXCJ_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCXCJ_CODIGO);
                this.columnCONJ_CODIGO = new global::System.Data.DataColumn("CONJ_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONJ_CODIGO);
                this.columnSCONJ_CODIGO = new global::System.Data.DataColumn("SCONJ_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCONJ_CODIGO);
                this.columnSCXCJ_CANTIDAD = new global::System.Data.DataColumn("SCXCJ_CANTIDAD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCXCJ_CANTIDAD);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSCXCJ_CODIGO}, true));
                this.columnSCXCJ_CODIGO.AutoIncrement = true;
                this.columnSCXCJ_CODIGO.AutoIncrementSeed = -1;
                this.columnSCXCJ_CODIGO.AutoIncrementStep = -1;
                this.columnSCXCJ_CODIGO.AllowDBNull = false;
                this.columnSCXCJ_CODIGO.Unique = true;
                this.columnCONJ_CODIGO.AllowDBNull = false;
                this.columnSCONJ_CODIGO.AllowDBNull = false;
                this.columnSCXCJ_CANTIDAD.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXCONJUNTORow NewSUBCONJUNTOSXCONJUNTORow() {
                return ((SUBCONJUNTOSXCONJUNTORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SUBCONJUNTOSXCONJUNTORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SUBCONJUNTOSXCONJUNTORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SUBCONJUNTOSXCONJUNTORowChanged != null)) {
                    this.SUBCONJUNTOSXCONJUNTORowChanged(this, new SUBCONJUNTOSXCONJUNTORowChangeEvent(((SUBCONJUNTOSXCONJUNTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SUBCONJUNTOSXCONJUNTORowChanging != null)) {
                    this.SUBCONJUNTOSXCONJUNTORowChanging(this, new SUBCONJUNTOSXCONJUNTORowChangeEvent(((SUBCONJUNTOSXCONJUNTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SUBCONJUNTOSXCONJUNTORowDeleted != null)) {
                    this.SUBCONJUNTOSXCONJUNTORowDeleted(this, new SUBCONJUNTOSXCONJUNTORowChangeEvent(((SUBCONJUNTOSXCONJUNTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SUBCONJUNTOSXCONJUNTORowDeleting != null)) {
                    this.SUBCONJUNTOSXCONJUNTORowDeleting(this, new SUBCONJUNTOSXCONJUNTORowChangeEvent(((SUBCONJUNTOSXCONJUNTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSUBCONJUNTOSXCONJUNTORow(SUBCONJUNTOSXCONJUNTORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstructura ds = new dsEstructura();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SUBCONJUNTOSXCONJUNTODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CONJUNTOSDataTable : global::System.Data.TypedTableBase<CONJUNTOSRow> {
            
            private global::System.Data.DataColumn columnCONJ_CODIGO;
            
            private global::System.Data.DataColumn columnCONJ_NOMBRE;
            
            private global::System.Data.DataColumn columnCONJ_CANTIDADSTOCK;
            
            private global::System.Data.DataColumn columnCONJ_DESCRIPCION;
            
            private global::System.Data.DataColumn columnPAR_CODIGO;
            
            private global::System.Data.DataColumn columnPNO_CODIGO;
            
            private global::System.Data.DataColumn columnCONJ_CODIGOPARTE;
            
            private global::System.Data.DataColumn columnCONJ_COSTO;
            
            private global::System.Data.DataColumn columnHR_CODIGO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSDataTable() {
                this.TableName = "CONJUNTOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CONJUNTOSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CONJUNTOSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONJ_CODIGOColumn {
                get {
                    return this.columnCONJ_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONJ_NOMBREColumn {
                get {
                    return this.columnCONJ_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONJ_CANTIDADSTOCKColumn {
                get {
                    return this.columnCONJ_CANTIDADSTOCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONJ_DESCRIPCIONColumn {
                get {
                    return this.columnCONJ_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAR_CODIGOColumn {
                get {
                    return this.columnPAR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNO_CODIGOColumn {
                get {
                    return this.columnPNO_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONJ_CODIGOPARTEColumn {
                get {
                    return this.columnCONJ_CODIGOPARTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONJ_COSTOColumn {
                get {
                    return this.columnCONJ_COSTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HR_CODIGOColumn {
                get {
                    return this.columnHR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSRow this[int index] {
                get {
                    return ((CONJUNTOSRow)(this.Rows[index]));
                }
            }
            
            public event CONJUNTOSRowChangeEventHandler CONJUNTOSRowChanging;
            
            public event CONJUNTOSRowChangeEventHandler CONJUNTOSRowChanged;
            
            public event CONJUNTOSRowChangeEventHandler CONJUNTOSRowDeleting;
            
            public event CONJUNTOSRowChangeEventHandler CONJUNTOSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCONJUNTOSRow(CONJUNTOSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSRow AddCONJUNTOSRow(string CONJ_NOMBRE, int CONJ_CANTIDADSTOCK, string CONJ_DESCRIPCION, ESTADO_PARTESRow parentESTADO_PARTESRowByESTADO_PARTES_CONJUNTOS, PLANOSRow parentPLANOSRowByPLANOS_CONJUNTOS, string CONJ_CODIGOPARTE, decimal CONJ_COSTO, decimal HR_CODIGO) {
                CONJUNTOSRow rowCONJUNTOSRow = ((CONJUNTOSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CONJ_NOMBRE,
                        CONJ_CANTIDADSTOCK,
                        CONJ_DESCRIPCION,
                        null,
                        null,
                        CONJ_CODIGOPARTE,
                        CONJ_COSTO,
                        HR_CODIGO};
                if ((parentESTADO_PARTESRowByESTADO_PARTES_CONJUNTOS != null)) {
                    columnValuesArray[4] = parentESTADO_PARTESRowByESTADO_PARTES_CONJUNTOS[0];
                }
                if ((parentPLANOSRowByPLANOS_CONJUNTOS != null)) {
                    columnValuesArray[5] = parentPLANOSRowByPLANOS_CONJUNTOS[0];
                }
                rowCONJUNTOSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCONJUNTOSRow);
                return rowCONJUNTOSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSRow FindByCONJ_CODIGO(decimal CONJ_CODIGO) {
                return ((CONJUNTOSRow)(this.Rows.Find(new object[] {
                            CONJ_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CONJUNTOSDataTable cln = ((CONJUNTOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CONJUNTOSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCONJ_CODIGO = base.Columns["CONJ_CODIGO"];
                this.columnCONJ_NOMBRE = base.Columns["CONJ_NOMBRE"];
                this.columnCONJ_CANTIDADSTOCK = base.Columns["CONJ_CANTIDADSTOCK"];
                this.columnCONJ_DESCRIPCION = base.Columns["CONJ_DESCRIPCION"];
                this.columnPAR_CODIGO = base.Columns["PAR_CODIGO"];
                this.columnPNO_CODIGO = base.Columns["PNO_CODIGO"];
                this.columnCONJ_CODIGOPARTE = base.Columns["CONJ_CODIGOPARTE"];
                this.columnCONJ_COSTO = base.Columns["CONJ_COSTO"];
                this.columnHR_CODIGO = base.Columns["HR_CODIGO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCONJ_CODIGO = new global::System.Data.DataColumn("CONJ_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONJ_CODIGO);
                this.columnCONJ_NOMBRE = new global::System.Data.DataColumn("CONJ_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONJ_NOMBRE);
                this.columnCONJ_CANTIDADSTOCK = new global::System.Data.DataColumn("CONJ_CANTIDADSTOCK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONJ_CANTIDADSTOCK);
                this.columnCONJ_DESCRIPCION = new global::System.Data.DataColumn("CONJ_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONJ_DESCRIPCION);
                this.columnPAR_CODIGO = new global::System.Data.DataColumn("PAR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAR_CODIGO);
                this.columnPNO_CODIGO = new global::System.Data.DataColumn("PNO_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNO_CODIGO);
                this.columnCONJ_CODIGOPARTE = new global::System.Data.DataColumn("CONJ_CODIGOPARTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONJ_CODIGOPARTE);
                this.columnCONJ_COSTO = new global::System.Data.DataColumn("CONJ_COSTO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONJ_COSTO);
                this.columnHR_CODIGO = new global::System.Data.DataColumn("HR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHR_CODIGO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCONJ_CODIGO}, true));
                this.columnCONJ_CODIGO.AutoIncrement = true;
                this.columnCONJ_CODIGO.AutoIncrementSeed = -1;
                this.columnCONJ_CODIGO.AutoIncrementStep = -1;
                this.columnCONJ_CODIGO.AllowDBNull = false;
                this.columnCONJ_CODIGO.Unique = true;
                this.columnCONJ_NOMBRE.MaxLength = 50;
                this.columnCONJ_DESCRIPCION.MaxLength = 200;
                this.columnPAR_CODIGO.AllowDBNull = false;
                this.columnCONJ_CODIGOPARTE.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSRow NewCONJUNTOSRow() {
                return ((CONJUNTOSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CONJUNTOSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CONJUNTOSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CONJUNTOSRowChanged != null)) {
                    this.CONJUNTOSRowChanged(this, new CONJUNTOSRowChangeEvent(((CONJUNTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CONJUNTOSRowChanging != null)) {
                    this.CONJUNTOSRowChanging(this, new CONJUNTOSRowChangeEvent(((CONJUNTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CONJUNTOSRowDeleted != null)) {
                    this.CONJUNTOSRowDeleted(this, new CONJUNTOSRowChangeEvent(((CONJUNTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CONJUNTOSRowDeleting != null)) {
                    this.CONJUNTOSRowDeleting(this, new CONJUNTOSRowChangeEvent(((CONJUNTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCONJUNTOSRow(CONJUNTOSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstructura ds = new dsEstructura();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CONJUNTOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SUBCONJUNTOSDataTable : global::System.Data.TypedTableBase<SUBCONJUNTOSRow> {
            
            private global::System.Data.DataColumn columnSCONJ_CODIGO;
            
            private global::System.Data.DataColumn columnSCONJ_NOMBRE;
            
            private global::System.Data.DataColumn columnSCONJ_CANTIDADSTOCK;
            
            private global::System.Data.DataColumn columnSCONJ_DESCRIPCION;
            
            private global::System.Data.DataColumn columnPAR_CODIGO;
            
            private global::System.Data.DataColumn columnPNO_CODIGO;
            
            private global::System.Data.DataColumn columnSCONJ_CODIGOPARTE;
            
            private global::System.Data.DataColumn columnSCONJ_COSTO;
            
            private global::System.Data.DataColumn columnHR_CODIGO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSDataTable() {
                this.TableName = "SUBCONJUNTOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SUBCONJUNTOSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SUBCONJUNTOSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCONJ_CODIGOColumn {
                get {
                    return this.columnSCONJ_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCONJ_NOMBREColumn {
                get {
                    return this.columnSCONJ_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCONJ_CANTIDADSTOCKColumn {
                get {
                    return this.columnSCONJ_CANTIDADSTOCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCONJ_DESCRIPCIONColumn {
                get {
                    return this.columnSCONJ_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAR_CODIGOColumn {
                get {
                    return this.columnPAR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNO_CODIGOColumn {
                get {
                    return this.columnPNO_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCONJ_CODIGOPARTEColumn {
                get {
                    return this.columnSCONJ_CODIGOPARTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCONJ_COSTOColumn {
                get {
                    return this.columnSCONJ_COSTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HR_CODIGOColumn {
                get {
                    return this.columnHR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSRow this[int index] {
                get {
                    return ((SUBCONJUNTOSRow)(this.Rows[index]));
                }
            }
            
            public event SUBCONJUNTOSRowChangeEventHandler SUBCONJUNTOSRowChanging;
            
            public event SUBCONJUNTOSRowChangeEventHandler SUBCONJUNTOSRowChanged;
            
            public event SUBCONJUNTOSRowChangeEventHandler SUBCONJUNTOSRowDeleting;
            
            public event SUBCONJUNTOSRowChangeEventHandler SUBCONJUNTOSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSUBCONJUNTOSRow(SUBCONJUNTOSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSRow AddSUBCONJUNTOSRow(string SCONJ_NOMBRE, int SCONJ_CANTIDADSTOCK, string SCONJ_DESCRIPCION, ESTADO_PARTESRow parentESTADO_PARTESRowByESTADO_PARTES_SUBCONJUNTOS, PLANOSRow parentPLANOSRowByPLANOS_SUBCONJUNTOS, string SCONJ_CODIGOPARTE, decimal SCONJ_COSTO, decimal HR_CODIGO) {
                SUBCONJUNTOSRow rowSUBCONJUNTOSRow = ((SUBCONJUNTOSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SCONJ_NOMBRE,
                        SCONJ_CANTIDADSTOCK,
                        SCONJ_DESCRIPCION,
                        null,
                        null,
                        SCONJ_CODIGOPARTE,
                        SCONJ_COSTO,
                        HR_CODIGO};
                if ((parentESTADO_PARTESRowByESTADO_PARTES_SUBCONJUNTOS != null)) {
                    columnValuesArray[4] = parentESTADO_PARTESRowByESTADO_PARTES_SUBCONJUNTOS[0];
                }
                if ((parentPLANOSRowByPLANOS_SUBCONJUNTOS != null)) {
                    columnValuesArray[5] = parentPLANOSRowByPLANOS_SUBCONJUNTOS[0];
                }
                rowSUBCONJUNTOSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSUBCONJUNTOSRow);
                return rowSUBCONJUNTOSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSRow FindBySCONJ_CODIGO(decimal SCONJ_CODIGO) {
                return ((SUBCONJUNTOSRow)(this.Rows.Find(new object[] {
                            SCONJ_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SUBCONJUNTOSDataTable cln = ((SUBCONJUNTOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SUBCONJUNTOSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSCONJ_CODIGO = base.Columns["SCONJ_CODIGO"];
                this.columnSCONJ_NOMBRE = base.Columns["SCONJ_NOMBRE"];
                this.columnSCONJ_CANTIDADSTOCK = base.Columns["SCONJ_CANTIDADSTOCK"];
                this.columnSCONJ_DESCRIPCION = base.Columns["SCONJ_DESCRIPCION"];
                this.columnPAR_CODIGO = base.Columns["PAR_CODIGO"];
                this.columnPNO_CODIGO = base.Columns["PNO_CODIGO"];
                this.columnSCONJ_CODIGOPARTE = base.Columns["SCONJ_CODIGOPARTE"];
                this.columnSCONJ_COSTO = base.Columns["SCONJ_COSTO"];
                this.columnHR_CODIGO = base.Columns["HR_CODIGO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSCONJ_CODIGO = new global::System.Data.DataColumn("SCONJ_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCONJ_CODIGO);
                this.columnSCONJ_NOMBRE = new global::System.Data.DataColumn("SCONJ_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCONJ_NOMBRE);
                this.columnSCONJ_CANTIDADSTOCK = new global::System.Data.DataColumn("SCONJ_CANTIDADSTOCK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCONJ_CANTIDADSTOCK);
                this.columnSCONJ_DESCRIPCION = new global::System.Data.DataColumn("SCONJ_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCONJ_DESCRIPCION);
                this.columnPAR_CODIGO = new global::System.Data.DataColumn("PAR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAR_CODIGO);
                this.columnPNO_CODIGO = new global::System.Data.DataColumn("PNO_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNO_CODIGO);
                this.columnSCONJ_CODIGOPARTE = new global::System.Data.DataColumn("SCONJ_CODIGOPARTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCONJ_CODIGOPARTE);
                this.columnSCONJ_COSTO = new global::System.Data.DataColumn("SCONJ_COSTO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCONJ_COSTO);
                this.columnHR_CODIGO = new global::System.Data.DataColumn("HR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHR_CODIGO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSCONJ_CODIGO}, true));
                this.columnSCONJ_CODIGO.AutoIncrement = true;
                this.columnSCONJ_CODIGO.AutoIncrementSeed = -1;
                this.columnSCONJ_CODIGO.AutoIncrementStep = -1;
                this.columnSCONJ_CODIGO.AllowDBNull = false;
                this.columnSCONJ_CODIGO.Unique = true;
                this.columnSCONJ_NOMBRE.MaxLength = 80;
                this.columnSCONJ_DESCRIPCION.MaxLength = 200;
                this.columnPAR_CODIGO.AllowDBNull = false;
                this.columnSCONJ_CODIGOPARTE.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSRow NewSUBCONJUNTOSRow() {
                return ((SUBCONJUNTOSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SUBCONJUNTOSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SUBCONJUNTOSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SUBCONJUNTOSRowChanged != null)) {
                    this.SUBCONJUNTOSRowChanged(this, new SUBCONJUNTOSRowChangeEvent(((SUBCONJUNTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SUBCONJUNTOSRowChanging != null)) {
                    this.SUBCONJUNTOSRowChanging(this, new SUBCONJUNTOSRowChangeEvent(((SUBCONJUNTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SUBCONJUNTOSRowDeleted != null)) {
                    this.SUBCONJUNTOSRowDeleted(this, new SUBCONJUNTOSRowChangeEvent(((SUBCONJUNTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SUBCONJUNTOSRowDeleting != null)) {
                    this.SUBCONJUNTOSRowDeleting(this, new SUBCONJUNTOSRowChangeEvent(((SUBCONJUNTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSUBCONJUNTOSRow(SUBCONJUNTOSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstructura ds = new dsEstructura();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SUBCONJUNTOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PIEZASDataTable : global::System.Data.TypedTableBase<PIEZASRow> {
            
            private global::System.Data.DataColumn columnPZA_CODIGO;
            
            private global::System.Data.DataColumn columnTE_CODIGO;
            
            private global::System.Data.DataColumn columnPZA_NOMBRE;
            
            private global::System.Data.DataColumn columnPZA_CANTIDADSTOCK;
            
            private global::System.Data.DataColumn columnPZA_DESCRIPCION;
            
            private global::System.Data.DataColumn columnPAR_CODIGO;
            
            private global::System.Data.DataColumn columnPNO_CODIGO;
            
            private global::System.Data.DataColumn columnPZA_CODIGOPARTE;
            
            private global::System.Data.DataColumn columnPZA_COSTO;
            
            private global::System.Data.DataColumn columnHR_CODIGO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASDataTable() {
                this.TableName = "PIEZAS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PIEZASDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PIEZASDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PZA_CODIGOColumn {
                get {
                    return this.columnPZA_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TE_CODIGOColumn {
                get {
                    return this.columnTE_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PZA_NOMBREColumn {
                get {
                    return this.columnPZA_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PZA_CANTIDADSTOCKColumn {
                get {
                    return this.columnPZA_CANTIDADSTOCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PZA_DESCRIPCIONColumn {
                get {
                    return this.columnPZA_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAR_CODIGOColumn {
                get {
                    return this.columnPAR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNO_CODIGOColumn {
                get {
                    return this.columnPNO_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PZA_CODIGOPARTEColumn {
                get {
                    return this.columnPZA_CODIGOPARTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PZA_COSTOColumn {
                get {
                    return this.columnPZA_COSTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HR_CODIGOColumn {
                get {
                    return this.columnHR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASRow this[int index] {
                get {
                    return ((PIEZASRow)(this.Rows[index]));
                }
            }
            
            public event PIEZASRowChangeEventHandler PIEZASRowChanging;
            
            public event PIEZASRowChangeEventHandler PIEZASRowChanged;
            
            public event PIEZASRowChangeEventHandler PIEZASRowDeleting;
            
            public event PIEZASRowChangeEventHandler PIEZASRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPIEZASRow(PIEZASRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASRow AddPIEZASRow(TERMINACIONESRow parentTERMINACIONESRowByTERMINACIONES_PIEZAS, string PZA_NOMBRE, int PZA_CANTIDADSTOCK, string PZA_DESCRIPCION, ESTADO_PARTESRow parentESTADO_PARTESRowByESTADO_PARTES_PIEZAS, PLANOSRow parentPLANOSRowByPLANOS_PIEZAS, string PZA_CODIGOPARTE, decimal PZA_COSTO, decimal HR_CODIGO) {
                PIEZASRow rowPIEZASRow = ((PIEZASRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        PZA_NOMBRE,
                        PZA_CANTIDADSTOCK,
                        PZA_DESCRIPCION,
                        null,
                        null,
                        PZA_CODIGOPARTE,
                        PZA_COSTO,
                        HR_CODIGO};
                if ((parentTERMINACIONESRowByTERMINACIONES_PIEZAS != null)) {
                    columnValuesArray[1] = parentTERMINACIONESRowByTERMINACIONES_PIEZAS[0];
                }
                if ((parentESTADO_PARTESRowByESTADO_PARTES_PIEZAS != null)) {
                    columnValuesArray[5] = parentESTADO_PARTESRowByESTADO_PARTES_PIEZAS[0];
                }
                if ((parentPLANOSRowByPLANOS_PIEZAS != null)) {
                    columnValuesArray[6] = parentPLANOSRowByPLANOS_PIEZAS[0];
                }
                rowPIEZASRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPIEZASRow);
                return rowPIEZASRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASRow FindByPZA_CODIGO(decimal PZA_CODIGO) {
                return ((PIEZASRow)(this.Rows.Find(new object[] {
                            PZA_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PIEZASDataTable cln = ((PIEZASDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PIEZASDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPZA_CODIGO = base.Columns["PZA_CODIGO"];
                this.columnTE_CODIGO = base.Columns["TE_CODIGO"];
                this.columnPZA_NOMBRE = base.Columns["PZA_NOMBRE"];
                this.columnPZA_CANTIDADSTOCK = base.Columns["PZA_CANTIDADSTOCK"];
                this.columnPZA_DESCRIPCION = base.Columns["PZA_DESCRIPCION"];
                this.columnPAR_CODIGO = base.Columns["PAR_CODIGO"];
                this.columnPNO_CODIGO = base.Columns["PNO_CODIGO"];
                this.columnPZA_CODIGOPARTE = base.Columns["PZA_CODIGOPARTE"];
                this.columnPZA_COSTO = base.Columns["PZA_COSTO"];
                this.columnHR_CODIGO = base.Columns["HR_CODIGO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPZA_CODIGO = new global::System.Data.DataColumn("PZA_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPZA_CODIGO);
                this.columnTE_CODIGO = new global::System.Data.DataColumn("TE_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTE_CODIGO);
                this.columnPZA_NOMBRE = new global::System.Data.DataColumn("PZA_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPZA_NOMBRE);
                this.columnPZA_CANTIDADSTOCK = new global::System.Data.DataColumn("PZA_CANTIDADSTOCK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPZA_CANTIDADSTOCK);
                this.columnPZA_DESCRIPCION = new global::System.Data.DataColumn("PZA_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPZA_DESCRIPCION);
                this.columnPAR_CODIGO = new global::System.Data.DataColumn("PAR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAR_CODIGO);
                this.columnPNO_CODIGO = new global::System.Data.DataColumn("PNO_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNO_CODIGO);
                this.columnPZA_CODIGOPARTE = new global::System.Data.DataColumn("PZA_CODIGOPARTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPZA_CODIGOPARTE);
                this.columnPZA_COSTO = new global::System.Data.DataColumn("PZA_COSTO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPZA_COSTO);
                this.columnHR_CODIGO = new global::System.Data.DataColumn("HR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHR_CODIGO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPZA_CODIGO}, true));
                this.columnPZA_CODIGO.AutoIncrement = true;
                this.columnPZA_CODIGO.AutoIncrementSeed = -1;
                this.columnPZA_CODIGO.AutoIncrementStep = -1;
                this.columnPZA_CODIGO.AllowDBNull = false;
                this.columnPZA_CODIGO.Unique = true;
                this.columnPZA_NOMBRE.MaxLength = 80;
                this.columnPZA_DESCRIPCION.MaxLength = 200;
                this.columnPAR_CODIGO.AllowDBNull = false;
                this.columnPZA_CODIGOPARTE.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASRow NewPIEZASRow() {
                return ((PIEZASRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PIEZASRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PIEZASRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PIEZASRowChanged != null)) {
                    this.PIEZASRowChanged(this, new PIEZASRowChangeEvent(((PIEZASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PIEZASRowChanging != null)) {
                    this.PIEZASRowChanging(this, new PIEZASRowChangeEvent(((PIEZASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PIEZASRowDeleted != null)) {
                    this.PIEZASRowDeleted(this, new PIEZASRowChangeEvent(((PIEZASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PIEZASRowDeleting != null)) {
                    this.PIEZASRowDeleting(this, new PIEZASRowChangeEvent(((PIEZASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePIEZASRow(PIEZASRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstructura ds = new dsEstructura();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PIEZASDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MATERIASPRIMASXPIEZADataTable : global::System.Data.TypedTableBase<MATERIASPRIMASXPIEZARow> {
            
            private global::System.Data.DataColumn columnMPXP_CODIGO;
            
            private global::System.Data.DataColumn columnMP_CODIGO;
            
            private global::System.Data.DataColumn columnPZA_CODIGO;
            
            private global::System.Data.DataColumn columnMPXP_CANTIDAD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXPIEZADataTable() {
                this.TableName = "MATERIASPRIMASXPIEZA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MATERIASPRIMASXPIEZADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MATERIASPRIMASXPIEZADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MPXP_CODIGOColumn {
                get {
                    return this.columnMPXP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_CODIGOColumn {
                get {
                    return this.columnMP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PZA_CODIGOColumn {
                get {
                    return this.columnPZA_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MPXP_CANTIDADColumn {
                get {
                    return this.columnMPXP_CANTIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXPIEZARow this[int index] {
                get {
                    return ((MATERIASPRIMASXPIEZARow)(this.Rows[index]));
                }
            }
            
            public event MATERIASPRIMASXPIEZARowChangeEventHandler MATERIASPRIMASXPIEZARowChanging;
            
            public event MATERIASPRIMASXPIEZARowChangeEventHandler MATERIASPRIMASXPIEZARowChanged;
            
            public event MATERIASPRIMASXPIEZARowChangeEventHandler MATERIASPRIMASXPIEZARowDeleting;
            
            public event MATERIASPRIMASXPIEZARowChangeEventHandler MATERIASPRIMASXPIEZARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMATERIASPRIMASXPIEZARow(MATERIASPRIMASXPIEZARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXPIEZARow AddMATERIASPRIMASXPIEZARow(MATERIAS_PRIMASRow parentMATERIAS_PRIMASRowByMATERIAS_PRIMAS_MATERIASPRIMASXPIEZA, PIEZASRow parentPIEZASRowBydetallePieza_pieza_fk, decimal MPXP_CANTIDAD) {
                MATERIASPRIMASXPIEZARow rowMATERIASPRIMASXPIEZARow = ((MATERIASPRIMASXPIEZARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        MPXP_CANTIDAD};
                if ((parentMATERIAS_PRIMASRowByMATERIAS_PRIMAS_MATERIASPRIMASXPIEZA != null)) {
                    columnValuesArray[1] = parentMATERIAS_PRIMASRowByMATERIAS_PRIMAS_MATERIASPRIMASXPIEZA[0];
                }
                if ((parentPIEZASRowBydetallePieza_pieza_fk != null)) {
                    columnValuesArray[2] = parentPIEZASRowBydetallePieza_pieza_fk[0];
                }
                rowMATERIASPRIMASXPIEZARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMATERIASPRIMASXPIEZARow);
                return rowMATERIASPRIMASXPIEZARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXPIEZARow FindByMPXP_CODIGO(decimal MPXP_CODIGO) {
                return ((MATERIASPRIMASXPIEZARow)(this.Rows.Find(new object[] {
                            MPXP_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MATERIASPRIMASXPIEZADataTable cln = ((MATERIASPRIMASXPIEZADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MATERIASPRIMASXPIEZADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMPXP_CODIGO = base.Columns["MPXP_CODIGO"];
                this.columnMP_CODIGO = base.Columns["MP_CODIGO"];
                this.columnPZA_CODIGO = base.Columns["PZA_CODIGO"];
                this.columnMPXP_CANTIDAD = base.Columns["MPXP_CANTIDAD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMPXP_CODIGO = new global::System.Data.DataColumn("MPXP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMPXP_CODIGO);
                this.columnMP_CODIGO = new global::System.Data.DataColumn("MP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_CODIGO);
                this.columnPZA_CODIGO = new global::System.Data.DataColumn("PZA_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPZA_CODIGO);
                this.columnMPXP_CANTIDAD = new global::System.Data.DataColumn("MPXP_CANTIDAD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMPXP_CANTIDAD);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMPXP_CODIGO}, true));
                this.columnMPXP_CODIGO.AutoIncrement = true;
                this.columnMPXP_CODIGO.AutoIncrementSeed = -1;
                this.columnMPXP_CODIGO.AutoIncrementStep = -1;
                this.columnMPXP_CODIGO.AllowDBNull = false;
                this.columnMPXP_CODIGO.Unique = true;
                this.columnMP_CODIGO.AllowDBNull = false;
                this.columnPZA_CODIGO.AllowDBNull = false;
                this.columnMPXP_CANTIDAD.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXPIEZARow NewMATERIASPRIMASXPIEZARow() {
                return ((MATERIASPRIMASXPIEZARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MATERIASPRIMASXPIEZARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MATERIASPRIMASXPIEZARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MATERIASPRIMASXPIEZARowChanged != null)) {
                    this.MATERIASPRIMASXPIEZARowChanged(this, new MATERIASPRIMASXPIEZARowChangeEvent(((MATERIASPRIMASXPIEZARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MATERIASPRIMASXPIEZARowChanging != null)) {
                    this.MATERIASPRIMASXPIEZARowChanging(this, new MATERIASPRIMASXPIEZARowChangeEvent(((MATERIASPRIMASXPIEZARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MATERIASPRIMASXPIEZARowDeleted != null)) {
                    this.MATERIASPRIMASXPIEZARowDeleted(this, new MATERIASPRIMASXPIEZARowChangeEvent(((MATERIASPRIMASXPIEZARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MATERIASPRIMASXPIEZARowDeleting != null)) {
                    this.MATERIASPRIMASXPIEZARowDeleting(this, new MATERIASPRIMASXPIEZARowChangeEvent(((MATERIASPRIMASXPIEZARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMATERIASPRIMASXPIEZARow(MATERIASPRIMASXPIEZARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstructura ds = new dsEstructura();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MATERIASPRIMASXPIEZADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ESTRUCTURASDataTable : global::System.Data.TypedTableBase<ESTRUCTURASRow> {
            
            private global::System.Data.DataColumn columnESTR_CODIGO;
            
            private global::System.Data.DataColumn columnESTR_NOMBRE;
            
            private global::System.Data.DataColumn columnCOC_CODIGO;
            
            private global::System.Data.DataColumn columnPNO_CODIGO;
            
            private global::System.Data.DataColumn columnESTR_DESCRIPCION;
            
            private global::System.Data.DataColumn columnESTR_ACTIVO;
            
            private global::System.Data.DataColumn columnESTR_FECHA_ALTA;
            
            private global::System.Data.DataColumn columnESTR_FECHA_MODIFICACION;
            
            private global::System.Data.DataColumn columnE_CODIGO;
            
            private global::System.Data.DataColumn columnESTR_COSTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTRUCTURASDataTable() {
                this.TableName = "ESTRUCTURAS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ESTRUCTURASDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ESTRUCTURASDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTR_CODIGOColumn {
                get {
                    return this.columnESTR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTR_NOMBREColumn {
                get {
                    return this.columnESTR_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COC_CODIGOColumn {
                get {
                    return this.columnCOC_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNO_CODIGOColumn {
                get {
                    return this.columnPNO_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTR_DESCRIPCIONColumn {
                get {
                    return this.columnESTR_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTR_ACTIVOColumn {
                get {
                    return this.columnESTR_ACTIVO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTR_FECHA_ALTAColumn {
                get {
                    return this.columnESTR_FECHA_ALTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTR_FECHA_MODIFICACIONColumn {
                get {
                    return this.columnESTR_FECHA_MODIFICACION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_CODIGOColumn {
                get {
                    return this.columnE_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTR_COSTOColumn {
                get {
                    return this.columnESTR_COSTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTRUCTURASRow this[int index] {
                get {
                    return ((ESTRUCTURASRow)(this.Rows[index]));
                }
            }
            
            public event ESTRUCTURASRowChangeEventHandler ESTRUCTURASRowChanging;
            
            public event ESTRUCTURASRowChangeEventHandler ESTRUCTURASRowChanged;
            
            public event ESTRUCTURASRowChangeEventHandler ESTRUCTURASRowDeleting;
            
            public event ESTRUCTURASRowChangeEventHandler ESTRUCTURASRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddESTRUCTURASRow(ESTRUCTURASRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTRUCTURASRow AddESTRUCTURASRow(string ESTR_NOMBRE, decimal COC_CODIGO, PLANOSRow parentPLANOSRowByPLANOS_ESTRUCTURAS, string ESTR_DESCRIPCION, decimal ESTR_ACTIVO, System.DateTime ESTR_FECHA_ALTA, System.DateTime ESTR_FECHA_MODIFICACION, decimal E_CODIGO, decimal ESTR_COSTO) {
                ESTRUCTURASRow rowESTRUCTURASRow = ((ESTRUCTURASRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ESTR_NOMBRE,
                        COC_CODIGO,
                        null,
                        ESTR_DESCRIPCION,
                        ESTR_ACTIVO,
                        ESTR_FECHA_ALTA,
                        ESTR_FECHA_MODIFICACION,
                        E_CODIGO,
                        ESTR_COSTO};
                if ((parentPLANOSRowByPLANOS_ESTRUCTURAS != null)) {
                    columnValuesArray[3] = parentPLANOSRowByPLANOS_ESTRUCTURAS[0];
                }
                rowESTRUCTURASRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowESTRUCTURASRow);
                return rowESTRUCTURASRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTRUCTURASRow FindByESTR_CODIGO(decimal ESTR_CODIGO) {
                return ((ESTRUCTURASRow)(this.Rows.Find(new object[] {
                            ESTR_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ESTRUCTURASDataTable cln = ((ESTRUCTURASDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ESTRUCTURASDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnESTR_CODIGO = base.Columns["ESTR_CODIGO"];
                this.columnESTR_NOMBRE = base.Columns["ESTR_NOMBRE"];
                this.columnCOC_CODIGO = base.Columns["COC_CODIGO"];
                this.columnPNO_CODIGO = base.Columns["PNO_CODIGO"];
                this.columnESTR_DESCRIPCION = base.Columns["ESTR_DESCRIPCION"];
                this.columnESTR_ACTIVO = base.Columns["ESTR_ACTIVO"];
                this.columnESTR_FECHA_ALTA = base.Columns["ESTR_FECHA_ALTA"];
                this.columnESTR_FECHA_MODIFICACION = base.Columns["ESTR_FECHA_MODIFICACION"];
                this.columnE_CODIGO = base.Columns["E_CODIGO"];
                this.columnESTR_COSTO = base.Columns["ESTR_COSTO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnESTR_CODIGO = new global::System.Data.DataColumn("ESTR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTR_CODIGO);
                this.columnESTR_NOMBRE = new global::System.Data.DataColumn("ESTR_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTR_NOMBRE);
                this.columnCOC_CODIGO = new global::System.Data.DataColumn("COC_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOC_CODIGO);
                this.columnPNO_CODIGO = new global::System.Data.DataColumn("PNO_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNO_CODIGO);
                this.columnESTR_DESCRIPCION = new global::System.Data.DataColumn("ESTR_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTR_DESCRIPCION);
                this.columnESTR_ACTIVO = new global::System.Data.DataColumn("ESTR_ACTIVO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTR_ACTIVO);
                this.columnESTR_FECHA_ALTA = new global::System.Data.DataColumn("ESTR_FECHA_ALTA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTR_FECHA_ALTA);
                this.columnESTR_FECHA_MODIFICACION = new global::System.Data.DataColumn("ESTR_FECHA_MODIFICACION", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTR_FECHA_MODIFICACION);
                this.columnE_CODIGO = new global::System.Data.DataColumn("E_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_CODIGO);
                this.columnESTR_COSTO = new global::System.Data.DataColumn("ESTR_COSTO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTR_COSTO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnESTR_CODIGO}, true));
                this.columnESTR_CODIGO.AutoIncrement = true;
                this.columnESTR_CODIGO.AutoIncrementSeed = -1;
                this.columnESTR_CODIGO.AutoIncrementStep = -1;
                this.columnESTR_CODIGO.AllowDBNull = false;
                this.columnESTR_CODIGO.Unique = true;
                this.columnESTR_NOMBRE.MaxLength = 80;
                this.columnCOC_CODIGO.AllowDBNull = false;
                this.columnPNO_CODIGO.AllowDBNull = false;
                this.columnESTR_DESCRIPCION.MaxLength = 200;
                this.columnESTR_ACTIVO.AllowDBNull = false;
                this.columnESTR_FECHA_ALTA.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTRUCTURASRow NewESTRUCTURASRow() {
                return ((ESTRUCTURASRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ESTRUCTURASRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ESTRUCTURASRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ESTRUCTURASRowChanged != null)) {
                    this.ESTRUCTURASRowChanged(this, new ESTRUCTURASRowChangeEvent(((ESTRUCTURASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ESTRUCTURASRowChanging != null)) {
                    this.ESTRUCTURASRowChanging(this, new ESTRUCTURASRowChangeEvent(((ESTRUCTURASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ESTRUCTURASRowDeleted != null)) {
                    this.ESTRUCTURASRowDeleted(this, new ESTRUCTURASRowChangeEvent(((ESTRUCTURASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ESTRUCTURASRowDeleting != null)) {
                    this.ESTRUCTURASRowDeleting(this, new ESTRUCTURASRowChangeEvent(((ESTRUCTURASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveESTRUCTURASRow(ESTRUCTURASRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstructura ds = new dsEstructura();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ESTRUCTURASDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LISTA_PARTESDataTable : global::System.Data.TypedTableBase<LISTA_PARTESRow> {
            
            private global::System.Data.DataColumn columnESTR_CODIGO;
            
            private global::System.Data.DataColumn columnPAR_TIPO;
            
            private global::System.Data.DataColumn columnPAR_CODIGO;
            
            private global::System.Data.DataColumn columnPAR_NOMBRE;
            
            private global::System.Data.DataColumn columnPAR_TERMINACION;
            
            private global::System.Data.DataColumn columnPAR_CANTIDAD;
            
            private global::System.Data.DataColumn columnPAR_UMED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LISTA_PARTESDataTable() {
                this.TableName = "LISTA_PARTES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LISTA_PARTESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LISTA_PARTESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESTR_CODIGOColumn {
                get {
                    return this.columnESTR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAR_TIPOColumn {
                get {
                    return this.columnPAR_TIPO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAR_CODIGOColumn {
                get {
                    return this.columnPAR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAR_NOMBREColumn {
                get {
                    return this.columnPAR_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAR_TERMINACIONColumn {
                get {
                    return this.columnPAR_TERMINACION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAR_CANTIDADColumn {
                get {
                    return this.columnPAR_CANTIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAR_UMEDColumn {
                get {
                    return this.columnPAR_UMED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LISTA_PARTESRow this[int index] {
                get {
                    return ((LISTA_PARTESRow)(this.Rows[index]));
                }
            }
            
            public event LISTA_PARTESRowChangeEventHandler LISTA_PARTESRowChanging;
            
            public event LISTA_PARTESRowChangeEventHandler LISTA_PARTESRowChanged;
            
            public event LISTA_PARTESRowChangeEventHandler LISTA_PARTESRowDeleting;
            
            public event LISTA_PARTESRowChangeEventHandler LISTA_PARTESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLISTA_PARTESRow(LISTA_PARTESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LISTA_PARTESRow AddLISTA_PARTESRow(string ESTR_CODIGO, string PAR_TIPO, string PAR_CODIGO, string PAR_NOMBRE, string PAR_TERMINACION, string PAR_CANTIDAD, string PAR_UMED) {
                LISTA_PARTESRow rowLISTA_PARTESRow = ((LISTA_PARTESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ESTR_CODIGO,
                        PAR_TIPO,
                        PAR_CODIGO,
                        PAR_NOMBRE,
                        PAR_TERMINACION,
                        PAR_CANTIDAD,
                        PAR_UMED};
                rowLISTA_PARTESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLISTA_PARTESRow);
                return rowLISTA_PARTESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LISTA_PARTESDataTable cln = ((LISTA_PARTESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LISTA_PARTESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnESTR_CODIGO = base.Columns["ESTR_CODIGO"];
                this.columnPAR_TIPO = base.Columns["PAR_TIPO"];
                this.columnPAR_CODIGO = base.Columns["PAR_CODIGO"];
                this.columnPAR_NOMBRE = base.Columns["PAR_NOMBRE"];
                this.columnPAR_TERMINACION = base.Columns["PAR_TERMINACION"];
                this.columnPAR_CANTIDAD = base.Columns["PAR_CANTIDAD"];
                this.columnPAR_UMED = base.Columns["PAR_UMED"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnESTR_CODIGO = new global::System.Data.DataColumn("ESTR_CODIGO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTR_CODIGO);
                this.columnPAR_TIPO = new global::System.Data.DataColumn("PAR_TIPO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAR_TIPO);
                this.columnPAR_CODIGO = new global::System.Data.DataColumn("PAR_CODIGO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAR_CODIGO);
                this.columnPAR_NOMBRE = new global::System.Data.DataColumn("PAR_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAR_NOMBRE);
                this.columnPAR_TERMINACION = new global::System.Data.DataColumn("PAR_TERMINACION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAR_TERMINACION);
                this.columnPAR_CANTIDAD = new global::System.Data.DataColumn("PAR_CANTIDAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAR_CANTIDAD);
                this.columnPAR_UMED = new global::System.Data.DataColumn("PAR_UMED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAR_UMED);
                this.columnPAR_TIPO.Caption = "TIPO";
                this.columnPAR_NOMBRE.Caption = "NOMBRE";
                this.columnPAR_TERMINACION.Caption = "TERMINACION";
                this.columnPAR_CANTIDAD.Caption = "CANTIDAD";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LISTA_PARTESRow NewLISTA_PARTESRow() {
                return ((LISTA_PARTESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LISTA_PARTESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LISTA_PARTESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LISTA_PARTESRowChanged != null)) {
                    this.LISTA_PARTESRowChanged(this, new LISTA_PARTESRowChangeEvent(((LISTA_PARTESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LISTA_PARTESRowChanging != null)) {
                    this.LISTA_PARTESRowChanging(this, new LISTA_PARTESRowChangeEvent(((LISTA_PARTESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LISTA_PARTESRowDeleted != null)) {
                    this.LISTA_PARTESRowDeleted(this, new LISTA_PARTESRowChangeEvent(((LISTA_PARTESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LISTA_PARTESRowDeleting != null)) {
                    this.LISTA_PARTESRowDeleting(this, new LISTA_PARTESRowChangeEvent(((LISTA_PARTESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLISTA_PARTESRow(LISTA_PARTESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstructura ds = new dsEstructura();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LISTA_PARTESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PIEZASXESTRUCTURARow : global::System.Data.DataRow {
            
            private PIEZASXESTRUCTURADataTable tablePIEZASXESTRUCTURA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PIEZASXESTRUCTURARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePIEZASXESTRUCTURA = ((PIEZASXESTRUCTURADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PXE_CODIGO {
                get {
                    return ((decimal)(this[this.tablePIEZASXESTRUCTURA.PXE_CODIGOColumn]));
                }
                set {
                    this[this.tablePIEZASXESTRUCTURA.PXE_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ESTR_CODIGO {
                get {
                    return ((decimal)(this[this.tablePIEZASXESTRUCTURA.ESTR_CODIGOColumn]));
                }
                set {
                    this[this.tablePIEZASXESTRUCTURA.ESTR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PZA_CODIGO {
                get {
                    return ((decimal)(this[this.tablePIEZASXESTRUCTURA.PZA_CODIGOColumn]));
                }
                set {
                    this[this.tablePIEZASXESTRUCTURA.PZA_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PXE_CANTIDAD {
                get {
                    return ((decimal)(this[this.tablePIEZASXESTRUCTURA.PXE_CANTIDADColumn]));
                }
                set {
                    this[this.tablePIEZASXESTRUCTURA.PXE_CANTIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GRP_CODIGO {
                get {
                    return ((decimal)(this[this.tablePIEZASXESTRUCTURA.GRP_CODIGOColumn]));
                }
                set {
                    this[this.tablePIEZASXESTRUCTURA.GRP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOS_ESTRUCTURARow GRUPOS_ESTRUCTURARow {
                get {
                    return ((GRUPOS_ESTRUCTURARow)(this.GetParentRow(this.Table.ParentRelations["piezasXEstructura_grupoEstructura_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["piezasXEstructura_grupoEstructura_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASRow PIEZASRow {
                get {
                    return ((PIEZASRow)(this.GetParentRow(this.Table.ParentRelations["PIEZAS_PIEZASXESTRUCTURA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PIEZAS_PIEZASXESTRUCTURA"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTRUCTURASRow ESTRUCTURASRow {
                get {
                    return ((ESTRUCTURASRow)(this.GetParentRow(this.Table.ParentRelations["ESTRUCTURAS_PIEZASXESTRUCTURA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ESTRUCTURAS_PIEZASXESTRUCTURA"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SUBCONJUNTOSXESTRUCTURARow : global::System.Data.DataRow {
            
            private SUBCONJUNTOSXESTRUCTURADataTable tableSUBCONJUNTOSXESTRUCTURA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SUBCONJUNTOSXESTRUCTURARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSUBCONJUNTOSXESTRUCTURA = ((SUBCONJUNTOSXESTRUCTURADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SCXE_CODIGO {
                get {
                    return ((decimal)(this[this.tableSUBCONJUNTOSXESTRUCTURA.SCXE_CODIGOColumn]));
                }
                set {
                    this[this.tableSUBCONJUNTOSXESTRUCTURA.SCXE_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ESTR_CODIGO {
                get {
                    return ((decimal)(this[this.tableSUBCONJUNTOSXESTRUCTURA.ESTR_CODIGOColumn]));
                }
                set {
                    this[this.tableSUBCONJUNTOSXESTRUCTURA.ESTR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SCONJ_CODIGO {
                get {
                    return ((decimal)(this[this.tableSUBCONJUNTOSXESTRUCTURA.SCONJ_CODIGOColumn]));
                }
                set {
                    this[this.tableSUBCONJUNTOSXESTRUCTURA.SCONJ_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SCXE_CANTIDAD {
                get {
                    return ((decimal)(this[this.tableSUBCONJUNTOSXESTRUCTURA.SCXE_CANTIDADColumn]));
                }
                set {
                    this[this.tableSUBCONJUNTOSXESTRUCTURA.SCXE_CANTIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GRP_CODIGO {
                get {
                    return ((decimal)(this[this.tableSUBCONJUNTOSXESTRUCTURA.GRP_CODIGOColumn]));
                }
                set {
                    this[this.tableSUBCONJUNTOSXESTRUCTURA.GRP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOS_ESTRUCTURARow GRUPOS_ESTRUCTURARow {
                get {
                    return ((GRUPOS_ESTRUCTURARow)(this.GetParentRow(this.Table.ParentRelations["subconjuntosXEstructura_grupoEstructura_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["subconjuntosXEstructura_grupoEstructura_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSRow SUBCONJUNTOSRow {
                get {
                    return ((SUBCONJUNTOSRow)(this.GetParentRow(this.Table.ParentRelations["SUBCONJUNTOS_SUBCONJUNTOSXESTRUCTURA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SUBCONJUNTOS_SUBCONJUNTOSXESTRUCTURA"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTRUCTURASRow ESTRUCTURASRow {
                get {
                    return ((ESTRUCTURASRow)(this.GetParentRow(this.Table.ParentRelations["ESTRUCTURAS_SUBCONJUNTOSXESTRUCTURA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ESTRUCTURAS_SUBCONJUNTOSXESTRUCTURA"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MATERIASPRIMASXESTRUCTURARow : global::System.Data.DataRow {
            
            private MATERIASPRIMASXESTRUCTURADataTable tableMATERIASPRIMASXESTRUCTURA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MATERIASPRIMASXESTRUCTURARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMATERIASPRIMASXESTRUCTURA = ((MATERIASPRIMASXESTRUCTURADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MPXE_CODIGO {
                get {
                    return ((decimal)(this[this.tableMATERIASPRIMASXESTRUCTURA.MPXE_CODIGOColumn]));
                }
                set {
                    this[this.tableMATERIASPRIMASXESTRUCTURA.MPXE_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MP_CODIGO {
                get {
                    return ((decimal)(this[this.tableMATERIASPRIMASXESTRUCTURA.MP_CODIGOColumn]));
                }
                set {
                    this[this.tableMATERIASPRIMASXESTRUCTURA.MP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ESTR_CODIGO {
                get {
                    return ((decimal)(this[this.tableMATERIASPRIMASXESTRUCTURA.ESTR_CODIGOColumn]));
                }
                set {
                    this[this.tableMATERIASPRIMASXESTRUCTURA.ESTR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MPXE_CANTIDAD {
                get {
                    return ((decimal)(this[this.tableMATERIASPRIMASXESTRUCTURA.MPXE_CANTIDADColumn]));
                }
                set {
                    this[this.tableMATERIASPRIMASXESTRUCTURA.MPXE_CANTIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GRP_CODIGO {
                get {
                    return ((decimal)(this[this.tableMATERIASPRIMASXESTRUCTURA.GRP_CODIGOColumn]));
                }
                set {
                    this[this.tableMATERIASPRIMASXESTRUCTURA.GRP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOS_ESTRUCTURARow GRUPOS_ESTRUCTURARow {
                get {
                    return ((GRUPOS_ESTRUCTURARow)(this.GetParentRow(this.Table.ParentRelations["materiaPrimaXEstructura_grupoEstructura_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["materiaPrimaXEstructura_grupoEstructura_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow MATERIAS_PRIMASRow {
                get {
                    return ((MATERIAS_PRIMASRow)(this.GetParentRow(this.Table.ParentRelations["materiaPrimaXEstructura_materiaPrima_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["materiaPrimaXEstructura_materiaPrima_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTRUCTURASRow ESTRUCTURASRow {
                get {
                    return ((ESTRUCTURASRow)(this.GetParentRow(this.Table.ParentRelations["ESTRUCTURAS_MATERIASPRIMASXESTRUCTURA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ESTRUCTURAS_MATERIASPRIMASXESTRUCTURA"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CONJUNTOSXESTRUCTURARow : global::System.Data.DataRow {
            
            private CONJUNTOSXESTRUCTURADataTable tableCONJUNTOSXESTRUCTURA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CONJUNTOSXESTRUCTURARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCONJUNTOSXESTRUCTURA = ((CONJUNTOSXESTRUCTURADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CXE_CODIGO {
                get {
                    return ((decimal)(this[this.tableCONJUNTOSXESTRUCTURA.CXE_CODIGOColumn]));
                }
                set {
                    this[this.tableCONJUNTOSXESTRUCTURA.CXE_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ESTR_CODIGO {
                get {
                    return ((decimal)(this[this.tableCONJUNTOSXESTRUCTURA.ESTR_CODIGOColumn]));
                }
                set {
                    this[this.tableCONJUNTOSXESTRUCTURA.ESTR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CONJ_CODIGO {
                get {
                    return ((decimal)(this[this.tableCONJUNTOSXESTRUCTURA.CONJ_CODIGOColumn]));
                }
                set {
                    this[this.tableCONJUNTOSXESTRUCTURA.CONJ_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CXE_CANTIDAD {
                get {
                    return ((decimal)(this[this.tableCONJUNTOSXESTRUCTURA.CXE_CANTIDADColumn]));
                }
                set {
                    this[this.tableCONJUNTOSXESTRUCTURA.CXE_CANTIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GRP_CODIGO {
                get {
                    return ((decimal)(this[this.tableCONJUNTOSXESTRUCTURA.GRP_CODIGOColumn]));
                }
                set {
                    this[this.tableCONJUNTOSXESTRUCTURA.GRP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOS_ESTRUCTURARow GRUPOS_ESTRUCTURARow {
                get {
                    return ((GRUPOS_ESTRUCTURARow)(this.GetParentRow(this.Table.ParentRelations["conjuntoXEstructura_grupo_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["conjuntoXEstructura_grupo_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSRow CONJUNTOSRow {
                get {
                    return ((CONJUNTOSRow)(this.GetParentRow(this.Table.ParentRelations["CONJUNTOS_CONJUNTOSXESTRUCTURA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CONJUNTOS_CONJUNTOSXESTRUCTURA"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GRUPOS_ESTRUCTURARow : global::System.Data.DataRow {
            
            private GRUPOS_ESTRUCTURADataTable tableGRUPOS_ESTRUCTURA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GRUPOS_ESTRUCTURARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGRUPOS_ESTRUCTURA = ((GRUPOS_ESTRUCTURADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GRP_CODIGO {
                get {
                    return ((decimal)(this[this.tableGRUPOS_ESTRUCTURA.GRP_CODIGOColumn]));
                }
                set {
                    this[this.tableGRUPOS_ESTRUCTURA.GRP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GRP_NUMERO {
                get {
                    return ((decimal)(this[this.tableGRUPOS_ESTRUCTURA.GRP_NUMEROColumn]));
                }
                set {
                    this[this.tableGRUPOS_ESTRUCTURA.GRP_NUMEROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ESTR_CODIGO {
                get {
                    return ((decimal)(this[this.tableGRUPOS_ESTRUCTURA.ESTR_CODIGOColumn]));
                }
                set {
                    this[this.tableGRUPOS_ESTRUCTURA.ESTR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GRP_PADRE_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableGRUPOS_ESTRUCTURA.GRP_PADRE_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GRP_PADRE_CODIGO\' in table \'GRUPOS_ESTRUCTURA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGRUPOS_ESTRUCTURA.GRP_PADRE_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GRP_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableGRUPOS_ESTRUCTURA.GRP_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GRP_NOMBRE\' in table \'GRUPOS_ESTRUCTURA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGRUPOS_ESTRUCTURA.GRP_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GRP_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableGRUPOS_ESTRUCTURA.GRP_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GRP_DESCRIPCION\' in table \'GRUPOS_ESTRUCTURA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGRUPOS_ESTRUCTURA.GRP_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GRP_CONCRETO {
                get {
                    return ((decimal)(this[this.tableGRUPOS_ESTRUCTURA.GRP_CONCRETOColumn]));
                }
                set {
                    this[this.tableGRUPOS_ESTRUCTURA.GRP_CONCRETOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTRUCTURASRow ESTRUCTURASRow {
                get {
                    return ((ESTRUCTURASRow)(this.GetParentRow(this.Table.ParentRelations["ESTRUCTURAS_GRUPOS_ESTRUCTURA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ESTRUCTURAS_GRUPOS_ESTRUCTURA"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGRP_PADRE_CODIGONull() {
                return this.IsNull(this.tableGRUPOS_ESTRUCTURA.GRP_PADRE_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGRP_PADRE_CODIGONull() {
                this[this.tableGRUPOS_ESTRUCTURA.GRP_PADRE_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGRP_NOMBRENull() {
                return this.IsNull(this.tableGRUPOS_ESTRUCTURA.GRP_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGRP_NOMBRENull() {
                this[this.tableGRUPOS_ESTRUCTURA.GRP_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGRP_DESCRIPCIONNull() {
                return this.IsNull(this.tableGRUPOS_ESTRUCTURA.GRP_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGRP_DESCRIPCIONNull() {
                this[this.tableGRUPOS_ESTRUCTURA.GRP_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXESTRUCTURARow[] GetPIEZASXESTRUCTURARows() {
                if ((this.Table.ChildRelations["piezasXEstructura_grupoEstructura_fk"] == null)) {
                    return new PIEZASXESTRUCTURARow[0];
                }
                else {
                    return ((PIEZASXESTRUCTURARow[])(base.GetChildRows(this.Table.ChildRelations["piezasXEstructura_grupoEstructura_fk"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXESTRUCTURARow[] GetSUBCONJUNTOSXESTRUCTURARows() {
                if ((this.Table.ChildRelations["subconjuntosXEstructura_grupoEstructura_fk"] == null)) {
                    return new SUBCONJUNTOSXESTRUCTURARow[0];
                }
                else {
                    return ((SUBCONJUNTOSXESTRUCTURARow[])(base.GetChildRows(this.Table.ChildRelations["subconjuntosXEstructura_grupoEstructura_fk"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXESTRUCTURARow[] GetMATERIASPRIMASXESTRUCTURARows() {
                if ((this.Table.ChildRelations["materiaPrimaXEstructura_grupoEstructura_fk"] == null)) {
                    return new MATERIASPRIMASXESTRUCTURARow[0];
                }
                else {
                    return ((MATERIASPRIMASXESTRUCTURARow[])(base.GetChildRows(this.Table.ChildRelations["materiaPrimaXEstructura_grupoEstructura_fk"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSXESTRUCTURARow[] GetCONJUNTOSXESTRUCTURARows() {
                if ((this.Table.ChildRelations["conjuntoXEstructura_grupo_fk"] == null)) {
                    return new CONJUNTOSXESTRUCTURARow[0];
                }
                else {
                    return ((CONJUNTOSXESTRUCTURARow[])(base.GetChildRows(this.Table.ChildRelations["conjuntoXEstructura_grupo_fk"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MATERIAS_PRIMASRow : global::System.Data.DataRow {
            
            private MATERIAS_PRIMASDataTable tableMATERIAS_PRIMAS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MATERIAS_PRIMASRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMATERIAS_PRIMAS = ((MATERIAS_PRIMASDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MP_CODIGO {
                get {
                    return ((decimal)(this[this.tableMATERIAS_PRIMAS.MP_CODIGOColumn]));
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.MP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UMED_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableMATERIAS_PRIMAS.UMED_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UMED_CODIGO\' in table \'MATERIAS_PRIMAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.UMED_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MP_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableMATERIAS_PRIMAS.MP_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MP_NOMBRE\' in table \'MATERIAS_PRIMAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.MP_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MP_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableMATERIAS_PRIMAS.MP_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MP_DESCRIPCION\' in table \'MATERIAS_PRIMAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.MP_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MP_CANTIDADSTOCK {
                get {
                    try {
                        return ((int)(this[this.tableMATERIAS_PRIMAS.MP_CANTIDADSTOCKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MP_CANTIDADSTOCK\' in table \'MATERIAS_PRIMAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.MP_CANTIDADSTOCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MP_COSTO {
                get {
                    try {
                        return ((decimal)(this[this.tableMATERIAS_PRIMAS.MP_COSTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MP_COSTO\' in table \'MATERIAS_PRIMAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.MP_COSTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUMED_CODIGONull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS.UMED_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUMED_CODIGONull() {
                this[this.tableMATERIAS_PRIMAS.UMED_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMP_NOMBRENull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS.MP_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMP_NOMBRENull() {
                this[this.tableMATERIAS_PRIMAS.MP_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMP_DESCRIPCIONNull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS.MP_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMP_DESCRIPCIONNull() {
                this[this.tableMATERIAS_PRIMAS.MP_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMP_CANTIDADSTOCKNull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS.MP_CANTIDADSTOCKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMP_CANTIDADSTOCKNull() {
                this[this.tableMATERIAS_PRIMAS.MP_CANTIDADSTOCKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMP_COSTONull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS.MP_COSTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMP_COSTONull() {
                this[this.tableMATERIAS_PRIMAS.MP_COSTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXESTRUCTURARow[] GetMATERIASPRIMASXESTRUCTURARows() {
                if ((this.Table.ChildRelations["materiaPrimaXEstructura_materiaPrima_fk"] == null)) {
                    return new MATERIASPRIMASXESTRUCTURARow[0];
                }
                else {
                    return ((MATERIASPRIMASXESTRUCTURARow[])(base.GetChildRows(this.Table.ChildRelations["materiaPrimaXEstructura_materiaPrima_fk"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXPIEZARow[] GetMATERIASPRIMASXPIEZARows() {
                if ((this.Table.ChildRelations["MATERIAS_PRIMAS_MATERIASPRIMASXPIEZA"] == null)) {
                    return new MATERIASPRIMASXPIEZARow[0];
                }
                else {
                    return ((MATERIASPRIMASXPIEZARow[])(base.GetChildRows(this.Table.ChildRelations["MATERIAS_PRIMAS_MATERIASPRIMASXPIEZA"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PLANOSRow : global::System.Data.DataRow {
            
            private PLANOSDataTable tablePLANOS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PLANOSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePLANOS = ((PLANOSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PNO_CODIGO {
                get {
                    return ((decimal)(this[this.tablePLANOS.PNO_CODIGOColumn]));
                }
                set {
                    this[this.tablePLANOS.PNO_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PNO_FECHACREACION {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePLANOS.PNO_FECHACREACIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PNO_FECHACREACION\' in table \'PLANOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLANOS.PNO_FECHACREACIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PNO_OBSERVACIONES {
                get {
                    try {
                        return ((string)(this[this.tablePLANOS.PNO_OBSERVACIONESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PNO_OBSERVACIONES\' in table \'PLANOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLANOS.PNO_OBSERVACIONESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PNO_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tablePLANOS.PNO_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PNO_NOMBRE\' in table \'PLANOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLANOS.PNO_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PNO_NUMERO {
                get {
                    return ((string)(this[this.tablePLANOS.PNO_NUMEROColumn]));
                }
                set {
                    this[this.tablePLANOS.PNO_NUMEROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PNO_HABILITADO {
                get {
                    return ((decimal)(this[this.tablePLANOS.PNO_HABILITADOColumn]));
                }
                set {
                    this[this.tablePLANOS.PNO_HABILITADOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PNO_FECHAHABILITADO {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePLANOS.PNO_FECHAHABILITADOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PNO_FECHAHABILITADO\' in table \'PLANOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLANOS.PNO_FECHAHABILITADOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PNO_FECHADESHABILITADO {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePLANOS.PNO_FECHADESHABILITADOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PNO_FECHADESHABILITADO\' in table \'PLANOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLANOS.PNO_FECHADESHABILITADOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PNO_FECHAMODIFICACION {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePLANOS.PNO_FECHAMODIFICACIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PNO_FECHAMODIFICACION\' in table \'PLANOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLANOS.PNO_FECHAMODIFICACIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PNO_LETRACAMBIO {
                get {
                    try {
                        return ((string)(this[this.tablePLANOS.PNO_LETRACAMBIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PNO_LETRACAMBIO\' in table \'PLANOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLANOS.PNO_LETRACAMBIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPNO_FECHACREACIONNull() {
                return this.IsNull(this.tablePLANOS.PNO_FECHACREACIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPNO_FECHACREACIONNull() {
                this[this.tablePLANOS.PNO_FECHACREACIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPNO_OBSERVACIONESNull() {
                return this.IsNull(this.tablePLANOS.PNO_OBSERVACIONESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPNO_OBSERVACIONESNull() {
                this[this.tablePLANOS.PNO_OBSERVACIONESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPNO_NOMBRENull() {
                return this.IsNull(this.tablePLANOS.PNO_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPNO_NOMBRENull() {
                this[this.tablePLANOS.PNO_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPNO_FECHAHABILITADONull() {
                return this.IsNull(this.tablePLANOS.PNO_FECHAHABILITADOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPNO_FECHAHABILITADONull() {
                this[this.tablePLANOS.PNO_FECHAHABILITADOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPNO_FECHADESHABILITADONull() {
                return this.IsNull(this.tablePLANOS.PNO_FECHADESHABILITADOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPNO_FECHADESHABILITADONull() {
                this[this.tablePLANOS.PNO_FECHADESHABILITADOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPNO_FECHAMODIFICACIONNull() {
                return this.IsNull(this.tablePLANOS.PNO_FECHAMODIFICACIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPNO_FECHAMODIFICACIONNull() {
                this[this.tablePLANOS.PNO_FECHAMODIFICACIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPNO_LETRACAMBIONull() {
                return this.IsNull(this.tablePLANOS.PNO_LETRACAMBIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPNO_LETRACAMBIONull() {
                this[this.tablePLANOS.PNO_LETRACAMBIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTRUCTURASRow[] GetESTRUCTURASRows() {
                if ((this.Table.ChildRelations["PLANOS_ESTRUCTURAS"] == null)) {
                    return new ESTRUCTURASRow[0];
                }
                else {
                    return ((ESTRUCTURASRow[])(base.GetChildRows(this.Table.ChildRelations["PLANOS_ESTRUCTURAS"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSRow[] GetCONJUNTOSRows() {
                if ((this.Table.ChildRelations["PLANOS_CONJUNTOS"] == null)) {
                    return new CONJUNTOSRow[0];
                }
                else {
                    return ((CONJUNTOSRow[])(base.GetChildRows(this.Table.ChildRelations["PLANOS_CONJUNTOS"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSRow[] GetSUBCONJUNTOSRows() {
                if ((this.Table.ChildRelations["PLANOS_SUBCONJUNTOS"] == null)) {
                    return new SUBCONJUNTOSRow[0];
                }
                else {
                    return ((SUBCONJUNTOSRow[])(base.GetChildRows(this.Table.ChildRelations["PLANOS_SUBCONJUNTOS"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASRow[] GetPIEZASRows() {
                if ((this.Table.ChildRelations["PLANOS_PIEZAS"] == null)) {
                    return new PIEZASRow[0];
                }
                else {
                    return ((PIEZASRow[])(base.GetChildRows(this.Table.ChildRelations["PLANOS_PIEZAS"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ESTADO_PARTESRow : global::System.Data.DataRow {
            
            private ESTADO_PARTESDataTable tableESTADO_PARTES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ESTADO_PARTESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableESTADO_PARTES = ((ESTADO_PARTESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PAR_CODIGO {
                get {
                    return ((decimal)(this[this.tableESTADO_PARTES.PAR_CODIGOColumn]));
                }
                set {
                    this[this.tableESTADO_PARTES.PAR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAR_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableESTADO_PARTES.PAR_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAR_NOMBRE\' in table \'ESTADO_PARTES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableESTADO_PARTES.PAR_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAR_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableESTADO_PARTES.PAR_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAR_DESCRIPCION\' in table \'ESTADO_PARTES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableESTADO_PARTES.PAR_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAR_NOMBRENull() {
                return this.IsNull(this.tableESTADO_PARTES.PAR_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAR_NOMBRENull() {
                this[this.tableESTADO_PARTES.PAR_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAR_DESCRIPCIONNull() {
                return this.IsNull(this.tableESTADO_PARTES.PAR_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAR_DESCRIPCIONNull() {
                this[this.tableESTADO_PARTES.PAR_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASRow[] GetPIEZASRows() {
                if ((this.Table.ChildRelations["ESTADO_PARTES_PIEZAS"] == null)) {
                    return new PIEZASRow[0];
                }
                else {
                    return ((PIEZASRow[])(base.GetChildRows(this.Table.ChildRelations["ESTADO_PARTES_PIEZAS"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSRow[] GetSUBCONJUNTOSRows() {
                if ((this.Table.ChildRelations["ESTADO_PARTES_SUBCONJUNTOS"] == null)) {
                    return new SUBCONJUNTOSRow[0];
                }
                else {
                    return ((SUBCONJUNTOSRow[])(base.GetChildRows(this.Table.ChildRelations["ESTADO_PARTES_SUBCONJUNTOS"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSRow[] GetCONJUNTOSRows() {
                if ((this.Table.ChildRelations["ESTADO_PARTES_CONJUNTOS"] == null)) {
                    return new CONJUNTOSRow[0];
                }
                else {
                    return ((CONJUNTOSRow[])(base.GetChildRows(this.Table.ChildRelations["ESTADO_PARTES_CONJUNTOS"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TERMINACIONESRow : global::System.Data.DataRow {
            
            private TERMINACIONESDataTable tableTERMINACIONES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TERMINACIONESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTERMINACIONES = ((TERMINACIONESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TE_CODIGO {
                get {
                    return ((decimal)(this[this.tableTERMINACIONES.TE_CODIGOColumn]));
                }
                set {
                    this[this.tableTERMINACIONES.TE_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TE_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableTERMINACIONES.TE_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TE_NOMBRE\' in table \'TERMINACIONES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTERMINACIONES.TE_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TE_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableTERMINACIONES.TE_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TE_DESCRIPCION\' in table \'TERMINACIONES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTERMINACIONES.TE_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TE_ABREVIATURA {
                get {
                    return ((string)(this[this.tableTERMINACIONES.TE_ABREVIATURAColumn]));
                }
                set {
                    this[this.tableTERMINACIONES.TE_ABREVIATURAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTE_NOMBRENull() {
                return this.IsNull(this.tableTERMINACIONES.TE_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTE_NOMBRENull() {
                this[this.tableTERMINACIONES.TE_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTE_DESCRIPCIONNull() {
                return this.IsNull(this.tableTERMINACIONES.TE_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTE_DESCRIPCIONNull() {
                this[this.tableTERMINACIONES.TE_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASRow[] GetPIEZASRows() {
                if ((this.Table.ChildRelations["TERMINACIONES_PIEZAS"] == null)) {
                    return new PIEZASRow[0];
                }
                else {
                    return ((PIEZASRow[])(base.GetChildRows(this.Table.ChildRelations["TERMINACIONES_PIEZAS"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PIEZASXCONJUNTORow : global::System.Data.DataRow {
            
            private PIEZASXCONJUNTODataTable tablePIEZASXCONJUNTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PIEZASXCONJUNTORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePIEZASXCONJUNTO = ((PIEZASXCONJUNTODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PXCJ_CODIGO {
                get {
                    return ((decimal)(this[this.tablePIEZASXCONJUNTO.PXCJ_CODIGOColumn]));
                }
                set {
                    this[this.tablePIEZASXCONJUNTO.PXCJ_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CONJ_CODIGO {
                get {
                    return ((decimal)(this[this.tablePIEZASXCONJUNTO.CONJ_CODIGOColumn]));
                }
                set {
                    this[this.tablePIEZASXCONJUNTO.CONJ_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PZA_CODIGO {
                get {
                    return ((decimal)(this[this.tablePIEZASXCONJUNTO.PZA_CODIGOColumn]));
                }
                set {
                    this[this.tablePIEZASXCONJUNTO.PZA_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PXCJ_CANTIDAD {
                get {
                    return ((decimal)(this[this.tablePIEZASXCONJUNTO.PXCJ_CANTIDADColumn]));
                }
                set {
                    this[this.tablePIEZASXCONJUNTO.PXCJ_CANTIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSRow CONJUNTOSRow {
                get {
                    return ((CONJUNTOSRow)(this.GetParentRow(this.Table.ParentRelations["CONJUNTOS_PIEZASXCONJUNTO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CONJUNTOS_PIEZASXCONJUNTO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASRow PIEZASRow {
                get {
                    return ((PIEZASRow)(this.GetParentRow(this.Table.ParentRelations["PIEZAS_PIEZASXCONJUNTO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PIEZAS_PIEZASXCONJUNTO"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PIEZASXSUBCONJUNTORow : global::System.Data.DataRow {
            
            private PIEZASXSUBCONJUNTODataTable tablePIEZASXSUBCONJUNTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PIEZASXSUBCONJUNTORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePIEZASXSUBCONJUNTO = ((PIEZASXSUBCONJUNTODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PXSC_CODIGO {
                get {
                    return ((decimal)(this[this.tablePIEZASXSUBCONJUNTO.PXSC_CODIGOColumn]));
                }
                set {
                    this[this.tablePIEZASXSUBCONJUNTO.PXSC_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PZA_CODIGO {
                get {
                    return ((decimal)(this[this.tablePIEZASXSUBCONJUNTO.PZA_CODIGOColumn]));
                }
                set {
                    this[this.tablePIEZASXSUBCONJUNTO.PZA_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SCONJ_CODIGO {
                get {
                    return ((decimal)(this[this.tablePIEZASXSUBCONJUNTO.SCONJ_CODIGOColumn]));
                }
                set {
                    this[this.tablePIEZASXSUBCONJUNTO.SCONJ_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PXSC_CANTIDAD {
                get {
                    return ((decimal)(this[this.tablePIEZASXSUBCONJUNTO.PXSC_CANTIDADColumn]));
                }
                set {
                    this[this.tablePIEZASXSUBCONJUNTO.PXSC_CANTIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSRow SUBCONJUNTOSRow {
                get {
                    return ((SUBCONJUNTOSRow)(this.GetParentRow(this.Table.ParentRelations["detalleSubconjunto_subconjunto_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["detalleSubconjunto_subconjunto_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASRow PIEZASRow {
                get {
                    return ((PIEZASRow)(this.GetParentRow(this.Table.ParentRelations["detalleSubconjunto_pieza_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["detalleSubconjunto_pieza_fk"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SUBCONJUNTOSXCONJUNTORow : global::System.Data.DataRow {
            
            private SUBCONJUNTOSXCONJUNTODataTable tableSUBCONJUNTOSXCONJUNTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SUBCONJUNTOSXCONJUNTORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSUBCONJUNTOSXCONJUNTO = ((SUBCONJUNTOSXCONJUNTODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SCXCJ_CODIGO {
                get {
                    return ((decimal)(this[this.tableSUBCONJUNTOSXCONJUNTO.SCXCJ_CODIGOColumn]));
                }
                set {
                    this[this.tableSUBCONJUNTOSXCONJUNTO.SCXCJ_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CONJ_CODIGO {
                get {
                    return ((decimal)(this[this.tableSUBCONJUNTOSXCONJUNTO.CONJ_CODIGOColumn]));
                }
                set {
                    this[this.tableSUBCONJUNTOSXCONJUNTO.CONJ_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SCONJ_CODIGO {
                get {
                    return ((decimal)(this[this.tableSUBCONJUNTOSXCONJUNTO.SCONJ_CODIGOColumn]));
                }
                set {
                    this[this.tableSUBCONJUNTOSXCONJUNTO.SCONJ_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SCXCJ_CANTIDAD {
                get {
                    return ((decimal)(this[this.tableSUBCONJUNTOSXCONJUNTO.SCXCJ_CANTIDADColumn]));
                }
                set {
                    this[this.tableSUBCONJUNTOSXCONJUNTO.SCXCJ_CANTIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSRow CONJUNTOSRow {
                get {
                    return ((CONJUNTOSRow)(this.GetParentRow(this.Table.ParentRelations["detalleconjunto_subconjunto_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["detalleconjunto_subconjunto_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSRow SUBCONJUNTOSRow {
                get {
                    return ((SUBCONJUNTOSRow)(this.GetParentRow(this.Table.ParentRelations["detalleconjunto_conjunto_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["detalleconjunto_conjunto_fk"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CONJUNTOSRow : global::System.Data.DataRow {
            
            private CONJUNTOSDataTable tableCONJUNTOS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CONJUNTOSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCONJUNTOS = ((CONJUNTOSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CONJ_CODIGO {
                get {
                    return ((decimal)(this[this.tableCONJUNTOS.CONJ_CODIGOColumn]));
                }
                set {
                    this[this.tableCONJUNTOS.CONJ_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONJ_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableCONJUNTOS.CONJ_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONJ_NOMBRE\' in table \'CONJUNTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCONJUNTOS.CONJ_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CONJ_CANTIDADSTOCK {
                get {
                    try {
                        return ((int)(this[this.tableCONJUNTOS.CONJ_CANTIDADSTOCKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONJ_CANTIDADSTOCK\' in table \'CONJUNTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCONJUNTOS.CONJ_CANTIDADSTOCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONJ_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableCONJUNTOS.CONJ_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONJ_DESCRIPCION\' in table \'CONJUNTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCONJUNTOS.CONJ_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PAR_CODIGO {
                get {
                    return ((decimal)(this[this.tableCONJUNTOS.PAR_CODIGOColumn]));
                }
                set {
                    this[this.tableCONJUNTOS.PAR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PNO_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableCONJUNTOS.PNO_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PNO_CODIGO\' in table \'CONJUNTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCONJUNTOS.PNO_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONJ_CODIGOPARTE {
                get {
                    try {
                        return ((string)(this[this.tableCONJUNTOS.CONJ_CODIGOPARTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONJ_CODIGOPARTE\' in table \'CONJUNTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCONJUNTOS.CONJ_CODIGOPARTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CONJ_COSTO {
                get {
                    try {
                        return ((decimal)(this[this.tableCONJUNTOS.CONJ_COSTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONJ_COSTO\' in table \'CONJUNTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCONJUNTOS.CONJ_COSTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HR_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableCONJUNTOS.HR_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HR_CODIGO\' in table \'CONJUNTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCONJUNTOS.HR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_PARTESRow ESTADO_PARTESRow {
                get {
                    return ((ESTADO_PARTESRow)(this.GetParentRow(this.Table.ParentRelations["ESTADO_PARTES_CONJUNTOS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ESTADO_PARTES_CONJUNTOS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANOSRow PLANOSRow {
                get {
                    return ((PLANOSRow)(this.GetParentRow(this.Table.ParentRelations["PLANOS_CONJUNTOS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PLANOS_CONJUNTOS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONJ_NOMBRENull() {
                return this.IsNull(this.tableCONJUNTOS.CONJ_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONJ_NOMBRENull() {
                this[this.tableCONJUNTOS.CONJ_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONJ_CANTIDADSTOCKNull() {
                return this.IsNull(this.tableCONJUNTOS.CONJ_CANTIDADSTOCKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONJ_CANTIDADSTOCKNull() {
                this[this.tableCONJUNTOS.CONJ_CANTIDADSTOCKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONJ_DESCRIPCIONNull() {
                return this.IsNull(this.tableCONJUNTOS.CONJ_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONJ_DESCRIPCIONNull() {
                this[this.tableCONJUNTOS.CONJ_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPNO_CODIGONull() {
                return this.IsNull(this.tableCONJUNTOS.PNO_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPNO_CODIGONull() {
                this[this.tableCONJUNTOS.PNO_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONJ_CODIGOPARTENull() {
                return this.IsNull(this.tableCONJUNTOS.CONJ_CODIGOPARTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONJ_CODIGOPARTENull() {
                this[this.tableCONJUNTOS.CONJ_CODIGOPARTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONJ_COSTONull() {
                return this.IsNull(this.tableCONJUNTOS.CONJ_COSTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONJ_COSTONull() {
                this[this.tableCONJUNTOS.CONJ_COSTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHR_CODIGONull() {
                return this.IsNull(this.tableCONJUNTOS.HR_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHR_CODIGONull() {
                this[this.tableCONJUNTOS.HR_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXCONJUNTORow[] GetSUBCONJUNTOSXCONJUNTORows() {
                if ((this.Table.ChildRelations["detalleconjunto_subconjunto_fk"] == null)) {
                    return new SUBCONJUNTOSXCONJUNTORow[0];
                }
                else {
                    return ((SUBCONJUNTOSXCONJUNTORow[])(base.GetChildRows(this.Table.ChildRelations["detalleconjunto_subconjunto_fk"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXCONJUNTORow[] GetPIEZASXCONJUNTORows() {
                if ((this.Table.ChildRelations["CONJUNTOS_PIEZASXCONJUNTO"] == null)) {
                    return new PIEZASXCONJUNTORow[0];
                }
                else {
                    return ((PIEZASXCONJUNTORow[])(base.GetChildRows(this.Table.ChildRelations["CONJUNTOS_PIEZASXCONJUNTO"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSXESTRUCTURARow[] GetCONJUNTOSXESTRUCTURARows() {
                if ((this.Table.ChildRelations["CONJUNTOS_CONJUNTOSXESTRUCTURA"] == null)) {
                    return new CONJUNTOSXESTRUCTURARow[0];
                }
                else {
                    return ((CONJUNTOSXESTRUCTURARow[])(base.GetChildRows(this.Table.ChildRelations["CONJUNTOS_CONJUNTOSXESTRUCTURA"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SUBCONJUNTOSRow : global::System.Data.DataRow {
            
            private SUBCONJUNTOSDataTable tableSUBCONJUNTOS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SUBCONJUNTOSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSUBCONJUNTOS = ((SUBCONJUNTOSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SCONJ_CODIGO {
                get {
                    return ((decimal)(this[this.tableSUBCONJUNTOS.SCONJ_CODIGOColumn]));
                }
                set {
                    this[this.tableSUBCONJUNTOS.SCONJ_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SCONJ_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableSUBCONJUNTOS.SCONJ_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCONJ_NOMBRE\' in table \'SUBCONJUNTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSUBCONJUNTOS.SCONJ_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SCONJ_CANTIDADSTOCK {
                get {
                    try {
                        return ((int)(this[this.tableSUBCONJUNTOS.SCONJ_CANTIDADSTOCKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCONJ_CANTIDADSTOCK\' in table \'SUBCONJUNTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSUBCONJUNTOS.SCONJ_CANTIDADSTOCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SCONJ_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableSUBCONJUNTOS.SCONJ_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCONJ_DESCRIPCION\' in table \'SUBCONJUNTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSUBCONJUNTOS.SCONJ_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PAR_CODIGO {
                get {
                    return ((decimal)(this[this.tableSUBCONJUNTOS.PAR_CODIGOColumn]));
                }
                set {
                    this[this.tableSUBCONJUNTOS.PAR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PNO_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableSUBCONJUNTOS.PNO_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PNO_CODIGO\' in table \'SUBCONJUNTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSUBCONJUNTOS.PNO_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SCONJ_CODIGOPARTE {
                get {
                    try {
                        return ((string)(this[this.tableSUBCONJUNTOS.SCONJ_CODIGOPARTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCONJ_CODIGOPARTE\' in table \'SUBCONJUNTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSUBCONJUNTOS.SCONJ_CODIGOPARTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SCONJ_COSTO {
                get {
                    try {
                        return ((decimal)(this[this.tableSUBCONJUNTOS.SCONJ_COSTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCONJ_COSTO\' in table \'SUBCONJUNTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSUBCONJUNTOS.SCONJ_COSTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HR_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableSUBCONJUNTOS.HR_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HR_CODIGO\' in table \'SUBCONJUNTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSUBCONJUNTOS.HR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_PARTESRow ESTADO_PARTESRow {
                get {
                    return ((ESTADO_PARTESRow)(this.GetParentRow(this.Table.ParentRelations["ESTADO_PARTES_SUBCONJUNTOS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ESTADO_PARTES_SUBCONJUNTOS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANOSRow PLANOSRow {
                get {
                    return ((PLANOSRow)(this.GetParentRow(this.Table.ParentRelations["PLANOS_SUBCONJUNTOS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PLANOS_SUBCONJUNTOS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSCONJ_NOMBRENull() {
                return this.IsNull(this.tableSUBCONJUNTOS.SCONJ_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSCONJ_NOMBRENull() {
                this[this.tableSUBCONJUNTOS.SCONJ_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSCONJ_CANTIDADSTOCKNull() {
                return this.IsNull(this.tableSUBCONJUNTOS.SCONJ_CANTIDADSTOCKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSCONJ_CANTIDADSTOCKNull() {
                this[this.tableSUBCONJUNTOS.SCONJ_CANTIDADSTOCKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSCONJ_DESCRIPCIONNull() {
                return this.IsNull(this.tableSUBCONJUNTOS.SCONJ_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSCONJ_DESCRIPCIONNull() {
                this[this.tableSUBCONJUNTOS.SCONJ_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPNO_CODIGONull() {
                return this.IsNull(this.tableSUBCONJUNTOS.PNO_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPNO_CODIGONull() {
                this[this.tableSUBCONJUNTOS.PNO_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSCONJ_CODIGOPARTENull() {
                return this.IsNull(this.tableSUBCONJUNTOS.SCONJ_CODIGOPARTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSCONJ_CODIGOPARTENull() {
                this[this.tableSUBCONJUNTOS.SCONJ_CODIGOPARTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSCONJ_COSTONull() {
                return this.IsNull(this.tableSUBCONJUNTOS.SCONJ_COSTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSCONJ_COSTONull() {
                this[this.tableSUBCONJUNTOS.SCONJ_COSTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHR_CODIGONull() {
                return this.IsNull(this.tableSUBCONJUNTOS.HR_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHR_CODIGONull() {
                this[this.tableSUBCONJUNTOS.HR_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXSUBCONJUNTORow[] GetPIEZASXSUBCONJUNTORows() {
                if ((this.Table.ChildRelations["detalleSubconjunto_subconjunto_fk"] == null)) {
                    return new PIEZASXSUBCONJUNTORow[0];
                }
                else {
                    return ((PIEZASXSUBCONJUNTORow[])(base.GetChildRows(this.Table.ChildRelations["detalleSubconjunto_subconjunto_fk"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXCONJUNTORow[] GetSUBCONJUNTOSXCONJUNTORows() {
                if ((this.Table.ChildRelations["detalleconjunto_conjunto_fk"] == null)) {
                    return new SUBCONJUNTOSXCONJUNTORow[0];
                }
                else {
                    return ((SUBCONJUNTOSXCONJUNTORow[])(base.GetChildRows(this.Table.ChildRelations["detalleconjunto_conjunto_fk"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXESTRUCTURARow[] GetSUBCONJUNTOSXESTRUCTURARows() {
                if ((this.Table.ChildRelations["SUBCONJUNTOS_SUBCONJUNTOSXESTRUCTURA"] == null)) {
                    return new SUBCONJUNTOSXESTRUCTURARow[0];
                }
                else {
                    return ((SUBCONJUNTOSXESTRUCTURARow[])(base.GetChildRows(this.Table.ChildRelations["SUBCONJUNTOS_SUBCONJUNTOSXESTRUCTURA"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PIEZASRow : global::System.Data.DataRow {
            
            private PIEZASDataTable tablePIEZAS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PIEZASRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePIEZAS = ((PIEZASDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PZA_CODIGO {
                get {
                    return ((decimal)(this[this.tablePIEZAS.PZA_CODIGOColumn]));
                }
                set {
                    this[this.tablePIEZAS.PZA_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TE_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tablePIEZAS.TE_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TE_CODIGO\' in table \'PIEZAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIEZAS.TE_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PZA_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tablePIEZAS.PZA_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PZA_NOMBRE\' in table \'PIEZAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIEZAS.PZA_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PZA_CANTIDADSTOCK {
                get {
                    try {
                        return ((int)(this[this.tablePIEZAS.PZA_CANTIDADSTOCKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PZA_CANTIDADSTOCK\' in table \'PIEZAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIEZAS.PZA_CANTIDADSTOCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PZA_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tablePIEZAS.PZA_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PZA_DESCRIPCION\' in table \'PIEZAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIEZAS.PZA_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PAR_CODIGO {
                get {
                    return ((decimal)(this[this.tablePIEZAS.PAR_CODIGOColumn]));
                }
                set {
                    this[this.tablePIEZAS.PAR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PNO_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tablePIEZAS.PNO_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PNO_CODIGO\' in table \'PIEZAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIEZAS.PNO_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PZA_CODIGOPARTE {
                get {
                    try {
                        return ((string)(this[this.tablePIEZAS.PZA_CODIGOPARTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PZA_CODIGOPARTE\' in table \'PIEZAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIEZAS.PZA_CODIGOPARTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PZA_COSTO {
                get {
                    try {
                        return ((decimal)(this[this.tablePIEZAS.PZA_COSTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PZA_COSTO\' in table \'PIEZAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIEZAS.PZA_COSTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HR_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tablePIEZAS.HR_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HR_CODIGO\' in table \'PIEZAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePIEZAS.HR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TERMINACIONESRow TERMINACIONESRow {
                get {
                    return ((TERMINACIONESRow)(this.GetParentRow(this.Table.ParentRelations["TERMINACIONES_PIEZAS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["TERMINACIONES_PIEZAS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_PARTESRow ESTADO_PARTESRow {
                get {
                    return ((ESTADO_PARTESRow)(this.GetParentRow(this.Table.ParentRelations["ESTADO_PARTES_PIEZAS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ESTADO_PARTES_PIEZAS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANOSRow PLANOSRow {
                get {
                    return ((PLANOSRow)(this.GetParentRow(this.Table.ParentRelations["PLANOS_PIEZAS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PLANOS_PIEZAS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTE_CODIGONull() {
                return this.IsNull(this.tablePIEZAS.TE_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTE_CODIGONull() {
                this[this.tablePIEZAS.TE_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPZA_NOMBRENull() {
                return this.IsNull(this.tablePIEZAS.PZA_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPZA_NOMBRENull() {
                this[this.tablePIEZAS.PZA_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPZA_CANTIDADSTOCKNull() {
                return this.IsNull(this.tablePIEZAS.PZA_CANTIDADSTOCKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPZA_CANTIDADSTOCKNull() {
                this[this.tablePIEZAS.PZA_CANTIDADSTOCKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPZA_DESCRIPCIONNull() {
                return this.IsNull(this.tablePIEZAS.PZA_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPZA_DESCRIPCIONNull() {
                this[this.tablePIEZAS.PZA_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPNO_CODIGONull() {
                return this.IsNull(this.tablePIEZAS.PNO_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPNO_CODIGONull() {
                this[this.tablePIEZAS.PNO_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPZA_CODIGOPARTENull() {
                return this.IsNull(this.tablePIEZAS.PZA_CODIGOPARTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPZA_CODIGOPARTENull() {
                this[this.tablePIEZAS.PZA_CODIGOPARTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPZA_COSTONull() {
                return this.IsNull(this.tablePIEZAS.PZA_COSTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPZA_COSTONull() {
                this[this.tablePIEZAS.PZA_COSTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHR_CODIGONull() {
                return this.IsNull(this.tablePIEZAS.HR_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHR_CODIGONull() {
                this[this.tablePIEZAS.HR_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXSUBCONJUNTORow[] GetPIEZASXSUBCONJUNTORows() {
                if ((this.Table.ChildRelations["detalleSubconjunto_pieza_fk"] == null)) {
                    return new PIEZASXSUBCONJUNTORow[0];
                }
                else {
                    return ((PIEZASXSUBCONJUNTORow[])(base.GetChildRows(this.Table.ChildRelations["detalleSubconjunto_pieza_fk"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXPIEZARow[] GetMATERIASPRIMASXPIEZARows() {
                if ((this.Table.ChildRelations["detallePieza_pieza_fk"] == null)) {
                    return new MATERIASPRIMASXPIEZARow[0];
                }
                else {
                    return ((MATERIASPRIMASXPIEZARow[])(base.GetChildRows(this.Table.ChildRelations["detallePieza_pieza_fk"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXCONJUNTORow[] GetPIEZASXCONJUNTORows() {
                if ((this.Table.ChildRelations["PIEZAS_PIEZASXCONJUNTO"] == null)) {
                    return new PIEZASXCONJUNTORow[0];
                }
                else {
                    return ((PIEZASXCONJUNTORow[])(base.GetChildRows(this.Table.ChildRelations["PIEZAS_PIEZASXCONJUNTO"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXESTRUCTURARow[] GetPIEZASXESTRUCTURARows() {
                if ((this.Table.ChildRelations["PIEZAS_PIEZASXESTRUCTURA"] == null)) {
                    return new PIEZASXESTRUCTURARow[0];
                }
                else {
                    return ((PIEZASXESTRUCTURARow[])(base.GetChildRows(this.Table.ChildRelations["PIEZAS_PIEZASXESTRUCTURA"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MATERIASPRIMASXPIEZARow : global::System.Data.DataRow {
            
            private MATERIASPRIMASXPIEZADataTable tableMATERIASPRIMASXPIEZA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MATERIASPRIMASXPIEZARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMATERIASPRIMASXPIEZA = ((MATERIASPRIMASXPIEZADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MPXP_CODIGO {
                get {
                    return ((decimal)(this[this.tableMATERIASPRIMASXPIEZA.MPXP_CODIGOColumn]));
                }
                set {
                    this[this.tableMATERIASPRIMASXPIEZA.MPXP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MP_CODIGO {
                get {
                    return ((decimal)(this[this.tableMATERIASPRIMASXPIEZA.MP_CODIGOColumn]));
                }
                set {
                    this[this.tableMATERIASPRIMASXPIEZA.MP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PZA_CODIGO {
                get {
                    return ((decimal)(this[this.tableMATERIASPRIMASXPIEZA.PZA_CODIGOColumn]));
                }
                set {
                    this[this.tableMATERIASPRIMASXPIEZA.PZA_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MPXP_CANTIDAD {
                get {
                    return ((decimal)(this[this.tableMATERIASPRIMASXPIEZA.MPXP_CANTIDADColumn]));
                }
                set {
                    this[this.tableMATERIASPRIMASXPIEZA.MPXP_CANTIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASRow PIEZASRow {
                get {
                    return ((PIEZASRow)(this.GetParentRow(this.Table.ParentRelations["detallePieza_pieza_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["detallePieza_pieza_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow MATERIAS_PRIMASRow {
                get {
                    return ((MATERIAS_PRIMASRow)(this.GetParentRow(this.Table.ParentRelations["MATERIAS_PRIMAS_MATERIASPRIMASXPIEZA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["MATERIAS_PRIMAS_MATERIASPRIMASXPIEZA"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ESTRUCTURASRow : global::System.Data.DataRow {
            
            private ESTRUCTURASDataTable tableESTRUCTURAS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ESTRUCTURASRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableESTRUCTURAS = ((ESTRUCTURASDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ESTR_CODIGO {
                get {
                    return ((decimal)(this[this.tableESTRUCTURAS.ESTR_CODIGOColumn]));
                }
                set {
                    this[this.tableESTRUCTURAS.ESTR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ESTR_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableESTRUCTURAS.ESTR_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ESTR_NOMBRE\' in table \'ESTRUCTURAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableESTRUCTURAS.ESTR_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal COC_CODIGO {
                get {
                    return ((decimal)(this[this.tableESTRUCTURAS.COC_CODIGOColumn]));
                }
                set {
                    this[this.tableESTRUCTURAS.COC_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PNO_CODIGO {
                get {
                    return ((decimal)(this[this.tableESTRUCTURAS.PNO_CODIGOColumn]));
                }
                set {
                    this[this.tableESTRUCTURAS.PNO_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ESTR_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableESTRUCTURAS.ESTR_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ESTR_DESCRIPCION\' in table \'ESTRUCTURAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableESTRUCTURAS.ESTR_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ESTR_ACTIVO {
                get {
                    return ((decimal)(this[this.tableESTRUCTURAS.ESTR_ACTIVOColumn]));
                }
                set {
                    this[this.tableESTRUCTURAS.ESTR_ACTIVOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ESTR_FECHA_ALTA {
                get {
                    return ((global::System.DateTime)(this[this.tableESTRUCTURAS.ESTR_FECHA_ALTAColumn]));
                }
                set {
                    this[this.tableESTRUCTURAS.ESTR_FECHA_ALTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ESTR_FECHA_MODIFICACION {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableESTRUCTURAS.ESTR_FECHA_MODIFICACIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ESTR_FECHA_MODIFICACION\' in table \'ESTRUCTURAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableESTRUCTURAS.ESTR_FECHA_MODIFICACIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal E_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableESTRUCTURAS.E_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_CODIGO\' in table \'ESTRUCTURAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableESTRUCTURAS.E_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ESTR_COSTO {
                get {
                    try {
                        return ((decimal)(this[this.tableESTRUCTURAS.ESTR_COSTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ESTR_COSTO\' in table \'ESTRUCTURAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableESTRUCTURAS.ESTR_COSTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANOSRow PLANOSRow {
                get {
                    return ((PLANOSRow)(this.GetParentRow(this.Table.ParentRelations["PLANOS_ESTRUCTURAS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PLANOS_ESTRUCTURAS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsESTR_NOMBRENull() {
                return this.IsNull(this.tableESTRUCTURAS.ESTR_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetESTR_NOMBRENull() {
                this[this.tableESTRUCTURAS.ESTR_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsESTR_DESCRIPCIONNull() {
                return this.IsNull(this.tableESTRUCTURAS.ESTR_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetESTR_DESCRIPCIONNull() {
                this[this.tableESTRUCTURAS.ESTR_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsESTR_FECHA_MODIFICACIONNull() {
                return this.IsNull(this.tableESTRUCTURAS.ESTR_FECHA_MODIFICACIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetESTR_FECHA_MODIFICACIONNull() {
                this[this.tableESTRUCTURAS.ESTR_FECHA_MODIFICACIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_CODIGONull() {
                return this.IsNull(this.tableESTRUCTURAS.E_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_CODIGONull() {
                this[this.tableESTRUCTURAS.E_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsESTR_COSTONull() {
                return this.IsNull(this.tableESTRUCTURAS.ESTR_COSTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetESTR_COSTONull() {
                this[this.tableESTRUCTURAS.ESTR_COSTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOS_ESTRUCTURARow[] GetGRUPOS_ESTRUCTURARows() {
                if ((this.Table.ChildRelations["ESTRUCTURAS_GRUPOS_ESTRUCTURA"] == null)) {
                    return new GRUPOS_ESTRUCTURARow[0];
                }
                else {
                    return ((GRUPOS_ESTRUCTURARow[])(base.GetChildRows(this.Table.ChildRelations["ESTRUCTURAS_GRUPOS_ESTRUCTURA"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXESTRUCTURARow[] GetSUBCONJUNTOSXESTRUCTURARows() {
                if ((this.Table.ChildRelations["ESTRUCTURAS_SUBCONJUNTOSXESTRUCTURA"] == null)) {
                    return new SUBCONJUNTOSXESTRUCTURARow[0];
                }
                else {
                    return ((SUBCONJUNTOSXESTRUCTURARow[])(base.GetChildRows(this.Table.ChildRelations["ESTRUCTURAS_SUBCONJUNTOSXESTRUCTURA"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXESTRUCTURARow[] GetPIEZASXESTRUCTURARows() {
                if ((this.Table.ChildRelations["ESTRUCTURAS_PIEZASXESTRUCTURA"] == null)) {
                    return new PIEZASXESTRUCTURARow[0];
                }
                else {
                    return ((PIEZASXESTRUCTURARow[])(base.GetChildRows(this.Table.ChildRelations["ESTRUCTURAS_PIEZASXESTRUCTURA"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXESTRUCTURARow[] GetMATERIASPRIMASXESTRUCTURARows() {
                if ((this.Table.ChildRelations["ESTRUCTURAS_MATERIASPRIMASXESTRUCTURA"] == null)) {
                    return new MATERIASPRIMASXESTRUCTURARow[0];
                }
                else {
                    return ((MATERIASPRIMASXESTRUCTURARow[])(base.GetChildRows(this.Table.ChildRelations["ESTRUCTURAS_MATERIASPRIMASXESTRUCTURA"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LISTA_PARTESRow : global::System.Data.DataRow {
            
            private LISTA_PARTESDataTable tableLISTA_PARTES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LISTA_PARTESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLISTA_PARTES = ((LISTA_PARTESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ESTR_CODIGO {
                get {
                    try {
                        return ((string)(this[this.tableLISTA_PARTES.ESTR_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ESTR_CODIGO\' in table \'LISTA_PARTES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLISTA_PARTES.ESTR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAR_TIPO {
                get {
                    if (this.IsPAR_TIPONull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLISTA_PARTES.PAR_TIPOColumn]));
                    }
                }
                set {
                    this[this.tableLISTA_PARTES.PAR_TIPOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAR_CODIGO {
                get {
                    if (this.IsPAR_CODIGONull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLISTA_PARTES.PAR_CODIGOColumn]));
                    }
                }
                set {
                    this[this.tableLISTA_PARTES.PAR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAR_NOMBRE {
                get {
                    if (this.IsPAR_NOMBRENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLISTA_PARTES.PAR_NOMBREColumn]));
                    }
                }
                set {
                    this[this.tableLISTA_PARTES.PAR_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAR_TERMINACION {
                get {
                    if (this.IsPAR_TERMINACIONNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLISTA_PARTES.PAR_TERMINACIONColumn]));
                    }
                }
                set {
                    this[this.tableLISTA_PARTES.PAR_TERMINACIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAR_CANTIDAD {
                get {
                    if (this.IsPAR_CANTIDADNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLISTA_PARTES.PAR_CANTIDADColumn]));
                    }
                }
                set {
                    this[this.tableLISTA_PARTES.PAR_CANTIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAR_UMED {
                get {
                    if (this.IsPAR_UMEDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLISTA_PARTES.PAR_UMEDColumn]));
                    }
                }
                set {
                    this[this.tableLISTA_PARTES.PAR_UMEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsESTR_CODIGONull() {
                return this.IsNull(this.tableLISTA_PARTES.ESTR_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetESTR_CODIGONull() {
                this[this.tableLISTA_PARTES.ESTR_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAR_TIPONull() {
                return this.IsNull(this.tableLISTA_PARTES.PAR_TIPOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAR_TIPONull() {
                this[this.tableLISTA_PARTES.PAR_TIPOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAR_CODIGONull() {
                return this.IsNull(this.tableLISTA_PARTES.PAR_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAR_CODIGONull() {
                this[this.tableLISTA_PARTES.PAR_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAR_NOMBRENull() {
                return this.IsNull(this.tableLISTA_PARTES.PAR_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAR_NOMBRENull() {
                this[this.tableLISTA_PARTES.PAR_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAR_TERMINACIONNull() {
                return this.IsNull(this.tableLISTA_PARTES.PAR_TERMINACIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAR_TERMINACIONNull() {
                this[this.tableLISTA_PARTES.PAR_TERMINACIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAR_CANTIDADNull() {
                return this.IsNull(this.tableLISTA_PARTES.PAR_CANTIDADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAR_CANTIDADNull() {
                this[this.tableLISTA_PARTES.PAR_CANTIDADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAR_UMEDNull() {
                return this.IsNull(this.tableLISTA_PARTES.PAR_UMEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAR_UMEDNull() {
                this[this.tableLISTA_PARTES.PAR_UMEDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PIEZASXESTRUCTURARowChangeEvent : global::System.EventArgs {
            
            private PIEZASXESTRUCTURARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXESTRUCTURARowChangeEvent(PIEZASXESTRUCTURARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXESTRUCTURARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SUBCONJUNTOSXESTRUCTURARowChangeEvent : global::System.EventArgs {
            
            private SUBCONJUNTOSXESTRUCTURARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXESTRUCTURARowChangeEvent(SUBCONJUNTOSXESTRUCTURARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXESTRUCTURARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MATERIASPRIMASXESTRUCTURARowChangeEvent : global::System.EventArgs {
            
            private MATERIASPRIMASXESTRUCTURARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXESTRUCTURARowChangeEvent(MATERIASPRIMASXESTRUCTURARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXESTRUCTURARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CONJUNTOSXESTRUCTURARowChangeEvent : global::System.EventArgs {
            
            private CONJUNTOSXESTRUCTURARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSXESTRUCTURARowChangeEvent(CONJUNTOSXESTRUCTURARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSXESTRUCTURARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GRUPOS_ESTRUCTURARowChangeEvent : global::System.EventArgs {
            
            private GRUPOS_ESTRUCTURARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOS_ESTRUCTURARowChangeEvent(GRUPOS_ESTRUCTURARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRUPOS_ESTRUCTURARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MATERIAS_PRIMASRowChangeEvent : global::System.EventArgs {
            
            private MATERIAS_PRIMASRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRowChangeEvent(MATERIAS_PRIMASRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PLANOSRowChangeEvent : global::System.EventArgs {
            
            private PLANOSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANOSRowChangeEvent(PLANOSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ESTADO_PARTESRowChangeEvent : global::System.EventArgs {
            
            private ESTADO_PARTESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_PARTESRowChangeEvent(ESTADO_PARTESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_PARTESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TERMINACIONESRowChangeEvent : global::System.EventArgs {
            
            private TERMINACIONESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TERMINACIONESRowChangeEvent(TERMINACIONESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TERMINACIONESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PIEZASXCONJUNTORowChangeEvent : global::System.EventArgs {
            
            private PIEZASXCONJUNTORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXCONJUNTORowChangeEvent(PIEZASXCONJUNTORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXCONJUNTORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PIEZASXSUBCONJUNTORowChangeEvent : global::System.EventArgs {
            
            private PIEZASXSUBCONJUNTORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXSUBCONJUNTORowChangeEvent(PIEZASXSUBCONJUNTORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASXSUBCONJUNTORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SUBCONJUNTOSXCONJUNTORowChangeEvent : global::System.EventArgs {
            
            private SUBCONJUNTOSXCONJUNTORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXCONJUNTORowChangeEvent(SUBCONJUNTOSXCONJUNTORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSXCONJUNTORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CONJUNTOSRowChangeEvent : global::System.EventArgs {
            
            private CONJUNTOSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSRowChangeEvent(CONJUNTOSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONJUNTOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SUBCONJUNTOSRowChangeEvent : global::System.EventArgs {
            
            private SUBCONJUNTOSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSRowChangeEvent(SUBCONJUNTOSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBCONJUNTOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PIEZASRowChangeEvent : global::System.EventArgs {
            
            private PIEZASRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASRowChangeEvent(PIEZASRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PIEZASRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MATERIASPRIMASXPIEZARowChangeEvent : global::System.EventArgs {
            
            private MATERIASPRIMASXPIEZARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXPIEZARowChangeEvent(MATERIASPRIMASXPIEZARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASXPIEZARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ESTRUCTURASRowChangeEvent : global::System.EventArgs {
            
            private ESTRUCTURASRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTRUCTURASRowChangeEvent(ESTRUCTURASRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTRUCTURASRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LISTA_PARTESRowChangeEvent : global::System.EventArgs {
            
            private LISTA_PARTESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LISTA_PARTESRowChangeEvent(LISTA_PARTESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LISTA_PARTESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GyCAP.Data.dsEstructuraTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PIEZASXESTRUCTURATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PIEZASXESTRUCTURATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PIEZASXESTRUCTURA";
            tableMapping.ColumnMappings.Add("PXE_CODIGO", "PXE_CODIGO");
            tableMapping.ColumnMappings.Add("ESTR_CODIGO", "ESTR_CODIGO");
            tableMapping.ColumnMappings.Add("PZA_CODIGO", "PZA_CODIGO");
            tableMapping.ColumnMappings.Add("PXE_CANTIDAD", "PXE_CANTIDAD");
            tableMapping.ColumnMappings.Add("GRP_CODIGO", "GRP_CODIGO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PIEZASXESTRUCTURA] WHERE (([PXE_CODIGO] = @Original_PXE_CODIGO) AND ([ESTR_CODIGO] = @Original_ESTR_CODIGO) AND ([PZA_CODIGO] = @Original_PZA_CODIGO) AND ([PXE_CANTIDAD] = @Original_PXE_CANTIDAD) AND ([GRP_CODIGO] = @Original_GRP_CODIGO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PXE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PXE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PXE_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PXE_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PIEZASXESTRUCTURA] ([ESTR_CODIGO], [PZA_CODIGO], [PXE_CANTIDAD], [GRP_CODIGO]) VALUES (@ESTR_CODIGO, @PZA_CODIGO, @PXE_CANTIDAD, @GRP_CODIGO);
SELECT PXE_CODIGO, ESTR_CODIGO, PZA_CODIGO, PXE_CANTIDAD, GRP_CODIGO FROM PIEZASXESTRUCTURA WHERE (PXE_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PXE_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PXE_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PIEZASXESTRUCTURA] SET [ESTR_CODIGO] = @ESTR_CODIGO, [PZA_CODIGO] = @PZA_CODIGO, [PXE_CANTIDAD] = @PXE_CANTIDAD, [GRP_CODIGO] = @GRP_CODIGO WHERE (([PXE_CODIGO] = @Original_PXE_CODIGO) AND ([ESTR_CODIGO] = @Original_ESTR_CODIGO) AND ([PZA_CODIGO] = @Original_PZA_CODIGO) AND ([PXE_CANTIDAD] = @Original_PXE_CANTIDAD) AND ([GRP_CODIGO] = @Original_GRP_CODIGO));
SELECT PXE_CODIGO, ESTR_CODIGO, PZA_CODIGO, PXE_CANTIDAD, GRP_CODIGO FROM PIEZASXESTRUCTURA WHERE (PXE_CODIGO = @PXE_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PXE_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PXE_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PXE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PXE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PXE_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PXE_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PXE_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "PXE_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PXE_CODIGO, ESTR_CODIGO, PZA_CODIGO, PXE_CANTIDAD, GRP_CODIGO FROM dbo.PIE" +
                "ZASXESTRUCTURA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEstructura.PIEZASXESTRUCTURADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEstructura.PIEZASXESTRUCTURADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEstructura.PIEZASXESTRUCTURADataTable dataTable = new dsEstructura.PIEZASXESTRUCTURADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura.PIEZASXESTRUCTURADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura dataSet) {
            return this.Adapter.Update(dataSet, "PIEZASXESTRUCTURA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_PXE_CODIGO, decimal Original_ESTR_CODIGO, decimal Original_PZA_CODIGO, decimal Original_PXE_CANTIDAD, decimal Original_GRP_CODIGO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_PXE_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_ESTR_CODIGO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_PZA_CODIGO));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_PXE_CANTIDAD));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_GRP_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ESTR_CODIGO, decimal PZA_CODIGO, decimal PXE_CANTIDAD, decimal GRP_CODIGO) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ESTR_CODIGO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(PZA_CODIGO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(PXE_CANTIDAD));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(GRP_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ESTR_CODIGO, decimal PZA_CODIGO, decimal PXE_CANTIDAD, decimal GRP_CODIGO, decimal Original_PXE_CODIGO, decimal Original_ESTR_CODIGO, decimal Original_PZA_CODIGO, decimal Original_PXE_CANTIDAD, decimal Original_GRP_CODIGO, decimal PXE_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ESTR_CODIGO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(PZA_CODIGO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(PXE_CANTIDAD));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(GRP_CODIGO));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_PXE_CODIGO));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_ESTR_CODIGO));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_PZA_CODIGO));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_PXE_CANTIDAD));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_GRP_CODIGO));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(PXE_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ESTR_CODIGO, decimal PZA_CODIGO, decimal PXE_CANTIDAD, decimal GRP_CODIGO, decimal Original_PXE_CODIGO, decimal Original_ESTR_CODIGO, decimal Original_PZA_CODIGO, decimal Original_PXE_CANTIDAD, decimal Original_GRP_CODIGO) {
            return this.Update(ESTR_CODIGO, PZA_CODIGO, PXE_CANTIDAD, GRP_CODIGO, Original_PXE_CODIGO, Original_ESTR_CODIGO, Original_PZA_CODIGO, Original_PXE_CANTIDAD, Original_GRP_CODIGO, Original_PXE_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SUBCONJUNTOSXESTRUCTURATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SUBCONJUNTOSXESTRUCTURATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SUBCONJUNTOSXESTRUCTURA";
            tableMapping.ColumnMappings.Add("SCXE_CODIGO", "SCXE_CODIGO");
            tableMapping.ColumnMappings.Add("ESTR_CODIGO", "ESTR_CODIGO");
            tableMapping.ColumnMappings.Add("SCONJ_CODIGO", "SCONJ_CODIGO");
            tableMapping.ColumnMappings.Add("SCXE_CANTIDAD", "SCXE_CANTIDAD");
            tableMapping.ColumnMappings.Add("GRP_CODIGO", "GRP_CODIGO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SUBCONJUNTOSXESTRUCTURA] WHERE (([SCXE_CODIGO] = @Original_SCXE_CODIGO) AND ([ESTR_CODIGO] = @Original_ESTR_CODIGO) AND ([SCONJ_CODIGO] = @Original_SCONJ_CODIGO) AND ([SCXE_CANTIDAD] = @Original_SCXE_CANTIDAD) AND ([GRP_CODIGO] = @Original_GRP_CODIGO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCXE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCXE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCONJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCXE_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCXE_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SUBCONJUNTOSXESTRUCTURA] ([ESTR_CODIGO], [SCONJ_CODIGO], [SCXE_CANTIDAD], [GRP_CODIGO]) VALUES (@ESTR_CODIGO, @SCONJ_CODIGO, @SCXE_CANTIDAD, @GRP_CODIGO);
SELECT SCXE_CODIGO, ESTR_CODIGO, SCONJ_CODIGO, SCXE_CANTIDAD, GRP_CODIGO FROM SUBCONJUNTOSXESTRUCTURA WHERE (SCXE_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCONJ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCXE_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCXE_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[SUBCONJUNTOSXESTRUCTURA] SET [ESTR_CODIGO] = @ESTR_CODIGO, [SCONJ_CODIGO] = @SCONJ_CODIGO, [SCXE_CANTIDAD] = @SCXE_CANTIDAD, [GRP_CODIGO] = @GRP_CODIGO WHERE (([SCXE_CODIGO] = @Original_SCXE_CODIGO) AND ([ESTR_CODIGO] = @Original_ESTR_CODIGO) AND ([SCONJ_CODIGO] = @Original_SCONJ_CODIGO) AND ([SCXE_CANTIDAD] = @Original_SCXE_CANTIDAD) AND ([GRP_CODIGO] = @Original_GRP_CODIGO));
SELECT SCXE_CODIGO, ESTR_CODIGO, SCONJ_CODIGO, SCXE_CANTIDAD, GRP_CODIGO FROM SUBCONJUNTOSXESTRUCTURA WHERE (SCXE_CODIGO = @SCXE_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCONJ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCXE_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCXE_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCXE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCXE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCONJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCXE_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCXE_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCXE_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "SCXE_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SCXE_CODIGO, ESTR_CODIGO, SCONJ_CODIGO, SCXE_CANTIDAD, GRP_CODIGO FROM dbo" +
                ".SUBCONJUNTOSXESTRUCTURA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEstructura.SUBCONJUNTOSXESTRUCTURADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEstructura.SUBCONJUNTOSXESTRUCTURADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEstructura.SUBCONJUNTOSXESTRUCTURADataTable dataTable = new dsEstructura.SUBCONJUNTOSXESTRUCTURADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura.SUBCONJUNTOSXESTRUCTURADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura dataSet) {
            return this.Adapter.Update(dataSet, "SUBCONJUNTOSXESTRUCTURA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_SCXE_CODIGO, decimal Original_ESTR_CODIGO, decimal Original_SCONJ_CODIGO, decimal Original_SCXE_CANTIDAD, decimal Original_GRP_CODIGO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_SCXE_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_ESTR_CODIGO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_SCONJ_CODIGO));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_SCXE_CANTIDAD));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_GRP_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ESTR_CODIGO, decimal SCONJ_CODIGO, decimal SCXE_CANTIDAD, decimal GRP_CODIGO) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ESTR_CODIGO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(SCONJ_CODIGO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(SCXE_CANTIDAD));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(GRP_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ESTR_CODIGO, decimal SCONJ_CODIGO, decimal SCXE_CANTIDAD, decimal GRP_CODIGO, decimal Original_SCXE_CODIGO, decimal Original_ESTR_CODIGO, decimal Original_SCONJ_CODIGO, decimal Original_SCXE_CANTIDAD, decimal Original_GRP_CODIGO, decimal SCXE_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ESTR_CODIGO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(SCONJ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(SCXE_CANTIDAD));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(GRP_CODIGO));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_SCXE_CODIGO));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_ESTR_CODIGO));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_SCONJ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_SCXE_CANTIDAD));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_GRP_CODIGO));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(SCXE_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ESTR_CODIGO, decimal SCONJ_CODIGO, decimal SCXE_CANTIDAD, decimal GRP_CODIGO, decimal Original_SCXE_CODIGO, decimal Original_ESTR_CODIGO, decimal Original_SCONJ_CODIGO, decimal Original_SCXE_CANTIDAD, decimal Original_GRP_CODIGO) {
            return this.Update(ESTR_CODIGO, SCONJ_CODIGO, SCXE_CANTIDAD, GRP_CODIGO, Original_SCXE_CODIGO, Original_ESTR_CODIGO, Original_SCONJ_CODIGO, Original_SCXE_CANTIDAD, Original_GRP_CODIGO, Original_SCXE_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MATERIASPRIMASXESTRUCTURATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MATERIASPRIMASXESTRUCTURATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MATERIASPRIMASXESTRUCTURA";
            tableMapping.ColumnMappings.Add("MPXE_CODIGO", "MPXE_CODIGO");
            tableMapping.ColumnMappings.Add("MP_CODIGO", "MP_CODIGO");
            tableMapping.ColumnMappings.Add("ESTR_CODIGO", "ESTR_CODIGO");
            tableMapping.ColumnMappings.Add("MPXE_CANTIDAD", "MPXE_CANTIDAD");
            tableMapping.ColumnMappings.Add("GRP_CODIGO", "GRP_CODIGO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[MATERIASPRIMASXESTRUCTURA] WHERE (([MPXE_CODIGO] = @Original_MPXE_CODIGO) AND ([MP_CODIGO] = @Original_MP_CODIGO) AND ([ESTR_CODIGO] = @Original_ESTR_CODIGO) AND ([MPXE_CANTIDAD] = @Original_MPXE_CANTIDAD) AND ([GRP_CODIGO] = @Original_GRP_CODIGO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MPXE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MPXE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MPXE_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MPXE_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[MATERIASPRIMASXESTRUCTURA] ([MP_CODIGO], [ESTR_CODIGO], [MPXE_CANTIDAD], [GRP_CODIGO]) VALUES (@MP_CODIGO, @ESTR_CODIGO, @MPXE_CANTIDAD, @GRP_CODIGO);
SELECT MPXE_CODIGO, MP_CODIGO, ESTR_CODIGO, MPXE_CANTIDAD, GRP_CODIGO FROM MATERIASPRIMASXESTRUCTURA WHERE (MPXE_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MPXE_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MPXE_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[MATERIASPRIMASXESTRUCTURA] SET [MP_CODIGO] = @MP_CODIGO, [ESTR_CODIGO] = @ESTR_CODIGO, [MPXE_CANTIDAD] = @MPXE_CANTIDAD, [GRP_CODIGO] = @GRP_CODIGO WHERE (([MPXE_CODIGO] = @Original_MPXE_CODIGO) AND ([MP_CODIGO] = @Original_MP_CODIGO) AND ([ESTR_CODIGO] = @Original_ESTR_CODIGO) AND ([MPXE_CANTIDAD] = @Original_MPXE_CANTIDAD) AND ([GRP_CODIGO] = @Original_GRP_CODIGO));
SELECT MPXE_CODIGO, MP_CODIGO, ESTR_CODIGO, MPXE_CANTIDAD, GRP_CODIGO FROM MATERIASPRIMASXESTRUCTURA WHERE (MPXE_CODIGO = @MPXE_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MPXE_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MPXE_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MPXE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MPXE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MPXE_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MPXE_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MPXE_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "MPXE_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MPXE_CODIGO, MP_CODIGO, ESTR_CODIGO, MPXE_CANTIDAD, GRP_CODIGO FROM dbo.MA" +
                "TERIASPRIMASXESTRUCTURA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEstructura.MATERIASPRIMASXESTRUCTURADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEstructura.MATERIASPRIMASXESTRUCTURADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEstructura.MATERIASPRIMASXESTRUCTURADataTable dataTable = new dsEstructura.MATERIASPRIMASXESTRUCTURADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura.MATERIASPRIMASXESTRUCTURADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura dataSet) {
            return this.Adapter.Update(dataSet, "MATERIASPRIMASXESTRUCTURA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_MPXE_CODIGO, decimal Original_MP_CODIGO, decimal Original_ESTR_CODIGO, decimal Original_MPXE_CANTIDAD, decimal Original_GRP_CODIGO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_MPXE_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_MP_CODIGO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_ESTR_CODIGO));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_MPXE_CANTIDAD));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_GRP_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal MP_CODIGO, decimal ESTR_CODIGO, decimal MPXE_CANTIDAD, decimal GRP_CODIGO) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(MP_CODIGO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(ESTR_CODIGO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(MPXE_CANTIDAD));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(GRP_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal MP_CODIGO, decimal ESTR_CODIGO, decimal MPXE_CANTIDAD, decimal GRP_CODIGO, decimal Original_MPXE_CODIGO, decimal Original_MP_CODIGO, decimal Original_ESTR_CODIGO, decimal Original_MPXE_CANTIDAD, decimal Original_GRP_CODIGO, decimal MPXE_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(MP_CODIGO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(ESTR_CODIGO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(MPXE_CANTIDAD));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(GRP_CODIGO));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_MPXE_CODIGO));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_MP_CODIGO));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_ESTR_CODIGO));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_MPXE_CANTIDAD));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_GRP_CODIGO));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(MPXE_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal MP_CODIGO, decimal ESTR_CODIGO, decimal MPXE_CANTIDAD, decimal GRP_CODIGO, decimal Original_MPXE_CODIGO, decimal Original_MP_CODIGO, decimal Original_ESTR_CODIGO, decimal Original_MPXE_CANTIDAD, decimal Original_GRP_CODIGO) {
            return this.Update(MP_CODIGO, ESTR_CODIGO, MPXE_CANTIDAD, GRP_CODIGO, Original_MPXE_CODIGO, Original_MP_CODIGO, Original_ESTR_CODIGO, Original_MPXE_CANTIDAD, Original_GRP_CODIGO, Original_MPXE_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CONJUNTOSXESTRUCTURATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CONJUNTOSXESTRUCTURATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CONJUNTOSXESTRUCTURA";
            tableMapping.ColumnMappings.Add("CXE_CODIGO", "CXE_CODIGO");
            tableMapping.ColumnMappings.Add("ESTR_CODIGO", "ESTR_CODIGO");
            tableMapping.ColumnMappings.Add("CONJ_CODIGO", "CONJ_CODIGO");
            tableMapping.ColumnMappings.Add("CXE_CANTIDAD", "CXE_CANTIDAD");
            tableMapping.ColumnMappings.Add("GRP_CODIGO", "GRP_CODIGO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CONJUNTOSXESTRUCTURA] WHERE (([CXE_CODIGO] = @Original_CXE_CODIGO) AND ([ESTR_CODIGO] = @Original_ESTR_CODIGO) AND ([CONJ_CODIGO] = @Original_CONJ_CODIGO) AND ([CXE_CANTIDAD] = @Original_CXE_CANTIDAD) AND ([GRP_CODIGO] = @Original_GRP_CODIGO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CXE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CONJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXE_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CXE_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CONJUNTOSXESTRUCTURA] ([ESTR_CODIGO], [CONJ_CODIGO], [CXE_CANTIDAD], [GRP_CODIGO]) VALUES (@ESTR_CODIGO, @CONJ_CODIGO, @CXE_CANTIDAD, @GRP_CODIGO);
SELECT CXE_CODIGO, ESTR_CODIGO, CONJ_CODIGO, CXE_CANTIDAD, GRP_CODIGO FROM CONJUNTOSXESTRUCTURA WHERE (CXE_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CONJ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CXE_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CXE_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CONJUNTOSXESTRUCTURA] SET [ESTR_CODIGO] = @ESTR_CODIGO, [CONJ_CODIGO] = @CONJ_CODIGO, [CXE_CANTIDAD] = @CXE_CANTIDAD, [GRP_CODIGO] = @GRP_CODIGO WHERE (([CXE_CODIGO] = @Original_CXE_CODIGO) AND ([ESTR_CODIGO] = @Original_ESTR_CODIGO) AND ([CONJ_CODIGO] = @Original_CONJ_CODIGO) AND ([CXE_CANTIDAD] = @Original_CXE_CANTIDAD) AND ([GRP_CODIGO] = @Original_GRP_CODIGO));
SELECT CXE_CODIGO, ESTR_CODIGO, CONJ_CODIGO, CXE_CANTIDAD, GRP_CODIGO FROM CONJUNTOSXESTRUCTURA WHERE (CXE_CODIGO = @CXE_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CONJ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CXE_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CXE_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CXE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CONJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXE_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CXE_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CXE_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "CXE_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CXE_CODIGO, ESTR_CODIGO, CONJ_CODIGO, CXE_CANTIDAD, GRP_CODIGO FROM dbo.CO" +
                "NJUNTOSXESTRUCTURA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEstructura.CONJUNTOSXESTRUCTURADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEstructura.CONJUNTOSXESTRUCTURADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEstructura.CONJUNTOSXESTRUCTURADataTable dataTable = new dsEstructura.CONJUNTOSXESTRUCTURADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura.CONJUNTOSXESTRUCTURADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura dataSet) {
            return this.Adapter.Update(dataSet, "CONJUNTOSXESTRUCTURA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_CXE_CODIGO, decimal Original_ESTR_CODIGO, decimal Original_CONJ_CODIGO, decimal Original_CXE_CANTIDAD, decimal Original_GRP_CODIGO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_CXE_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_ESTR_CODIGO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_CONJ_CODIGO));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_CXE_CANTIDAD));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_GRP_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ESTR_CODIGO, decimal CONJ_CODIGO, decimal CXE_CANTIDAD, decimal GRP_CODIGO) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ESTR_CODIGO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(CONJ_CODIGO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(CXE_CANTIDAD));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(GRP_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ESTR_CODIGO, decimal CONJ_CODIGO, decimal CXE_CANTIDAD, decimal GRP_CODIGO, decimal Original_CXE_CODIGO, decimal Original_ESTR_CODIGO, decimal Original_CONJ_CODIGO, decimal Original_CXE_CANTIDAD, decimal Original_GRP_CODIGO, decimal CXE_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ESTR_CODIGO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(CONJ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(CXE_CANTIDAD));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(GRP_CODIGO));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_CXE_CODIGO));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_ESTR_CODIGO));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_CONJ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_CXE_CANTIDAD));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_GRP_CODIGO));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(CXE_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ESTR_CODIGO, decimal CONJ_CODIGO, decimal CXE_CANTIDAD, decimal GRP_CODIGO, decimal Original_CXE_CODIGO, decimal Original_ESTR_CODIGO, decimal Original_CONJ_CODIGO, decimal Original_CXE_CANTIDAD, decimal Original_GRP_CODIGO) {
            return this.Update(ESTR_CODIGO, CONJ_CODIGO, CXE_CANTIDAD, GRP_CODIGO, Original_CXE_CODIGO, Original_ESTR_CODIGO, Original_CONJ_CODIGO, Original_CXE_CANTIDAD, Original_GRP_CODIGO, Original_CXE_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GRUPOS_ESTRUCTURATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GRUPOS_ESTRUCTURATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GRUPOS_ESTRUCTURA";
            tableMapping.ColumnMappings.Add("GRP_CODIGO", "GRP_CODIGO");
            tableMapping.ColumnMappings.Add("GRP_NUMERO", "GRP_NUMERO");
            tableMapping.ColumnMappings.Add("ESTR_CODIGO", "ESTR_CODIGO");
            tableMapping.ColumnMappings.Add("GRP_PADRE_CODIGO", "GRP_PADRE_CODIGO");
            tableMapping.ColumnMappings.Add("GRP_NOMBRE", "GRP_NOMBRE");
            tableMapping.ColumnMappings.Add("GRP_DESCRIPCION", "GRP_DESCRIPCION");
            tableMapping.ColumnMappings.Add("GRP_CONCRETO", "GRP_CONCRETO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[GRUPOS_ESTRUCTURA] WHERE (([GRP_CODIGO] = @Original_GRP_CODIGO) AND ([GRP_NUMERO] = @Original_GRP_NUMERO) AND ([ESTR_CODIGO] = @Original_ESTR_CODIGO) AND ((@IsNull_GRP_PADRE_CODIGO = 1 AND [GRP_PADRE_CODIGO] IS NULL) OR ([GRP_PADRE_CODIGO] = @Original_GRP_PADRE_CODIGO)) AND ((@IsNull_GRP_NOMBRE = 1 AND [GRP_NOMBRE] IS NULL) OR ([GRP_NOMBRE] = @Original_GRP_NOMBRE)) AND ((@IsNull_GRP_DESCRIPCION = 1 AND [GRP_DESCRIPCION] IS NULL) OR ([GRP_DESCRIPCION] = @Original_GRP_DESCRIPCION)) AND ([GRP_CONCRETO] = @Original_GRP_CONCRETO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GRP_PADRE_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRP_PADRE_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_PADRE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_PADRE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GRP_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRP_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRP_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GRP_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRP_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRP_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_CONCRETO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "GRP_CONCRETO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[GRUPOS_ESTRUCTURA] ([GRP_NUMERO], [ESTR_CODIGO], [GRP_PADRE_CODIGO], [GRP_NOMBRE], [GRP_DESCRIPCION], [GRP_CONCRETO]) VALUES (@GRP_NUMERO, @ESTR_CODIGO, @GRP_PADRE_CODIGO, @GRP_NOMBRE, @GRP_DESCRIPCION, @GRP_CONCRETO);
SELECT GRP_CODIGO, GRP_NUMERO, ESTR_CODIGO, GRP_PADRE_CODIGO, GRP_NOMBRE, GRP_DESCRIPCION, GRP_CONCRETO FROM GRUPOS_ESTRUCTURA WHERE (GRP_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_PADRE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_PADRE_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRP_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRP_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_CONCRETO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "GRP_CONCRETO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[GRUPOS_ESTRUCTURA] SET [GRP_NUMERO] = @GRP_NUMERO, [ESTR_CODIGO] = @ESTR_CODIGO, [GRP_PADRE_CODIGO] = @GRP_PADRE_CODIGO, [GRP_NOMBRE] = @GRP_NOMBRE, [GRP_DESCRIPCION] = @GRP_DESCRIPCION, [GRP_CONCRETO] = @GRP_CONCRETO WHERE (([GRP_CODIGO] = @Original_GRP_CODIGO) AND ([GRP_NUMERO] = @Original_GRP_NUMERO) AND ([ESTR_CODIGO] = @Original_ESTR_CODIGO) AND ((@IsNull_GRP_PADRE_CODIGO = 1 AND [GRP_PADRE_CODIGO] IS NULL) OR ([GRP_PADRE_CODIGO] = @Original_GRP_PADRE_CODIGO)) AND ((@IsNull_GRP_NOMBRE = 1 AND [GRP_NOMBRE] IS NULL) OR ([GRP_NOMBRE] = @Original_GRP_NOMBRE)) AND ((@IsNull_GRP_DESCRIPCION = 1 AND [GRP_DESCRIPCION] IS NULL) OR ([GRP_DESCRIPCION] = @Original_GRP_DESCRIPCION)) AND ([GRP_CONCRETO] = @Original_GRP_CONCRETO));
SELECT GRP_CODIGO, GRP_NUMERO, ESTR_CODIGO, GRP_PADRE_CODIGO, GRP_NOMBRE, GRP_DESCRIPCION, GRP_CONCRETO FROM GRUPOS_ESTRUCTURA WHERE (GRP_CODIGO = @GRP_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_PADRE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_PADRE_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRP_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRP_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_CONCRETO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "GRP_CONCRETO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GRP_PADRE_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRP_PADRE_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_PADRE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_PADRE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GRP_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRP_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRP_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GRP_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRP_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRP_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_CONCRETO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "GRP_CONCRETO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "GRP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT GRP_CODIGO, GRP_NUMERO, ESTR_CODIGO, GRP_PADRE_CODIGO, GRP_NOMBRE, GRP_DES" +
                "CRIPCION, GRP_CONCRETO FROM dbo.GRUPOS_ESTRUCTURA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEstructura.GRUPOS_ESTRUCTURADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEstructura.GRUPOS_ESTRUCTURADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEstructura.GRUPOS_ESTRUCTURADataTable dataTable = new dsEstructura.GRUPOS_ESTRUCTURADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura.GRUPOS_ESTRUCTURADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura dataSet) {
            return this.Adapter.Update(dataSet, "GRUPOS_ESTRUCTURA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_GRP_CODIGO, decimal Original_GRP_NUMERO, decimal Original_ESTR_CODIGO, global::System.Nullable<decimal> Original_GRP_PADRE_CODIGO, string Original_GRP_NOMBRE, string Original_GRP_DESCRIPCION, decimal Original_GRP_CONCRETO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_GRP_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_GRP_NUMERO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_ESTR_CODIGO));
            if ((Original_GRP_PADRE_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_GRP_PADRE_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_GRP_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_GRP_NOMBRE));
            }
            if ((Original_GRP_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_GRP_DESCRIPCION));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_GRP_CONCRETO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal GRP_NUMERO, decimal ESTR_CODIGO, global::System.Nullable<decimal> GRP_PADRE_CODIGO, string GRP_NOMBRE, string GRP_DESCRIPCION, decimal GRP_CONCRETO) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(GRP_NUMERO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(ESTR_CODIGO));
            if ((GRP_PADRE_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(GRP_PADRE_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((GRP_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(GRP_NOMBRE));
            }
            if ((GRP_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(GRP_DESCRIPCION));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(GRP_CONCRETO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal GRP_NUMERO, decimal ESTR_CODIGO, global::System.Nullable<decimal> GRP_PADRE_CODIGO, string GRP_NOMBRE, string GRP_DESCRIPCION, decimal GRP_CONCRETO, decimal Original_GRP_CODIGO, decimal Original_GRP_NUMERO, decimal Original_ESTR_CODIGO, global::System.Nullable<decimal> Original_GRP_PADRE_CODIGO, string Original_GRP_NOMBRE, string Original_GRP_DESCRIPCION, decimal Original_GRP_CONCRETO, decimal GRP_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(GRP_NUMERO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(ESTR_CODIGO));
            if ((GRP_PADRE_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(GRP_PADRE_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((GRP_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(GRP_NOMBRE));
            }
            if ((GRP_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(GRP_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(GRP_CONCRETO));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_GRP_CODIGO));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_GRP_NUMERO));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_ESTR_CODIGO));
            if ((Original_GRP_PADRE_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_GRP_PADRE_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_GRP_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_GRP_NOMBRE));
            }
            if ((Original_GRP_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_GRP_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_GRP_CONCRETO));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(GRP_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal GRP_NUMERO, decimal ESTR_CODIGO, global::System.Nullable<decimal> GRP_PADRE_CODIGO, string GRP_NOMBRE, string GRP_DESCRIPCION, decimal GRP_CONCRETO, decimal Original_GRP_CODIGO, decimal Original_GRP_NUMERO, decimal Original_ESTR_CODIGO, global::System.Nullable<decimal> Original_GRP_PADRE_CODIGO, string Original_GRP_NOMBRE, string Original_GRP_DESCRIPCION, decimal Original_GRP_CONCRETO) {
            return this.Update(GRP_NUMERO, ESTR_CODIGO, GRP_PADRE_CODIGO, GRP_NOMBRE, GRP_DESCRIPCION, GRP_CONCRETO, Original_GRP_CODIGO, Original_GRP_NUMERO, Original_ESTR_CODIGO, Original_GRP_PADRE_CODIGO, Original_GRP_NOMBRE, Original_GRP_DESCRIPCION, Original_GRP_CONCRETO, Original_GRP_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MATERIAS_PRIMASTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MATERIAS_PRIMASTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MATERIAS_PRIMAS";
            tableMapping.ColumnMappings.Add("MP_CODIGO", "MP_CODIGO");
            tableMapping.ColumnMappings.Add("UMED_CODIGO", "UMED_CODIGO");
            tableMapping.ColumnMappings.Add("MP_NOMBRE", "MP_NOMBRE");
            tableMapping.ColumnMappings.Add("MP_DESCRIPCION", "MP_DESCRIPCION");
            tableMapping.ColumnMappings.Add("MP_CANTIDADSTOCK", "MP_CANTIDADSTOCK");
            tableMapping.ColumnMappings.Add("MP_COSTO", "MP_COSTO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[MATERIAS_PRIMAS] WHERE (([MP_CODIGO] = @Original_MP_CODIGO) AND ((@IsNull_UMED_CODIGO = 1 AND [UMED_CODIGO] IS NULL) OR ([UMED_CODIGO] = @Original_UMED_CODIGO)) AND ((@IsNull_MP_NOMBRE = 1 AND [MP_NOMBRE] IS NULL) OR ([MP_NOMBRE] = @Original_MP_NOMBRE)) AND ((@IsNull_MP_DESCRIPCION = 1 AND [MP_DESCRIPCION] IS NULL) OR ([MP_DESCRIPCION] = @Original_MP_DESCRIPCION)) AND ((@IsNull_MP_CANTIDADSTOCK = 1 AND [MP_CANTIDADSTOCK] IS NULL) OR ([MP_CANTIDADSTOCK] = @Original_MP_CANTIDADSTOCK)) AND ((@IsNull_MP_PRECIO = 1 AND [MP_PRECIO] IS NULL) OR ([MP_PRECIO] = @Original_MP_PRECIO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_PRECIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_PRECIO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_PRECIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MP_PRECIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[MATERIAS_PRIMAS] ([UMED_CODIGO], [MP_NOMBRE], [MP_DESCRIPCION], [MP_CANTIDADSTOCK], [MP_PRECIO]) VALUES (@UMED_CODIGO, @MP_NOMBRE, @MP_DESCRIPCION, @MP_CANTIDADSTOCK, @MP_PRECIO);
SELECT MP_CODIGO, UMED_CODIGO, MP_NOMBRE, MP_DESCRIPCION, MP_CANTIDADSTOCK, MP_PRECIO FROM MATERIAS_PRIMAS WHERE (MP_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CANTIDADSTOCK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_PRECIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MP_PRECIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[MATERIAS_PRIMAS] SET [UMED_CODIGO] = @UMED_CODIGO, [MP_NOMBRE] = @MP_NOMBRE, [MP_DESCRIPCION] = @MP_DESCRIPCION, [MP_CANTIDADSTOCK] = @MP_CANTIDADSTOCK, [MP_PRECIO] = @MP_PRECIO WHERE (([MP_CODIGO] = @Original_MP_CODIGO) AND ((@IsNull_UMED_CODIGO = 1 AND [UMED_CODIGO] IS NULL) OR ([UMED_CODIGO] = @Original_UMED_CODIGO)) AND ((@IsNull_MP_NOMBRE = 1 AND [MP_NOMBRE] IS NULL) OR ([MP_NOMBRE] = @Original_MP_NOMBRE)) AND ((@IsNull_MP_DESCRIPCION = 1 AND [MP_DESCRIPCION] IS NULL) OR ([MP_DESCRIPCION] = @Original_MP_DESCRIPCION)) AND ((@IsNull_MP_CANTIDADSTOCK = 1 AND [MP_CANTIDADSTOCK] IS NULL) OR ([MP_CANTIDADSTOCK] = @Original_MP_CANTIDADSTOCK)) AND ((@IsNull_MP_PRECIO = 1 AND [MP_PRECIO] IS NULL) OR ([MP_PRECIO] = @Original_MP_PRECIO)));
SELECT MP_CODIGO, UMED_CODIGO, MP_NOMBRE, MP_DESCRIPCION, MP_CANTIDADSTOCK, MP_PRECIO FROM MATERIAS_PRIMAS WHERE (MP_CODIGO = @MP_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CANTIDADSTOCK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_PRECIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MP_PRECIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_PRECIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_PRECIO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_PRECIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MP_PRECIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MP_CODIGO, UMED_CODIGO, MP_NOMBRE, MP_DESCRIPCION, MP_CANTIDADSTOCK, MP_PR" +
                "ECIO FROM dbo.MATERIAS_PRIMAS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEstructura.MATERIAS_PRIMASDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEstructura.MATERIAS_PRIMASDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEstructura.MATERIAS_PRIMASDataTable dataTable = new dsEstructura.MATERIAS_PRIMASDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura.MATERIAS_PRIMASDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura dataSet) {
            return this.Adapter.Update(dataSet, "MATERIAS_PRIMAS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_MP_CODIGO, global::System.Nullable<decimal> Original_UMED_CODIGO, string Original_MP_NOMBRE, string Original_MP_DESCRIPCION, global::System.Nullable<int> Original_MP_CANTIDADSTOCK, global::System.Nullable<decimal> Original_MP_PRECIO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_MP_CODIGO));
            if ((Original_UMED_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_UMED_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_MP_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_MP_NOMBRE));
            }
            if ((Original_MP_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_MP_DESCRIPCION));
            }
            if ((Original_MP_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_MP_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_MP_PRECIO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_MP_PRECIO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<decimal> UMED_CODIGO, string MP_NOMBRE, string MP_DESCRIPCION, global::System.Nullable<int> MP_CANTIDADSTOCK, global::System.Nullable<decimal> MP_PRECIO) {
            if ((UMED_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(UMED_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MP_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MP_NOMBRE));
            }
            if ((MP_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MP_DESCRIPCION));
            }
            if ((MP_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(MP_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((MP_PRECIO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(MP_PRECIO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> UMED_CODIGO, string MP_NOMBRE, string MP_DESCRIPCION, global::System.Nullable<int> MP_CANTIDADSTOCK, global::System.Nullable<decimal> MP_PRECIO, decimal Original_MP_CODIGO, global::System.Nullable<decimal> Original_UMED_CODIGO, string Original_MP_NOMBRE, string Original_MP_DESCRIPCION, global::System.Nullable<int> Original_MP_CANTIDADSTOCK, global::System.Nullable<decimal> Original_MP_PRECIO, decimal MP_CODIGO) {
            if ((UMED_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(UMED_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MP_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MP_NOMBRE));
            }
            if ((MP_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MP_DESCRIPCION));
            }
            if ((MP_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(MP_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((MP_PRECIO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(MP_PRECIO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_MP_CODIGO));
            if ((Original_UMED_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_UMED_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_MP_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_MP_NOMBRE));
            }
            if ((Original_MP_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_MP_DESCRIPCION));
            }
            if ((Original_MP_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_MP_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_MP_PRECIO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_MP_PRECIO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(MP_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> UMED_CODIGO, string MP_NOMBRE, string MP_DESCRIPCION, global::System.Nullable<int> MP_CANTIDADSTOCK, global::System.Nullable<decimal> MP_PRECIO, decimal Original_MP_CODIGO, global::System.Nullable<decimal> Original_UMED_CODIGO, string Original_MP_NOMBRE, string Original_MP_DESCRIPCION, global::System.Nullable<int> Original_MP_CANTIDADSTOCK, global::System.Nullable<decimal> Original_MP_PRECIO) {
            return this.Update(UMED_CODIGO, MP_NOMBRE, MP_DESCRIPCION, MP_CANTIDADSTOCK, MP_PRECIO, Original_MP_CODIGO, Original_UMED_CODIGO, Original_MP_NOMBRE, Original_MP_DESCRIPCION, Original_MP_CANTIDADSTOCK, Original_MP_PRECIO, Original_MP_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PLANOSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PLANOSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PLANOS";
            tableMapping.ColumnMappings.Add("PNO_CODIGO", "PNO_CODIGO");
            tableMapping.ColumnMappings.Add("PNO_FECHACREACION", "PNO_FECHACREACION");
            tableMapping.ColumnMappings.Add("PNO_OBSERVACIONES", "PNO_OBSERVACIONES");
            tableMapping.ColumnMappings.Add("PNO_NOMBRE", "PNO_NOMBRE");
            tableMapping.ColumnMappings.Add("PNO_NUMERO", "PNO_NUMERO");
            tableMapping.ColumnMappings.Add("PNO_HABILITADO", "PNO_HABILITADO");
            tableMapping.ColumnMappings.Add("PNO_FECHAHABILITADO", "PNO_FECHAHABILITADO");
            tableMapping.ColumnMappings.Add("PNO_FECHADESHABILITADO", "PNO_FECHADESHABILITADO");
            tableMapping.ColumnMappings.Add("PNO_FECHAMODIFICACION", "PNO_FECHAMODIFICACION");
            tableMapping.ColumnMappings.Add("PNO_LETRACAMBIO", "PNO_LETRACAMBIO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PLANOS] WHERE (([PNO_CODIGO] = @Original_PNO_CODIGO) AND ((@IsNull_PNO_FECHACREACION = 1 AND [PNO_FECHACREACION] IS NULL) OR ([PNO_FECHACREACION] = @Original_PNO_FECHACREACION)) AND ((@IsNull_PNO_OBSERVACIONES = 1 AND [PNO_OBSERVACIONES] IS NULL) OR ([PNO_OBSERVACIONES] = @Original_PNO_OBSERVACIONES)) AND ((@IsNull_PNO_NOMBRE = 1 AND [PNO_NOMBRE] IS NULL) OR ([PNO_NOMBRE] = @Original_PNO_NOMBRE)) AND ([PNO_NUMERO] = @Original_PNO_NUMERO) AND ([PNO_HABILITADO] = @Original_PNO_HABILITADO) AND ((@IsNull_PNO_FECHAHABILITADO = 1 AND [PNO_FECHAHABILITADO] IS NULL) OR ([PNO_FECHAHABILITADO] = @Original_PNO_FECHAHABILITADO)) AND ((@IsNull_PNO_FECHADESHABILITADO = 1 AND [PNO_FECHADESHABILITADO] IS NULL) OR ([PNO_FECHADESHABILITADO] = @Original_PNO_FECHADESHABILITADO)) AND ((@IsNull_PNO_FECHAMODIFICACION = 1 AND [PNO_FECHAMODIFICACION] IS NULL) OR ([PNO_FECHAMODIFICACION] = @Original_PNO_FECHAMODIFICACION)) AND ((@IsNull_PNO_LETRACAMBIO = 1 AND [PNO_LETRACAMBIO] IS NULL) OR ([PNO_LETRACAMBIO] = @Original_PNO_LETRACAMBIO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_FECHACREACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHACREACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_FECHACREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHACREACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_OBSERVACIONES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_OBSERVACIONES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_OBSERVACIONES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_OBSERVACIONES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_NUMERO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_HABILITADO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "PNO_HABILITADO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_FECHAHABILITADO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHAHABILITADO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_FECHAHABILITADO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHAHABILITADO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_FECHADESHABILITADO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHADESHABILITADO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_FECHADESHABILITADO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHADESHABILITADO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_FECHAMODIFICACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHAMODIFICACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_FECHAMODIFICACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHAMODIFICACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_LETRACAMBIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_LETRACAMBIO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_LETRACAMBIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_LETRACAMBIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PLANOS] ([PNO_FECHACREACION], [PNO_OBSERVACIONES], [PNO_NOMBRE], [PNO_NUMERO], [PNO_HABILITADO], [PNO_FECHAHABILITADO], [PNO_FECHADESHABILITADO], [PNO_FECHAMODIFICACION], [PNO_LETRACAMBIO]) VALUES (@PNO_FECHACREACION, @PNO_OBSERVACIONES, @PNO_NOMBRE, @PNO_NUMERO, @PNO_HABILITADO, @PNO_FECHAHABILITADO, @PNO_FECHADESHABILITADO, @PNO_FECHAMODIFICACION, @PNO_LETRACAMBIO);
SELECT PNO_CODIGO, PNO_FECHACREACION, PNO_OBSERVACIONES, PNO_NOMBRE, PNO_NUMERO, PNO_HABILITADO, PNO_FECHAHABILITADO, PNO_FECHADESHABILITADO, PNO_FECHAMODIFICACION, PNO_LETRACAMBIO FROM PLANOS WHERE (PNO_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_FECHACREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHACREACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_OBSERVACIONES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_OBSERVACIONES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_NUMERO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_HABILITADO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "PNO_HABILITADO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_FECHAHABILITADO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHAHABILITADO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_FECHADESHABILITADO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHADESHABILITADO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_FECHAMODIFICACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHAMODIFICACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_LETRACAMBIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_LETRACAMBIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[PLANOS] SET [PNO_FECHACREACION] = @PNO_FECHACREACION, [PNO_OBSERVAC" +
                "IONES] = @PNO_OBSERVACIONES, [PNO_NOMBRE] = @PNO_NOMBRE, [PNO_NUMERO] = @PNO_NUM" +
                "ERO, [PNO_HABILITADO] = @PNO_HABILITADO, [PNO_FECHAHABILITADO] = @PNO_FECHAHABIL" +
                "ITADO, [PNO_FECHADESHABILITADO] = @PNO_FECHADESHABILITADO, [PNO_FECHAMODIFICACIO" +
                "N] = @PNO_FECHAMODIFICACION, [PNO_LETRACAMBIO] = @PNO_LETRACAMBIO WHERE (([PNO_C" +
                "ODIGO] = @Original_PNO_CODIGO) AND ((@IsNull_PNO_FECHACREACION = 1 AND [PNO_FECH" +
                "ACREACION] IS NULL) OR ([PNO_FECHACREACION] = @Original_PNO_FECHACREACION)) AND " +
                "((@IsNull_PNO_OBSERVACIONES = 1 AND [PNO_OBSERVACIONES] IS NULL) OR ([PNO_OBSERV" +
                "ACIONES] = @Original_PNO_OBSERVACIONES)) AND ((@IsNull_PNO_NOMBRE = 1 AND [PNO_N" +
                "OMBRE] IS NULL) OR ([PNO_NOMBRE] = @Original_PNO_NOMBRE)) AND ([PNO_NUMERO] = @O" +
                "riginal_PNO_NUMERO) AND ([PNO_HABILITADO] = @Original_PNO_HABILITADO) AND ((@IsN" +
                "ull_PNO_FECHAHABILITADO = 1 AND [PNO_FECHAHABILITADO] IS NULL) OR ([PNO_FECHAHAB" +
                "ILITADO] = @Original_PNO_FECHAHABILITADO)) AND ((@IsNull_PNO_FECHADESHABILITADO " +
                "= 1 AND [PNO_FECHADESHABILITADO] IS NULL) OR ([PNO_FECHADESHABILITADO] = @Origin" +
                "al_PNO_FECHADESHABILITADO)) AND ((@IsNull_PNO_FECHAMODIFICACION = 1 AND [PNO_FEC" +
                "HAMODIFICACION] IS NULL) OR ([PNO_FECHAMODIFICACION] = @Original_PNO_FECHAMODIFI" +
                "CACION)) AND ((@IsNull_PNO_LETRACAMBIO = 1 AND [PNO_LETRACAMBIO] IS NULL) OR ([P" +
                "NO_LETRACAMBIO] = @Original_PNO_LETRACAMBIO)));\r\nSELECT PNO_CODIGO, PNO_FECHACRE" +
                "ACION, PNO_OBSERVACIONES, PNO_NOMBRE, PNO_NUMERO, PNO_HABILITADO, PNO_FECHAHABIL" +
                "ITADO, PNO_FECHADESHABILITADO, PNO_FECHAMODIFICACION, PNO_LETRACAMBIO FROM PLANO" +
                "S WHERE (PNO_CODIGO = @PNO_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_FECHACREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHACREACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_OBSERVACIONES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_OBSERVACIONES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_NUMERO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_HABILITADO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "PNO_HABILITADO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_FECHAHABILITADO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHAHABILITADO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_FECHADESHABILITADO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHADESHABILITADO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_FECHAMODIFICACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHAMODIFICACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_LETRACAMBIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_LETRACAMBIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_FECHACREACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHACREACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_FECHACREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHACREACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_OBSERVACIONES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_OBSERVACIONES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_OBSERVACIONES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_OBSERVACIONES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_NUMERO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_HABILITADO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "PNO_HABILITADO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_FECHAHABILITADO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHAHABILITADO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_FECHAHABILITADO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHAHABILITADO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_FECHADESHABILITADO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHADESHABILITADO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_FECHADESHABILITADO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHADESHABILITADO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_FECHAMODIFICACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHAMODIFICACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_FECHAMODIFICACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_FECHAMODIFICACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_LETRACAMBIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_LETRACAMBIO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_LETRACAMBIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_LETRACAMBIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PNO_CODIGO, PNO_FECHACREACION, PNO_OBSERVACIONES, PNO_NOMBRE, PNO_NUMERO, " +
                "PNO_HABILITADO, PNO_FECHAHABILITADO, PNO_FECHADESHABILITADO, PNO_FECHAMODIFICACI" +
                "ON, PNO_LETRACAMBIO FROM dbo.PLANOS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEstructura.PLANOSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEstructura.PLANOSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEstructura.PLANOSDataTable dataTable = new dsEstructura.PLANOSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura.PLANOSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura dataSet) {
            return this.Adapter.Update(dataSet, "PLANOS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_PNO_CODIGO, global::System.Nullable<global::System.DateTime> Original_PNO_FECHACREACION, string Original_PNO_OBSERVACIONES, string Original_PNO_NOMBRE, string Original_PNO_NUMERO, decimal Original_PNO_HABILITADO, global::System.Nullable<global::System.DateTime> Original_PNO_FECHAHABILITADO, global::System.Nullable<global::System.DateTime> Original_PNO_FECHADESHABILITADO, global::System.Nullable<global::System.DateTime> Original_PNO_FECHAMODIFICACION, string Original_PNO_LETRACAMBIO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_PNO_CODIGO));
            if ((Original_PNO_FECHACREACION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_PNO_FECHACREACION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_PNO_OBSERVACIONES == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PNO_OBSERVACIONES));
            }
            if ((Original_PNO_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_PNO_NOMBRE));
            }
            if ((Original_PNO_NUMERO == null)) {
                throw new global::System.ArgumentNullException("Original_PNO_NUMERO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_PNO_NUMERO));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_PNO_HABILITADO));
            if ((Original_PNO_FECHAHABILITADO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_PNO_FECHAHABILITADO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_PNO_FECHADESHABILITADO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_PNO_FECHADESHABILITADO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_PNO_FECHAMODIFICACION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_PNO_FECHAMODIFICACION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_PNO_LETRACAMBIO == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_PNO_LETRACAMBIO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<global::System.DateTime> PNO_FECHACREACION, string PNO_OBSERVACIONES, string PNO_NOMBRE, string PNO_NUMERO, decimal PNO_HABILITADO, global::System.Nullable<global::System.DateTime> PNO_FECHAHABILITADO, global::System.Nullable<global::System.DateTime> PNO_FECHADESHABILITADO, global::System.Nullable<global::System.DateTime> PNO_FECHAMODIFICACION, string PNO_LETRACAMBIO) {
            if ((PNO_FECHACREACION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(PNO_FECHACREACION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PNO_OBSERVACIONES == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PNO_OBSERVACIONES));
            }
            if ((PNO_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PNO_NOMBRE));
            }
            if ((PNO_NUMERO == null)) {
                throw new global::System.ArgumentNullException("PNO_NUMERO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PNO_NUMERO));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(PNO_HABILITADO));
            if ((PNO_FECHAHABILITADO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(PNO_FECHAHABILITADO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((PNO_FECHADESHABILITADO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(PNO_FECHADESHABILITADO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((PNO_FECHAMODIFICACION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(PNO_FECHAMODIFICACION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((PNO_LETRACAMBIO == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(PNO_LETRACAMBIO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> PNO_FECHACREACION, 
                    string PNO_OBSERVACIONES, 
                    string PNO_NOMBRE, 
                    string PNO_NUMERO, 
                    decimal PNO_HABILITADO, 
                    global::System.Nullable<global::System.DateTime> PNO_FECHAHABILITADO, 
                    global::System.Nullable<global::System.DateTime> PNO_FECHADESHABILITADO, 
                    global::System.Nullable<global::System.DateTime> PNO_FECHAMODIFICACION, 
                    string PNO_LETRACAMBIO, 
                    decimal Original_PNO_CODIGO, 
                    global::System.Nullable<global::System.DateTime> Original_PNO_FECHACREACION, 
                    string Original_PNO_OBSERVACIONES, 
                    string Original_PNO_NOMBRE, 
                    string Original_PNO_NUMERO, 
                    decimal Original_PNO_HABILITADO, 
                    global::System.Nullable<global::System.DateTime> Original_PNO_FECHAHABILITADO, 
                    global::System.Nullable<global::System.DateTime> Original_PNO_FECHADESHABILITADO, 
                    global::System.Nullable<global::System.DateTime> Original_PNO_FECHAMODIFICACION, 
                    string Original_PNO_LETRACAMBIO, 
                    decimal PNO_CODIGO) {
            if ((PNO_FECHACREACION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(PNO_FECHACREACION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PNO_OBSERVACIONES == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PNO_OBSERVACIONES));
            }
            if ((PNO_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PNO_NOMBRE));
            }
            if ((PNO_NUMERO == null)) {
                throw new global::System.ArgumentNullException("PNO_NUMERO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PNO_NUMERO));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(PNO_HABILITADO));
            if ((PNO_FECHAHABILITADO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(PNO_FECHAHABILITADO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((PNO_FECHADESHABILITADO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(PNO_FECHADESHABILITADO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((PNO_FECHAMODIFICACION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(PNO_FECHAMODIFICACION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((PNO_LETRACAMBIO == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(PNO_LETRACAMBIO));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_PNO_CODIGO));
            if ((Original_PNO_FECHACREACION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_PNO_FECHACREACION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_PNO_OBSERVACIONES == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_PNO_OBSERVACIONES));
            }
            if ((Original_PNO_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_PNO_NOMBRE));
            }
            if ((Original_PNO_NUMERO == null)) {
                throw new global::System.ArgumentNullException("Original_PNO_NUMERO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_PNO_NUMERO));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_PNO_HABILITADO));
            if ((Original_PNO_FECHAHABILITADO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_PNO_FECHAHABILITADO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_PNO_FECHADESHABILITADO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_PNO_FECHADESHABILITADO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_PNO_FECHAMODIFICACION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_PNO_FECHAMODIFICACION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_PNO_LETRACAMBIO == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_PNO_LETRACAMBIO));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(PNO_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> PNO_FECHACREACION, 
                    string PNO_OBSERVACIONES, 
                    string PNO_NOMBRE, 
                    string PNO_NUMERO, 
                    decimal PNO_HABILITADO, 
                    global::System.Nullable<global::System.DateTime> PNO_FECHAHABILITADO, 
                    global::System.Nullable<global::System.DateTime> PNO_FECHADESHABILITADO, 
                    global::System.Nullable<global::System.DateTime> PNO_FECHAMODIFICACION, 
                    string PNO_LETRACAMBIO, 
                    decimal Original_PNO_CODIGO, 
                    global::System.Nullable<global::System.DateTime> Original_PNO_FECHACREACION, 
                    string Original_PNO_OBSERVACIONES, 
                    string Original_PNO_NOMBRE, 
                    string Original_PNO_NUMERO, 
                    decimal Original_PNO_HABILITADO, 
                    global::System.Nullable<global::System.DateTime> Original_PNO_FECHAHABILITADO, 
                    global::System.Nullable<global::System.DateTime> Original_PNO_FECHADESHABILITADO, 
                    global::System.Nullable<global::System.DateTime> Original_PNO_FECHAMODIFICACION, 
                    string Original_PNO_LETRACAMBIO) {
            return this.Update(PNO_FECHACREACION, PNO_OBSERVACIONES, PNO_NOMBRE, PNO_NUMERO, PNO_HABILITADO, PNO_FECHAHABILITADO, PNO_FECHADESHABILITADO, PNO_FECHAMODIFICACION, PNO_LETRACAMBIO, Original_PNO_CODIGO, Original_PNO_FECHACREACION, Original_PNO_OBSERVACIONES, Original_PNO_NOMBRE, Original_PNO_NUMERO, Original_PNO_HABILITADO, Original_PNO_FECHAHABILITADO, Original_PNO_FECHADESHABILITADO, Original_PNO_FECHAMODIFICACION, Original_PNO_LETRACAMBIO, Original_PNO_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ESTADO_PARTESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ESTADO_PARTESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ESTADO_PARTES";
            tableMapping.ColumnMappings.Add("PAR_CODIGO", "PAR_CODIGO");
            tableMapping.ColumnMappings.Add("PAR_NOMBRE", "PAR_NOMBRE");
            tableMapping.ColumnMappings.Add("PAR_DESCRIPCION", "PAR_DESCRIPCION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ESTADO_PARTES] WHERE (([PAR_CODIGO] = @Original_PAR_CODIGO) AND ((@IsNull_PAR_NOMBRE = 1 AND [PAR_NOMBRE] IS NULL) OR ([PAR_NOMBRE] = @Original_PAR_NOMBRE)) AND ((@IsNull_PAR_DESCRIPCION = 1 AND [PAR_DESCRIPCION] IS NULL) OR ([PAR_DESCRIPCION] = @Original_PAR_DESCRIPCION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PAR_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAR_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAR_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PAR_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAR_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAR_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAR_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ESTADO_PARTES] ([PAR_NOMBRE], [PAR_DESCRIPCION]) VALUES (@PAR_" +
                "NOMBRE, @PAR_DESCRIPCION);\r\nSELECT PAR_CODIGO, PAR_NOMBRE, PAR_DESCRIPCION FROM " +
                "ESTADO_PARTES WHERE (PAR_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAR_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAR_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAR_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ESTADO_PARTES] SET [PAR_NOMBRE] = @PAR_NOMBRE, [PAR_DESCRIPCION] = @PAR_DESCRIPCION WHERE (([PAR_CODIGO] = @Original_PAR_CODIGO) AND ((@IsNull_PAR_NOMBRE = 1 AND [PAR_NOMBRE] IS NULL) OR ([PAR_NOMBRE] = @Original_PAR_NOMBRE)) AND ((@IsNull_PAR_DESCRIPCION = 1 AND [PAR_DESCRIPCION] IS NULL) OR ([PAR_DESCRIPCION] = @Original_PAR_DESCRIPCION)));
SELECT PAR_CODIGO, PAR_NOMBRE, PAR_DESCRIPCION FROM ESTADO_PARTES WHERE (PAR_CODIGO = @PAR_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAR_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAR_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAR_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PAR_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAR_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAR_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PAR_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAR_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAR_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAR_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAR_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "PAR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PAR_CODIGO, PAR_NOMBRE, PAR_DESCRIPCION FROM dbo.ESTADO_PARTES";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEstructura.ESTADO_PARTESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEstructura.ESTADO_PARTESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEstructura.ESTADO_PARTESDataTable dataTable = new dsEstructura.ESTADO_PARTESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura.ESTADO_PARTESDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura dataSet) {
            return this.Adapter.Update(dataSet, "ESTADO_PARTES");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_PAR_CODIGO, string Original_PAR_NOMBRE, string Original_PAR_DESCRIPCION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_PAR_CODIGO));
            if ((Original_PAR_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PAR_NOMBRE));
            }
            if ((Original_PAR_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PAR_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string PAR_NOMBRE, string PAR_DESCRIPCION) {
            if ((PAR_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PAR_NOMBRE));
            }
            if ((PAR_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PAR_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PAR_NOMBRE, string PAR_DESCRIPCION, decimal Original_PAR_CODIGO, string Original_PAR_NOMBRE, string Original_PAR_DESCRIPCION, decimal PAR_CODIGO) {
            if ((PAR_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PAR_NOMBRE));
            }
            if ((PAR_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PAR_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_PAR_CODIGO));
            if ((Original_PAR_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_PAR_NOMBRE));
            }
            if ((Original_PAR_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_PAR_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(PAR_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PAR_NOMBRE, string PAR_DESCRIPCION, decimal Original_PAR_CODIGO, string Original_PAR_NOMBRE, string Original_PAR_DESCRIPCION) {
            return this.Update(PAR_NOMBRE, PAR_DESCRIPCION, Original_PAR_CODIGO, Original_PAR_NOMBRE, Original_PAR_DESCRIPCION, Original_PAR_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TERMINACIONESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TERMINACIONESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TERMINACIONES";
            tableMapping.ColumnMappings.Add("TE_CODIGO", "TE_CODIGO");
            tableMapping.ColumnMappings.Add("TE_NOMBRE", "TE_NOMBRE");
            tableMapping.ColumnMappings.Add("TE_DESCRIPCION", "TE_DESCRIPCION");
            tableMapping.ColumnMappings.Add("TE_ABREVIATURA", "TE_ABREVIATURA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TERMINACIONES] WHERE (([TE_CODIGO] = @Original_TE_CODIGO) AND ((@IsNull_TE_NOMBRE = 1 AND [TE_NOMBRE] IS NULL) OR ([TE_NOMBRE] = @Original_TE_NOMBRE)) AND ((@IsNull_TE_DESCRIPCION = 1 AND [TE_DESCRIPCION] IS NULL) OR ([TE_DESCRIPCION] = @Original_TE_DESCRIPCION)) AND ([TE_ABREVIATURA] = @Original_TE_ABREVIATURA))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TE_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TE_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TE_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TE_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TE_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TE_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TE_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TE_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TE_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TE_ABREVIATURA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TERMINACIONES] ([TE_NOMBRE], [TE_DESCRIPCION], [TE_ABREVIATURA" +
                "]) VALUES (@TE_NOMBRE, @TE_DESCRIPCION, @TE_ABREVIATURA);\r\nSELECT TE_CODIGO, TE_" +
                "NOMBRE, TE_DESCRIPCION, TE_ABREVIATURA FROM TERMINACIONES WHERE (TE_CODIGO = SCO" +
                "PE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TE_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TE_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TE_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TE_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TE_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TE_ABREVIATURA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TERMINACIONES] SET [TE_NOMBRE] = @TE_NOMBRE, [TE_DESCRIPCION] = @TE_DESCRIPCION, [TE_ABREVIATURA] = @TE_ABREVIATURA WHERE (([TE_CODIGO] = @Original_TE_CODIGO) AND ((@IsNull_TE_NOMBRE = 1 AND [TE_NOMBRE] IS NULL) OR ([TE_NOMBRE] = @Original_TE_NOMBRE)) AND ((@IsNull_TE_DESCRIPCION = 1 AND [TE_DESCRIPCION] IS NULL) OR ([TE_DESCRIPCION] = @Original_TE_DESCRIPCION)) AND ([TE_ABREVIATURA] = @Original_TE_ABREVIATURA));
SELECT TE_CODIGO, TE_NOMBRE, TE_DESCRIPCION, TE_ABREVIATURA FROM TERMINACIONES WHERE (TE_CODIGO = @TE_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TE_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TE_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TE_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TE_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TE_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TE_ABREVIATURA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TE_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TE_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TE_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TE_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TE_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TE_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TE_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TE_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TE_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TE_ABREVIATURA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TE_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "TE_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TE_CODIGO, TE_NOMBRE, TE_DESCRIPCION, TE_ABREVIATURA FROM dbo.TERMINACIONE" +
                "S";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEstructura.TERMINACIONESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEstructura.TERMINACIONESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEstructura.TERMINACIONESDataTable dataTable = new dsEstructura.TERMINACIONESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura.TERMINACIONESDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura dataSet) {
            return this.Adapter.Update(dataSet, "TERMINACIONES");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_TE_CODIGO, string Original_TE_NOMBRE, string Original_TE_DESCRIPCION, string Original_TE_ABREVIATURA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_TE_CODIGO));
            if ((Original_TE_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TE_NOMBRE));
            }
            if ((Original_TE_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TE_DESCRIPCION));
            }
            if ((Original_TE_ABREVIATURA == null)) {
                throw new global::System.ArgumentNullException("Original_TE_ABREVIATURA");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_TE_ABREVIATURA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TE_NOMBRE, string TE_DESCRIPCION, string TE_ABREVIATURA) {
            if ((TE_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TE_NOMBRE));
            }
            if ((TE_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TE_DESCRIPCION));
            }
            if ((TE_ABREVIATURA == null)) {
                throw new global::System.ArgumentNullException("TE_ABREVIATURA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TE_ABREVIATURA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TE_NOMBRE, string TE_DESCRIPCION, string TE_ABREVIATURA, decimal Original_TE_CODIGO, string Original_TE_NOMBRE, string Original_TE_DESCRIPCION, string Original_TE_ABREVIATURA, decimal TE_CODIGO) {
            if ((TE_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TE_NOMBRE));
            }
            if ((TE_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TE_DESCRIPCION));
            }
            if ((TE_ABREVIATURA == null)) {
                throw new global::System.ArgumentNullException("TE_ABREVIATURA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TE_ABREVIATURA));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_TE_CODIGO));
            if ((Original_TE_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_TE_NOMBRE));
            }
            if ((Original_TE_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_TE_DESCRIPCION));
            }
            if ((Original_TE_ABREVIATURA == null)) {
                throw new global::System.ArgumentNullException("Original_TE_ABREVIATURA");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_TE_ABREVIATURA));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(TE_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TE_NOMBRE, string TE_DESCRIPCION, string TE_ABREVIATURA, decimal Original_TE_CODIGO, string Original_TE_NOMBRE, string Original_TE_DESCRIPCION, string Original_TE_ABREVIATURA) {
            return this.Update(TE_NOMBRE, TE_DESCRIPCION, TE_ABREVIATURA, Original_TE_CODIGO, Original_TE_NOMBRE, Original_TE_DESCRIPCION, Original_TE_ABREVIATURA, Original_TE_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PIEZASXCONJUNTOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PIEZASXCONJUNTOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PIEZASXCONJUNTO";
            tableMapping.ColumnMappings.Add("PXCJ_CODIGO", "PXCJ_CODIGO");
            tableMapping.ColumnMappings.Add("CONJ_CODIGO", "CONJ_CODIGO");
            tableMapping.ColumnMappings.Add("PZA_CODIGO", "PZA_CODIGO");
            tableMapping.ColumnMappings.Add("PXCJ_CANTIDAD", "PXCJ_CANTIDAD");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PIEZASXCONJUNTO] WHERE (([PXCJ_CODIGO] = @Original_PXCJ_CODIGO" +
                ") AND ([CONJ_CODIGO] = @Original_CONJ_CODIGO) AND ([PZA_CODIGO] = @Original_PZA_" +
                "CODIGO) AND ([PXCJ_CANTIDAD] = @Original_PXCJ_CANTIDAD))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PXCJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PXCJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CONJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PXCJ_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PXCJ_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PIEZASXCONJUNTO] ([CONJ_CODIGO], [PZA_CODIGO], [PXCJ_CANTIDAD]" +
                ") VALUES (@CONJ_CODIGO, @PZA_CODIGO, @PXCJ_CANTIDAD);\r\nSELECT PXCJ_CODIGO, CONJ_" +
                "CODIGO, PZA_CODIGO, PXCJ_CANTIDAD FROM PIEZASXCONJUNTO WHERE (PXCJ_CODIGO = SCOP" +
                "E_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CONJ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PXCJ_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PXCJ_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PIEZASXCONJUNTO] SET [CONJ_CODIGO] = @CONJ_CODIGO, [PZA_CODIGO] = @PZA_CODIGO, [PXCJ_CANTIDAD] = @PXCJ_CANTIDAD WHERE (([PXCJ_CODIGO] = @Original_PXCJ_CODIGO) AND ([CONJ_CODIGO] = @Original_CONJ_CODIGO) AND ([PZA_CODIGO] = @Original_PZA_CODIGO) AND ([PXCJ_CANTIDAD] = @Original_PXCJ_CANTIDAD));
SELECT PXCJ_CODIGO, CONJ_CODIGO, PZA_CODIGO, PXCJ_CANTIDAD FROM PIEZASXCONJUNTO WHERE (PXCJ_CODIGO = @PXCJ_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CONJ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PXCJ_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PXCJ_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PXCJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PXCJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CONJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PXCJ_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PXCJ_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PXCJ_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "PXCJ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PXCJ_CODIGO, CONJ_CODIGO, PZA_CODIGO, PXCJ_CANTIDAD FROM dbo.PIEZASXCONJUN" +
                "TO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEstructura.PIEZASXCONJUNTODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEstructura.PIEZASXCONJUNTODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEstructura.PIEZASXCONJUNTODataTable dataTable = new dsEstructura.PIEZASXCONJUNTODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura.PIEZASXCONJUNTODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura dataSet) {
            return this.Adapter.Update(dataSet, "PIEZASXCONJUNTO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_PXCJ_CODIGO, decimal Original_CONJ_CODIGO, decimal Original_PZA_CODIGO, decimal Original_PXCJ_CANTIDAD) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_PXCJ_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_CONJ_CODIGO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_PZA_CODIGO));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_PXCJ_CANTIDAD));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal CONJ_CODIGO, decimal PZA_CODIGO, decimal PXCJ_CANTIDAD) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(CONJ_CODIGO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(PZA_CODIGO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(PXCJ_CANTIDAD));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal CONJ_CODIGO, decimal PZA_CODIGO, decimal PXCJ_CANTIDAD, decimal Original_PXCJ_CODIGO, decimal Original_CONJ_CODIGO, decimal Original_PZA_CODIGO, decimal Original_PXCJ_CANTIDAD, decimal PXCJ_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(CONJ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(PZA_CODIGO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(PXCJ_CANTIDAD));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_PXCJ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_CONJ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_PZA_CODIGO));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_PXCJ_CANTIDAD));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(PXCJ_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal CONJ_CODIGO, decimal PZA_CODIGO, decimal PXCJ_CANTIDAD, decimal Original_PXCJ_CODIGO, decimal Original_CONJ_CODIGO, decimal Original_PZA_CODIGO, decimal Original_PXCJ_CANTIDAD) {
            return this.Update(CONJ_CODIGO, PZA_CODIGO, PXCJ_CANTIDAD, Original_PXCJ_CODIGO, Original_CONJ_CODIGO, Original_PZA_CODIGO, Original_PXCJ_CANTIDAD, Original_PXCJ_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PIEZASXSUBCONJUNTOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PIEZASXSUBCONJUNTOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PIEZASXSUBCONJUNTO";
            tableMapping.ColumnMappings.Add("PXSC_CODIGO", "PXSC_CODIGO");
            tableMapping.ColumnMappings.Add("PZA_CODIGO", "PZA_CODIGO");
            tableMapping.ColumnMappings.Add("SCONJ_CODIGO", "SCONJ_CODIGO");
            tableMapping.ColumnMappings.Add("PXSC_CANTIDAD", "PXSC_CANTIDAD");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PIEZASXSUBCONJUNTO] WHERE (([PXSC_CODIGO] = @Original_PXSC_COD" +
                "IGO) AND ([PZA_CODIGO] = @Original_PZA_CODIGO) AND ([SCONJ_CODIGO] = @Original_S" +
                "CONJ_CODIGO) AND ([PXSC_CANTIDAD] = @Original_PXSC_CANTIDAD))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PXSC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PXSC_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCONJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PXSC_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PXSC_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PIEZASXSUBCONJUNTO] ([PZA_CODIGO], [SCONJ_CODIGO], [PXSC_CANTIDAD]) VALUES (@PZA_CODIGO, @SCONJ_CODIGO, @PXSC_CANTIDAD);
SELECT PXSC_CODIGO, PZA_CODIGO, SCONJ_CODIGO, PXSC_CANTIDAD FROM PIEZASXSUBCONJUNTO WHERE (PXSC_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCONJ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PXSC_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PXSC_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PIEZASXSUBCONJUNTO] SET [PZA_CODIGO] = @PZA_CODIGO, [SCONJ_CODIGO] = @SCONJ_CODIGO, [PXSC_CANTIDAD] = @PXSC_CANTIDAD WHERE (([PXSC_CODIGO] = @Original_PXSC_CODIGO) AND ([PZA_CODIGO] = @Original_PZA_CODIGO) AND ([SCONJ_CODIGO] = @Original_SCONJ_CODIGO) AND ([PXSC_CANTIDAD] = @Original_PXSC_CANTIDAD));
SELECT PXSC_CODIGO, PZA_CODIGO, SCONJ_CODIGO, PXSC_CANTIDAD FROM PIEZASXSUBCONJUNTO WHERE (PXSC_CODIGO = @PXSC_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCONJ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PXSC_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PXSC_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PXSC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PXSC_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCONJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PXSC_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PXSC_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PXSC_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "PXSC_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PXSC_CODIGO, PZA_CODIGO, SCONJ_CODIGO, PXSC_CANTIDAD FROM dbo.PIEZASXSUBCO" +
                "NJUNTO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEstructura.PIEZASXSUBCONJUNTODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEstructura.PIEZASXSUBCONJUNTODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEstructura.PIEZASXSUBCONJUNTODataTable dataTable = new dsEstructura.PIEZASXSUBCONJUNTODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura.PIEZASXSUBCONJUNTODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura dataSet) {
            return this.Adapter.Update(dataSet, "PIEZASXSUBCONJUNTO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_PXSC_CODIGO, decimal Original_PZA_CODIGO, decimal Original_SCONJ_CODIGO, decimal Original_PXSC_CANTIDAD) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_PXSC_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_PZA_CODIGO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_SCONJ_CODIGO));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_PXSC_CANTIDAD));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal PZA_CODIGO, decimal SCONJ_CODIGO, decimal PXSC_CANTIDAD) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(PZA_CODIGO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(SCONJ_CODIGO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(PXSC_CANTIDAD));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal PZA_CODIGO, decimal SCONJ_CODIGO, decimal PXSC_CANTIDAD, decimal Original_PXSC_CODIGO, decimal Original_PZA_CODIGO, decimal Original_SCONJ_CODIGO, decimal Original_PXSC_CANTIDAD, decimal PXSC_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(PZA_CODIGO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(SCONJ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(PXSC_CANTIDAD));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_PXSC_CODIGO));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_PZA_CODIGO));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_SCONJ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_PXSC_CANTIDAD));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(PXSC_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal PZA_CODIGO, decimal SCONJ_CODIGO, decimal PXSC_CANTIDAD, decimal Original_PXSC_CODIGO, decimal Original_PZA_CODIGO, decimal Original_SCONJ_CODIGO, decimal Original_PXSC_CANTIDAD) {
            return this.Update(PZA_CODIGO, SCONJ_CODIGO, PXSC_CANTIDAD, Original_PXSC_CODIGO, Original_PZA_CODIGO, Original_SCONJ_CODIGO, Original_PXSC_CANTIDAD, Original_PXSC_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SUBCONJUNTOSXCONJUNTOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SUBCONJUNTOSXCONJUNTOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SUBCONJUNTOSXCONJUNTO";
            tableMapping.ColumnMappings.Add("SCXCJ_CODIGO", "SCXCJ_CODIGO");
            tableMapping.ColumnMappings.Add("CONJ_CODIGO", "CONJ_CODIGO");
            tableMapping.ColumnMappings.Add("SCONJ_CODIGO", "SCONJ_CODIGO");
            tableMapping.ColumnMappings.Add("SCXCJ_CANTIDAD", "SCXCJ_CANTIDAD");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[SUBCONJUNTOSXCONJUNTO] WHERE (([SCXCJ_CODIGO] = @Original_SCXC" +
                "J_CODIGO) AND ([CONJ_CODIGO] = @Original_CONJ_CODIGO) AND ([SCONJ_CODIGO] = @Ori" +
                "ginal_SCONJ_CODIGO) AND ([SCXCJ_CANTIDAD] = @Original_SCXCJ_CANTIDAD))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCXCJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCXCJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CONJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCONJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCXCJ_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCXCJ_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SUBCONJUNTOSXCONJUNTO] ([CONJ_CODIGO], [SCONJ_CODIGO], [SCXCJ_CANTIDAD]) VALUES (@CONJ_CODIGO, @SCONJ_CODIGO, @SCXCJ_CANTIDAD);
SELECT SCXCJ_CODIGO, CONJ_CODIGO, SCONJ_CODIGO, SCXCJ_CANTIDAD FROM SUBCONJUNTOSXCONJUNTO WHERE (SCXCJ_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CONJ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCONJ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCXCJ_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCXCJ_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[SUBCONJUNTOSXCONJUNTO] SET [CONJ_CODIGO] = @CONJ_CODIGO, [SCONJ_CODIGO] = @SCONJ_CODIGO, [SCXCJ_CANTIDAD] = @SCXCJ_CANTIDAD WHERE (([SCXCJ_CODIGO] = @Original_SCXCJ_CODIGO) AND ([CONJ_CODIGO] = @Original_CONJ_CODIGO) AND ([SCONJ_CODIGO] = @Original_SCONJ_CODIGO) AND ([SCXCJ_CANTIDAD] = @Original_SCXCJ_CANTIDAD));
SELECT SCXCJ_CODIGO, CONJ_CODIGO, SCONJ_CODIGO, SCXCJ_CANTIDAD FROM SUBCONJUNTOSXCONJUNTO WHERE (SCXCJ_CODIGO = @SCXCJ_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CONJ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCONJ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCXCJ_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCXCJ_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCXCJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCXCJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CONJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCONJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCXCJ_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCXCJ_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCXCJ_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "SCXCJ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SCXCJ_CODIGO, CONJ_CODIGO, SCONJ_CODIGO, SCXCJ_CANTIDAD FROM dbo.SUBCONJUN" +
                "TOSXCONJUNTO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEstructura.SUBCONJUNTOSXCONJUNTODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEstructura.SUBCONJUNTOSXCONJUNTODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEstructura.SUBCONJUNTOSXCONJUNTODataTable dataTable = new dsEstructura.SUBCONJUNTOSXCONJUNTODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura.SUBCONJUNTOSXCONJUNTODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura dataSet) {
            return this.Adapter.Update(dataSet, "SUBCONJUNTOSXCONJUNTO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_SCXCJ_CODIGO, decimal Original_CONJ_CODIGO, decimal Original_SCONJ_CODIGO, decimal Original_SCXCJ_CANTIDAD) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_SCXCJ_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_CONJ_CODIGO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_SCONJ_CODIGO));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_SCXCJ_CANTIDAD));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal CONJ_CODIGO, decimal SCONJ_CODIGO, decimal SCXCJ_CANTIDAD) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(CONJ_CODIGO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(SCONJ_CODIGO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(SCXCJ_CANTIDAD));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal CONJ_CODIGO, decimal SCONJ_CODIGO, decimal SCXCJ_CANTIDAD, decimal Original_SCXCJ_CODIGO, decimal Original_CONJ_CODIGO, decimal Original_SCONJ_CODIGO, decimal Original_SCXCJ_CANTIDAD, decimal SCXCJ_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(CONJ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(SCONJ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(SCXCJ_CANTIDAD));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_SCXCJ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_CONJ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_SCONJ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_SCXCJ_CANTIDAD));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(SCXCJ_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal CONJ_CODIGO, decimal SCONJ_CODIGO, decimal SCXCJ_CANTIDAD, decimal Original_SCXCJ_CODIGO, decimal Original_CONJ_CODIGO, decimal Original_SCONJ_CODIGO, decimal Original_SCXCJ_CANTIDAD) {
            return this.Update(CONJ_CODIGO, SCONJ_CODIGO, SCXCJ_CANTIDAD, Original_SCXCJ_CODIGO, Original_CONJ_CODIGO, Original_SCONJ_CODIGO, Original_SCXCJ_CANTIDAD, Original_SCXCJ_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CONJUNTOSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CONJUNTOSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CONJUNTOS";
            tableMapping.ColumnMappings.Add("CONJ_CODIGO", "CONJ_CODIGO");
            tableMapping.ColumnMappings.Add("CONJ_NOMBRE", "CONJ_NOMBRE");
            tableMapping.ColumnMappings.Add("CONJ_CANTIDADSTOCK", "CONJ_CANTIDADSTOCK");
            tableMapping.ColumnMappings.Add("CONJ_DESCRIPCION", "CONJ_DESCRIPCION");
            tableMapping.ColumnMappings.Add("PAR_CODIGO", "PAR_CODIGO");
            tableMapping.ColumnMappings.Add("PNO_CODIGO", "PNO_CODIGO");
            tableMapping.ColumnMappings.Add("CONJ_CODIGOPARTE", "CONJ_CODIGOPARTE");
            tableMapping.ColumnMappings.Add("CONJ_COSTO", "CONJ_COSTO");
            tableMapping.ColumnMappings.Add("HR_CODIGO", "HR_CODIGO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [CONJUNTOS] WHERE (([CONJ_CODIGO] = @Original_CONJ_CODIGO) AND ((@IsNull_CONJ_NOMBRE = 1 AND [CONJ_NOMBRE] IS NULL) OR ([CONJ_NOMBRE] = @Original_CONJ_NOMBRE)) AND ((@IsNull_CONJ_CANTIDADSTOCK = 1 AND [CONJ_CANTIDADSTOCK] IS NULL) OR ([CONJ_CANTIDADSTOCK] = @Original_CONJ_CANTIDADSTOCK)) AND ((@IsNull_CONJ_DESCRIPCION = 1 AND [CONJ_DESCRIPCION] IS NULL) OR ([CONJ_DESCRIPCION] = @Original_CONJ_DESCRIPCION)) AND ([PAR_CODIGO] = @Original_PAR_CODIGO) AND ((@IsNull_PNO_CODIGO = 1 AND [PNO_CODIGO] IS NULL) OR ([PNO_CODIGO] = @Original_PNO_CODIGO)) AND ((@IsNull_CONJ_CODIGOPARTE = 1 AND [CONJ_CODIGOPARTE] IS NULL) OR ([CONJ_CODIGOPARTE] = @Original_CONJ_CODIGOPARTE)) AND ((@IsNull_CONJ_COSTO = 1 AND [CONJ_COSTO] IS NULL) OR ([CONJ_COSTO] = @Original_CONJ_COSTO)) AND ((@IsNull_HR_CODIGO = 1 AND [HR_CODIGO] IS NULL) OR ([HR_CODIGO] = @Original_HR_CODIGO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CONJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CONJ_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONJ_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CONJ_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONJ_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CONJ_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONJ_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CONJ_CODIGOPARTE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_CODIGOPARTE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONJ_CODIGOPARTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_CODIGOPARTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CONJ_COSTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_COSTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONJ_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "CONJ_COSTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HR_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [CONJUNTOS] ([CONJ_NOMBRE], [CONJ_CANTIDADSTOCK], [CONJ_DESCRIPCION], [PAR_CODIGO], [PNO_CODIGO], [CONJ_CODIGOPARTE], [CONJ_COSTO], [HR_CODIGO]) VALUES (@CONJ_NOMBRE, @CONJ_CANTIDADSTOCK, @CONJ_DESCRIPCION, @PAR_CODIGO, @PNO_CODIGO, @CONJ_CODIGOPARTE, @CONJ_COSTO, @HR_CODIGO);
SELECT CONJ_CODIGO, CONJ_NOMBRE, CONJ_CANTIDADSTOCK, CONJ_DESCRIPCION, PAR_CODIGO, PNO_CODIGO, CONJ_CODIGOPARTE, CONJ_COSTO, HR_CODIGO FROM CONJUNTOS WHERE (CONJ_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONJ_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONJ_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_CANTIDADSTOCK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONJ_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONJ_CODIGOPARTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_CODIGOPARTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONJ_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "CONJ_COSTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [CONJUNTOS] SET [CONJ_NOMBRE] = @CONJ_NOMBRE, [CONJ_CANTIDADSTOCK] = @CONJ_CANTIDADSTOCK, [CONJ_DESCRIPCION] = @CONJ_DESCRIPCION, [PAR_CODIGO] = @PAR_CODIGO, [PNO_CODIGO] = @PNO_CODIGO, [CONJ_CODIGOPARTE] = @CONJ_CODIGOPARTE, [CONJ_COSTO] = @CONJ_COSTO, [HR_CODIGO] = @HR_CODIGO WHERE (([CONJ_CODIGO] = @Original_CONJ_CODIGO) AND ((@IsNull_CONJ_NOMBRE = 1 AND [CONJ_NOMBRE] IS NULL) OR ([CONJ_NOMBRE] = @Original_CONJ_NOMBRE)) AND ((@IsNull_CONJ_CANTIDADSTOCK = 1 AND [CONJ_CANTIDADSTOCK] IS NULL) OR ([CONJ_CANTIDADSTOCK] = @Original_CONJ_CANTIDADSTOCK)) AND ((@IsNull_CONJ_DESCRIPCION = 1 AND [CONJ_DESCRIPCION] IS NULL) OR ([CONJ_DESCRIPCION] = @Original_CONJ_DESCRIPCION)) AND ([PAR_CODIGO] = @Original_PAR_CODIGO) AND ((@IsNull_PNO_CODIGO = 1 AND [PNO_CODIGO] IS NULL) OR ([PNO_CODIGO] = @Original_PNO_CODIGO)) AND ((@IsNull_CONJ_CODIGOPARTE = 1 AND [CONJ_CODIGOPARTE] IS NULL) OR ([CONJ_CODIGOPARTE] = @Original_CONJ_CODIGOPARTE)) AND ((@IsNull_CONJ_COSTO = 1 AND [CONJ_COSTO] IS NULL) OR ([CONJ_COSTO] = @Original_CONJ_COSTO)) AND ((@IsNull_HR_CODIGO = 1 AND [HR_CODIGO] IS NULL) OR ([HR_CODIGO] = @Original_HR_CODIGO)));
SELECT CONJ_CODIGO, CONJ_NOMBRE, CONJ_CANTIDADSTOCK, CONJ_DESCRIPCION, PAR_CODIGO, PNO_CODIGO, CONJ_CODIGOPARTE, CONJ_COSTO, HR_CODIGO FROM CONJUNTOS WHERE (CONJ_CODIGO = @CONJ_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONJ_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONJ_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_CANTIDADSTOCK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONJ_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONJ_CODIGOPARTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_CODIGOPARTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONJ_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "CONJ_COSTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CONJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CONJ_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONJ_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CONJ_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONJ_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CONJ_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONJ_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CONJ_CODIGOPARTE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_CODIGOPARTE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONJ_CODIGOPARTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_CODIGOPARTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CONJ_COSTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONJ_COSTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONJ_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "CONJ_COSTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HR_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "CONJ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CONJ_CODIGO, CONJ_NOMBRE, CONJ_CANTIDADSTOCK, CONJ_DESCRIPCION, PAR_CODIGO" +
                ", PNO_CODIGO, CONJ_CODIGOPARTE, CONJ_COSTO, HR_CODIGO FROM CONJUNTOS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEstructura.CONJUNTOSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEstructura.CONJUNTOSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEstructura.CONJUNTOSDataTable dataTable = new dsEstructura.CONJUNTOSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura.CONJUNTOSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura dataSet) {
            return this.Adapter.Update(dataSet, "CONJUNTOS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_CONJ_CODIGO, string Original_CONJ_NOMBRE, global::System.Nullable<int> Original_CONJ_CANTIDADSTOCK, string Original_CONJ_DESCRIPCION, decimal Original_PAR_CODIGO, global::System.Nullable<decimal> Original_PNO_CODIGO, string Original_CONJ_CODIGOPARTE, global::System.Nullable<decimal> Original_CONJ_COSTO, global::System.Nullable<decimal> Original_HR_CODIGO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_CONJ_CODIGO));
            if ((Original_CONJ_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CONJ_NOMBRE));
            }
            if ((Original_CONJ_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_CONJ_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_CONJ_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_CONJ_DESCRIPCION));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_PAR_CODIGO));
            if ((Original_PNO_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_PNO_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_CONJ_CODIGOPARTE == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_CONJ_CODIGOPARTE));
            }
            if ((Original_CONJ_COSTO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_CONJ_COSTO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_HR_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_HR_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CONJ_NOMBRE, global::System.Nullable<int> CONJ_CANTIDADSTOCK, string CONJ_DESCRIPCION, decimal PAR_CODIGO, global::System.Nullable<decimal> PNO_CODIGO, string CONJ_CODIGOPARTE, global::System.Nullable<decimal> CONJ_COSTO, global::System.Nullable<decimal> HR_CODIGO) {
            if ((CONJ_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CONJ_NOMBRE));
            }
            if ((CONJ_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(CONJ_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((CONJ_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CONJ_DESCRIPCION));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(PAR_CODIGO));
            if ((PNO_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(PNO_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((CONJ_CODIGOPARTE == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CONJ_CODIGOPARTE));
            }
            if ((CONJ_COSTO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(CONJ_COSTO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((HR_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(HR_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CONJ_NOMBRE, 
                    global::System.Nullable<int> CONJ_CANTIDADSTOCK, 
                    string CONJ_DESCRIPCION, 
                    decimal PAR_CODIGO, 
                    global::System.Nullable<decimal> PNO_CODIGO, 
                    string CONJ_CODIGOPARTE, 
                    global::System.Nullable<decimal> CONJ_COSTO, 
                    global::System.Nullable<decimal> HR_CODIGO, 
                    decimal Original_CONJ_CODIGO, 
                    string Original_CONJ_NOMBRE, 
                    global::System.Nullable<int> Original_CONJ_CANTIDADSTOCK, 
                    string Original_CONJ_DESCRIPCION, 
                    decimal Original_PAR_CODIGO, 
                    global::System.Nullable<decimal> Original_PNO_CODIGO, 
                    string Original_CONJ_CODIGOPARTE, 
                    global::System.Nullable<decimal> Original_CONJ_COSTO, 
                    global::System.Nullable<decimal> Original_HR_CODIGO, 
                    decimal CONJ_CODIGO) {
            if ((CONJ_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CONJ_NOMBRE));
            }
            if ((CONJ_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(CONJ_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((CONJ_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CONJ_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(PAR_CODIGO));
            if ((PNO_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(PNO_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((CONJ_CODIGOPARTE == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CONJ_CODIGOPARTE));
            }
            if ((CONJ_COSTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(CONJ_COSTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((HR_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(HR_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_CONJ_CODIGO));
            if ((Original_CONJ_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_CONJ_NOMBRE));
            }
            if ((Original_CONJ_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_CONJ_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_CONJ_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_CONJ_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_PAR_CODIGO));
            if ((Original_PNO_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_PNO_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_CONJ_CODIGOPARTE == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_CONJ_CODIGOPARTE));
            }
            if ((Original_CONJ_COSTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_CONJ_COSTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_HR_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_HR_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(CONJ_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CONJ_NOMBRE, 
                    global::System.Nullable<int> CONJ_CANTIDADSTOCK, 
                    string CONJ_DESCRIPCION, 
                    decimal PAR_CODIGO, 
                    global::System.Nullable<decimal> PNO_CODIGO, 
                    string CONJ_CODIGOPARTE, 
                    global::System.Nullable<decimal> CONJ_COSTO, 
                    global::System.Nullable<decimal> HR_CODIGO, 
                    decimal Original_CONJ_CODIGO, 
                    string Original_CONJ_NOMBRE, 
                    global::System.Nullable<int> Original_CONJ_CANTIDADSTOCK, 
                    string Original_CONJ_DESCRIPCION, 
                    decimal Original_PAR_CODIGO, 
                    global::System.Nullable<decimal> Original_PNO_CODIGO, 
                    string Original_CONJ_CODIGOPARTE, 
                    global::System.Nullable<decimal> Original_CONJ_COSTO, 
                    global::System.Nullable<decimal> Original_HR_CODIGO) {
            return this.Update(CONJ_NOMBRE, CONJ_CANTIDADSTOCK, CONJ_DESCRIPCION, PAR_CODIGO, PNO_CODIGO, CONJ_CODIGOPARTE, CONJ_COSTO, HR_CODIGO, Original_CONJ_CODIGO, Original_CONJ_NOMBRE, Original_CONJ_CANTIDADSTOCK, Original_CONJ_DESCRIPCION, Original_PAR_CODIGO, Original_PNO_CODIGO, Original_CONJ_CODIGOPARTE, Original_CONJ_COSTO, Original_HR_CODIGO, Original_CONJ_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SUBCONJUNTOSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SUBCONJUNTOSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SUBCONJUNTOS";
            tableMapping.ColumnMappings.Add("SCONJ_CODIGO", "SCONJ_CODIGO");
            tableMapping.ColumnMappings.Add("SCONJ_NOMBRE", "SCONJ_NOMBRE");
            tableMapping.ColumnMappings.Add("SCONJ_CANTIDADSTOCK", "SCONJ_CANTIDADSTOCK");
            tableMapping.ColumnMappings.Add("SCONJ_DESCRIPCION", "SCONJ_DESCRIPCION");
            tableMapping.ColumnMappings.Add("PAR_CODIGO", "PAR_CODIGO");
            tableMapping.ColumnMappings.Add("PNO_CODIGO", "PNO_CODIGO");
            tableMapping.ColumnMappings.Add("SCONJ_CODIGOPARTE", "SCONJ_CODIGOPARTE");
            tableMapping.ColumnMappings.Add("SCONJ_COSTO", "SCONJ_COSTO");
            tableMapping.ColumnMappings.Add("HR_CODIGO", "HR_CODIGO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [SUBCONJUNTOS] WHERE (([SCONJ_CODIGO] = @Original_SCONJ_CODIGO) AND ((@IsNull_SCONJ_NOMBRE = 1 AND [SCONJ_NOMBRE] IS NULL) OR ([SCONJ_NOMBRE] = @Original_SCONJ_NOMBRE)) AND ((@IsNull_SCONJ_CANTIDADSTOCK = 1 AND [SCONJ_CANTIDADSTOCK] IS NULL) OR ([SCONJ_CANTIDADSTOCK] = @Original_SCONJ_CANTIDADSTOCK)) AND ((@IsNull_SCONJ_DESCRIPCION = 1 AND [SCONJ_DESCRIPCION] IS NULL) OR ([SCONJ_DESCRIPCION] = @Original_SCONJ_DESCRIPCION)) AND ([PAR_CODIGO] = @Original_PAR_CODIGO) AND ((@IsNull_PNO_CODIGO = 1 AND [PNO_CODIGO] IS NULL) OR ([PNO_CODIGO] = @Original_PNO_CODIGO)) AND ((@IsNull_SCONJ_CODIGOPARTE = 1 AND [SCONJ_CODIGOPARTE] IS NULL) OR ([SCONJ_CODIGOPARTE] = @Original_SCONJ_CODIGOPARTE)) AND ((@IsNull_SCONJ_COSTO = 1 AND [SCONJ_COSTO] IS NULL) OR ([SCONJ_COSTO] = @Original_SCONJ_COSTO)) AND ((@IsNull_HR_CODIGO = 1 AND [HR_CODIGO] IS NULL) OR ([HR_CODIGO] = @Original_HR_CODIGO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCONJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SCONJ_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCONJ_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SCONJ_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCONJ_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SCONJ_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCONJ_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SCONJ_CODIGOPARTE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_CODIGOPARTE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCONJ_CODIGOPARTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_CODIGOPARTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SCONJ_COSTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_COSTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCONJ_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "SCONJ_COSTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HR_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SUBCONJUNTOS] ([SCONJ_NOMBRE], [SCONJ_CANTIDADSTOCK], [SCONJ_DESCRIPCION], [PAR_CODIGO], [PNO_CODIGO], [SCONJ_CODIGOPARTE], [SCONJ_COSTO], [HR_CODIGO]) VALUES (@SCONJ_NOMBRE, @SCONJ_CANTIDADSTOCK, @SCONJ_DESCRIPCION, @PAR_CODIGO, @PNO_CODIGO, @SCONJ_CODIGOPARTE, @SCONJ_COSTO, @HR_CODIGO);
SELECT SCONJ_CODIGO, SCONJ_NOMBRE, SCONJ_CANTIDADSTOCK, SCONJ_DESCRIPCION, PAR_CODIGO, PNO_CODIGO, SCONJ_CODIGOPARTE, SCONJ_COSTO, HR_CODIGO FROM SUBCONJUNTOS WHERE (SCONJ_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCONJ_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCONJ_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_CANTIDADSTOCK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCONJ_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCONJ_CODIGOPARTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_CODIGOPARTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCONJ_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "SCONJ_COSTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [SUBCONJUNTOS] SET [SCONJ_NOMBRE] = @SCONJ_NOMBRE, [SCONJ_CANTIDADSTOCK] = @SCONJ_CANTIDADSTOCK, [SCONJ_DESCRIPCION] = @SCONJ_DESCRIPCION, [PAR_CODIGO] = @PAR_CODIGO, [PNO_CODIGO] = @PNO_CODIGO, [SCONJ_CODIGOPARTE] = @SCONJ_CODIGOPARTE, [SCONJ_COSTO] = @SCONJ_COSTO, [HR_CODIGO] = @HR_CODIGO WHERE (([SCONJ_CODIGO] = @Original_SCONJ_CODIGO) AND ((@IsNull_SCONJ_NOMBRE = 1 AND [SCONJ_NOMBRE] IS NULL) OR ([SCONJ_NOMBRE] = @Original_SCONJ_NOMBRE)) AND ((@IsNull_SCONJ_CANTIDADSTOCK = 1 AND [SCONJ_CANTIDADSTOCK] IS NULL) OR ([SCONJ_CANTIDADSTOCK] = @Original_SCONJ_CANTIDADSTOCK)) AND ((@IsNull_SCONJ_DESCRIPCION = 1 AND [SCONJ_DESCRIPCION] IS NULL) OR ([SCONJ_DESCRIPCION] = @Original_SCONJ_DESCRIPCION)) AND ([PAR_CODIGO] = @Original_PAR_CODIGO) AND ((@IsNull_PNO_CODIGO = 1 AND [PNO_CODIGO] IS NULL) OR ([PNO_CODIGO] = @Original_PNO_CODIGO)) AND ((@IsNull_SCONJ_CODIGOPARTE = 1 AND [SCONJ_CODIGOPARTE] IS NULL) OR ([SCONJ_CODIGOPARTE] = @Original_SCONJ_CODIGOPARTE)) AND ((@IsNull_SCONJ_COSTO = 1 AND [SCONJ_COSTO] IS NULL) OR ([SCONJ_COSTO] = @Original_SCONJ_COSTO)) AND ((@IsNull_HR_CODIGO = 1 AND [HR_CODIGO] IS NULL) OR ([HR_CODIGO] = @Original_HR_CODIGO)));
SELECT SCONJ_CODIGO, SCONJ_NOMBRE, SCONJ_CANTIDADSTOCK, SCONJ_DESCRIPCION, PAR_CODIGO, PNO_CODIGO, SCONJ_CODIGOPARTE, SCONJ_COSTO, HR_CODIGO FROM SUBCONJUNTOS WHERE (SCONJ_CODIGO = @SCONJ_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCONJ_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCONJ_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_CANTIDADSTOCK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCONJ_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCONJ_CODIGOPARTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_CODIGOPARTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCONJ_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "SCONJ_COSTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SCONJ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SCONJ_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCONJ_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SCONJ_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCONJ_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SCONJ_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCONJ_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SCONJ_CODIGOPARTE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_CODIGOPARTE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCONJ_CODIGOPARTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_CODIGOPARTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SCONJ_COSTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCONJ_COSTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCONJ_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "SCONJ_COSTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HR_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCONJ_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "SCONJ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SCONJ_CODIGO, SCONJ_NOMBRE, SCONJ_CANTIDADSTOCK, SCONJ_DESCRIPCION, PAR_CO" +
                "DIGO, PNO_CODIGO, SCONJ_CODIGOPARTE, SCONJ_COSTO, HR_CODIGO FROM SUBCONJUNTOS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEstructura.SUBCONJUNTOSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEstructura.SUBCONJUNTOSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEstructura.SUBCONJUNTOSDataTable dataTable = new dsEstructura.SUBCONJUNTOSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura.SUBCONJUNTOSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura dataSet) {
            return this.Adapter.Update(dataSet, "SUBCONJUNTOS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_SCONJ_CODIGO, string Original_SCONJ_NOMBRE, global::System.Nullable<int> Original_SCONJ_CANTIDADSTOCK, string Original_SCONJ_DESCRIPCION, decimal Original_PAR_CODIGO, global::System.Nullable<decimal> Original_PNO_CODIGO, string Original_SCONJ_CODIGOPARTE, global::System.Nullable<decimal> Original_SCONJ_COSTO, global::System.Nullable<decimal> Original_HR_CODIGO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_SCONJ_CODIGO));
            if ((Original_SCONJ_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SCONJ_NOMBRE));
            }
            if ((Original_SCONJ_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_SCONJ_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_SCONJ_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_SCONJ_DESCRIPCION));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_PAR_CODIGO));
            if ((Original_PNO_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_PNO_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_SCONJ_CODIGOPARTE == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_SCONJ_CODIGOPARTE));
            }
            if ((Original_SCONJ_COSTO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_SCONJ_COSTO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_HR_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_HR_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SCONJ_NOMBRE, global::System.Nullable<int> SCONJ_CANTIDADSTOCK, string SCONJ_DESCRIPCION, decimal PAR_CODIGO, global::System.Nullable<decimal> PNO_CODIGO, string SCONJ_CODIGOPARTE, global::System.Nullable<decimal> SCONJ_COSTO, global::System.Nullable<decimal> HR_CODIGO) {
            if ((SCONJ_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SCONJ_NOMBRE));
            }
            if ((SCONJ_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(SCONJ_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((SCONJ_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SCONJ_DESCRIPCION));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(PAR_CODIGO));
            if ((PNO_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(PNO_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((SCONJ_CODIGOPARTE == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SCONJ_CODIGOPARTE));
            }
            if ((SCONJ_COSTO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(SCONJ_COSTO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((HR_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(HR_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SCONJ_NOMBRE, 
                    global::System.Nullable<int> SCONJ_CANTIDADSTOCK, 
                    string SCONJ_DESCRIPCION, 
                    decimal PAR_CODIGO, 
                    global::System.Nullable<decimal> PNO_CODIGO, 
                    string SCONJ_CODIGOPARTE, 
                    global::System.Nullable<decimal> SCONJ_COSTO, 
                    global::System.Nullable<decimal> HR_CODIGO, 
                    decimal Original_SCONJ_CODIGO, 
                    string Original_SCONJ_NOMBRE, 
                    global::System.Nullable<int> Original_SCONJ_CANTIDADSTOCK, 
                    string Original_SCONJ_DESCRIPCION, 
                    decimal Original_PAR_CODIGO, 
                    global::System.Nullable<decimal> Original_PNO_CODIGO, 
                    string Original_SCONJ_CODIGOPARTE, 
                    global::System.Nullable<decimal> Original_SCONJ_COSTO, 
                    global::System.Nullable<decimal> Original_HR_CODIGO, 
                    decimal SCONJ_CODIGO) {
            if ((SCONJ_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SCONJ_NOMBRE));
            }
            if ((SCONJ_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(SCONJ_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((SCONJ_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SCONJ_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(PAR_CODIGO));
            if ((PNO_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(PNO_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((SCONJ_CODIGOPARTE == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SCONJ_CODIGOPARTE));
            }
            if ((SCONJ_COSTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(SCONJ_COSTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((HR_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(HR_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_SCONJ_CODIGO));
            if ((Original_SCONJ_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_SCONJ_NOMBRE));
            }
            if ((Original_SCONJ_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_SCONJ_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_SCONJ_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_SCONJ_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_PAR_CODIGO));
            if ((Original_PNO_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_PNO_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_SCONJ_CODIGOPARTE == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_SCONJ_CODIGOPARTE));
            }
            if ((Original_SCONJ_COSTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_SCONJ_COSTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_HR_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_HR_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(SCONJ_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SCONJ_NOMBRE, 
                    global::System.Nullable<int> SCONJ_CANTIDADSTOCK, 
                    string SCONJ_DESCRIPCION, 
                    decimal PAR_CODIGO, 
                    global::System.Nullable<decimal> PNO_CODIGO, 
                    string SCONJ_CODIGOPARTE, 
                    global::System.Nullable<decimal> SCONJ_COSTO, 
                    global::System.Nullable<decimal> HR_CODIGO, 
                    decimal Original_SCONJ_CODIGO, 
                    string Original_SCONJ_NOMBRE, 
                    global::System.Nullable<int> Original_SCONJ_CANTIDADSTOCK, 
                    string Original_SCONJ_DESCRIPCION, 
                    decimal Original_PAR_CODIGO, 
                    global::System.Nullable<decimal> Original_PNO_CODIGO, 
                    string Original_SCONJ_CODIGOPARTE, 
                    global::System.Nullable<decimal> Original_SCONJ_COSTO, 
                    global::System.Nullable<decimal> Original_HR_CODIGO) {
            return this.Update(SCONJ_NOMBRE, SCONJ_CANTIDADSTOCK, SCONJ_DESCRIPCION, PAR_CODIGO, PNO_CODIGO, SCONJ_CODIGOPARTE, SCONJ_COSTO, HR_CODIGO, Original_SCONJ_CODIGO, Original_SCONJ_NOMBRE, Original_SCONJ_CANTIDADSTOCK, Original_SCONJ_DESCRIPCION, Original_PAR_CODIGO, Original_PNO_CODIGO, Original_SCONJ_CODIGOPARTE, Original_SCONJ_COSTO, Original_HR_CODIGO, Original_SCONJ_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PIEZASTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PIEZASTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PIEZAS";
            tableMapping.ColumnMappings.Add("PZA_CODIGO", "PZA_CODIGO");
            tableMapping.ColumnMappings.Add("TE_CODIGO", "TE_CODIGO");
            tableMapping.ColumnMappings.Add("PZA_NOMBRE", "PZA_NOMBRE");
            tableMapping.ColumnMappings.Add("PZA_CANTIDADSTOCK", "PZA_CANTIDADSTOCK");
            tableMapping.ColumnMappings.Add("PZA_DESCRIPCION", "PZA_DESCRIPCION");
            tableMapping.ColumnMappings.Add("PAR_CODIGO", "PAR_CODIGO");
            tableMapping.ColumnMappings.Add("PNO_CODIGO", "PNO_CODIGO");
            tableMapping.ColumnMappings.Add("PZA_CODIGOPARTE", "PZA_CODIGOPARTE");
            tableMapping.ColumnMappings.Add("PZA_COSTO", "PZA_COSTO");
            tableMapping.ColumnMappings.Add("HR_CODIGO", "HR_CODIGO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PIEZAS] WHERE (([PZA_CODIGO] = @Original_PZA_CODIGO) AND ((@IsNull_TE_CODIGO = 1 AND [TE_CODIGO] IS NULL) OR ([TE_CODIGO] = @Original_TE_CODIGO)) AND ((@IsNull_PZA_NOMBRE = 1 AND [PZA_NOMBRE] IS NULL) OR ([PZA_NOMBRE] = @Original_PZA_NOMBRE)) AND ((@IsNull_PZA_CANTIDADSTOCK = 1 AND [PZA_CANTIDADSTOCK] IS NULL) OR ([PZA_CANTIDADSTOCK] = @Original_PZA_CANTIDADSTOCK)) AND ((@IsNull_PZA_DESCRIPCION = 1 AND [PZA_DESCRIPCION] IS NULL) OR ([PZA_DESCRIPCION] = @Original_PZA_DESCRIPCION)) AND ([PAR_CODIGO] = @Original_PAR_CODIGO) AND ((@IsNull_PNO_CODIGO = 1 AND [PNO_CODIGO] IS NULL) OR ([PNO_CODIGO] = @Original_PNO_CODIGO)) AND ((@IsNull_PZA_CODIGOPARTE = 1 AND [PZA_CODIGOPARTE] IS NULL) OR ([PZA_CODIGOPARTE] = @Original_PZA_CODIGOPARTE)) AND ((@IsNull_PZA_COSTO = 1 AND [PZA_COSTO] IS NULL) OR ([PZA_COSTO] = @Original_PZA_COSTO)) AND ((@IsNull_HR_CODIGO = 1 AND [HR_CODIGO] IS NULL) OR ([HR_CODIGO] = @Original_HR_CODIGO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TE_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TE_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PZA_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PZA_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PZA_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PZA_CODIGOPARTE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_CODIGOPARTE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_CODIGOPARTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_CODIGOPARTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PZA_COSTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_COSTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PZA_COSTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HR_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PIEZAS] ([TE_CODIGO], [PZA_NOMBRE], [PZA_CANTIDADSTOCK], [PZA_DESCRIPCION], [PAR_CODIGO], [PNO_CODIGO], [PZA_CODIGOPARTE], [PZA_COSTO], [HR_CODIGO]) VALUES (@TE_CODIGO, @PZA_NOMBRE, @PZA_CANTIDADSTOCK, @PZA_DESCRIPCION, @PAR_CODIGO, @PNO_CODIGO, @PZA_CODIGOPARTE, @PZA_COSTO, @HR_CODIGO);
SELECT PZA_CODIGO, TE_CODIGO, PZA_NOMBRE, PZA_CANTIDADSTOCK, PZA_DESCRIPCION, PAR_CODIGO, PNO_CODIGO, PZA_CODIGOPARTE, PZA_COSTO, HR_CODIGO FROM PIEZAS WHERE (PZA_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TE_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_CANTIDADSTOCK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_CODIGOPARTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_CODIGOPARTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PZA_COSTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PIEZAS] SET [TE_CODIGO] = @TE_CODIGO, [PZA_NOMBRE] = @PZA_NOMBRE, [PZA_CANTIDADSTOCK] = @PZA_CANTIDADSTOCK, [PZA_DESCRIPCION] = @PZA_DESCRIPCION, [PAR_CODIGO] = @PAR_CODIGO, [PNO_CODIGO] = @PNO_CODIGO, [PZA_CODIGOPARTE] = @PZA_CODIGOPARTE, [PZA_COSTO] = @PZA_COSTO, [HR_CODIGO] = @HR_CODIGO WHERE (([PZA_CODIGO] = @Original_PZA_CODIGO) AND ((@IsNull_TE_CODIGO = 1 AND [TE_CODIGO] IS NULL) OR ([TE_CODIGO] = @Original_TE_CODIGO)) AND ((@IsNull_PZA_NOMBRE = 1 AND [PZA_NOMBRE] IS NULL) OR ([PZA_NOMBRE] = @Original_PZA_NOMBRE)) AND ((@IsNull_PZA_CANTIDADSTOCK = 1 AND [PZA_CANTIDADSTOCK] IS NULL) OR ([PZA_CANTIDADSTOCK] = @Original_PZA_CANTIDADSTOCK)) AND ((@IsNull_PZA_DESCRIPCION = 1 AND [PZA_DESCRIPCION] IS NULL) OR ([PZA_DESCRIPCION] = @Original_PZA_DESCRIPCION)) AND ([PAR_CODIGO] = @Original_PAR_CODIGO) AND ((@IsNull_PNO_CODIGO = 1 AND [PNO_CODIGO] IS NULL) OR ([PNO_CODIGO] = @Original_PNO_CODIGO)) AND ((@IsNull_PZA_CODIGOPARTE = 1 AND [PZA_CODIGOPARTE] IS NULL) OR ([PZA_CODIGOPARTE] = @Original_PZA_CODIGOPARTE)) AND ((@IsNull_PZA_COSTO = 1 AND [PZA_COSTO] IS NULL) OR ([PZA_COSTO] = @Original_PZA_COSTO)) AND ((@IsNull_HR_CODIGO = 1 AND [HR_CODIGO] IS NULL) OR ([HR_CODIGO] = @Original_HR_CODIGO)));
SELECT PZA_CODIGO, TE_CODIGO, PZA_NOMBRE, PZA_CANTIDADSTOCK, PZA_DESCRIPCION, PAR_CODIGO, PNO_CODIGO, PZA_CODIGOPARTE, PZA_COSTO, HR_CODIGO FROM PIEZAS WHERE (PZA_CODIGO = @PZA_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TE_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_CANTIDADSTOCK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_CODIGOPARTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_CODIGOPARTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PZA_COSTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TE_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TE_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PZA_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PZA_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PZA_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNO_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PZA_CODIGOPARTE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_CODIGOPARTE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_CODIGOPARTE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_CODIGOPARTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PZA_COSTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PZA_COSTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PZA_COSTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HR_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PZA_CODIGO, TE_CODIGO, PZA_NOMBRE, PZA_CANTIDADSTOCK, PZA_DESCRIPCION, PAR" +
                "_CODIGO, PNO_CODIGO, PZA_CODIGOPARTE, PZA_COSTO, HR_CODIGO FROM dbo.PIEZAS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEstructura.PIEZASDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEstructura.PIEZASDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEstructura.PIEZASDataTable dataTable = new dsEstructura.PIEZASDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura.PIEZASDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura dataSet) {
            return this.Adapter.Update(dataSet, "PIEZAS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_PZA_CODIGO, global::System.Nullable<decimal> Original_TE_CODIGO, string Original_PZA_NOMBRE, global::System.Nullable<int> Original_PZA_CANTIDADSTOCK, string Original_PZA_DESCRIPCION, decimal Original_PAR_CODIGO, global::System.Nullable<decimal> Original_PNO_CODIGO, string Original_PZA_CODIGOPARTE, global::System.Nullable<decimal> Original_PZA_COSTO, global::System.Nullable<decimal> Original_HR_CODIGO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_PZA_CODIGO));
            if ((Original_TE_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_TE_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_PZA_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PZA_NOMBRE));
            }
            if ((Original_PZA_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_PZA_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_PZA_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_PZA_DESCRIPCION));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_PAR_CODIGO));
            if ((Original_PNO_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_PNO_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_PZA_CODIGOPARTE == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_PZA_CODIGOPARTE));
            }
            if ((Original_PZA_COSTO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_PZA_COSTO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_HR_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((decimal)(Original_HR_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<decimal> TE_CODIGO, string PZA_NOMBRE, global::System.Nullable<int> PZA_CANTIDADSTOCK, string PZA_DESCRIPCION, decimal PAR_CODIGO, global::System.Nullable<decimal> PNO_CODIGO, string PZA_CODIGOPARTE, global::System.Nullable<decimal> PZA_COSTO, global::System.Nullable<decimal> HR_CODIGO) {
            if ((TE_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(TE_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PZA_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PZA_NOMBRE));
            }
            if ((PZA_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(PZA_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PZA_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PZA_DESCRIPCION));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(PAR_CODIGO));
            if ((PNO_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(PNO_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((PZA_CODIGOPARTE == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(PZA_CODIGOPARTE));
            }
            if ((PZA_COSTO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(PZA_COSTO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((HR_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(HR_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<decimal> TE_CODIGO, 
                    string PZA_NOMBRE, 
                    global::System.Nullable<int> PZA_CANTIDADSTOCK, 
                    string PZA_DESCRIPCION, 
                    decimal PAR_CODIGO, 
                    global::System.Nullable<decimal> PNO_CODIGO, 
                    string PZA_CODIGOPARTE, 
                    global::System.Nullable<decimal> PZA_COSTO, 
                    global::System.Nullable<decimal> HR_CODIGO, 
                    decimal Original_PZA_CODIGO, 
                    global::System.Nullable<decimal> Original_TE_CODIGO, 
                    string Original_PZA_NOMBRE, 
                    global::System.Nullable<int> Original_PZA_CANTIDADSTOCK, 
                    string Original_PZA_DESCRIPCION, 
                    decimal Original_PAR_CODIGO, 
                    global::System.Nullable<decimal> Original_PNO_CODIGO, 
                    string Original_PZA_CODIGOPARTE, 
                    global::System.Nullable<decimal> Original_PZA_COSTO, 
                    global::System.Nullable<decimal> Original_HR_CODIGO, 
                    decimal PZA_CODIGO) {
            if ((TE_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(TE_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PZA_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PZA_NOMBRE));
            }
            if ((PZA_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(PZA_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PZA_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PZA_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(PAR_CODIGO));
            if ((PNO_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(PNO_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((PZA_CODIGOPARTE == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(PZA_CODIGOPARTE));
            }
            if ((PZA_COSTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(PZA_COSTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((HR_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(HR_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_PZA_CODIGO));
            if ((Original_TE_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_TE_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_PZA_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_PZA_NOMBRE));
            }
            if ((Original_PZA_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_PZA_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_PZA_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_PZA_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_PAR_CODIGO));
            if ((Original_PNO_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_PNO_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_PZA_CODIGOPARTE == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_PZA_CODIGOPARTE));
            }
            if ((Original_PZA_COSTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_PZA_COSTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_HR_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(Original_HR_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(PZA_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<decimal> TE_CODIGO, 
                    string PZA_NOMBRE, 
                    global::System.Nullable<int> PZA_CANTIDADSTOCK, 
                    string PZA_DESCRIPCION, 
                    decimal PAR_CODIGO, 
                    global::System.Nullable<decimal> PNO_CODIGO, 
                    string PZA_CODIGOPARTE, 
                    global::System.Nullable<decimal> PZA_COSTO, 
                    global::System.Nullable<decimal> HR_CODIGO, 
                    decimal Original_PZA_CODIGO, 
                    global::System.Nullable<decimal> Original_TE_CODIGO, 
                    string Original_PZA_NOMBRE, 
                    global::System.Nullable<int> Original_PZA_CANTIDADSTOCK, 
                    string Original_PZA_DESCRIPCION, 
                    decimal Original_PAR_CODIGO, 
                    global::System.Nullable<decimal> Original_PNO_CODIGO, 
                    string Original_PZA_CODIGOPARTE, 
                    global::System.Nullable<decimal> Original_PZA_COSTO, 
                    global::System.Nullable<decimal> Original_HR_CODIGO) {
            return this.Update(TE_CODIGO, PZA_NOMBRE, PZA_CANTIDADSTOCK, PZA_DESCRIPCION, PAR_CODIGO, PNO_CODIGO, PZA_CODIGOPARTE, PZA_COSTO, HR_CODIGO, Original_PZA_CODIGO, Original_TE_CODIGO, Original_PZA_NOMBRE, Original_PZA_CANTIDADSTOCK, Original_PZA_DESCRIPCION, Original_PAR_CODIGO, Original_PNO_CODIGO, Original_PZA_CODIGOPARTE, Original_PZA_COSTO, Original_HR_CODIGO, Original_PZA_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MATERIASPRIMASXPIEZATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MATERIASPRIMASXPIEZATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MATERIASPRIMASXPIEZA";
            tableMapping.ColumnMappings.Add("MPXP_CODIGO", "MPXP_CODIGO");
            tableMapping.ColumnMappings.Add("MP_CODIGO", "MP_CODIGO");
            tableMapping.ColumnMappings.Add("PZA_CODIGO", "PZA_CODIGO");
            tableMapping.ColumnMappings.Add("MPXP_CANTIDAD", "MPXP_CANTIDAD");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[MATERIASPRIMASXPIEZA] WHERE (([MPXP_CODIGO] = @Original_MPXP_C" +
                "ODIGO) AND ([MP_CODIGO] = @Original_MP_CODIGO) AND ([PZA_CODIGO] = @Original_PZA" +
                "_CODIGO) AND ([MPXP_CANTIDAD] = @Original_MPXP_CANTIDAD))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MPXP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MPXP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MPXP_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "MPXP_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[MATERIASPRIMASXPIEZA] ([MP_CODIGO], [PZA_CODIGO], [MPXP_CANTIDAD]) VALUES (@MP_CODIGO, @PZA_CODIGO, @MPXP_CANTIDAD);
SELECT MPXP_CODIGO, MP_CODIGO, PZA_CODIGO, MPXP_CANTIDAD FROM MATERIASPRIMASXPIEZA WHERE (MPXP_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MPXP_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "MPXP_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[MATERIASPRIMASXPIEZA] SET [MP_CODIGO] = @MP_CODIGO, [PZA_CODIGO] = @PZA_CODIGO, [MPXP_CANTIDAD] = @MPXP_CANTIDAD WHERE (([MPXP_CODIGO] = @Original_MPXP_CODIGO) AND ([MP_CODIGO] = @Original_MP_CODIGO) AND ([PZA_CODIGO] = @Original_PZA_CODIGO) AND ([MPXP_CANTIDAD] = @Original_MPXP_CANTIDAD));
SELECT MPXP_CODIGO, MP_CODIGO, PZA_CODIGO, MPXP_CANTIDAD FROM MATERIASPRIMASXPIEZA WHERE (MPXP_CODIGO = @MPXP_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MPXP_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "MPXP_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MPXP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MPXP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PZA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PZA_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MPXP_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "MPXP_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MPXP_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "MPXP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MPXP_CODIGO, MP_CODIGO, PZA_CODIGO, MPXP_CANTIDAD FROM dbo.MATERIASPRIMASX" +
                "PIEZA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEstructura.MATERIASPRIMASXPIEZADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEstructura.MATERIASPRIMASXPIEZADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEstructura.MATERIASPRIMASXPIEZADataTable dataTable = new dsEstructura.MATERIASPRIMASXPIEZADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura.MATERIASPRIMASXPIEZADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura dataSet) {
            return this.Adapter.Update(dataSet, "MATERIASPRIMASXPIEZA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_MPXP_CODIGO, decimal Original_MP_CODIGO, decimal Original_PZA_CODIGO, decimal Original_MPXP_CANTIDAD) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_MPXP_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_MP_CODIGO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_PZA_CODIGO));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_MPXP_CANTIDAD));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal MP_CODIGO, decimal PZA_CODIGO, decimal MPXP_CANTIDAD) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(MP_CODIGO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(PZA_CODIGO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(MPXP_CANTIDAD));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal MP_CODIGO, decimal PZA_CODIGO, decimal MPXP_CANTIDAD, decimal Original_MPXP_CODIGO, decimal Original_MP_CODIGO, decimal Original_PZA_CODIGO, decimal Original_MPXP_CANTIDAD, decimal MPXP_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(MP_CODIGO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(PZA_CODIGO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(MPXP_CANTIDAD));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_MPXP_CODIGO));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_MP_CODIGO));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_PZA_CODIGO));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_MPXP_CANTIDAD));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(MPXP_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal MP_CODIGO, decimal PZA_CODIGO, decimal MPXP_CANTIDAD, decimal Original_MPXP_CODIGO, decimal Original_MP_CODIGO, decimal Original_PZA_CODIGO, decimal Original_MPXP_CANTIDAD) {
            return this.Update(MP_CODIGO, PZA_CODIGO, MPXP_CANTIDAD, Original_MPXP_CODIGO, Original_MP_CODIGO, Original_PZA_CODIGO, Original_MPXP_CANTIDAD, Original_MPXP_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ESTRUCTURASTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ESTRUCTURASTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ESTRUCTURAS";
            tableMapping.ColumnMappings.Add("ESTR_CODIGO", "ESTR_CODIGO");
            tableMapping.ColumnMappings.Add("ESTR_NOMBRE", "ESTR_NOMBRE");
            tableMapping.ColumnMappings.Add("COC_CODIGO", "COC_CODIGO");
            tableMapping.ColumnMappings.Add("PNO_CODIGO", "PNO_CODIGO");
            tableMapping.ColumnMappings.Add("ESTR_DESCRIPCION", "ESTR_DESCRIPCION");
            tableMapping.ColumnMappings.Add("ESTR_ACTIVO", "ESTR_ACTIVO");
            tableMapping.ColumnMappings.Add("ESTR_FECHA_ALTA", "ESTR_FECHA_ALTA");
            tableMapping.ColumnMappings.Add("ESTR_FECHA_MODIFICACION", "ESTR_FECHA_MODIFICACION");
            tableMapping.ColumnMappings.Add("E_CODIGO", "E_CODIGO");
            tableMapping.ColumnMappings.Add("ESTR_COSTO", "ESTR_COSTO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ESTRUCTURAS] WHERE (([ESTR_CODIGO] = @Original_ESTR_CODIGO) AND ((@IsNull_ESTR_NOMBRE = 1 AND [ESTR_NOMBRE] IS NULL) OR ([ESTR_NOMBRE] = @Original_ESTR_NOMBRE)) AND ([COC_CODIGO] = @Original_COC_CODIGO) AND ([PNO_CODIGO] = @Original_PNO_CODIGO) AND ((@IsNull_ESTR_DESCRIPCION = 1 AND [ESTR_DESCRIPCION] IS NULL) OR ([ESTR_DESCRIPCION] = @Original_ESTR_DESCRIPCION)) AND ([ESTR_ACTIVO] = @Original_ESTR_ACTIVO) AND ([ESTR_FECHA_ALTA] = @Original_ESTR_FECHA_ALTA) AND ((@IsNull_ESTR_FECHA_MODIFICACION = 1 AND [ESTR_FECHA_MODIFICACION] IS NULL) OR ([ESTR_FECHA_MODIFICACION] = @Original_ESTR_FECHA_MODIFICACION)) AND ((@IsNull_E_CODIGO = 1 AND [E_CODIGO] IS NULL) OR ([E_CODIGO] = @Original_E_CODIGO)) AND ((@IsNull_ESTR_COSTO = 1 AND [ESTR_COSTO] IS NULL) OR ([ESTR_COSTO] = @Original_ESTR_COSTO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ESTR_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "COC_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ESTR_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "ESTR_ACTIVO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_FECHA_ALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_FECHA_ALTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ESTR_FECHA_MODIFICACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_FECHA_MODIFICACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_FECHA_MODIFICACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_FECHA_MODIFICACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ESTR_COSTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_COSTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "ESTR_COSTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ESTRUCTURAS] ([ESTR_NOMBRE], [COC_CODIGO], [PNO_CODIGO], [ESTR_DESCRIPCION], [ESTR_ACTIVO], [ESTR_FECHA_ALTA], [ESTR_FECHA_MODIFICACION], [E_CODIGO], [ESTR_COSTO]) VALUES (@ESTR_NOMBRE, @COC_CODIGO, @PNO_CODIGO, @ESTR_DESCRIPCION, @ESTR_ACTIVO, @ESTR_FECHA_ALTA, @ESTR_FECHA_MODIFICACION, @E_CODIGO, @ESTR_COSTO);
SELECT ESTR_CODIGO, ESTR_NOMBRE, COC_CODIGO, PNO_CODIGO, ESTR_DESCRIPCION, ESTR_ACTIVO, ESTR_FECHA_ALTA, ESTR_FECHA_MODIFICACION, E_CODIGO, ESTR_COSTO FROM ESTRUCTURAS WHERE (ESTR_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "COC_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "ESTR_ACTIVO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_FECHA_ALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_FECHA_ALTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_FECHA_MODIFICACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_FECHA_MODIFICACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "ESTR_COSTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ESTRUCTURAS] SET [ESTR_NOMBRE] = @ESTR_NOMBRE, [COC_CODIGO] = @COC_CODIGO, [PNO_CODIGO] = @PNO_CODIGO, [ESTR_DESCRIPCION] = @ESTR_DESCRIPCION, [ESTR_ACTIVO] = @ESTR_ACTIVO, [ESTR_FECHA_ALTA] = @ESTR_FECHA_ALTA, [ESTR_FECHA_MODIFICACION] = @ESTR_FECHA_MODIFICACION, [E_CODIGO] = @E_CODIGO, [ESTR_COSTO] = @ESTR_COSTO WHERE (([ESTR_CODIGO] = @Original_ESTR_CODIGO) AND ((@IsNull_ESTR_NOMBRE = 1 AND [ESTR_NOMBRE] IS NULL) OR ([ESTR_NOMBRE] = @Original_ESTR_NOMBRE)) AND ([COC_CODIGO] = @Original_COC_CODIGO) AND ([PNO_CODIGO] = @Original_PNO_CODIGO) AND ((@IsNull_ESTR_DESCRIPCION = 1 AND [ESTR_DESCRIPCION] IS NULL) OR ([ESTR_DESCRIPCION] = @Original_ESTR_DESCRIPCION)) AND ([ESTR_ACTIVO] = @Original_ESTR_ACTIVO) AND ([ESTR_FECHA_ALTA] = @Original_ESTR_FECHA_ALTA) AND ((@IsNull_ESTR_FECHA_MODIFICACION = 1 AND [ESTR_FECHA_MODIFICACION] IS NULL) OR ([ESTR_FECHA_MODIFICACION] = @Original_ESTR_FECHA_MODIFICACION)) AND ((@IsNull_E_CODIGO = 1 AND [E_CODIGO] IS NULL) OR ([E_CODIGO] = @Original_E_CODIGO)) AND ((@IsNull_ESTR_COSTO = 1 AND [ESTR_COSTO] IS NULL) OR ([ESTR_COSTO] = @Original_ESTR_COSTO)));
SELECT ESTR_CODIGO, ESTR_NOMBRE, COC_CODIGO, PNO_CODIGO, ESTR_DESCRIPCION, ESTR_ACTIVO, ESTR_FECHA_ALTA, ESTR_FECHA_MODIFICACION, E_CODIGO, ESTR_COSTO FROM ESTRUCTURAS WHERE (ESTR_CODIGO = @ESTR_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "COC_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "ESTR_ACTIVO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_FECHA_ALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_FECHA_ALTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_FECHA_MODIFICACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_FECHA_MODIFICACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "ESTR_COSTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ESTR_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "COC_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PNO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ESTR_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "ESTR_ACTIVO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_FECHA_ALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_FECHA_ALTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ESTR_FECHA_MODIFICACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_FECHA_MODIFICACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_FECHA_MODIFICACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_FECHA_MODIFICACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ESTR_COSTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ESTR_COSTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTR_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "ESTR_COSTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTR_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "ESTR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ESTR_CODIGO, ESTR_NOMBRE, COC_CODIGO, PNO_CODIGO, ESTR_DESCRIPCION, ESTR_A" +
                "CTIVO, ESTR_FECHA_ALTA, ESTR_FECHA_MODIFICACION, E_CODIGO, ESTR_COSTO FROM dbo.E" +
                "STRUCTURAS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEstructura.ESTRUCTURASDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEstructura.ESTRUCTURASDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEstructura.ESTRUCTURASDataTable dataTable = new dsEstructura.ESTRUCTURASDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura.ESTRUCTURASDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEstructura dataSet) {
            return this.Adapter.Update(dataSet, "ESTRUCTURAS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ESTR_CODIGO, string Original_ESTR_NOMBRE, decimal Original_COC_CODIGO, decimal Original_PNO_CODIGO, string Original_ESTR_DESCRIPCION, decimal Original_ESTR_ACTIVO, System.DateTime Original_ESTR_FECHA_ALTA, global::System.Nullable<global::System.DateTime> Original_ESTR_FECHA_MODIFICACION, global::System.Nullable<decimal> Original_E_CODIGO, global::System.Nullable<decimal> Original_ESTR_COSTO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ESTR_CODIGO));
            if ((Original_ESTR_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ESTR_NOMBRE));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_COC_CODIGO));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_PNO_CODIGO));
            if ((Original_ESTR_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ESTR_DESCRIPCION));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_ESTR_ACTIVO));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_ESTR_FECHA_ALTA));
            if ((Original_ESTR_FECHA_MODIFICACION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_ESTR_FECHA_MODIFICACION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_E_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_E_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_ESTR_COSTO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_ESTR_COSTO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ESTR_NOMBRE, decimal COC_CODIGO, decimal PNO_CODIGO, string ESTR_DESCRIPCION, decimal ESTR_ACTIVO, System.DateTime ESTR_FECHA_ALTA, global::System.Nullable<global::System.DateTime> ESTR_FECHA_MODIFICACION, global::System.Nullable<decimal> E_CODIGO, global::System.Nullable<decimal> ESTR_COSTO) {
            if ((ESTR_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ESTR_NOMBRE));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(COC_CODIGO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(PNO_CODIGO));
            if ((ESTR_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ESTR_DESCRIPCION));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(ESTR_ACTIVO));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(ESTR_FECHA_ALTA));
            if ((ESTR_FECHA_MODIFICACION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(ESTR_FECHA_MODIFICACION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((E_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(E_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ESTR_COSTO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(ESTR_COSTO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ESTR_NOMBRE, 
                    decimal COC_CODIGO, 
                    decimal PNO_CODIGO, 
                    string ESTR_DESCRIPCION, 
                    decimal ESTR_ACTIVO, 
                    System.DateTime ESTR_FECHA_ALTA, 
                    global::System.Nullable<global::System.DateTime> ESTR_FECHA_MODIFICACION, 
                    global::System.Nullable<decimal> E_CODIGO, 
                    global::System.Nullable<decimal> ESTR_COSTO, 
                    decimal Original_ESTR_CODIGO, 
                    string Original_ESTR_NOMBRE, 
                    decimal Original_COC_CODIGO, 
                    decimal Original_PNO_CODIGO, 
                    string Original_ESTR_DESCRIPCION, 
                    decimal Original_ESTR_ACTIVO, 
                    System.DateTime Original_ESTR_FECHA_ALTA, 
                    global::System.Nullable<global::System.DateTime> Original_ESTR_FECHA_MODIFICACION, 
                    global::System.Nullable<decimal> Original_E_CODIGO, 
                    global::System.Nullable<decimal> Original_ESTR_COSTO, 
                    decimal ESTR_CODIGO) {
            if ((ESTR_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ESTR_NOMBRE));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(COC_CODIGO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(PNO_CODIGO));
            if ((ESTR_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ESTR_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(ESTR_ACTIVO));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(ESTR_FECHA_ALTA));
            if ((ESTR_FECHA_MODIFICACION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(ESTR_FECHA_MODIFICACION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((E_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(E_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ESTR_COSTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(ESTR_COSTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_ESTR_CODIGO));
            if ((Original_ESTR_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_ESTR_NOMBRE));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_COC_CODIGO));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_PNO_CODIGO));
            if ((Original_ESTR_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_ESTR_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_ESTR_ACTIVO));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_ESTR_FECHA_ALTA));
            if ((Original_ESTR_FECHA_MODIFICACION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_ESTR_FECHA_MODIFICACION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_E_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_E_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_ESTR_COSTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_ESTR_COSTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(ESTR_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ESTR_NOMBRE, 
                    decimal COC_CODIGO, 
                    decimal PNO_CODIGO, 
                    string ESTR_DESCRIPCION, 
                    decimal ESTR_ACTIVO, 
                    System.DateTime ESTR_FECHA_ALTA, 
                    global::System.Nullable<global::System.DateTime> ESTR_FECHA_MODIFICACION, 
                    global::System.Nullable<decimal> E_CODIGO, 
                    global::System.Nullable<decimal> ESTR_COSTO, 
                    decimal Original_ESTR_CODIGO, 
                    string Original_ESTR_NOMBRE, 
                    decimal Original_COC_CODIGO, 
                    decimal Original_PNO_CODIGO, 
                    string Original_ESTR_DESCRIPCION, 
                    decimal Original_ESTR_ACTIVO, 
                    System.DateTime Original_ESTR_FECHA_ALTA, 
                    global::System.Nullable<global::System.DateTime> Original_ESTR_FECHA_MODIFICACION, 
                    global::System.Nullable<decimal> Original_E_CODIGO, 
                    global::System.Nullable<decimal> Original_ESTR_COSTO) {
            return this.Update(ESTR_NOMBRE, COC_CODIGO, PNO_CODIGO, ESTR_DESCRIPCION, ESTR_ACTIVO, ESTR_FECHA_ALTA, ESTR_FECHA_MODIFICACION, E_CODIGO, ESTR_COSTO, Original_ESTR_CODIGO, Original_ESTR_NOMBRE, Original_COC_CODIGO, Original_PNO_CODIGO, Original_ESTR_DESCRIPCION, Original_ESTR_ACTIVO, Original_ESTR_FECHA_ALTA, Original_ESTR_FECHA_MODIFICACION, Original_E_CODIGO, Original_ESTR_COSTO, Original_ESTR_CODIGO);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private PIEZASXESTRUCTURATableAdapter _pIEZASXESTRUCTURATableAdapter;
        
        private SUBCONJUNTOSXESTRUCTURATableAdapter _sUBCONJUNTOSXESTRUCTURATableAdapter;
        
        private MATERIASPRIMASXESTRUCTURATableAdapter _mATERIASPRIMASXESTRUCTURATableAdapter;
        
        private CONJUNTOSXESTRUCTURATableAdapter _cONJUNTOSXESTRUCTURATableAdapter;
        
        private GRUPOS_ESTRUCTURATableAdapter _gRUPOS_ESTRUCTURATableAdapter;
        
        private MATERIAS_PRIMASTableAdapter _mATERIAS_PRIMASTableAdapter;
        
        private PLANOSTableAdapter _pLANOSTableAdapter;
        
        private ESTADO_PARTESTableAdapter _eSTADO_PARTESTableAdapter;
        
        private TERMINACIONESTableAdapter _tERMINACIONESTableAdapter;
        
        private PIEZASXCONJUNTOTableAdapter _pIEZASXCONJUNTOTableAdapter;
        
        private PIEZASXSUBCONJUNTOTableAdapter _pIEZASXSUBCONJUNTOTableAdapter;
        
        private SUBCONJUNTOSXCONJUNTOTableAdapter _sUBCONJUNTOSXCONJUNTOTableAdapter;
        
        private CONJUNTOSTableAdapter _cONJUNTOSTableAdapter;
        
        private SUBCONJUNTOSTableAdapter _sUBCONJUNTOSTableAdapter;
        
        private PIEZASTableAdapter _pIEZASTableAdapter;
        
        private MATERIASPRIMASXPIEZATableAdapter _mATERIASPRIMASXPIEZATableAdapter;
        
        private ESTRUCTURASTableAdapter _eSTRUCTURASTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PIEZASXESTRUCTURATableAdapter PIEZASXESTRUCTURATableAdapter {
            get {
                return this._pIEZASXESTRUCTURATableAdapter;
            }
            set {
                this._pIEZASXESTRUCTURATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public SUBCONJUNTOSXESTRUCTURATableAdapter SUBCONJUNTOSXESTRUCTURATableAdapter {
            get {
                return this._sUBCONJUNTOSXESTRUCTURATableAdapter;
            }
            set {
                this._sUBCONJUNTOSXESTRUCTURATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MATERIASPRIMASXESTRUCTURATableAdapter MATERIASPRIMASXESTRUCTURATableAdapter {
            get {
                return this._mATERIASPRIMASXESTRUCTURATableAdapter;
            }
            set {
                this._mATERIASPRIMASXESTRUCTURATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CONJUNTOSXESTRUCTURATableAdapter CONJUNTOSXESTRUCTURATableAdapter {
            get {
                return this._cONJUNTOSXESTRUCTURATableAdapter;
            }
            set {
                this._cONJUNTOSXESTRUCTURATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public GRUPOS_ESTRUCTURATableAdapter GRUPOS_ESTRUCTURATableAdapter {
            get {
                return this._gRUPOS_ESTRUCTURATableAdapter;
            }
            set {
                this._gRUPOS_ESTRUCTURATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MATERIAS_PRIMASTableAdapter MATERIAS_PRIMASTableAdapter {
            get {
                return this._mATERIAS_PRIMASTableAdapter;
            }
            set {
                this._mATERIAS_PRIMASTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PLANOSTableAdapter PLANOSTableAdapter {
            get {
                return this._pLANOSTableAdapter;
            }
            set {
                this._pLANOSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ESTADO_PARTESTableAdapter ESTADO_PARTESTableAdapter {
            get {
                return this._eSTADO_PARTESTableAdapter;
            }
            set {
                this._eSTADO_PARTESTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TERMINACIONESTableAdapter TERMINACIONESTableAdapter {
            get {
                return this._tERMINACIONESTableAdapter;
            }
            set {
                this._tERMINACIONESTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PIEZASXCONJUNTOTableAdapter PIEZASXCONJUNTOTableAdapter {
            get {
                return this._pIEZASXCONJUNTOTableAdapter;
            }
            set {
                this._pIEZASXCONJUNTOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PIEZASXSUBCONJUNTOTableAdapter PIEZASXSUBCONJUNTOTableAdapter {
            get {
                return this._pIEZASXSUBCONJUNTOTableAdapter;
            }
            set {
                this._pIEZASXSUBCONJUNTOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public SUBCONJUNTOSXCONJUNTOTableAdapter SUBCONJUNTOSXCONJUNTOTableAdapter {
            get {
                return this._sUBCONJUNTOSXCONJUNTOTableAdapter;
            }
            set {
                this._sUBCONJUNTOSXCONJUNTOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CONJUNTOSTableAdapter CONJUNTOSTableAdapter {
            get {
                return this._cONJUNTOSTableAdapter;
            }
            set {
                this._cONJUNTOSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public SUBCONJUNTOSTableAdapter SUBCONJUNTOSTableAdapter {
            get {
                return this._sUBCONJUNTOSTableAdapter;
            }
            set {
                this._sUBCONJUNTOSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PIEZASTableAdapter PIEZASTableAdapter {
            get {
                return this._pIEZASTableAdapter;
            }
            set {
                this._pIEZASTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MATERIASPRIMASXPIEZATableAdapter MATERIASPRIMASXPIEZATableAdapter {
            get {
                return this._mATERIASPRIMASXPIEZATableAdapter;
            }
            set {
                this._mATERIASPRIMASXPIEZATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ESTRUCTURASTableAdapter ESTRUCTURASTableAdapter {
            get {
                return this._eSTRUCTURASTableAdapter;
            }
            set {
                this._eSTRUCTURASTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._pIEZASXESTRUCTURATableAdapter != null) 
                            && (this._pIEZASXESTRUCTURATableAdapter.Connection != null))) {
                    return this._pIEZASXESTRUCTURATableAdapter.Connection;
                }
                if (((this._sUBCONJUNTOSXESTRUCTURATableAdapter != null) 
                            && (this._sUBCONJUNTOSXESTRUCTURATableAdapter.Connection != null))) {
                    return this._sUBCONJUNTOSXESTRUCTURATableAdapter.Connection;
                }
                if (((this._mATERIASPRIMASXESTRUCTURATableAdapter != null) 
                            && (this._mATERIASPRIMASXESTRUCTURATableAdapter.Connection != null))) {
                    return this._mATERIASPRIMASXESTRUCTURATableAdapter.Connection;
                }
                if (((this._cONJUNTOSXESTRUCTURATableAdapter != null) 
                            && (this._cONJUNTOSXESTRUCTURATableAdapter.Connection != null))) {
                    return this._cONJUNTOSXESTRUCTURATableAdapter.Connection;
                }
                if (((this._gRUPOS_ESTRUCTURATableAdapter != null) 
                            && (this._gRUPOS_ESTRUCTURATableAdapter.Connection != null))) {
                    return this._gRUPOS_ESTRUCTURATableAdapter.Connection;
                }
                if (((this._mATERIAS_PRIMASTableAdapter != null) 
                            && (this._mATERIAS_PRIMASTableAdapter.Connection != null))) {
                    return this._mATERIAS_PRIMASTableAdapter.Connection;
                }
                if (((this._pLANOSTableAdapter != null) 
                            && (this._pLANOSTableAdapter.Connection != null))) {
                    return this._pLANOSTableAdapter.Connection;
                }
                if (((this._eSTADO_PARTESTableAdapter != null) 
                            && (this._eSTADO_PARTESTableAdapter.Connection != null))) {
                    return this._eSTADO_PARTESTableAdapter.Connection;
                }
                if (((this._tERMINACIONESTableAdapter != null) 
                            && (this._tERMINACIONESTableAdapter.Connection != null))) {
                    return this._tERMINACIONESTableAdapter.Connection;
                }
                if (((this._pIEZASXCONJUNTOTableAdapter != null) 
                            && (this._pIEZASXCONJUNTOTableAdapter.Connection != null))) {
                    return this._pIEZASXCONJUNTOTableAdapter.Connection;
                }
                if (((this._pIEZASXSUBCONJUNTOTableAdapter != null) 
                            && (this._pIEZASXSUBCONJUNTOTableAdapter.Connection != null))) {
                    return this._pIEZASXSUBCONJUNTOTableAdapter.Connection;
                }
                if (((this._sUBCONJUNTOSXCONJUNTOTableAdapter != null) 
                            && (this._sUBCONJUNTOSXCONJUNTOTableAdapter.Connection != null))) {
                    return this._sUBCONJUNTOSXCONJUNTOTableAdapter.Connection;
                }
                if (((this._cONJUNTOSTableAdapter != null) 
                            && (this._cONJUNTOSTableAdapter.Connection != null))) {
                    return this._cONJUNTOSTableAdapter.Connection;
                }
                if (((this._sUBCONJUNTOSTableAdapter != null) 
                            && (this._sUBCONJUNTOSTableAdapter.Connection != null))) {
                    return this._sUBCONJUNTOSTableAdapter.Connection;
                }
                if (((this._pIEZASTableAdapter != null) 
                            && (this._pIEZASTableAdapter.Connection != null))) {
                    return this._pIEZASTableAdapter.Connection;
                }
                if (((this._mATERIASPRIMASXPIEZATableAdapter != null) 
                            && (this._mATERIASPRIMASXPIEZATableAdapter.Connection != null))) {
                    return this._mATERIASPRIMASXPIEZATableAdapter.Connection;
                }
                if (((this._eSTRUCTURASTableAdapter != null) 
                            && (this._eSTRUCTURASTableAdapter.Connection != null))) {
                    return this._eSTRUCTURASTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._pIEZASXESTRUCTURATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sUBCONJUNTOSXESTRUCTURATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mATERIASPRIMASXESTRUCTURATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cONJUNTOSXESTRUCTURATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._gRUPOS_ESTRUCTURATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mATERIAS_PRIMASTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pLANOSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eSTADO_PARTESTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tERMINACIONESTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pIEZASXCONJUNTOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pIEZASXSUBCONJUNTOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sUBCONJUNTOSXCONJUNTOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cONJUNTOSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sUBCONJUNTOSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pIEZASTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mATERIASPRIMASXPIEZATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eSTRUCTURASTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(dsEstructura dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pLANOSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PLANOS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pLANOSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tERMINACIONESTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TERMINACIONES.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tERMINACIONESTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eSTRUCTURASTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ESTRUCTURAS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eSTRUCTURASTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eSTADO_PARTESTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ESTADO_PARTES.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eSTADO_PARTESTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cONJUNTOSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CONJUNTOS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cONJUNTOSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sUBCONJUNTOSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SUBCONJUNTOS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sUBCONJUNTOSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pIEZASTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PIEZAS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pIEZASTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._gRUPOS_ESTRUCTURATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.GRUPOS_ESTRUCTURA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._gRUPOS_ESTRUCTURATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mATERIAS_PRIMASTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MATERIAS_PRIMAS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mATERIAS_PRIMASTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sUBCONJUNTOSXCONJUNTOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SUBCONJUNTOSXCONJUNTO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sUBCONJUNTOSXCONJUNTOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mATERIASPRIMASXPIEZATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MATERIASPRIMASXPIEZA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mATERIASPRIMASXPIEZATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pIEZASXESTRUCTURATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PIEZASXESTRUCTURA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pIEZASXESTRUCTURATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mATERIASPRIMASXESTRUCTURATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MATERIASPRIMASXESTRUCTURA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mATERIASPRIMASXESTRUCTURATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cONJUNTOSXESTRUCTURATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CONJUNTOSXESTRUCTURA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cONJUNTOSXESTRUCTURATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pIEZASXSUBCONJUNTOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PIEZASXSUBCONJUNTO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pIEZASXSUBCONJUNTOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pIEZASXCONJUNTOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PIEZASXCONJUNTO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pIEZASXCONJUNTOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sUBCONJUNTOSXESTRUCTURATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SUBCONJUNTOSXESTRUCTURA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sUBCONJUNTOSXESTRUCTURATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(dsEstructura dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pLANOSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PLANOS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pLANOSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tERMINACIONESTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TERMINACIONES.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tERMINACIONESTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eSTRUCTURASTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ESTRUCTURAS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eSTRUCTURASTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eSTADO_PARTESTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ESTADO_PARTES.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eSTADO_PARTESTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cONJUNTOSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CONJUNTOS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cONJUNTOSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sUBCONJUNTOSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SUBCONJUNTOS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sUBCONJUNTOSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pIEZASTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PIEZAS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pIEZASTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._gRUPOS_ESTRUCTURATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.GRUPOS_ESTRUCTURA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._gRUPOS_ESTRUCTURATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mATERIAS_PRIMASTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MATERIAS_PRIMAS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mATERIAS_PRIMASTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sUBCONJUNTOSXCONJUNTOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SUBCONJUNTOSXCONJUNTO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sUBCONJUNTOSXCONJUNTOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mATERIASPRIMASXPIEZATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MATERIASPRIMASXPIEZA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mATERIASPRIMASXPIEZATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pIEZASXESTRUCTURATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PIEZASXESTRUCTURA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pIEZASXESTRUCTURATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mATERIASPRIMASXESTRUCTURATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MATERIASPRIMASXESTRUCTURA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mATERIASPRIMASXESTRUCTURATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cONJUNTOSXESTRUCTURATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CONJUNTOSXESTRUCTURA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cONJUNTOSXESTRUCTURATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pIEZASXSUBCONJUNTOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PIEZASXSUBCONJUNTO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pIEZASXSUBCONJUNTOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pIEZASXCONJUNTOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PIEZASXCONJUNTO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pIEZASXCONJUNTOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sUBCONJUNTOSXESTRUCTURATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SUBCONJUNTOSXESTRUCTURA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sUBCONJUNTOSXESTRUCTURATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(dsEstructura dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._sUBCONJUNTOSXESTRUCTURATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SUBCONJUNTOSXESTRUCTURA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sUBCONJUNTOSXESTRUCTURATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pIEZASXCONJUNTOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PIEZASXCONJUNTO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pIEZASXCONJUNTOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pIEZASXSUBCONJUNTOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PIEZASXSUBCONJUNTO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pIEZASXSUBCONJUNTOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cONJUNTOSXESTRUCTURATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CONJUNTOSXESTRUCTURA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cONJUNTOSXESTRUCTURATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mATERIASPRIMASXESTRUCTURATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MATERIASPRIMASXESTRUCTURA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mATERIASPRIMASXESTRUCTURATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pIEZASXESTRUCTURATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PIEZASXESTRUCTURA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pIEZASXESTRUCTURATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mATERIASPRIMASXPIEZATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MATERIASPRIMASXPIEZA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mATERIASPRIMASXPIEZATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sUBCONJUNTOSXCONJUNTOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SUBCONJUNTOSXCONJUNTO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sUBCONJUNTOSXCONJUNTOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mATERIAS_PRIMASTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MATERIAS_PRIMAS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mATERIAS_PRIMASTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._gRUPOS_ESTRUCTURATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.GRUPOS_ESTRUCTURA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._gRUPOS_ESTRUCTURATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pIEZASTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PIEZAS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pIEZASTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sUBCONJUNTOSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SUBCONJUNTOS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sUBCONJUNTOSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cONJUNTOSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CONJUNTOS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cONJUNTOSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eSTADO_PARTESTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ESTADO_PARTES.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eSTADO_PARTESTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eSTRUCTURASTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ESTRUCTURAS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eSTRUCTURASTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tERMINACIONESTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TERMINACIONES.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tERMINACIONESTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pLANOSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PLANOS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pLANOSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(dsEstructura dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._pIEZASXESTRUCTURATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pIEZASXESTRUCTURATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sUBCONJUNTOSXESTRUCTURATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sUBCONJUNTOSXESTRUCTURATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mATERIASPRIMASXESTRUCTURATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mATERIASPRIMASXESTRUCTURATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cONJUNTOSXESTRUCTURATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cONJUNTOSXESTRUCTURATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._gRUPOS_ESTRUCTURATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._gRUPOS_ESTRUCTURATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mATERIAS_PRIMASTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mATERIAS_PRIMASTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pLANOSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pLANOSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._eSTADO_PARTESTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eSTADO_PARTESTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tERMINACIONESTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tERMINACIONESTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pIEZASXCONJUNTOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pIEZASXCONJUNTOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pIEZASXSUBCONJUNTOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pIEZASXSUBCONJUNTOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sUBCONJUNTOSXCONJUNTOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sUBCONJUNTOSXCONJUNTOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cONJUNTOSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cONJUNTOSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sUBCONJUNTOSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sUBCONJUNTOSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pIEZASTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pIEZASTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mATERIASPRIMASXPIEZATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mATERIASPRIMASXPIEZATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._eSTRUCTURASTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eSTRUCTURASTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._pIEZASXESTRUCTURATableAdapter != null)) {
                    revertConnections.Add(this._pIEZASXESTRUCTURATableAdapter, this._pIEZASXESTRUCTURATableAdapter.Connection);
                    this._pIEZASXESTRUCTURATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pIEZASXESTRUCTURATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pIEZASXESTRUCTURATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pIEZASXESTRUCTURATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pIEZASXESTRUCTURATableAdapter.Adapter);
                    }
                }
                if ((this._sUBCONJUNTOSXESTRUCTURATableAdapter != null)) {
                    revertConnections.Add(this._sUBCONJUNTOSXESTRUCTURATableAdapter, this._sUBCONJUNTOSXESTRUCTURATableAdapter.Connection);
                    this._sUBCONJUNTOSXESTRUCTURATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sUBCONJUNTOSXESTRUCTURATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sUBCONJUNTOSXESTRUCTURATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sUBCONJUNTOSXESTRUCTURATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sUBCONJUNTOSXESTRUCTURATableAdapter.Adapter);
                    }
                }
                if ((this._mATERIASPRIMASXESTRUCTURATableAdapter != null)) {
                    revertConnections.Add(this._mATERIASPRIMASXESTRUCTURATableAdapter, this._mATERIASPRIMASXESTRUCTURATableAdapter.Connection);
                    this._mATERIASPRIMASXESTRUCTURATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mATERIASPRIMASXESTRUCTURATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mATERIASPRIMASXESTRUCTURATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mATERIASPRIMASXESTRUCTURATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mATERIASPRIMASXESTRUCTURATableAdapter.Adapter);
                    }
                }
                if ((this._cONJUNTOSXESTRUCTURATableAdapter != null)) {
                    revertConnections.Add(this._cONJUNTOSXESTRUCTURATableAdapter, this._cONJUNTOSXESTRUCTURATableAdapter.Connection);
                    this._cONJUNTOSXESTRUCTURATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cONJUNTOSXESTRUCTURATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cONJUNTOSXESTRUCTURATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cONJUNTOSXESTRUCTURATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cONJUNTOSXESTRUCTURATableAdapter.Adapter);
                    }
                }
                if ((this._gRUPOS_ESTRUCTURATableAdapter != null)) {
                    revertConnections.Add(this._gRUPOS_ESTRUCTURATableAdapter, this._gRUPOS_ESTRUCTURATableAdapter.Connection);
                    this._gRUPOS_ESTRUCTURATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._gRUPOS_ESTRUCTURATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._gRUPOS_ESTRUCTURATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._gRUPOS_ESTRUCTURATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._gRUPOS_ESTRUCTURATableAdapter.Adapter);
                    }
                }
                if ((this._mATERIAS_PRIMASTableAdapter != null)) {
                    revertConnections.Add(this._mATERIAS_PRIMASTableAdapter, this._mATERIAS_PRIMASTableAdapter.Connection);
                    this._mATERIAS_PRIMASTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mATERIAS_PRIMASTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mATERIAS_PRIMASTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mATERIAS_PRIMASTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mATERIAS_PRIMASTableAdapter.Adapter);
                    }
                }
                if ((this._pLANOSTableAdapter != null)) {
                    revertConnections.Add(this._pLANOSTableAdapter, this._pLANOSTableAdapter.Connection);
                    this._pLANOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pLANOSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pLANOSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pLANOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pLANOSTableAdapter.Adapter);
                    }
                }
                if ((this._eSTADO_PARTESTableAdapter != null)) {
                    revertConnections.Add(this._eSTADO_PARTESTableAdapter, this._eSTADO_PARTESTableAdapter.Connection);
                    this._eSTADO_PARTESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eSTADO_PARTESTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eSTADO_PARTESTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eSTADO_PARTESTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eSTADO_PARTESTableAdapter.Adapter);
                    }
                }
                if ((this._tERMINACIONESTableAdapter != null)) {
                    revertConnections.Add(this._tERMINACIONESTableAdapter, this._tERMINACIONESTableAdapter.Connection);
                    this._tERMINACIONESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tERMINACIONESTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tERMINACIONESTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tERMINACIONESTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tERMINACIONESTableAdapter.Adapter);
                    }
                }
                if ((this._pIEZASXCONJUNTOTableAdapter != null)) {
                    revertConnections.Add(this._pIEZASXCONJUNTOTableAdapter, this._pIEZASXCONJUNTOTableAdapter.Connection);
                    this._pIEZASXCONJUNTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pIEZASXCONJUNTOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pIEZASXCONJUNTOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pIEZASXCONJUNTOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pIEZASXCONJUNTOTableAdapter.Adapter);
                    }
                }
                if ((this._pIEZASXSUBCONJUNTOTableAdapter != null)) {
                    revertConnections.Add(this._pIEZASXSUBCONJUNTOTableAdapter, this._pIEZASXSUBCONJUNTOTableAdapter.Connection);
                    this._pIEZASXSUBCONJUNTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pIEZASXSUBCONJUNTOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pIEZASXSUBCONJUNTOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pIEZASXSUBCONJUNTOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pIEZASXSUBCONJUNTOTableAdapter.Adapter);
                    }
                }
                if ((this._sUBCONJUNTOSXCONJUNTOTableAdapter != null)) {
                    revertConnections.Add(this._sUBCONJUNTOSXCONJUNTOTableAdapter, this._sUBCONJUNTOSXCONJUNTOTableAdapter.Connection);
                    this._sUBCONJUNTOSXCONJUNTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sUBCONJUNTOSXCONJUNTOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sUBCONJUNTOSXCONJUNTOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sUBCONJUNTOSXCONJUNTOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sUBCONJUNTOSXCONJUNTOTableAdapter.Adapter);
                    }
                }
                if ((this._cONJUNTOSTableAdapter != null)) {
                    revertConnections.Add(this._cONJUNTOSTableAdapter, this._cONJUNTOSTableAdapter.Connection);
                    this._cONJUNTOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cONJUNTOSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cONJUNTOSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cONJUNTOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cONJUNTOSTableAdapter.Adapter);
                    }
                }
                if ((this._sUBCONJUNTOSTableAdapter != null)) {
                    revertConnections.Add(this._sUBCONJUNTOSTableAdapter, this._sUBCONJUNTOSTableAdapter.Connection);
                    this._sUBCONJUNTOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sUBCONJUNTOSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sUBCONJUNTOSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sUBCONJUNTOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sUBCONJUNTOSTableAdapter.Adapter);
                    }
                }
                if ((this._pIEZASTableAdapter != null)) {
                    revertConnections.Add(this._pIEZASTableAdapter, this._pIEZASTableAdapter.Connection);
                    this._pIEZASTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pIEZASTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pIEZASTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pIEZASTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pIEZASTableAdapter.Adapter);
                    }
                }
                if ((this._mATERIASPRIMASXPIEZATableAdapter != null)) {
                    revertConnections.Add(this._mATERIASPRIMASXPIEZATableAdapter, this._mATERIASPRIMASXPIEZATableAdapter.Connection);
                    this._mATERIASPRIMASXPIEZATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mATERIASPRIMASXPIEZATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mATERIASPRIMASXPIEZATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mATERIASPRIMASXPIEZATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mATERIASPRIMASXPIEZATableAdapter.Adapter);
                    }
                }
                if ((this._eSTRUCTURASTableAdapter != null)) {
                    revertConnections.Add(this._eSTRUCTURASTableAdapter, this._eSTRUCTURASTableAdapter.Connection);
                    this._eSTRUCTURASTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eSTRUCTURASTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eSTRUCTURASTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eSTRUCTURASTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eSTRUCTURASTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._pIEZASXESTRUCTURATableAdapter != null)) {
                    this._pIEZASXESTRUCTURATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pIEZASXESTRUCTURATableAdapter]));
                    this._pIEZASXESTRUCTURATableAdapter.Transaction = null;
                }
                if ((this._sUBCONJUNTOSXESTRUCTURATableAdapter != null)) {
                    this._sUBCONJUNTOSXESTRUCTURATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sUBCONJUNTOSXESTRUCTURATableAdapter]));
                    this._sUBCONJUNTOSXESTRUCTURATableAdapter.Transaction = null;
                }
                if ((this._mATERIASPRIMASXESTRUCTURATableAdapter != null)) {
                    this._mATERIASPRIMASXESTRUCTURATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mATERIASPRIMASXESTRUCTURATableAdapter]));
                    this._mATERIASPRIMASXESTRUCTURATableAdapter.Transaction = null;
                }
                if ((this._cONJUNTOSXESTRUCTURATableAdapter != null)) {
                    this._cONJUNTOSXESTRUCTURATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cONJUNTOSXESTRUCTURATableAdapter]));
                    this._cONJUNTOSXESTRUCTURATableAdapter.Transaction = null;
                }
                if ((this._gRUPOS_ESTRUCTURATableAdapter != null)) {
                    this._gRUPOS_ESTRUCTURATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._gRUPOS_ESTRUCTURATableAdapter]));
                    this._gRUPOS_ESTRUCTURATableAdapter.Transaction = null;
                }
                if ((this._mATERIAS_PRIMASTableAdapter != null)) {
                    this._mATERIAS_PRIMASTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mATERIAS_PRIMASTableAdapter]));
                    this._mATERIAS_PRIMASTableAdapter.Transaction = null;
                }
                if ((this._pLANOSTableAdapter != null)) {
                    this._pLANOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pLANOSTableAdapter]));
                    this._pLANOSTableAdapter.Transaction = null;
                }
                if ((this._eSTADO_PARTESTableAdapter != null)) {
                    this._eSTADO_PARTESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eSTADO_PARTESTableAdapter]));
                    this._eSTADO_PARTESTableAdapter.Transaction = null;
                }
                if ((this._tERMINACIONESTableAdapter != null)) {
                    this._tERMINACIONESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tERMINACIONESTableAdapter]));
                    this._tERMINACIONESTableAdapter.Transaction = null;
                }
                if ((this._pIEZASXCONJUNTOTableAdapter != null)) {
                    this._pIEZASXCONJUNTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pIEZASXCONJUNTOTableAdapter]));
                    this._pIEZASXCONJUNTOTableAdapter.Transaction = null;
                }
                if ((this._pIEZASXSUBCONJUNTOTableAdapter != null)) {
                    this._pIEZASXSUBCONJUNTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pIEZASXSUBCONJUNTOTableAdapter]));
                    this._pIEZASXSUBCONJUNTOTableAdapter.Transaction = null;
                }
                if ((this._sUBCONJUNTOSXCONJUNTOTableAdapter != null)) {
                    this._sUBCONJUNTOSXCONJUNTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sUBCONJUNTOSXCONJUNTOTableAdapter]));
                    this._sUBCONJUNTOSXCONJUNTOTableAdapter.Transaction = null;
                }
                if ((this._cONJUNTOSTableAdapter != null)) {
                    this._cONJUNTOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cONJUNTOSTableAdapter]));
                    this._cONJUNTOSTableAdapter.Transaction = null;
                }
                if ((this._sUBCONJUNTOSTableAdapter != null)) {
                    this._sUBCONJUNTOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sUBCONJUNTOSTableAdapter]));
                    this._sUBCONJUNTOSTableAdapter.Transaction = null;
                }
                if ((this._pIEZASTableAdapter != null)) {
                    this._pIEZASTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pIEZASTableAdapter]));
                    this._pIEZASTableAdapter.Transaction = null;
                }
                if ((this._mATERIASPRIMASXPIEZATableAdapter != null)) {
                    this._mATERIASPRIMASXPIEZATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mATERIASPRIMASXPIEZATableAdapter]));
                    this._mATERIASPRIMASXPIEZATableAdapter.Transaction = null;
                }
                if ((this._eSTRUCTURASTableAdapter != null)) {
                    this._eSTRUCTURASTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eSTRUCTURASTableAdapter]));
                    this._eSTRUCTURASTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591