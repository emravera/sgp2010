//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GyCAP.Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsStock")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsStock : global::System.Data.DataSet {
        
        private MOVIMIENTOS_STOCKDataTable tableMOVIMIENTOS_STOCK;
        
        private ESTADO_MOVIMIENTOS_STOCKDataTable tableESTADO_MOVIMIENTOS_STOCK;
        
        private UNIDADES_MEDIDADataTable tableUNIDADES_MEDIDA;
        
        private TIPOS_UNIDADES_MEDIDADataTable tableTIPOS_UNIDADES_MEDIDA;
        
        private UBICACIONES_STOCKDataTable tableUBICACIONES_STOCK;
        
        private TIPOS_UBICACIONES_STOCKDataTable tableTIPOS_UBICACIONES_STOCK;
        
        private global::System.Data.DataRelation relationFK_MOVIMIENTOS_STOCK_ESTADO_MOVIMIENTOS_STOCK;
        
        private global::System.Data.DataRelation relationFK_MOVIMIENTOS_STOCK_UNIDADES_MEDIDA;
        
        private global::System.Data.DataRelation relationunidadMedida_tipoUnidadMedida_fk;
        
        private global::System.Data.DataRelation relationFK_UBICACIONES_STOCK_UBICACION_STOCK;
        
        private global::System.Data.DataRelation relationFK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK;
        
        private global::System.Data.DataRelation relationFK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK1;
        
        private global::System.Data.DataRelation relationFK_UBICACIONES_STOCK_UBICACION_STOCK1;
        
        private global::System.Data.DataRelation relationFK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsStock() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsStock(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MOVIMIENTOS_STOCK"] != null)) {
                    base.Tables.Add(new MOVIMIENTOS_STOCKDataTable(ds.Tables["MOVIMIENTOS_STOCK"]));
                }
                if ((ds.Tables["ESTADO_MOVIMIENTOS_STOCK"] != null)) {
                    base.Tables.Add(new ESTADO_MOVIMIENTOS_STOCKDataTable(ds.Tables["ESTADO_MOVIMIENTOS_STOCK"]));
                }
                if ((ds.Tables["UNIDADES_MEDIDA"] != null)) {
                    base.Tables.Add(new UNIDADES_MEDIDADataTable(ds.Tables["UNIDADES_MEDIDA"]));
                }
                if ((ds.Tables["TIPOS_UNIDADES_MEDIDA"] != null)) {
                    base.Tables.Add(new TIPOS_UNIDADES_MEDIDADataTable(ds.Tables["TIPOS_UNIDADES_MEDIDA"]));
                }
                if ((ds.Tables["UBICACIONES_STOCK"] != null)) {
                    base.Tables.Add(new UBICACIONES_STOCKDataTable(ds.Tables["UBICACIONES_STOCK"]));
                }
                if ((ds.Tables["TIPOS_UBICACIONES_STOCK"] != null)) {
                    base.Tables.Add(new TIPOS_UBICACIONES_STOCKDataTable(ds.Tables["TIPOS_UBICACIONES_STOCK"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MOVIMIENTOS_STOCKDataTable MOVIMIENTOS_STOCK {
            get {
                return this.tableMOVIMIENTOS_STOCK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ESTADO_MOVIMIENTOS_STOCKDataTable ESTADO_MOVIMIENTOS_STOCK {
            get {
                return this.tableESTADO_MOVIMIENTOS_STOCK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UNIDADES_MEDIDADataTable UNIDADES_MEDIDA {
            get {
                return this.tableUNIDADES_MEDIDA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TIPOS_UNIDADES_MEDIDADataTable TIPOS_UNIDADES_MEDIDA {
            get {
                return this.tableTIPOS_UNIDADES_MEDIDA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UBICACIONES_STOCKDataTable UBICACIONES_STOCK {
            get {
                return this.tableUBICACIONES_STOCK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TIPOS_UBICACIONES_STOCKDataTable TIPOS_UBICACIONES_STOCK {
            get {
                return this.tableTIPOS_UBICACIONES_STOCK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsStock cln = ((dsStock)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MOVIMIENTOS_STOCK"] != null)) {
                    base.Tables.Add(new MOVIMIENTOS_STOCKDataTable(ds.Tables["MOVIMIENTOS_STOCK"]));
                }
                if ((ds.Tables["ESTADO_MOVIMIENTOS_STOCK"] != null)) {
                    base.Tables.Add(new ESTADO_MOVIMIENTOS_STOCKDataTable(ds.Tables["ESTADO_MOVIMIENTOS_STOCK"]));
                }
                if ((ds.Tables["UNIDADES_MEDIDA"] != null)) {
                    base.Tables.Add(new UNIDADES_MEDIDADataTable(ds.Tables["UNIDADES_MEDIDA"]));
                }
                if ((ds.Tables["TIPOS_UNIDADES_MEDIDA"] != null)) {
                    base.Tables.Add(new TIPOS_UNIDADES_MEDIDADataTable(ds.Tables["TIPOS_UNIDADES_MEDIDA"]));
                }
                if ((ds.Tables["UBICACIONES_STOCK"] != null)) {
                    base.Tables.Add(new UBICACIONES_STOCKDataTable(ds.Tables["UBICACIONES_STOCK"]));
                }
                if ((ds.Tables["TIPOS_UBICACIONES_STOCK"] != null)) {
                    base.Tables.Add(new TIPOS_UBICACIONES_STOCKDataTable(ds.Tables["TIPOS_UBICACIONES_STOCK"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMOVIMIENTOS_STOCK = ((MOVIMIENTOS_STOCKDataTable)(base.Tables["MOVIMIENTOS_STOCK"]));
            if ((initTable == true)) {
                if ((this.tableMOVIMIENTOS_STOCK != null)) {
                    this.tableMOVIMIENTOS_STOCK.InitVars();
                }
            }
            this.tableESTADO_MOVIMIENTOS_STOCK = ((ESTADO_MOVIMIENTOS_STOCKDataTable)(base.Tables["ESTADO_MOVIMIENTOS_STOCK"]));
            if ((initTable == true)) {
                if ((this.tableESTADO_MOVIMIENTOS_STOCK != null)) {
                    this.tableESTADO_MOVIMIENTOS_STOCK.InitVars();
                }
            }
            this.tableUNIDADES_MEDIDA = ((UNIDADES_MEDIDADataTable)(base.Tables["UNIDADES_MEDIDA"]));
            if ((initTable == true)) {
                if ((this.tableUNIDADES_MEDIDA != null)) {
                    this.tableUNIDADES_MEDIDA.InitVars();
                }
            }
            this.tableTIPOS_UNIDADES_MEDIDA = ((TIPOS_UNIDADES_MEDIDADataTable)(base.Tables["TIPOS_UNIDADES_MEDIDA"]));
            if ((initTable == true)) {
                if ((this.tableTIPOS_UNIDADES_MEDIDA != null)) {
                    this.tableTIPOS_UNIDADES_MEDIDA.InitVars();
                }
            }
            this.tableUBICACIONES_STOCK = ((UBICACIONES_STOCKDataTable)(base.Tables["UBICACIONES_STOCK"]));
            if ((initTable == true)) {
                if ((this.tableUBICACIONES_STOCK != null)) {
                    this.tableUBICACIONES_STOCK.InitVars();
                }
            }
            this.tableTIPOS_UBICACIONES_STOCK = ((TIPOS_UBICACIONES_STOCKDataTable)(base.Tables["TIPOS_UBICACIONES_STOCK"]));
            if ((initTable == true)) {
                if ((this.tableTIPOS_UBICACIONES_STOCK != null)) {
                    this.tableTIPOS_UBICACIONES_STOCK.InitVars();
                }
            }
            this.relationFK_MOVIMIENTOS_STOCK_ESTADO_MOVIMIENTOS_STOCK = this.Relations["FK_MOVIMIENTOS_STOCK_ESTADO_MOVIMIENTOS_STOCK"];
            this.relationFK_MOVIMIENTOS_STOCK_UNIDADES_MEDIDA = this.Relations["FK_MOVIMIENTOS_STOCK_UNIDADES_MEDIDA"];
            this.relationunidadMedida_tipoUnidadMedida_fk = this.Relations["unidadMedida_tipoUnidadMedida_fk"];
            this.relationFK_UBICACIONES_STOCK_UBICACION_STOCK = this.Relations["FK_UBICACIONES_STOCK_UBICACION_STOCK"];
            this.relationFK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK = this.Relations["FK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK"];
            this.relationFK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK1 = this.Relations["FK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK1"];
            this.relationFK_UBICACIONES_STOCK_UBICACION_STOCK1 = this.Relations["FK_UBICACIONES_STOCK_UBICACION_STOCK1"];
            this.relationFK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK = this.Relations["FK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsStock";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsStock.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMOVIMIENTOS_STOCK = new MOVIMIENTOS_STOCKDataTable();
            base.Tables.Add(this.tableMOVIMIENTOS_STOCK);
            this.tableESTADO_MOVIMIENTOS_STOCK = new ESTADO_MOVIMIENTOS_STOCKDataTable();
            base.Tables.Add(this.tableESTADO_MOVIMIENTOS_STOCK);
            this.tableUNIDADES_MEDIDA = new UNIDADES_MEDIDADataTable();
            base.Tables.Add(this.tableUNIDADES_MEDIDA);
            this.tableTIPOS_UNIDADES_MEDIDA = new TIPOS_UNIDADES_MEDIDADataTable();
            base.Tables.Add(this.tableTIPOS_UNIDADES_MEDIDA);
            this.tableUBICACIONES_STOCK = new UBICACIONES_STOCKDataTable();
            base.Tables.Add(this.tableUBICACIONES_STOCK);
            this.tableTIPOS_UBICACIONES_STOCK = new TIPOS_UBICACIONES_STOCKDataTable();
            base.Tables.Add(this.tableTIPOS_UBICACIONES_STOCK);
            this.relationFK_MOVIMIENTOS_STOCK_ESTADO_MOVIMIENTOS_STOCK = new global::System.Data.DataRelation("FK_MOVIMIENTOS_STOCK_ESTADO_MOVIMIENTOS_STOCK", new global::System.Data.DataColumn[] {
                        this.tableESTADO_MOVIMIENTOS_STOCK.EMVTO_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableMOVIMIENTOS_STOCK.EMVTO_CODIGOColumn}, false);
            this.Relations.Add(this.relationFK_MOVIMIENTOS_STOCK_ESTADO_MOVIMIENTOS_STOCK);
            this.relationFK_MOVIMIENTOS_STOCK_UNIDADES_MEDIDA = new global::System.Data.DataRelation("FK_MOVIMIENTOS_STOCK_UNIDADES_MEDIDA", new global::System.Data.DataColumn[] {
                        this.tableUNIDADES_MEDIDA.UMED_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableMOVIMIENTOS_STOCK.UMED_CODIGOColumn}, false);
            this.Relations.Add(this.relationFK_MOVIMIENTOS_STOCK_UNIDADES_MEDIDA);
            this.relationunidadMedida_tipoUnidadMedida_fk = new global::System.Data.DataRelation("unidadMedida_tipoUnidadMedida_fk", new global::System.Data.DataColumn[] {
                        this.tableTIPOS_UNIDADES_MEDIDA.TUMED_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableUNIDADES_MEDIDA.TUMED_CODIGOColumn}, false);
            this.Relations.Add(this.relationunidadMedida_tipoUnidadMedida_fk);
            this.relationFK_UBICACIONES_STOCK_UBICACION_STOCK = new global::System.Data.DataRelation("FK_UBICACIONES_STOCK_UBICACION_STOCK", new global::System.Data.DataColumn[] {
                        this.tableUBICACIONES_STOCK.USTCK_NUMEROColumn}, new global::System.Data.DataColumn[] {
                        this.tableUBICACIONES_STOCK.USTCK_PADREColumn}, false);
            this.Relations.Add(this.relationFK_UBICACIONES_STOCK_UBICACION_STOCK);
            this.relationFK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK = new global::System.Data.DataRelation("FK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK", new global::System.Data.DataColumn[] {
                        this.tableUBICACIONES_STOCK.USTCK_NUMEROColumn}, new global::System.Data.DataColumn[] {
                        this.tableMOVIMIENTOS_STOCK.USTCK_ORIGENColumn}, false);
            this.Relations.Add(this.relationFK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK);
            this.relationFK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK1 = new global::System.Data.DataRelation("FK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK1", new global::System.Data.DataColumn[] {
                        this.tableUBICACIONES_STOCK.USTCK_NUMEROColumn}, new global::System.Data.DataColumn[] {
                        this.tableMOVIMIENTOS_STOCK.USTCK_DESTINOColumn}, false);
            this.Relations.Add(this.relationFK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK1);
            this.relationFK_UBICACIONES_STOCK_UBICACION_STOCK1 = new global::System.Data.DataRelation("FK_UBICACIONES_STOCK_UBICACION_STOCK1", new global::System.Data.DataColumn[] {
                        this.tableUNIDADES_MEDIDA.UMED_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableUBICACIONES_STOCK.UMED_CODIGOColumn}, false);
            this.Relations.Add(this.relationFK_UBICACIONES_STOCK_UBICACION_STOCK1);
            this.relationFK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK = new global::System.Data.DataRelation("FK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK", new global::System.Data.DataColumn[] {
                        this.tableTIPOS_UBICACIONES_STOCK.TUS_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableUBICACIONES_STOCK.TUS_CODIGOColumn}, false);
            this.Relations.Add(this.relationFK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMOVIMIENTOS_STOCK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeESTADO_MOVIMIENTOS_STOCK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUNIDADES_MEDIDA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTIPOS_UNIDADES_MEDIDA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUBICACIONES_STOCK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTIPOS_UBICACIONES_STOCK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsStock ds = new dsStock();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void MOVIMIENTOS_STOCKRowChangeEventHandler(object sender, MOVIMIENTOS_STOCKRowChangeEvent e);
        
        public delegate void ESTADO_MOVIMIENTOS_STOCKRowChangeEventHandler(object sender, ESTADO_MOVIMIENTOS_STOCKRowChangeEvent e);
        
        public delegate void UNIDADES_MEDIDARowChangeEventHandler(object sender, UNIDADES_MEDIDARowChangeEvent e);
        
        public delegate void TIPOS_UNIDADES_MEDIDARowChangeEventHandler(object sender, TIPOS_UNIDADES_MEDIDARowChangeEvent e);
        
        public delegate void UBICACIONES_STOCKRowChangeEventHandler(object sender, UBICACIONES_STOCKRowChangeEvent e);
        
        public delegate void TIPOS_UBICACIONES_STOCKRowChangeEventHandler(object sender, TIPOS_UBICACIONES_STOCKRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MOVIMIENTOS_STOCKDataTable : global::System.Data.TypedTableBase<MOVIMIENTOS_STOCKRow> {
            
            private global::System.Data.DataColumn columnMVTO_NUMERO;
            
            private global::System.Data.DataColumn columnMVTO_CODIGO;
            
            private global::System.Data.DataColumn columnMVTO_DESCRIPCION;
            
            private global::System.Data.DataColumn columnMVTO_FECHAALTA;
            
            private global::System.Data.DataColumn columnMVTO_FECHAPREVISTA;
            
            private global::System.Data.DataColumn columnMVTO_FECHAREAL;
            
            private global::System.Data.DataColumn columnUSTCK_ORIGEN;
            
            private global::System.Data.DataColumn columnUSTCK_DESTINO;
            
            private global::System.Data.DataColumn columnMVTO_CANTIDAD;
            
            private global::System.Data.DataColumn columnUMED_CODIGO;
            
            private global::System.Data.DataColumn columnEMVTO_CODIGO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOVIMIENTOS_STOCKDataTable() {
                this.TableName = "MOVIMIENTOS_STOCK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOVIMIENTOS_STOCKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MOVIMIENTOS_STOCKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MVTO_NUMEROColumn {
                get {
                    return this.columnMVTO_NUMERO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MVTO_CODIGOColumn {
                get {
                    return this.columnMVTO_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MVTO_DESCRIPCIONColumn {
                get {
                    return this.columnMVTO_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MVTO_FECHAALTAColumn {
                get {
                    return this.columnMVTO_FECHAALTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MVTO_FECHAPREVISTAColumn {
                get {
                    return this.columnMVTO_FECHAPREVISTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MVTO_FECHAREALColumn {
                get {
                    return this.columnMVTO_FECHAREAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_ORIGENColumn {
                get {
                    return this.columnUSTCK_ORIGEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_DESTINOColumn {
                get {
                    return this.columnUSTCK_DESTINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MVTO_CANTIDADColumn {
                get {
                    return this.columnMVTO_CANTIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_CODIGOColumn {
                get {
                    return this.columnUMED_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMVTO_CODIGOColumn {
                get {
                    return this.columnEMVTO_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOVIMIENTOS_STOCKRow this[int index] {
                get {
                    return ((MOVIMIENTOS_STOCKRow)(this.Rows[index]));
                }
            }
            
            public event MOVIMIENTOS_STOCKRowChangeEventHandler MOVIMIENTOS_STOCKRowChanging;
            
            public event MOVIMIENTOS_STOCKRowChangeEventHandler MOVIMIENTOS_STOCKRowChanged;
            
            public event MOVIMIENTOS_STOCKRowChangeEventHandler MOVIMIENTOS_STOCKRowDeleting;
            
            public event MOVIMIENTOS_STOCKRowChangeEventHandler MOVIMIENTOS_STOCKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMOVIMIENTOS_STOCKRow(MOVIMIENTOS_STOCKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOVIMIENTOS_STOCKRow AddMOVIMIENTOS_STOCKRow(string MVTO_CODIGO, string MVTO_DESCRIPCION, System.DateTime MVTO_FECHAALTA, System.DateTime MVTO_FECHAPREVISTA, System.DateTime MVTO_FECHAREAL, UBICACIONES_STOCKRow parentUBICACIONES_STOCKRowByFK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK, UBICACIONES_STOCKRow parentUBICACIONES_STOCKRowByFK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK1, decimal MVTO_CANTIDAD, UNIDADES_MEDIDARow parentUNIDADES_MEDIDARowByFK_MOVIMIENTOS_STOCK_UNIDADES_MEDIDA, ESTADO_MOVIMIENTOS_STOCKRow parentESTADO_MOVIMIENTOS_STOCKRowByFK_MOVIMIENTOS_STOCK_ESTADO_MOVIMIENTOS_STOCK) {
                MOVIMIENTOS_STOCKRow rowMOVIMIENTOS_STOCKRow = ((MOVIMIENTOS_STOCKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MVTO_CODIGO,
                        MVTO_DESCRIPCION,
                        MVTO_FECHAALTA,
                        MVTO_FECHAPREVISTA,
                        MVTO_FECHAREAL,
                        null,
                        null,
                        MVTO_CANTIDAD,
                        null,
                        null};
                if ((parentUBICACIONES_STOCKRowByFK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK != null)) {
                    columnValuesArray[6] = parentUBICACIONES_STOCKRowByFK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK[0];
                }
                if ((parentUBICACIONES_STOCKRowByFK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK1 != null)) {
                    columnValuesArray[7] = parentUBICACIONES_STOCKRowByFK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK1[0];
                }
                if ((parentUNIDADES_MEDIDARowByFK_MOVIMIENTOS_STOCK_UNIDADES_MEDIDA != null)) {
                    columnValuesArray[9] = parentUNIDADES_MEDIDARowByFK_MOVIMIENTOS_STOCK_UNIDADES_MEDIDA[0];
                }
                if ((parentESTADO_MOVIMIENTOS_STOCKRowByFK_MOVIMIENTOS_STOCK_ESTADO_MOVIMIENTOS_STOCK != null)) {
                    columnValuesArray[10] = parentESTADO_MOVIMIENTOS_STOCKRowByFK_MOVIMIENTOS_STOCK_ESTADO_MOVIMIENTOS_STOCK[0];
                }
                rowMOVIMIENTOS_STOCKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMOVIMIENTOS_STOCKRow);
                return rowMOVIMIENTOS_STOCKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOVIMIENTOS_STOCKRow FindByMVTO_NUMERO(decimal MVTO_NUMERO) {
                return ((MOVIMIENTOS_STOCKRow)(this.Rows.Find(new object[] {
                            MVTO_NUMERO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MOVIMIENTOS_STOCKDataTable cln = ((MOVIMIENTOS_STOCKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MOVIMIENTOS_STOCKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMVTO_NUMERO = base.Columns["MVTO_NUMERO"];
                this.columnMVTO_CODIGO = base.Columns["MVTO_CODIGO"];
                this.columnMVTO_DESCRIPCION = base.Columns["MVTO_DESCRIPCION"];
                this.columnMVTO_FECHAALTA = base.Columns["MVTO_FECHAALTA"];
                this.columnMVTO_FECHAPREVISTA = base.Columns["MVTO_FECHAPREVISTA"];
                this.columnMVTO_FECHAREAL = base.Columns["MVTO_FECHAREAL"];
                this.columnUSTCK_ORIGEN = base.Columns["USTCK_ORIGEN"];
                this.columnUSTCK_DESTINO = base.Columns["USTCK_DESTINO"];
                this.columnMVTO_CANTIDAD = base.Columns["MVTO_CANTIDAD"];
                this.columnUMED_CODIGO = base.Columns["UMED_CODIGO"];
                this.columnEMVTO_CODIGO = base.Columns["EMVTO_CODIGO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMVTO_NUMERO = new global::System.Data.DataColumn("MVTO_NUMERO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMVTO_NUMERO);
                this.columnMVTO_CODIGO = new global::System.Data.DataColumn("MVTO_CODIGO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMVTO_CODIGO);
                this.columnMVTO_DESCRIPCION = new global::System.Data.DataColumn("MVTO_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMVTO_DESCRIPCION);
                this.columnMVTO_FECHAALTA = new global::System.Data.DataColumn("MVTO_FECHAALTA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMVTO_FECHAALTA);
                this.columnMVTO_FECHAPREVISTA = new global::System.Data.DataColumn("MVTO_FECHAPREVISTA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMVTO_FECHAPREVISTA);
                this.columnMVTO_FECHAREAL = new global::System.Data.DataColumn("MVTO_FECHAREAL", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMVTO_FECHAREAL);
                this.columnUSTCK_ORIGEN = new global::System.Data.DataColumn("USTCK_ORIGEN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_ORIGEN);
                this.columnUSTCK_DESTINO = new global::System.Data.DataColumn("USTCK_DESTINO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_DESTINO);
                this.columnMVTO_CANTIDAD = new global::System.Data.DataColumn("MVTO_CANTIDAD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMVTO_CANTIDAD);
                this.columnUMED_CODIGO = new global::System.Data.DataColumn("UMED_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_CODIGO);
                this.columnEMVTO_CODIGO = new global::System.Data.DataColumn("EMVTO_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMVTO_CODIGO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMVTO_NUMERO}, true));
                this.columnMVTO_NUMERO.AutoIncrement = true;
                this.columnMVTO_NUMERO.AutoIncrementSeed = -1;
                this.columnMVTO_NUMERO.AutoIncrementStep = -1;
                this.columnMVTO_NUMERO.AllowDBNull = false;
                this.columnMVTO_NUMERO.Unique = true;
                this.columnMVTO_CODIGO.MaxLength = 80;
                this.columnMVTO_DESCRIPCION.MaxLength = 200;
                this.columnMVTO_FECHAALTA.AllowDBNull = false;
                this.columnMVTO_CANTIDAD.AllowDBNull = false;
                this.columnUMED_CODIGO.AllowDBNull = false;
                this.columnEMVTO_CODIGO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOVIMIENTOS_STOCKRow NewMOVIMIENTOS_STOCKRow() {
                return ((MOVIMIENTOS_STOCKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MOVIMIENTOS_STOCKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MOVIMIENTOS_STOCKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MOVIMIENTOS_STOCKRowChanged != null)) {
                    this.MOVIMIENTOS_STOCKRowChanged(this, new MOVIMIENTOS_STOCKRowChangeEvent(((MOVIMIENTOS_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MOVIMIENTOS_STOCKRowChanging != null)) {
                    this.MOVIMIENTOS_STOCKRowChanging(this, new MOVIMIENTOS_STOCKRowChangeEvent(((MOVIMIENTOS_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MOVIMIENTOS_STOCKRowDeleted != null)) {
                    this.MOVIMIENTOS_STOCKRowDeleted(this, new MOVIMIENTOS_STOCKRowChangeEvent(((MOVIMIENTOS_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MOVIMIENTOS_STOCKRowDeleting != null)) {
                    this.MOVIMIENTOS_STOCKRowDeleting(this, new MOVIMIENTOS_STOCKRowChangeEvent(((MOVIMIENTOS_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMOVIMIENTOS_STOCKRow(MOVIMIENTOS_STOCKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsStock ds = new dsStock();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MOVIMIENTOS_STOCKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ESTADO_MOVIMIENTOS_STOCKDataTable : global::System.Data.TypedTableBase<ESTADO_MOVIMIENTOS_STOCKRow> {
            
            private global::System.Data.DataColumn columnEMVTO_CODIGO;
            
            private global::System.Data.DataColumn columnEMVTO_NOMBRE;
            
            private global::System.Data.DataColumn columnEMVTO_DESCRIPCION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_MOVIMIENTOS_STOCKDataTable() {
                this.TableName = "ESTADO_MOVIMIENTOS_STOCK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ESTADO_MOVIMIENTOS_STOCKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ESTADO_MOVIMIENTOS_STOCKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMVTO_CODIGOColumn {
                get {
                    return this.columnEMVTO_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMVTO_NOMBREColumn {
                get {
                    return this.columnEMVTO_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMVTO_DESCRIPCIONColumn {
                get {
                    return this.columnEMVTO_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_MOVIMIENTOS_STOCKRow this[int index] {
                get {
                    return ((ESTADO_MOVIMIENTOS_STOCKRow)(this.Rows[index]));
                }
            }
            
            public event ESTADO_MOVIMIENTOS_STOCKRowChangeEventHandler ESTADO_MOVIMIENTOS_STOCKRowChanging;
            
            public event ESTADO_MOVIMIENTOS_STOCKRowChangeEventHandler ESTADO_MOVIMIENTOS_STOCKRowChanged;
            
            public event ESTADO_MOVIMIENTOS_STOCKRowChangeEventHandler ESTADO_MOVIMIENTOS_STOCKRowDeleting;
            
            public event ESTADO_MOVIMIENTOS_STOCKRowChangeEventHandler ESTADO_MOVIMIENTOS_STOCKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddESTADO_MOVIMIENTOS_STOCKRow(ESTADO_MOVIMIENTOS_STOCKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_MOVIMIENTOS_STOCKRow AddESTADO_MOVIMIENTOS_STOCKRow(string EMVTO_NOMBRE, string EMVTO_DESCRIPCION) {
                ESTADO_MOVIMIENTOS_STOCKRow rowESTADO_MOVIMIENTOS_STOCKRow = ((ESTADO_MOVIMIENTOS_STOCKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EMVTO_NOMBRE,
                        EMVTO_DESCRIPCION};
                rowESTADO_MOVIMIENTOS_STOCKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowESTADO_MOVIMIENTOS_STOCKRow);
                return rowESTADO_MOVIMIENTOS_STOCKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_MOVIMIENTOS_STOCKRow FindByEMVTO_CODIGO(decimal EMVTO_CODIGO) {
                return ((ESTADO_MOVIMIENTOS_STOCKRow)(this.Rows.Find(new object[] {
                            EMVTO_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ESTADO_MOVIMIENTOS_STOCKDataTable cln = ((ESTADO_MOVIMIENTOS_STOCKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ESTADO_MOVIMIENTOS_STOCKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEMVTO_CODIGO = base.Columns["EMVTO_CODIGO"];
                this.columnEMVTO_NOMBRE = base.Columns["EMVTO_NOMBRE"];
                this.columnEMVTO_DESCRIPCION = base.Columns["EMVTO_DESCRIPCION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEMVTO_CODIGO = new global::System.Data.DataColumn("EMVTO_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMVTO_CODIGO);
                this.columnEMVTO_NOMBRE = new global::System.Data.DataColumn("EMVTO_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMVTO_NOMBRE);
                this.columnEMVTO_DESCRIPCION = new global::System.Data.DataColumn("EMVTO_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMVTO_DESCRIPCION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEMVTO_CODIGO}, true));
                this.columnEMVTO_CODIGO.AutoIncrement = true;
                this.columnEMVTO_CODIGO.AutoIncrementSeed = -1;
                this.columnEMVTO_CODIGO.AutoIncrementStep = -1;
                this.columnEMVTO_CODIGO.AllowDBNull = false;
                this.columnEMVTO_CODIGO.Unique = true;
                this.columnEMVTO_NOMBRE.MaxLength = 80;
                this.columnEMVTO_DESCRIPCION.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_MOVIMIENTOS_STOCKRow NewESTADO_MOVIMIENTOS_STOCKRow() {
                return ((ESTADO_MOVIMIENTOS_STOCKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ESTADO_MOVIMIENTOS_STOCKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ESTADO_MOVIMIENTOS_STOCKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ESTADO_MOVIMIENTOS_STOCKRowChanged != null)) {
                    this.ESTADO_MOVIMIENTOS_STOCKRowChanged(this, new ESTADO_MOVIMIENTOS_STOCKRowChangeEvent(((ESTADO_MOVIMIENTOS_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ESTADO_MOVIMIENTOS_STOCKRowChanging != null)) {
                    this.ESTADO_MOVIMIENTOS_STOCKRowChanging(this, new ESTADO_MOVIMIENTOS_STOCKRowChangeEvent(((ESTADO_MOVIMIENTOS_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ESTADO_MOVIMIENTOS_STOCKRowDeleted != null)) {
                    this.ESTADO_MOVIMIENTOS_STOCKRowDeleted(this, new ESTADO_MOVIMIENTOS_STOCKRowChangeEvent(((ESTADO_MOVIMIENTOS_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ESTADO_MOVIMIENTOS_STOCKRowDeleting != null)) {
                    this.ESTADO_MOVIMIENTOS_STOCKRowDeleting(this, new ESTADO_MOVIMIENTOS_STOCKRowChangeEvent(((ESTADO_MOVIMIENTOS_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveESTADO_MOVIMIENTOS_STOCKRow(ESTADO_MOVIMIENTOS_STOCKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsStock ds = new dsStock();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ESTADO_MOVIMIENTOS_STOCKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UNIDADES_MEDIDADataTable : global::System.Data.TypedTableBase<UNIDADES_MEDIDARow> {
            
            private global::System.Data.DataColumn columnUMED_CODIGO;
            
            private global::System.Data.DataColumn columnTUMED_CODIGO;
            
            private global::System.Data.DataColumn columnUMED_NOMBRE;
            
            private global::System.Data.DataColumn columnUMED_ABREVIATURA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDADataTable() {
                this.TableName = "UNIDADES_MEDIDA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UNIDADES_MEDIDADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UNIDADES_MEDIDADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_CODIGOColumn {
                get {
                    return this.columnUMED_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUMED_CODIGOColumn {
                get {
                    return this.columnTUMED_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_NOMBREColumn {
                get {
                    return this.columnUMED_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_ABREVIATURAColumn {
                get {
                    return this.columnUMED_ABREVIATURA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow this[int index] {
                get {
                    return ((UNIDADES_MEDIDARow)(this.Rows[index]));
                }
            }
            
            public event UNIDADES_MEDIDARowChangeEventHandler UNIDADES_MEDIDARowChanging;
            
            public event UNIDADES_MEDIDARowChangeEventHandler UNIDADES_MEDIDARowChanged;
            
            public event UNIDADES_MEDIDARowChangeEventHandler UNIDADES_MEDIDARowDeleting;
            
            public event UNIDADES_MEDIDARowChangeEventHandler UNIDADES_MEDIDARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUNIDADES_MEDIDARow(UNIDADES_MEDIDARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow AddUNIDADES_MEDIDARow(TIPOS_UNIDADES_MEDIDARow parentTIPOS_UNIDADES_MEDIDARowByunidadMedida_tipoUnidadMedida_fk, string UMED_NOMBRE, string UMED_ABREVIATURA) {
                UNIDADES_MEDIDARow rowUNIDADES_MEDIDARow = ((UNIDADES_MEDIDARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        UMED_NOMBRE,
                        UMED_ABREVIATURA};
                if ((parentTIPOS_UNIDADES_MEDIDARowByunidadMedida_tipoUnidadMedida_fk != null)) {
                    columnValuesArray[1] = parentTIPOS_UNIDADES_MEDIDARowByunidadMedida_tipoUnidadMedida_fk[0];
                }
                rowUNIDADES_MEDIDARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUNIDADES_MEDIDARow);
                return rowUNIDADES_MEDIDARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow FindByUMED_CODIGO(decimal UMED_CODIGO) {
                return ((UNIDADES_MEDIDARow)(this.Rows.Find(new object[] {
                            UMED_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UNIDADES_MEDIDADataTable cln = ((UNIDADES_MEDIDADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UNIDADES_MEDIDADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUMED_CODIGO = base.Columns["UMED_CODIGO"];
                this.columnTUMED_CODIGO = base.Columns["TUMED_CODIGO"];
                this.columnUMED_NOMBRE = base.Columns["UMED_NOMBRE"];
                this.columnUMED_ABREVIATURA = base.Columns["UMED_ABREVIATURA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUMED_CODIGO = new global::System.Data.DataColumn("UMED_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_CODIGO);
                this.columnTUMED_CODIGO = new global::System.Data.DataColumn("TUMED_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUMED_CODIGO);
                this.columnUMED_NOMBRE = new global::System.Data.DataColumn("UMED_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_NOMBRE);
                this.columnUMED_ABREVIATURA = new global::System.Data.DataColumn("UMED_ABREVIATURA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_ABREVIATURA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUMED_CODIGO}, true));
                this.columnUMED_CODIGO.AutoIncrement = true;
                this.columnUMED_CODIGO.AutoIncrementSeed = -1;
                this.columnUMED_CODIGO.AutoIncrementStep = -1;
                this.columnUMED_CODIGO.AllowDBNull = false;
                this.columnUMED_CODIGO.Unique = true;
                this.columnUMED_NOMBRE.MaxLength = 80;
                this.columnUMED_ABREVIATURA.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow NewUNIDADES_MEDIDARow() {
                return ((UNIDADES_MEDIDARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UNIDADES_MEDIDARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UNIDADES_MEDIDARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UNIDADES_MEDIDARowChanged != null)) {
                    this.UNIDADES_MEDIDARowChanged(this, new UNIDADES_MEDIDARowChangeEvent(((UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UNIDADES_MEDIDARowChanging != null)) {
                    this.UNIDADES_MEDIDARowChanging(this, new UNIDADES_MEDIDARowChangeEvent(((UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UNIDADES_MEDIDARowDeleted != null)) {
                    this.UNIDADES_MEDIDARowDeleted(this, new UNIDADES_MEDIDARowChangeEvent(((UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UNIDADES_MEDIDARowDeleting != null)) {
                    this.UNIDADES_MEDIDARowDeleting(this, new UNIDADES_MEDIDARowChangeEvent(((UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUNIDADES_MEDIDARow(UNIDADES_MEDIDARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsStock ds = new dsStock();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UNIDADES_MEDIDADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TIPOS_UNIDADES_MEDIDADataTable : global::System.Data.TypedTableBase<TIPOS_UNIDADES_MEDIDARow> {
            
            private global::System.Data.DataColumn columnTUMED_CODIGO;
            
            private global::System.Data.DataColumn columnTUMED_NOMBRE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UNIDADES_MEDIDADataTable() {
                this.TableName = "TIPOS_UNIDADES_MEDIDA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TIPOS_UNIDADES_MEDIDADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TIPOS_UNIDADES_MEDIDADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUMED_CODIGOColumn {
                get {
                    return this.columnTUMED_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUMED_NOMBREColumn {
                get {
                    return this.columnTUMED_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UNIDADES_MEDIDARow this[int index] {
                get {
                    return ((TIPOS_UNIDADES_MEDIDARow)(this.Rows[index]));
                }
            }
            
            public event TIPOS_UNIDADES_MEDIDARowChangeEventHandler TIPOS_UNIDADES_MEDIDARowChanging;
            
            public event TIPOS_UNIDADES_MEDIDARowChangeEventHandler TIPOS_UNIDADES_MEDIDARowChanged;
            
            public event TIPOS_UNIDADES_MEDIDARowChangeEventHandler TIPOS_UNIDADES_MEDIDARowDeleting;
            
            public event TIPOS_UNIDADES_MEDIDARowChangeEventHandler TIPOS_UNIDADES_MEDIDARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTIPOS_UNIDADES_MEDIDARow(TIPOS_UNIDADES_MEDIDARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UNIDADES_MEDIDARow AddTIPOS_UNIDADES_MEDIDARow(string TUMED_NOMBRE) {
                TIPOS_UNIDADES_MEDIDARow rowTIPOS_UNIDADES_MEDIDARow = ((TIPOS_UNIDADES_MEDIDARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TUMED_NOMBRE};
                rowTIPOS_UNIDADES_MEDIDARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTIPOS_UNIDADES_MEDIDARow);
                return rowTIPOS_UNIDADES_MEDIDARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UNIDADES_MEDIDARow FindByTUMED_CODIGO(decimal TUMED_CODIGO) {
                return ((TIPOS_UNIDADES_MEDIDARow)(this.Rows.Find(new object[] {
                            TUMED_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TIPOS_UNIDADES_MEDIDADataTable cln = ((TIPOS_UNIDADES_MEDIDADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TIPOS_UNIDADES_MEDIDADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTUMED_CODIGO = base.Columns["TUMED_CODIGO"];
                this.columnTUMED_NOMBRE = base.Columns["TUMED_NOMBRE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTUMED_CODIGO = new global::System.Data.DataColumn("TUMED_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUMED_CODIGO);
                this.columnTUMED_NOMBRE = new global::System.Data.DataColumn("TUMED_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUMED_NOMBRE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTUMED_CODIGO}, true));
                this.columnTUMED_CODIGO.AutoIncrement = true;
                this.columnTUMED_CODIGO.AutoIncrementSeed = -1;
                this.columnTUMED_CODIGO.AutoIncrementStep = -1;
                this.columnTUMED_CODIGO.AllowDBNull = false;
                this.columnTUMED_CODIGO.Unique = true;
                this.columnTUMED_NOMBRE.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UNIDADES_MEDIDARow NewTIPOS_UNIDADES_MEDIDARow() {
                return ((TIPOS_UNIDADES_MEDIDARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TIPOS_UNIDADES_MEDIDARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TIPOS_UNIDADES_MEDIDARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TIPOS_UNIDADES_MEDIDARowChanged != null)) {
                    this.TIPOS_UNIDADES_MEDIDARowChanged(this, new TIPOS_UNIDADES_MEDIDARowChangeEvent(((TIPOS_UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TIPOS_UNIDADES_MEDIDARowChanging != null)) {
                    this.TIPOS_UNIDADES_MEDIDARowChanging(this, new TIPOS_UNIDADES_MEDIDARowChangeEvent(((TIPOS_UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TIPOS_UNIDADES_MEDIDARowDeleted != null)) {
                    this.TIPOS_UNIDADES_MEDIDARowDeleted(this, new TIPOS_UNIDADES_MEDIDARowChangeEvent(((TIPOS_UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TIPOS_UNIDADES_MEDIDARowDeleting != null)) {
                    this.TIPOS_UNIDADES_MEDIDARowDeleting(this, new TIPOS_UNIDADES_MEDIDARowChangeEvent(((TIPOS_UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTIPOS_UNIDADES_MEDIDARow(TIPOS_UNIDADES_MEDIDARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsStock ds = new dsStock();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TIPOS_UNIDADES_MEDIDADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UBICACIONES_STOCKDataTable : global::System.Data.TypedTableBase<UBICACIONES_STOCKRow> {
            
            private global::System.Data.DataColumn columnUSTCK_NUMERO;
            
            private global::System.Data.DataColumn columnUSTCK_CODIGO;
            
            private global::System.Data.DataColumn columnUSTCK_NOMBRE;
            
            private global::System.Data.DataColumn columnUSTCK_DESCRIPCION;
            
            private global::System.Data.DataColumn columnUSTCK_UBICACIONFISICA;
            
            private global::System.Data.DataColumn columnUSTCK_CANTIDADREAL;
            
            private global::System.Data.DataColumn columnUSTCK_CANTIDADVIRTUAL;
            
            private global::System.Data.DataColumn columnUMED_CODIGO;
            
            private global::System.Data.DataColumn columnUSTCK_PADRE;
            
            private global::System.Data.DataColumn columnUSTCK_ACTIVO;
            
            private global::System.Data.DataColumn columnTUS_CODIGO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKDataTable() {
                this.TableName = "UBICACIONES_STOCK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UBICACIONES_STOCKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UBICACIONES_STOCKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_NUMEROColumn {
                get {
                    return this.columnUSTCK_NUMERO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_CODIGOColumn {
                get {
                    return this.columnUSTCK_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_NOMBREColumn {
                get {
                    return this.columnUSTCK_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_DESCRIPCIONColumn {
                get {
                    return this.columnUSTCK_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_UBICACIONFISICAColumn {
                get {
                    return this.columnUSTCK_UBICACIONFISICA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_CANTIDADREALColumn {
                get {
                    return this.columnUSTCK_CANTIDADREAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_CANTIDADVIRTUALColumn {
                get {
                    return this.columnUSTCK_CANTIDADVIRTUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_CODIGOColumn {
                get {
                    return this.columnUMED_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_PADREColumn {
                get {
                    return this.columnUSTCK_PADRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_ACTIVOColumn {
                get {
                    return this.columnUSTCK_ACTIVO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUS_CODIGOColumn {
                get {
                    return this.columnTUS_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow this[int index] {
                get {
                    return ((UBICACIONES_STOCKRow)(this.Rows[index]));
                }
            }
            
            public event UBICACIONES_STOCKRowChangeEventHandler UBICACIONES_STOCKRowChanging;
            
            public event UBICACIONES_STOCKRowChangeEventHandler UBICACIONES_STOCKRowChanged;
            
            public event UBICACIONES_STOCKRowChangeEventHandler UBICACIONES_STOCKRowDeleting;
            
            public event UBICACIONES_STOCKRowChangeEventHandler UBICACIONES_STOCKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUBICACIONES_STOCKRow(UBICACIONES_STOCKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow AddUBICACIONES_STOCKRow(string USTCK_CODIGO, string USTCK_NOMBRE, string USTCK_DESCRIPCION, string USTCK_UBICACIONFISICA, decimal USTCK_CANTIDADREAL, decimal USTCK_CANTIDADVIRTUAL, UNIDADES_MEDIDARow parentUNIDADES_MEDIDARowByFK_UBICACIONES_STOCK_UBICACION_STOCK1, UBICACIONES_STOCKRow parentUBICACIONES_STOCKRowByFK_UBICACIONES_STOCK_UBICACION_STOCK, decimal USTCK_ACTIVO, TIPOS_UBICACIONES_STOCKRow parentTIPOS_UBICACIONES_STOCKRowByFK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK) {
                UBICACIONES_STOCKRow rowUBICACIONES_STOCKRow = ((UBICACIONES_STOCKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        USTCK_CODIGO,
                        USTCK_NOMBRE,
                        USTCK_DESCRIPCION,
                        USTCK_UBICACIONFISICA,
                        USTCK_CANTIDADREAL,
                        USTCK_CANTIDADVIRTUAL,
                        null,
                        null,
                        USTCK_ACTIVO,
                        null};
                if ((parentUNIDADES_MEDIDARowByFK_UBICACIONES_STOCK_UBICACION_STOCK1 != null)) {
                    columnValuesArray[7] = parentUNIDADES_MEDIDARowByFK_UBICACIONES_STOCK_UBICACION_STOCK1[0];
                }
                if ((parentUBICACIONES_STOCKRowByFK_UBICACIONES_STOCK_UBICACION_STOCK != null)) {
                    columnValuesArray[8] = parentUBICACIONES_STOCKRowByFK_UBICACIONES_STOCK_UBICACION_STOCK[0];
                }
                if ((parentTIPOS_UBICACIONES_STOCKRowByFK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK != null)) {
                    columnValuesArray[10] = parentTIPOS_UBICACIONES_STOCKRowByFK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK[0];
                }
                rowUBICACIONES_STOCKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUBICACIONES_STOCKRow);
                return rowUBICACIONES_STOCKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow FindByUSTCK_NUMERO(decimal USTCK_NUMERO) {
                return ((UBICACIONES_STOCKRow)(this.Rows.Find(new object[] {
                            USTCK_NUMERO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UBICACIONES_STOCKDataTable cln = ((UBICACIONES_STOCKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UBICACIONES_STOCKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUSTCK_NUMERO = base.Columns["USTCK_NUMERO"];
                this.columnUSTCK_CODIGO = base.Columns["USTCK_CODIGO"];
                this.columnUSTCK_NOMBRE = base.Columns["USTCK_NOMBRE"];
                this.columnUSTCK_DESCRIPCION = base.Columns["USTCK_DESCRIPCION"];
                this.columnUSTCK_UBICACIONFISICA = base.Columns["USTCK_UBICACIONFISICA"];
                this.columnUSTCK_CANTIDADREAL = base.Columns["USTCK_CANTIDADREAL"];
                this.columnUSTCK_CANTIDADVIRTUAL = base.Columns["USTCK_CANTIDADVIRTUAL"];
                this.columnUMED_CODIGO = base.Columns["UMED_CODIGO"];
                this.columnUSTCK_PADRE = base.Columns["USTCK_PADRE"];
                this.columnUSTCK_ACTIVO = base.Columns["USTCK_ACTIVO"];
                this.columnTUS_CODIGO = base.Columns["TUS_CODIGO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUSTCK_NUMERO = new global::System.Data.DataColumn("USTCK_NUMERO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_NUMERO);
                this.columnUSTCK_CODIGO = new global::System.Data.DataColumn("USTCK_CODIGO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_CODIGO);
                this.columnUSTCK_NOMBRE = new global::System.Data.DataColumn("USTCK_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_NOMBRE);
                this.columnUSTCK_DESCRIPCION = new global::System.Data.DataColumn("USTCK_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_DESCRIPCION);
                this.columnUSTCK_UBICACIONFISICA = new global::System.Data.DataColumn("USTCK_UBICACIONFISICA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_UBICACIONFISICA);
                this.columnUSTCK_CANTIDADREAL = new global::System.Data.DataColumn("USTCK_CANTIDADREAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_CANTIDADREAL);
                this.columnUSTCK_CANTIDADVIRTUAL = new global::System.Data.DataColumn("USTCK_CANTIDADVIRTUAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_CANTIDADVIRTUAL);
                this.columnUMED_CODIGO = new global::System.Data.DataColumn("UMED_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_CODIGO);
                this.columnUSTCK_PADRE = new global::System.Data.DataColumn("USTCK_PADRE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_PADRE);
                this.columnUSTCK_ACTIVO = new global::System.Data.DataColumn("USTCK_ACTIVO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_ACTIVO);
                this.columnTUS_CODIGO = new global::System.Data.DataColumn("TUS_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUS_CODIGO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUSTCK_NUMERO}, true));
                this.columnUSTCK_NUMERO.AutoIncrement = true;
                this.columnUSTCK_NUMERO.AutoIncrementSeed = -1;
                this.columnUSTCK_NUMERO.AutoIncrementStep = -1;
                this.columnUSTCK_NUMERO.AllowDBNull = false;
                this.columnUSTCK_NUMERO.Unique = true;
                this.columnUSTCK_CODIGO.MaxLength = 80;
                this.columnUSTCK_NOMBRE.MaxLength = 80;
                this.columnUSTCK_DESCRIPCION.MaxLength = 200;
                this.columnUSTCK_UBICACIONFISICA.MaxLength = 200;
                this.columnUSTCK_CANTIDADREAL.AllowDBNull = false;
                this.columnUSTCK_CANTIDADVIRTUAL.AllowDBNull = false;
                this.columnUMED_CODIGO.AllowDBNull = false;
                this.columnUSTCK_ACTIVO.AllowDBNull = false;
                this.columnTUS_CODIGO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow NewUBICACIONES_STOCKRow() {
                return ((UBICACIONES_STOCKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UBICACIONES_STOCKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UBICACIONES_STOCKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UBICACIONES_STOCKRowChanged != null)) {
                    this.UBICACIONES_STOCKRowChanged(this, new UBICACIONES_STOCKRowChangeEvent(((UBICACIONES_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UBICACIONES_STOCKRowChanging != null)) {
                    this.UBICACIONES_STOCKRowChanging(this, new UBICACIONES_STOCKRowChangeEvent(((UBICACIONES_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UBICACIONES_STOCKRowDeleted != null)) {
                    this.UBICACIONES_STOCKRowDeleted(this, new UBICACIONES_STOCKRowChangeEvent(((UBICACIONES_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UBICACIONES_STOCKRowDeleting != null)) {
                    this.UBICACIONES_STOCKRowDeleting(this, new UBICACIONES_STOCKRowChangeEvent(((UBICACIONES_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUBICACIONES_STOCKRow(UBICACIONES_STOCKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsStock ds = new dsStock();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UBICACIONES_STOCKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TIPOS_UBICACIONES_STOCKDataTable : global::System.Data.TypedTableBase<TIPOS_UBICACIONES_STOCKRow> {
            
            private global::System.Data.DataColumn columnTUS_CODIGO;
            
            private global::System.Data.DataColumn columnTUS_NOMBRE;
            
            private global::System.Data.DataColumn columnTUS_DESCRIPCION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UBICACIONES_STOCKDataTable() {
                this.TableName = "TIPOS_UBICACIONES_STOCK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TIPOS_UBICACIONES_STOCKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TIPOS_UBICACIONES_STOCKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUS_CODIGOColumn {
                get {
                    return this.columnTUS_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUS_NOMBREColumn {
                get {
                    return this.columnTUS_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUS_DESCRIPCIONColumn {
                get {
                    return this.columnTUS_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UBICACIONES_STOCKRow this[int index] {
                get {
                    return ((TIPOS_UBICACIONES_STOCKRow)(this.Rows[index]));
                }
            }
            
            public event TIPOS_UBICACIONES_STOCKRowChangeEventHandler TIPOS_UBICACIONES_STOCKRowChanging;
            
            public event TIPOS_UBICACIONES_STOCKRowChangeEventHandler TIPOS_UBICACIONES_STOCKRowChanged;
            
            public event TIPOS_UBICACIONES_STOCKRowChangeEventHandler TIPOS_UBICACIONES_STOCKRowDeleting;
            
            public event TIPOS_UBICACIONES_STOCKRowChangeEventHandler TIPOS_UBICACIONES_STOCKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTIPOS_UBICACIONES_STOCKRow(TIPOS_UBICACIONES_STOCKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UBICACIONES_STOCKRow AddTIPOS_UBICACIONES_STOCKRow(string TUS_NOMBRE, string TUS_DESCRIPCION) {
                TIPOS_UBICACIONES_STOCKRow rowTIPOS_UBICACIONES_STOCKRow = ((TIPOS_UBICACIONES_STOCKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TUS_NOMBRE,
                        TUS_DESCRIPCION};
                rowTIPOS_UBICACIONES_STOCKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTIPOS_UBICACIONES_STOCKRow);
                return rowTIPOS_UBICACIONES_STOCKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UBICACIONES_STOCKRow FindByTUS_CODIGO(decimal TUS_CODIGO) {
                return ((TIPOS_UBICACIONES_STOCKRow)(this.Rows.Find(new object[] {
                            TUS_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TIPOS_UBICACIONES_STOCKDataTable cln = ((TIPOS_UBICACIONES_STOCKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TIPOS_UBICACIONES_STOCKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTUS_CODIGO = base.Columns["TUS_CODIGO"];
                this.columnTUS_NOMBRE = base.Columns["TUS_NOMBRE"];
                this.columnTUS_DESCRIPCION = base.Columns["TUS_DESCRIPCION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTUS_CODIGO = new global::System.Data.DataColumn("TUS_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUS_CODIGO);
                this.columnTUS_NOMBRE = new global::System.Data.DataColumn("TUS_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUS_NOMBRE);
                this.columnTUS_DESCRIPCION = new global::System.Data.DataColumn("TUS_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUS_DESCRIPCION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTUS_CODIGO}, true));
                this.columnTUS_CODIGO.AutoIncrement = true;
                this.columnTUS_CODIGO.AutoIncrementSeed = -1;
                this.columnTUS_CODIGO.AutoIncrementStep = -1;
                this.columnTUS_CODIGO.AllowDBNull = false;
                this.columnTUS_CODIGO.Unique = true;
                this.columnTUS_NOMBRE.MaxLength = 80;
                this.columnTUS_DESCRIPCION.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UBICACIONES_STOCKRow NewTIPOS_UBICACIONES_STOCKRow() {
                return ((TIPOS_UBICACIONES_STOCKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TIPOS_UBICACIONES_STOCKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TIPOS_UBICACIONES_STOCKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TIPOS_UBICACIONES_STOCKRowChanged != null)) {
                    this.TIPOS_UBICACIONES_STOCKRowChanged(this, new TIPOS_UBICACIONES_STOCKRowChangeEvent(((TIPOS_UBICACIONES_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TIPOS_UBICACIONES_STOCKRowChanging != null)) {
                    this.TIPOS_UBICACIONES_STOCKRowChanging(this, new TIPOS_UBICACIONES_STOCKRowChangeEvent(((TIPOS_UBICACIONES_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TIPOS_UBICACIONES_STOCKRowDeleted != null)) {
                    this.TIPOS_UBICACIONES_STOCKRowDeleted(this, new TIPOS_UBICACIONES_STOCKRowChangeEvent(((TIPOS_UBICACIONES_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TIPOS_UBICACIONES_STOCKRowDeleting != null)) {
                    this.TIPOS_UBICACIONES_STOCKRowDeleting(this, new TIPOS_UBICACIONES_STOCKRowChangeEvent(((TIPOS_UBICACIONES_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTIPOS_UBICACIONES_STOCKRow(TIPOS_UBICACIONES_STOCKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsStock ds = new dsStock();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TIPOS_UBICACIONES_STOCKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MOVIMIENTOS_STOCKRow : global::System.Data.DataRow {
            
            private MOVIMIENTOS_STOCKDataTable tableMOVIMIENTOS_STOCK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MOVIMIENTOS_STOCKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMOVIMIENTOS_STOCK = ((MOVIMIENTOS_STOCKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MVTO_NUMERO {
                get {
                    return ((decimal)(this[this.tableMOVIMIENTOS_STOCK.MVTO_NUMEROColumn]));
                }
                set {
                    this[this.tableMOVIMIENTOS_STOCK.MVTO_NUMEROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MVTO_CODIGO {
                get {
                    if (this.IsMVTO_CODIGONull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableMOVIMIENTOS_STOCK.MVTO_CODIGOColumn]));
                    }
                }
                set {
                    this[this.tableMOVIMIENTOS_STOCK.MVTO_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MVTO_DESCRIPCION {
                get {
                    if (this.IsMVTO_DESCRIPCIONNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableMOVIMIENTOS_STOCK.MVTO_DESCRIPCIONColumn]));
                    }
                }
                set {
                    this[this.tableMOVIMIENTOS_STOCK.MVTO_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MVTO_FECHAALTA {
                get {
                    return ((global::System.DateTime)(this[this.tableMOVIMIENTOS_STOCK.MVTO_FECHAALTAColumn]));
                }
                set {
                    this[this.tableMOVIMIENTOS_STOCK.MVTO_FECHAALTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MVTO_FECHAPREVISTA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMOVIMIENTOS_STOCK.MVTO_FECHAPREVISTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MVTO_FECHAPREVISTA\' in table \'MOVIMIENTOS_STOCK\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMOVIMIENTOS_STOCK.MVTO_FECHAPREVISTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MVTO_FECHAREAL {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMOVIMIENTOS_STOCK.MVTO_FECHAREALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MVTO_FECHAREAL\' in table \'MOVIMIENTOS_STOCK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOVIMIENTOS_STOCK.MVTO_FECHAREALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USTCK_ORIGEN {
                get {
                    try {
                        return ((decimal)(this[this.tableMOVIMIENTOS_STOCK.USTCK_ORIGENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USTCK_ORIGEN\' in table \'MOVIMIENTOS_STOCK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOVIMIENTOS_STOCK.USTCK_ORIGENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USTCK_DESTINO {
                get {
                    try {
                        return ((decimal)(this[this.tableMOVIMIENTOS_STOCK.USTCK_DESTINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USTCK_DESTINO\' in table \'MOVIMIENTOS_STOCK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMOVIMIENTOS_STOCK.USTCK_DESTINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MVTO_CANTIDAD {
                get {
                    return ((decimal)(this[this.tableMOVIMIENTOS_STOCK.MVTO_CANTIDADColumn]));
                }
                set {
                    this[this.tableMOVIMIENTOS_STOCK.MVTO_CANTIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UMED_CODIGO {
                get {
                    return ((decimal)(this[this.tableMOVIMIENTOS_STOCK.UMED_CODIGOColumn]));
                }
                set {
                    this[this.tableMOVIMIENTOS_STOCK.UMED_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EMVTO_CODIGO {
                get {
                    return ((decimal)(this[this.tableMOVIMIENTOS_STOCK.EMVTO_CODIGOColumn]));
                }
                set {
                    this[this.tableMOVIMIENTOS_STOCK.EMVTO_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_MOVIMIENTOS_STOCKRow ESTADO_MOVIMIENTOS_STOCKRow {
                get {
                    return ((ESTADO_MOVIMIENTOS_STOCKRow)(this.GetParentRow(this.Table.ParentRelations["FK_MOVIMIENTOS_STOCK_ESTADO_MOVIMIENTOS_STOCK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_MOVIMIENTOS_STOCK_ESTADO_MOVIMIENTOS_STOCK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow UNIDADES_MEDIDARow {
                get {
                    return ((UNIDADES_MEDIDARow)(this.GetParentRow(this.Table.ParentRelations["FK_MOVIMIENTOS_STOCK_UNIDADES_MEDIDA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_MOVIMIENTOS_STOCK_UNIDADES_MEDIDA"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow UBICACIONES_STOCKRowByFK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK {
                get {
                    return ((UBICACIONES_STOCKRow)(this.GetParentRow(this.Table.ParentRelations["FK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow UBICACIONES_STOCKRowByFK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK1 {
                get {
                    return ((UBICACIONES_STOCKRow)(this.GetParentRow(this.Table.ParentRelations["FK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMVTO_CODIGONull() {
                return this.IsNull(this.tableMOVIMIENTOS_STOCK.MVTO_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMVTO_CODIGONull() {
                this[this.tableMOVIMIENTOS_STOCK.MVTO_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMVTO_DESCRIPCIONNull() {
                return this.IsNull(this.tableMOVIMIENTOS_STOCK.MVTO_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMVTO_DESCRIPCIONNull() {
                this[this.tableMOVIMIENTOS_STOCK.MVTO_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMVTO_FECHAPREVISTANull() {
                return this.IsNull(this.tableMOVIMIENTOS_STOCK.MVTO_FECHAPREVISTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMVTO_FECHAPREVISTANull() {
                this[this.tableMOVIMIENTOS_STOCK.MVTO_FECHAPREVISTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMVTO_FECHAREALNull() {
                return this.IsNull(this.tableMOVIMIENTOS_STOCK.MVTO_FECHAREALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMVTO_FECHAREALNull() {
                this[this.tableMOVIMIENTOS_STOCK.MVTO_FECHAREALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSTCK_ORIGENNull() {
                return this.IsNull(this.tableMOVIMIENTOS_STOCK.USTCK_ORIGENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSTCK_ORIGENNull() {
                this[this.tableMOVIMIENTOS_STOCK.USTCK_ORIGENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSTCK_DESTINONull() {
                return this.IsNull(this.tableMOVIMIENTOS_STOCK.USTCK_DESTINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSTCK_DESTINONull() {
                this[this.tableMOVIMIENTOS_STOCK.USTCK_DESTINOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ESTADO_MOVIMIENTOS_STOCKRow : global::System.Data.DataRow {
            
            private ESTADO_MOVIMIENTOS_STOCKDataTable tableESTADO_MOVIMIENTOS_STOCK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ESTADO_MOVIMIENTOS_STOCKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableESTADO_MOVIMIENTOS_STOCK = ((ESTADO_MOVIMIENTOS_STOCKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EMVTO_CODIGO {
                get {
                    return ((decimal)(this[this.tableESTADO_MOVIMIENTOS_STOCK.EMVTO_CODIGOColumn]));
                }
                set {
                    this[this.tableESTADO_MOVIMIENTOS_STOCK.EMVTO_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMVTO_NOMBRE {
                get {
                    if (this.IsEMVTO_NOMBRENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableESTADO_MOVIMIENTOS_STOCK.EMVTO_NOMBREColumn]));
                    }
                }
                set {
                    this[this.tableESTADO_MOVIMIENTOS_STOCK.EMVTO_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMVTO_DESCRIPCION {
                get {
                    if (this.IsEMVTO_DESCRIPCIONNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableESTADO_MOVIMIENTOS_STOCK.EMVTO_DESCRIPCIONColumn]));
                    }
                }
                set {
                    this[this.tableESTADO_MOVIMIENTOS_STOCK.EMVTO_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMVTO_NOMBRENull() {
                return this.IsNull(this.tableESTADO_MOVIMIENTOS_STOCK.EMVTO_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMVTO_NOMBRENull() {
                this[this.tableESTADO_MOVIMIENTOS_STOCK.EMVTO_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMVTO_DESCRIPCIONNull() {
                return this.IsNull(this.tableESTADO_MOVIMIENTOS_STOCK.EMVTO_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMVTO_DESCRIPCIONNull() {
                this[this.tableESTADO_MOVIMIENTOS_STOCK.EMVTO_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOVIMIENTOS_STOCKRow[] GetMOVIMIENTOS_STOCKRows() {
                if ((this.Table.ChildRelations["FK_MOVIMIENTOS_STOCK_ESTADO_MOVIMIENTOS_STOCK"] == null)) {
                    return new MOVIMIENTOS_STOCKRow[0];
                }
                else {
                    return ((MOVIMIENTOS_STOCKRow[])(base.GetChildRows(this.Table.ChildRelations["FK_MOVIMIENTOS_STOCK_ESTADO_MOVIMIENTOS_STOCK"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UNIDADES_MEDIDARow : global::System.Data.DataRow {
            
            private UNIDADES_MEDIDADataTable tableUNIDADES_MEDIDA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UNIDADES_MEDIDARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUNIDADES_MEDIDA = ((UNIDADES_MEDIDADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UMED_CODIGO {
                get {
                    return ((decimal)(this[this.tableUNIDADES_MEDIDA.UMED_CODIGOColumn]));
                }
                set {
                    this[this.tableUNIDADES_MEDIDA.UMED_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TUMED_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableUNIDADES_MEDIDA.TUMED_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TUMED_CODIGO\' in table \'UNIDADES_MEDIDA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUNIDADES_MEDIDA.TUMED_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UMED_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableUNIDADES_MEDIDA.UMED_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UMED_NOMBRE\' in table \'UNIDADES_MEDIDA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUNIDADES_MEDIDA.UMED_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UMED_ABREVIATURA {
                get {
                    try {
                        return ((string)(this[this.tableUNIDADES_MEDIDA.UMED_ABREVIATURAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UMED_ABREVIATURA\' in table \'UNIDADES_MEDIDA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUNIDADES_MEDIDA.UMED_ABREVIATURAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UNIDADES_MEDIDARow TIPOS_UNIDADES_MEDIDARow {
                get {
                    return ((TIPOS_UNIDADES_MEDIDARow)(this.GetParentRow(this.Table.ParentRelations["unidadMedida_tipoUnidadMedida_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["unidadMedida_tipoUnidadMedida_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTUMED_CODIGONull() {
                return this.IsNull(this.tableUNIDADES_MEDIDA.TUMED_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTUMED_CODIGONull() {
                this[this.tableUNIDADES_MEDIDA.TUMED_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUMED_NOMBRENull() {
                return this.IsNull(this.tableUNIDADES_MEDIDA.UMED_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUMED_NOMBRENull() {
                this[this.tableUNIDADES_MEDIDA.UMED_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUMED_ABREVIATURANull() {
                return this.IsNull(this.tableUNIDADES_MEDIDA.UMED_ABREVIATURAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUMED_ABREVIATURANull() {
                this[this.tableUNIDADES_MEDIDA.UMED_ABREVIATURAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOVIMIENTOS_STOCKRow[] GetMOVIMIENTOS_STOCKRows() {
                if ((this.Table.ChildRelations["FK_MOVIMIENTOS_STOCK_UNIDADES_MEDIDA"] == null)) {
                    return new MOVIMIENTOS_STOCKRow[0];
                }
                else {
                    return ((MOVIMIENTOS_STOCKRow[])(base.GetChildRows(this.Table.ChildRelations["FK_MOVIMIENTOS_STOCK_UNIDADES_MEDIDA"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow[] GetUBICACIONES_STOCKRows() {
                if ((this.Table.ChildRelations["FK_UBICACIONES_STOCK_UBICACION_STOCK1"] == null)) {
                    return new UBICACIONES_STOCKRow[0];
                }
                else {
                    return ((UBICACIONES_STOCKRow[])(base.GetChildRows(this.Table.ChildRelations["FK_UBICACIONES_STOCK_UBICACION_STOCK1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TIPOS_UNIDADES_MEDIDARow : global::System.Data.DataRow {
            
            private TIPOS_UNIDADES_MEDIDADataTable tableTIPOS_UNIDADES_MEDIDA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TIPOS_UNIDADES_MEDIDARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTIPOS_UNIDADES_MEDIDA = ((TIPOS_UNIDADES_MEDIDADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TUMED_CODIGO {
                get {
                    return ((decimal)(this[this.tableTIPOS_UNIDADES_MEDIDA.TUMED_CODIGOColumn]));
                }
                set {
                    this[this.tableTIPOS_UNIDADES_MEDIDA.TUMED_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TUMED_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableTIPOS_UNIDADES_MEDIDA.TUMED_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TUMED_NOMBRE\' in table \'TIPOS_UNIDADES_MEDIDA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTIPOS_UNIDADES_MEDIDA.TUMED_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTUMED_NOMBRENull() {
                return this.IsNull(this.tableTIPOS_UNIDADES_MEDIDA.TUMED_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTUMED_NOMBRENull() {
                this[this.tableTIPOS_UNIDADES_MEDIDA.TUMED_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow[] GetUNIDADES_MEDIDARows() {
                if ((this.Table.ChildRelations["unidadMedida_tipoUnidadMedida_fk"] == null)) {
                    return new UNIDADES_MEDIDARow[0];
                }
                else {
                    return ((UNIDADES_MEDIDARow[])(base.GetChildRows(this.Table.ChildRelations["unidadMedida_tipoUnidadMedida_fk"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UBICACIONES_STOCKRow : global::System.Data.DataRow {
            
            private UBICACIONES_STOCKDataTable tableUBICACIONES_STOCK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UBICACIONES_STOCKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUBICACIONES_STOCK = ((UBICACIONES_STOCKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USTCK_NUMERO {
                get {
                    return ((decimal)(this[this.tableUBICACIONES_STOCK.USTCK_NUMEROColumn]));
                }
                set {
                    this[this.tableUBICACIONES_STOCK.USTCK_NUMEROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USTCK_CODIGO {
                get {
                    if (this.IsUSTCK_CODIGONull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableUBICACIONES_STOCK.USTCK_CODIGOColumn]));
                    }
                }
                set {
                    this[this.tableUBICACIONES_STOCK.USTCK_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USTCK_NOMBRE {
                get {
                    if (this.IsUSTCK_NOMBRENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableUBICACIONES_STOCK.USTCK_NOMBREColumn]));
                    }
                }
                set {
                    this[this.tableUBICACIONES_STOCK.USTCK_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USTCK_DESCRIPCION {
                get {
                    if (this.IsUSTCK_DESCRIPCIONNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableUBICACIONES_STOCK.USTCK_DESCRIPCIONColumn]));
                    }
                }
                set {
                    this[this.tableUBICACIONES_STOCK.USTCK_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USTCK_UBICACIONFISICA {
                get {
                    if (this.IsUSTCK_UBICACIONFISICANull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableUBICACIONES_STOCK.USTCK_UBICACIONFISICAColumn]));
                    }
                }
                set {
                    this[this.tableUBICACIONES_STOCK.USTCK_UBICACIONFISICAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USTCK_CANTIDADREAL {
                get {
                    return ((decimal)(this[this.tableUBICACIONES_STOCK.USTCK_CANTIDADREALColumn]));
                }
                set {
                    this[this.tableUBICACIONES_STOCK.USTCK_CANTIDADREALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USTCK_CANTIDADVIRTUAL {
                get {
                    return ((decimal)(this[this.tableUBICACIONES_STOCK.USTCK_CANTIDADVIRTUALColumn]));
                }
                set {
                    this[this.tableUBICACIONES_STOCK.USTCK_CANTIDADVIRTUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UMED_CODIGO {
                get {
                    return ((decimal)(this[this.tableUBICACIONES_STOCK.UMED_CODIGOColumn]));
                }
                set {
                    this[this.tableUBICACIONES_STOCK.UMED_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USTCK_PADRE {
                get {
                    try {
                        return ((decimal)(this[this.tableUBICACIONES_STOCK.USTCK_PADREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USTCK_PADRE\' in table \'UBICACIONES_STOCK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUBICACIONES_STOCK.USTCK_PADREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USTCK_ACTIVO {
                get {
                    return ((decimal)(this[this.tableUBICACIONES_STOCK.USTCK_ACTIVOColumn]));
                }
                set {
                    this[this.tableUBICACIONES_STOCK.USTCK_ACTIVOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TUS_CODIGO {
                get {
                    return ((decimal)(this[this.tableUBICACIONES_STOCK.TUS_CODIGOColumn]));
                }
                set {
                    this[this.tableUBICACIONES_STOCK.TUS_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow UBICACIONES_STOCKRowParent {
                get {
                    return ((UBICACIONES_STOCKRow)(this.GetParentRow(this.Table.ParentRelations["FK_UBICACIONES_STOCK_UBICACION_STOCK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_UBICACIONES_STOCK_UBICACION_STOCK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow UNIDADES_MEDIDARow {
                get {
                    return ((UNIDADES_MEDIDARow)(this.GetParentRow(this.Table.ParentRelations["FK_UBICACIONES_STOCK_UBICACION_STOCK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_UBICACIONES_STOCK_UBICACION_STOCK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UBICACIONES_STOCKRow TIPOS_UBICACIONES_STOCKRow {
                get {
                    return ((TIPOS_UBICACIONES_STOCKRow)(this.GetParentRow(this.Table.ParentRelations["FK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSTCK_CODIGONull() {
                return this.IsNull(this.tableUBICACIONES_STOCK.USTCK_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSTCK_CODIGONull() {
                this[this.tableUBICACIONES_STOCK.USTCK_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSTCK_NOMBRENull() {
                return this.IsNull(this.tableUBICACIONES_STOCK.USTCK_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSTCK_NOMBRENull() {
                this[this.tableUBICACIONES_STOCK.USTCK_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSTCK_DESCRIPCIONNull() {
                return this.IsNull(this.tableUBICACIONES_STOCK.USTCK_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSTCK_DESCRIPCIONNull() {
                this[this.tableUBICACIONES_STOCK.USTCK_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSTCK_UBICACIONFISICANull() {
                return this.IsNull(this.tableUBICACIONES_STOCK.USTCK_UBICACIONFISICAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSTCK_UBICACIONFISICANull() {
                this[this.tableUBICACIONES_STOCK.USTCK_UBICACIONFISICAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSTCK_PADRENull() {
                return this.IsNull(this.tableUBICACIONES_STOCK.USTCK_PADREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSTCK_PADRENull() {
                this[this.tableUBICACIONES_STOCK.USTCK_PADREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow[] GetUBICACIONES_STOCKRows() {
                if ((this.Table.ChildRelations["FK_UBICACIONES_STOCK_UBICACION_STOCK"] == null)) {
                    return new UBICACIONES_STOCKRow[0];
                }
                else {
                    return ((UBICACIONES_STOCKRow[])(base.GetChildRows(this.Table.ChildRelations["FK_UBICACIONES_STOCK_UBICACION_STOCK"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOVIMIENTOS_STOCKRow[] GetMOVIMIENTOS_STOCKRowsByFK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK() {
                if ((this.Table.ChildRelations["FK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK"] == null)) {
                    return new MOVIMIENTOS_STOCKRow[0];
                }
                else {
                    return ((MOVIMIENTOS_STOCKRow[])(base.GetChildRows(this.Table.ChildRelations["FK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOVIMIENTOS_STOCKRow[] GetMOVIMIENTOS_STOCKRowsByFK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK1() {
                if ((this.Table.ChildRelations["FK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK1"] == null)) {
                    return new MOVIMIENTOS_STOCKRow[0];
                }
                else {
                    return ((MOVIMIENTOS_STOCKRow[])(base.GetChildRows(this.Table.ChildRelations["FK_MOVIMIENTOS_STOCK_UBICACIONES_STOCK1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TIPOS_UBICACIONES_STOCKRow : global::System.Data.DataRow {
            
            private TIPOS_UBICACIONES_STOCKDataTable tableTIPOS_UBICACIONES_STOCK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TIPOS_UBICACIONES_STOCKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTIPOS_UBICACIONES_STOCK = ((TIPOS_UBICACIONES_STOCKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TUS_CODIGO {
                get {
                    return ((decimal)(this[this.tableTIPOS_UBICACIONES_STOCK.TUS_CODIGOColumn]));
                }
                set {
                    this[this.tableTIPOS_UBICACIONES_STOCK.TUS_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TUS_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableTIPOS_UBICACIONES_STOCK.TUS_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TUS_NOMBRE\' in table \'TIPOS_UBICACIONES_STOCK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTIPOS_UBICACIONES_STOCK.TUS_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TUS_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableTIPOS_UBICACIONES_STOCK.TUS_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TUS_DESCRIPCION\' in table \'TIPOS_UBICACIONES_STOCK\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableTIPOS_UBICACIONES_STOCK.TUS_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTUS_NOMBRENull() {
                return this.IsNull(this.tableTIPOS_UBICACIONES_STOCK.TUS_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTUS_NOMBRENull() {
                this[this.tableTIPOS_UBICACIONES_STOCK.TUS_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTUS_DESCRIPCIONNull() {
                return this.IsNull(this.tableTIPOS_UBICACIONES_STOCK.TUS_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTUS_DESCRIPCIONNull() {
                this[this.tableTIPOS_UBICACIONES_STOCK.TUS_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow[] GetUBICACIONES_STOCKRows() {
                if ((this.Table.ChildRelations["FK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK"] == null)) {
                    return new UBICACIONES_STOCKRow[0];
                }
                else {
                    return ((UBICACIONES_STOCKRow[])(base.GetChildRows(this.Table.ChildRelations["FK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MOVIMIENTOS_STOCKRowChangeEvent : global::System.EventArgs {
            
            private MOVIMIENTOS_STOCKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOVIMIENTOS_STOCKRowChangeEvent(MOVIMIENTOS_STOCKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MOVIMIENTOS_STOCKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ESTADO_MOVIMIENTOS_STOCKRowChangeEvent : global::System.EventArgs {
            
            private ESTADO_MOVIMIENTOS_STOCKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_MOVIMIENTOS_STOCKRowChangeEvent(ESTADO_MOVIMIENTOS_STOCKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_MOVIMIENTOS_STOCKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UNIDADES_MEDIDARowChangeEvent : global::System.EventArgs {
            
            private UNIDADES_MEDIDARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARowChangeEvent(UNIDADES_MEDIDARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TIPOS_UNIDADES_MEDIDARowChangeEvent : global::System.EventArgs {
            
            private TIPOS_UNIDADES_MEDIDARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UNIDADES_MEDIDARowChangeEvent(TIPOS_UNIDADES_MEDIDARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UNIDADES_MEDIDARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UBICACIONES_STOCKRowChangeEvent : global::System.EventArgs {
            
            private UBICACIONES_STOCKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRowChangeEvent(UBICACIONES_STOCKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TIPOS_UBICACIONES_STOCKRowChangeEvent : global::System.EventArgs {
            
            private TIPOS_UBICACIONES_STOCKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UBICACIONES_STOCKRowChangeEvent(TIPOS_UBICACIONES_STOCKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UBICACIONES_STOCKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GyCAP.Data.dsStockTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MOVIMIENTOS_STOCKTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MOVIMIENTOS_STOCKTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MOVIMIENTOS_STOCK";
            tableMapping.ColumnMappings.Add("MVTO_NUMERO", "MVTO_NUMERO");
            tableMapping.ColumnMappings.Add("MVTO_CODIGO", "MVTO_CODIGO");
            tableMapping.ColumnMappings.Add("MVTO_DESCRIPCION", "MVTO_DESCRIPCION");
            tableMapping.ColumnMappings.Add("MVTO_FECHAALTA", "MVTO_FECHAALTA");
            tableMapping.ColumnMappings.Add("MVTO_FECHAPREVISTA", "MVTO_FECHAPREVISTA");
            tableMapping.ColumnMappings.Add("MVTO_FECHAREAL", "MVTO_FECHAREAL");
            tableMapping.ColumnMappings.Add("USTCK_ORIGEN", "USTCK_ORIGEN");
            tableMapping.ColumnMappings.Add("USTCK_DESTINO", "USTCK_DESTINO");
            tableMapping.ColumnMappings.Add("MVTO_CANTIDAD", "MVTO_CANTIDAD");
            tableMapping.ColumnMappings.Add("UMED_CODIGO", "UMED_CODIGO");
            tableMapping.ColumnMappings.Add("EMVTO_CODIGO", "EMVTO_CODIGO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[MOVIMIENTOS_STOCK] WHERE (([MVTO_NUMERO] = @Original_MVTO_NUMERO) AND ((@IsNull_MVTO_CODIGO = 1 AND [MVTO_CODIGO] IS NULL) OR ([MVTO_CODIGO] = @Original_MVTO_CODIGO)) AND ((@IsNull_MVTO_DESCRIPCION = 1 AND [MVTO_DESCRIPCION] IS NULL) OR ([MVTO_DESCRIPCION] = @Original_MVTO_DESCRIPCION)) AND ([MVTO_FECHAALTA] = @Original_MVTO_FECHAALTA) AND ((@IsNull_MVTO_FECHAPREVISTA = 1 AND [MVTO_FECHAPREVISTA] IS NULL) OR ([MVTO_FECHAPREVISTA] = @Original_MVTO_FECHAPREVISTA)) AND ((@IsNull_MVTO_FECHAREAL = 1 AND [MVTO_FECHAREAL] IS NULL) OR ([MVTO_FECHAREAL] = @Original_MVTO_FECHAREAL)) AND ((@IsNull_USTCK_ORIGEN = 1 AND [USTCK_ORIGEN] IS NULL) OR ([USTCK_ORIGEN] = @Original_USTCK_ORIGEN)) AND ((@IsNull_USTCK_DESTINO = 1 AND [USTCK_DESTINO] IS NULL) OR ([USTCK_DESTINO] = @Original_USTCK_DESTINO)) AND ([MVTO_CANTIDAD] = @Original_MVTO_CANTIDAD) AND ([UMED_CODIGO] = @Original_UMED_CODIGO) AND ([EMVTO_CODIGO] = @Original_EMVTO_CODIGO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MVTO_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MVTO_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MVTO_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MVTO_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MVTO_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MVTO_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MVTO_FECHAALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_FECHAALTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MVTO_FECHAPREVISTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_FECHAPREVISTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MVTO_FECHAPREVISTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_FECHAPREVISTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MVTO_FECHAREAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_FECHAREAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MVTO_FECHAREAL", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_FECHAREAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_ORIGEN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_ORIGEN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_ORIGEN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_ORIGEN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_DESTINO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_DESTINO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_DESTINO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_DESTINO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MVTO_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "MVTO_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMVTO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EMVTO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[MOVIMIENTOS_STOCK] ([MVTO_CODIGO], [MVTO_DESCRIPCION], [MVTO_FECHAALTA], [MVTO_FECHAPREVISTA], [MVTO_FECHAREAL], [USTCK_ORIGEN], [USTCK_DESTINO], [MVTO_CANTIDAD], [UMED_CODIGO], [EMVTO_CODIGO]) VALUES (@MVTO_CODIGO, @MVTO_DESCRIPCION, @MVTO_FECHAALTA, @MVTO_FECHAPREVISTA, @MVTO_FECHAREAL, @USTCK_ORIGEN, @USTCK_DESTINO, @MVTO_CANTIDAD, @UMED_CODIGO, @EMVTO_CODIGO);
SELECT MVTO_NUMERO, MVTO_CODIGO, MVTO_DESCRIPCION, MVTO_FECHAALTA, MVTO_FECHAPREVISTA, MVTO_FECHAREAL, USTCK_ORIGEN, USTCK_DESTINO, MVTO_CANTIDAD, UMED_CODIGO, EMVTO_CODIGO FROM MOVIMIENTOS_STOCK WHERE (MVTO_NUMERO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MVTO_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MVTO_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MVTO_FECHAALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_FECHAALTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MVTO_FECHAPREVISTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_FECHAPREVISTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MVTO_FECHAREAL", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_FECHAREAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_ORIGEN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_ORIGEN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_DESTINO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_DESTINO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MVTO_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "MVTO_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMVTO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EMVTO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[MOVIMIENTOS_STOCK] SET [MVTO_CODIGO] = @MVTO_CODIGO, [MVTO_DESCRIPC" +
                "ION] = @MVTO_DESCRIPCION, [MVTO_FECHAALTA] = @MVTO_FECHAALTA, [MVTO_FECHAPREVIST" +
                "A] = @MVTO_FECHAPREVISTA, [MVTO_FECHAREAL] = @MVTO_FECHAREAL, [USTCK_ORIGEN] = @" +
                "USTCK_ORIGEN, [USTCK_DESTINO] = @USTCK_DESTINO, [MVTO_CANTIDAD] = @MVTO_CANTIDAD" +
                ", [UMED_CODIGO] = @UMED_CODIGO, [EMVTO_CODIGO] = @EMVTO_CODIGO WHERE (([MVTO_NUM" +
                "ERO] = @Original_MVTO_NUMERO) AND ((@IsNull_MVTO_CODIGO = 1 AND [MVTO_CODIGO] IS" +
                " NULL) OR ([MVTO_CODIGO] = @Original_MVTO_CODIGO)) AND ((@IsNull_MVTO_DESCRIPCIO" +
                "N = 1 AND [MVTO_DESCRIPCION] IS NULL) OR ([MVTO_DESCRIPCION] = @Original_MVTO_DE" +
                "SCRIPCION)) AND ([MVTO_FECHAALTA] = @Original_MVTO_FECHAALTA) AND ((@IsNull_MVTO" +
                "_FECHAPREVISTA = 1 AND [MVTO_FECHAPREVISTA] IS NULL) OR ([MVTO_FECHAPREVISTA] = " +
                "@Original_MVTO_FECHAPREVISTA)) AND ((@IsNull_MVTO_FECHAREAL = 1 AND [MVTO_FECHAR" +
                "EAL] IS NULL) OR ([MVTO_FECHAREAL] = @Original_MVTO_FECHAREAL)) AND ((@IsNull_US" +
                "TCK_ORIGEN = 1 AND [USTCK_ORIGEN] IS NULL) OR ([USTCK_ORIGEN] = @Original_USTCK_" +
                "ORIGEN)) AND ((@IsNull_USTCK_DESTINO = 1 AND [USTCK_DESTINO] IS NULL) OR ([USTCK" +
                "_DESTINO] = @Original_USTCK_DESTINO)) AND ([MVTO_CANTIDAD] = @Original_MVTO_CANT" +
                "IDAD) AND ([UMED_CODIGO] = @Original_UMED_CODIGO) AND ([EMVTO_CODIGO] = @Origina" +
                "l_EMVTO_CODIGO));\r\nSELECT MVTO_NUMERO, MVTO_CODIGO, MVTO_DESCRIPCION, MVTO_FECHA" +
                "ALTA, MVTO_FECHAPREVISTA, MVTO_FECHAREAL, USTCK_ORIGEN, USTCK_DESTINO, MVTO_CANT" +
                "IDAD, UMED_CODIGO, EMVTO_CODIGO FROM MOVIMIENTOS_STOCK WHERE (MVTO_NUMERO = @MVT" +
                "O_NUMERO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MVTO_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MVTO_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MVTO_FECHAALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_FECHAALTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MVTO_FECHAPREVISTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_FECHAPREVISTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MVTO_FECHAREAL", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_FECHAREAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_ORIGEN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_ORIGEN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_DESTINO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_DESTINO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MVTO_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "MVTO_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMVTO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EMVTO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MVTO_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MVTO_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MVTO_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MVTO_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MVTO_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MVTO_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MVTO_FECHAALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_FECHAALTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MVTO_FECHAPREVISTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_FECHAPREVISTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MVTO_FECHAPREVISTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_FECHAPREVISTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MVTO_FECHAREAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_FECHAREAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MVTO_FECHAREAL", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MVTO_FECHAREAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_ORIGEN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_ORIGEN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_ORIGEN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_ORIGEN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_DESTINO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_DESTINO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_DESTINO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_DESTINO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MVTO_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "MVTO_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMVTO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EMVTO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MVTO_NUMERO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "MVTO_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MVTO_NUMERO, MVTO_CODIGO, MVTO_DESCRIPCION, MVTO_FECHAALTA, MVTO_FECHAPREV" +
                "ISTA, MVTO_FECHAREAL, USTCK_ORIGEN, USTCK_DESTINO, MVTO_CANTIDAD, UMED_CODIGO, E" +
                "MVTO_CODIGO FROM dbo.MOVIMIENTOS_STOCK";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsStock.MOVIMIENTOS_STOCKDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsStock.MOVIMIENTOS_STOCKDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsStock.MOVIMIENTOS_STOCKDataTable dataTable = new dsStock.MOVIMIENTOS_STOCKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsStock.MOVIMIENTOS_STOCKDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsStock dataSet) {
            return this.Adapter.Update(dataSet, "MOVIMIENTOS_STOCK");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_MVTO_NUMERO, string Original_MVTO_CODIGO, string Original_MVTO_DESCRIPCION, System.DateTime Original_MVTO_FECHAALTA, global::System.Nullable<global::System.DateTime> Original_MVTO_FECHAPREVISTA, global::System.Nullable<global::System.DateTime> Original_MVTO_FECHAREAL, global::System.Nullable<decimal> Original_USTCK_ORIGEN, global::System.Nullable<decimal> Original_USTCK_DESTINO, decimal Original_MVTO_CANTIDAD, decimal Original_UMED_CODIGO, decimal Original_EMVTO_CODIGO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_MVTO_NUMERO));
            if ((Original_MVTO_CODIGO == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MVTO_CODIGO));
            }
            if ((Original_MVTO_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_MVTO_DESCRIPCION));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_MVTO_FECHAALTA));
            if ((Original_MVTO_FECHAPREVISTA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_MVTO_FECHAPREVISTA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_MVTO_FECHAREAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_MVTO_FECHAREAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_USTCK_ORIGEN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_USTCK_ORIGEN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_USTCK_DESTINO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_USTCK_DESTINO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_MVTO_CANTIDAD));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_UMED_CODIGO));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_EMVTO_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MVTO_CODIGO, string MVTO_DESCRIPCION, System.DateTime MVTO_FECHAALTA, global::System.Nullable<global::System.DateTime> MVTO_FECHAPREVISTA, global::System.Nullable<global::System.DateTime> MVTO_FECHAREAL, global::System.Nullable<decimal> USTCK_ORIGEN, global::System.Nullable<decimal> USTCK_DESTINO, decimal MVTO_CANTIDAD, decimal UMED_CODIGO, decimal EMVTO_CODIGO) {
            if ((MVTO_CODIGO == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MVTO_CODIGO));
            }
            if ((MVTO_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MVTO_DESCRIPCION));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(MVTO_FECHAALTA));
            if ((MVTO_FECHAPREVISTA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(MVTO_FECHAPREVISTA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((MVTO_FECHAREAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(MVTO_FECHAREAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((USTCK_ORIGEN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(USTCK_ORIGEN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((USTCK_DESTINO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(USTCK_DESTINO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(MVTO_CANTIDAD));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(UMED_CODIGO));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(EMVTO_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MVTO_CODIGO, 
                    string MVTO_DESCRIPCION, 
                    System.DateTime MVTO_FECHAALTA, 
                    global::System.Nullable<global::System.DateTime> MVTO_FECHAPREVISTA, 
                    global::System.Nullable<global::System.DateTime> MVTO_FECHAREAL, 
                    global::System.Nullable<decimal> USTCK_ORIGEN, 
                    global::System.Nullable<decimal> USTCK_DESTINO, 
                    decimal MVTO_CANTIDAD, 
                    decimal UMED_CODIGO, 
                    decimal EMVTO_CODIGO, 
                    decimal Original_MVTO_NUMERO, 
                    string Original_MVTO_CODIGO, 
                    string Original_MVTO_DESCRIPCION, 
                    System.DateTime Original_MVTO_FECHAALTA, 
                    global::System.Nullable<global::System.DateTime> Original_MVTO_FECHAPREVISTA, 
                    global::System.Nullable<global::System.DateTime> Original_MVTO_FECHAREAL, 
                    global::System.Nullable<decimal> Original_USTCK_ORIGEN, 
                    global::System.Nullable<decimal> Original_USTCK_DESTINO, 
                    decimal Original_MVTO_CANTIDAD, 
                    decimal Original_UMED_CODIGO, 
                    decimal Original_EMVTO_CODIGO, 
                    decimal MVTO_NUMERO) {
            if ((MVTO_CODIGO == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MVTO_CODIGO));
            }
            if ((MVTO_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MVTO_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(MVTO_FECHAALTA));
            if ((MVTO_FECHAPREVISTA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(MVTO_FECHAPREVISTA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((MVTO_FECHAREAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(MVTO_FECHAREAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((USTCK_ORIGEN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(USTCK_ORIGEN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((USTCK_DESTINO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(USTCK_DESTINO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(MVTO_CANTIDAD));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(UMED_CODIGO));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(EMVTO_CODIGO));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_MVTO_NUMERO));
            if ((Original_MVTO_CODIGO == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_MVTO_CODIGO));
            }
            if ((Original_MVTO_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_MVTO_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_MVTO_FECHAALTA));
            if ((Original_MVTO_FECHAPREVISTA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_MVTO_FECHAPREVISTA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_MVTO_FECHAREAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_MVTO_FECHAREAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_USTCK_ORIGEN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_USTCK_ORIGEN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_USTCK_DESTINO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_USTCK_DESTINO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_MVTO_CANTIDAD));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(Original_UMED_CODIGO));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(Original_EMVTO_CODIGO));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(MVTO_NUMERO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MVTO_CODIGO, 
                    string MVTO_DESCRIPCION, 
                    System.DateTime MVTO_FECHAALTA, 
                    global::System.Nullable<global::System.DateTime> MVTO_FECHAPREVISTA, 
                    global::System.Nullable<global::System.DateTime> MVTO_FECHAREAL, 
                    global::System.Nullable<decimal> USTCK_ORIGEN, 
                    global::System.Nullable<decimal> USTCK_DESTINO, 
                    decimal MVTO_CANTIDAD, 
                    decimal UMED_CODIGO, 
                    decimal EMVTO_CODIGO, 
                    decimal Original_MVTO_NUMERO, 
                    string Original_MVTO_CODIGO, 
                    string Original_MVTO_DESCRIPCION, 
                    System.DateTime Original_MVTO_FECHAALTA, 
                    global::System.Nullable<global::System.DateTime> Original_MVTO_FECHAPREVISTA, 
                    global::System.Nullable<global::System.DateTime> Original_MVTO_FECHAREAL, 
                    global::System.Nullable<decimal> Original_USTCK_ORIGEN, 
                    global::System.Nullable<decimal> Original_USTCK_DESTINO, 
                    decimal Original_MVTO_CANTIDAD, 
                    decimal Original_UMED_CODIGO, 
                    decimal Original_EMVTO_CODIGO) {
            return this.Update(MVTO_CODIGO, MVTO_DESCRIPCION, MVTO_FECHAALTA, MVTO_FECHAPREVISTA, MVTO_FECHAREAL, USTCK_ORIGEN, USTCK_DESTINO, MVTO_CANTIDAD, UMED_CODIGO, EMVTO_CODIGO, Original_MVTO_NUMERO, Original_MVTO_CODIGO, Original_MVTO_DESCRIPCION, Original_MVTO_FECHAALTA, Original_MVTO_FECHAPREVISTA, Original_MVTO_FECHAREAL, Original_USTCK_ORIGEN, Original_USTCK_DESTINO, Original_MVTO_CANTIDAD, Original_UMED_CODIGO, Original_EMVTO_CODIGO, Original_MVTO_NUMERO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ESTADO_MOVIMIENTOS_STOCKTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ESTADO_MOVIMIENTOS_STOCKTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ESTADO_MOVIMIENTOS_STOCK";
            tableMapping.ColumnMappings.Add("EMVTO_CODIGO", "EMVTO_CODIGO");
            tableMapping.ColumnMappings.Add("EMVTO_NOMBRE", "EMVTO_NOMBRE");
            tableMapping.ColumnMappings.Add("EMVTO_DESCRIPCION", "EMVTO_DESCRIPCION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ESTADO_MOVIMIENTOS_STOCK] WHERE (([EMVTO_CODIGO] = @Original_EMVTO_CODIGO) AND ((@IsNull_EMVTO_NOMBRE = 1 AND [EMVTO_NOMBRE] IS NULL) OR ([EMVTO_NOMBRE] = @Original_EMVTO_NOMBRE)) AND ((@IsNull_EMVTO_DESCRIPCION = 1 AND [EMVTO_DESCRIPCION] IS NULL) OR ([EMVTO_DESCRIPCION] = @Original_EMVTO_DESCRIPCION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMVTO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EMVTO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMVTO_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMVTO_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMVTO_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMVTO_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMVTO_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMVTO_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMVTO_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMVTO_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ESTADO_MOVIMIENTOS_STOCK] ([EMVTO_NOMBRE], [EMVTO_DESCRIPCION]" +
                ") VALUES (@EMVTO_NOMBRE, @EMVTO_DESCRIPCION);\r\nSELECT EMVTO_CODIGO, EMVTO_NOMBRE" +
                ", EMVTO_DESCRIPCION FROM ESTADO_MOVIMIENTOS_STOCK WHERE (EMVTO_CODIGO = SCOPE_ID" +
                "ENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMVTO_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMVTO_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMVTO_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMVTO_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ESTADO_MOVIMIENTOS_STOCK] SET [EMVTO_NOMBRE] = @EMVTO_NOMBRE, [EMVTO_DESCRIPCION] = @EMVTO_DESCRIPCION WHERE (([EMVTO_CODIGO] = @Original_EMVTO_CODIGO) AND ((@IsNull_EMVTO_NOMBRE = 1 AND [EMVTO_NOMBRE] IS NULL) OR ([EMVTO_NOMBRE] = @Original_EMVTO_NOMBRE)) AND ((@IsNull_EMVTO_DESCRIPCION = 1 AND [EMVTO_DESCRIPCION] IS NULL) OR ([EMVTO_DESCRIPCION] = @Original_EMVTO_DESCRIPCION)));
SELECT EMVTO_CODIGO, EMVTO_NOMBRE, EMVTO_DESCRIPCION FROM ESTADO_MOVIMIENTOS_STOCK WHERE (EMVTO_CODIGO = @EMVTO_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMVTO_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMVTO_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMVTO_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMVTO_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMVTO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EMVTO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMVTO_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMVTO_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMVTO_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMVTO_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMVTO_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMVTO_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMVTO_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMVTO_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMVTO_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "EMVTO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT EMVTO_CODIGO, EMVTO_NOMBRE, EMVTO_DESCRIPCION FROM dbo.ESTADO_MOVIMIENTOS_" +
                "STOCK";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsStock.ESTADO_MOVIMIENTOS_STOCKDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsStock.ESTADO_MOVIMIENTOS_STOCKDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsStock.ESTADO_MOVIMIENTOS_STOCKDataTable dataTable = new dsStock.ESTADO_MOVIMIENTOS_STOCKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsStock.ESTADO_MOVIMIENTOS_STOCKDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsStock dataSet) {
            return this.Adapter.Update(dataSet, "ESTADO_MOVIMIENTOS_STOCK");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_EMVTO_CODIGO, string Original_EMVTO_NOMBRE, string Original_EMVTO_DESCRIPCION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_EMVTO_CODIGO));
            if ((Original_EMVTO_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_EMVTO_NOMBRE));
            }
            if ((Original_EMVTO_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_EMVTO_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string EMVTO_NOMBRE, string EMVTO_DESCRIPCION) {
            if ((EMVTO_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EMVTO_NOMBRE));
            }
            if ((EMVTO_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(EMVTO_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string EMVTO_NOMBRE, string EMVTO_DESCRIPCION, decimal Original_EMVTO_CODIGO, string Original_EMVTO_NOMBRE, string Original_EMVTO_DESCRIPCION, decimal EMVTO_CODIGO) {
            if ((EMVTO_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(EMVTO_NOMBRE));
            }
            if ((EMVTO_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(EMVTO_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_EMVTO_CODIGO));
            if ((Original_EMVTO_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_EMVTO_NOMBRE));
            }
            if ((Original_EMVTO_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_EMVTO_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(EMVTO_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string EMVTO_NOMBRE, string EMVTO_DESCRIPCION, decimal Original_EMVTO_CODIGO, string Original_EMVTO_NOMBRE, string Original_EMVTO_DESCRIPCION) {
            return this.Update(EMVTO_NOMBRE, EMVTO_DESCRIPCION, Original_EMVTO_CODIGO, Original_EMVTO_NOMBRE, Original_EMVTO_DESCRIPCION, Original_EMVTO_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UNIDADES_MEDIDATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UNIDADES_MEDIDATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UNIDADES_MEDIDA";
            tableMapping.ColumnMappings.Add("UMED_CODIGO", "UMED_CODIGO");
            tableMapping.ColumnMappings.Add("TUMED_CODIGO", "TUMED_CODIGO");
            tableMapping.ColumnMappings.Add("UMED_NOMBRE", "UMED_NOMBRE");
            tableMapping.ColumnMappings.Add("UMED_ABREVIATURA", "UMED_ABREVIATURA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[UNIDADES_MEDIDA] WHERE (([UMED_CODIGO] = @Original_UMED_CODIGO) AND ((@IsNull_TUMED_CODIGO = 1 AND [TUMED_CODIGO] IS NULL) OR ([TUMED_CODIGO] = @Original_TUMED_CODIGO)) AND ((@IsNull_UMED_NOMBRE = 1 AND [UMED_NOMBRE] IS NULL) OR ([UMED_NOMBRE] = @Original_UMED_NOMBRE)) AND ((@IsNull_UMED_ABREVIATURA = 1 AND [UMED_ABREVIATURA] IS NULL) OR ([UMED_ABREVIATURA] = @Original_UMED_ABREVIATURA)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUMED_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_ABREVIATURA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[UNIDADES_MEDIDA] ([TUMED_CODIGO], [UMED_NOMBRE], [UMED_ABREVIATURA]) VALUES (@TUMED_CODIGO, @UMED_NOMBRE, @UMED_ABREVIATURA);
SELECT UMED_CODIGO, TUMED_CODIGO, UMED_NOMBRE, UMED_ABREVIATURA FROM UNIDADES_MEDIDA WHERE (UMED_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[UNIDADES_MEDIDA] SET [TUMED_CODIGO] = @TUMED_CODIGO, [UMED_NOMBRE] = @UMED_NOMBRE, [UMED_ABREVIATURA] = @UMED_ABREVIATURA WHERE (([UMED_CODIGO] = @Original_UMED_CODIGO) AND ((@IsNull_TUMED_CODIGO = 1 AND [TUMED_CODIGO] IS NULL) OR ([TUMED_CODIGO] = @Original_TUMED_CODIGO)) AND ((@IsNull_UMED_NOMBRE = 1 AND [UMED_NOMBRE] IS NULL) OR ([UMED_NOMBRE] = @Original_UMED_NOMBRE)) AND ((@IsNull_UMED_ABREVIATURA = 1 AND [UMED_ABREVIATURA] IS NULL) OR ([UMED_ABREVIATURA] = @Original_UMED_ABREVIATURA)));
SELECT UMED_CODIGO, TUMED_CODIGO, UMED_NOMBRE, UMED_ABREVIATURA FROM UNIDADES_MEDIDA WHERE (UMED_CODIGO = @UMED_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUMED_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_ABREVIATURA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT UMED_CODIGO, TUMED_CODIGO, UMED_NOMBRE, UMED_ABREVIATURA FROM dbo.UNIDADES" +
                "_MEDIDA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsStock.UNIDADES_MEDIDADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsStock.UNIDADES_MEDIDADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsStock.UNIDADES_MEDIDADataTable dataTable = new dsStock.UNIDADES_MEDIDADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsStock.UNIDADES_MEDIDADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsStock dataSet) {
            return this.Adapter.Update(dataSet, "UNIDADES_MEDIDA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_UMED_CODIGO, global::System.Nullable<decimal> Original_TUMED_CODIGO, string Original_UMED_NOMBRE, string Original_UMED_ABREVIATURA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_UMED_CODIGO));
            if ((Original_TUMED_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_TUMED_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_UMED_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_UMED_NOMBRE));
            }
            if ((Original_UMED_ABREVIATURA == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_UMED_ABREVIATURA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<decimal> TUMED_CODIGO, string UMED_NOMBRE, string UMED_ABREVIATURA) {
            if ((TUMED_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(TUMED_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((UMED_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(UMED_NOMBRE));
            }
            if ((UMED_ABREVIATURA == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(UMED_ABREVIATURA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> TUMED_CODIGO, string UMED_NOMBRE, string UMED_ABREVIATURA, decimal Original_UMED_CODIGO, global::System.Nullable<decimal> Original_TUMED_CODIGO, string Original_UMED_NOMBRE, string Original_UMED_ABREVIATURA, decimal UMED_CODIGO) {
            if ((TUMED_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(TUMED_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((UMED_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(UMED_NOMBRE));
            }
            if ((UMED_ABREVIATURA == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(UMED_ABREVIATURA));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_UMED_CODIGO));
            if ((Original_TUMED_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_TUMED_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_UMED_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_UMED_NOMBRE));
            }
            if ((Original_UMED_ABREVIATURA == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_UMED_ABREVIATURA));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(UMED_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> TUMED_CODIGO, string UMED_NOMBRE, string UMED_ABREVIATURA, decimal Original_UMED_CODIGO, global::System.Nullable<decimal> Original_TUMED_CODIGO, string Original_UMED_NOMBRE, string Original_UMED_ABREVIATURA) {
            return this.Update(TUMED_CODIGO, UMED_NOMBRE, UMED_ABREVIATURA, Original_UMED_CODIGO, Original_TUMED_CODIGO, Original_UMED_NOMBRE, Original_UMED_ABREVIATURA, Original_UMED_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TIPOS_UNIDADES_MEDIDATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TIPOS_UNIDADES_MEDIDATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TIPOS_UNIDADES_MEDIDA";
            tableMapping.ColumnMappings.Add("TUMED_CODIGO", "TUMED_CODIGO");
            tableMapping.ColumnMappings.Add("TUMED_NOMBRE", "TUMED_NOMBRE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TIPOS_UNIDADES_MEDIDA] WHERE (([TUMED_CODIGO] = @Original_TUME" +
                "D_CODIGO) AND ((@IsNull_TUMED_NOMBRE = 1 AND [TUMED_NOMBRE] IS NULL) OR ([TUMED_" +
                "NOMBRE] = @Original_TUMED_NOMBRE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUMED_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TIPOS_UNIDADES_MEDIDA] ([TUMED_NOMBRE]) VALUES (@TUMED_NOMBRE)" +
                ";\r\nSELECT TUMED_CODIGO, TUMED_NOMBRE FROM TIPOS_UNIDADES_MEDIDA WHERE (TUMED_COD" +
                "IGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TIPOS_UNIDADES_MEDIDA] SET [TUMED_NOMBRE] = @TUMED_NOMBRE WHERE (([TUMED_CODIGO] = @Original_TUMED_CODIGO) AND ((@IsNull_TUMED_NOMBRE = 1 AND [TUMED_NOMBRE] IS NULL) OR ([TUMED_NOMBRE] = @Original_TUMED_NOMBRE)));
SELECT TUMED_CODIGO, TUMED_NOMBRE FROM TIPOS_UNIDADES_MEDIDA WHERE (TUMED_CODIGO = @TUMED_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUMED_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TUMED_CODIGO, TUMED_NOMBRE FROM dbo.TIPOS_UNIDADES_MEDIDA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsStock.TIPOS_UNIDADES_MEDIDADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsStock.TIPOS_UNIDADES_MEDIDADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsStock.TIPOS_UNIDADES_MEDIDADataTable dataTable = new dsStock.TIPOS_UNIDADES_MEDIDADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsStock.TIPOS_UNIDADES_MEDIDADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsStock dataSet) {
            return this.Adapter.Update(dataSet, "TIPOS_UNIDADES_MEDIDA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_TUMED_CODIGO, string Original_TUMED_NOMBRE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_TUMED_CODIGO));
            if ((Original_TUMED_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TUMED_NOMBRE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TUMED_NOMBRE) {
            if ((TUMED_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TUMED_NOMBRE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TUMED_NOMBRE, decimal Original_TUMED_CODIGO, string Original_TUMED_NOMBRE, decimal TUMED_CODIGO) {
            if ((TUMED_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TUMED_NOMBRE));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Original_TUMED_CODIGO));
            if ((Original_TUMED_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_TUMED_NOMBRE));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(TUMED_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TUMED_NOMBRE, decimal Original_TUMED_CODIGO, string Original_TUMED_NOMBRE) {
            return this.Update(TUMED_NOMBRE, Original_TUMED_CODIGO, Original_TUMED_NOMBRE, Original_TUMED_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UBICACIONES_STOCKTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UBICACIONES_STOCKTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UBICACIONES_STOCK";
            tableMapping.ColumnMappings.Add("USTCK_NUMERO", "USTCK_NUMERO");
            tableMapping.ColumnMappings.Add("USTCK_CODIGO", "USTCK_CODIGO");
            tableMapping.ColumnMappings.Add("USTCK_NOMBRE", "USTCK_NOMBRE");
            tableMapping.ColumnMappings.Add("USTCK_DESCRIPCION", "USTCK_DESCRIPCION");
            tableMapping.ColumnMappings.Add("USTCK_UBICACIONFISICA", "USTCK_UBICACIONFISICA");
            tableMapping.ColumnMappings.Add("USTCK_CANTIDADREAL", "USTCK_CANTIDADREAL");
            tableMapping.ColumnMappings.Add("USTCK_CANTIDADVIRTUAL", "USTCK_CANTIDADVIRTUAL");
            tableMapping.ColumnMappings.Add("UMED_CODIGO", "UMED_CODIGO");
            tableMapping.ColumnMappings.Add("USTCK_PADRE", "USTCK_PADRE");
            tableMapping.ColumnMappings.Add("USTCK_ACTIVO", "USTCK_ACTIVO");
            tableMapping.ColumnMappings.Add("TUS_CODIGO", "TUS_CODIGO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[UBICACIONES_STOCK] WHERE (([USTCK_NUMERO] = @Original_USTCK_NUMERO) AND ((@IsNull_USTCK_CODIGO = 1 AND [USTCK_CODIGO] IS NULL) OR ([USTCK_CODIGO] = @Original_USTCK_CODIGO)) AND ((@IsNull_USTCK_NOMBRE = 1 AND [USTCK_NOMBRE] IS NULL) OR ([USTCK_NOMBRE] = @Original_USTCK_NOMBRE)) AND ((@IsNull_USTCK_DESCRIPCION = 1 AND [USTCK_DESCRIPCION] IS NULL) OR ([USTCK_DESCRIPCION] = @Original_USTCK_DESCRIPCION)) AND ((@IsNull_USTCK_UBICACIONFISICA = 1 AND [USTCK_UBICACIONFISICA] IS NULL) OR ([USTCK_UBICACIONFISICA] = @Original_USTCK_UBICACIONFISICA)) AND ([USTCK_CANTIDADREAL] = @Original_USTCK_CANTIDADREAL) AND ([USTCK_CANTIDADVIRTUAL] = @Original_USTCK_CANTIDADVIRTUAL) AND ([UMED_CODIGO] = @Original_UMED_CODIGO) AND ((@IsNull_USTCK_PADRE = 1 AND [USTCK_PADRE] IS NULL) OR ([USTCK_PADRE] = @Original_USTCK_PADRE)) AND ([USTCK_ACTIVO] = @Original_USTCK_ACTIVO) AND ([TUS_CODIGO] = @Original_TUS_CODIGO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_UBICACIONFISICA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_UBICACIONFISICA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_UBICACIONFISICA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_UBICACIONFISICA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_CANTIDADREAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "USTCK_CANTIDADREAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_CANTIDADVIRTUAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "USTCK_CANTIDADVIRTUAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_PADRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_PADRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_PADRE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_PADRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "USTCK_ACTIVO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUS_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUS_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[UBICACIONES_STOCK] ([USTCK_CODIGO], [USTCK_NOMBRE], [USTCK_DESCRIPCION], [USTCK_UBICACIONFISICA], [USTCK_CANTIDADREAL], [USTCK_CANTIDADVIRTUAL], [UMED_CODIGO], [USTCK_PADRE], [USTCK_ACTIVO], [TUS_CODIGO]) VALUES (@USTCK_CODIGO, @USTCK_NOMBRE, @USTCK_DESCRIPCION, @USTCK_UBICACIONFISICA, @USTCK_CANTIDADREAL, @USTCK_CANTIDADVIRTUAL, @UMED_CODIGO, @USTCK_PADRE, @USTCK_ACTIVO, @TUS_CODIGO);
SELECT USTCK_NUMERO, USTCK_CODIGO, USTCK_NOMBRE, USTCK_DESCRIPCION, USTCK_UBICACIONFISICA, USTCK_CANTIDADREAL, USTCK_CANTIDADVIRTUAL, UMED_CODIGO, USTCK_PADRE, USTCK_ACTIVO, TUS_CODIGO FROM UBICACIONES_STOCK WHERE (USTCK_NUMERO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_UBICACIONFISICA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_UBICACIONFISICA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_CANTIDADREAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "USTCK_CANTIDADREAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_CANTIDADVIRTUAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "USTCK_CANTIDADVIRTUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_PADRE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_PADRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "USTCK_ACTIVO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUS_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUS_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[UBICACIONES_STOCK] SET [USTCK_CODIGO] = @USTCK_CODIGO, [USTCK_NOMBR" +
                "E] = @USTCK_NOMBRE, [USTCK_DESCRIPCION] = @USTCK_DESCRIPCION, [USTCK_UBICACIONFI" +
                "SICA] = @USTCK_UBICACIONFISICA, [USTCK_CANTIDADREAL] = @USTCK_CANTIDADREAL, [UST" +
                "CK_CANTIDADVIRTUAL] = @USTCK_CANTIDADVIRTUAL, [UMED_CODIGO] = @UMED_CODIGO, [UST" +
                "CK_PADRE] = @USTCK_PADRE, [USTCK_ACTIVO] = @USTCK_ACTIVO, [TUS_CODIGO] = @TUS_CO" +
                "DIGO WHERE (([USTCK_NUMERO] = @Original_USTCK_NUMERO) AND ((@IsNull_USTCK_CODIGO" +
                " = 1 AND [USTCK_CODIGO] IS NULL) OR ([USTCK_CODIGO] = @Original_USTCK_CODIGO)) A" +
                "ND ((@IsNull_USTCK_NOMBRE = 1 AND [USTCK_NOMBRE] IS NULL) OR ([USTCK_NOMBRE] = @" +
                "Original_USTCK_NOMBRE)) AND ((@IsNull_USTCK_DESCRIPCION = 1 AND [USTCK_DESCRIPCI" +
                "ON] IS NULL) OR ([USTCK_DESCRIPCION] = @Original_USTCK_DESCRIPCION)) AND ((@IsNu" +
                "ll_USTCK_UBICACIONFISICA = 1 AND [USTCK_UBICACIONFISICA] IS NULL) OR ([USTCK_UBI" +
                "CACIONFISICA] = @Original_USTCK_UBICACIONFISICA)) AND ([USTCK_CANTIDADREAL] = @O" +
                "riginal_USTCK_CANTIDADREAL) AND ([USTCK_CANTIDADVIRTUAL] = @Original_USTCK_CANTI" +
                "DADVIRTUAL) AND ([UMED_CODIGO] = @Original_UMED_CODIGO) AND ((@IsNull_USTCK_PADR" +
                "E = 1 AND [USTCK_PADRE] IS NULL) OR ([USTCK_PADRE] = @Original_USTCK_PADRE)) AND" +
                " ([USTCK_ACTIVO] = @Original_USTCK_ACTIVO) AND ([TUS_CODIGO] = @Original_TUS_COD" +
                "IGO));\r\nSELECT USTCK_NUMERO, USTCK_CODIGO, USTCK_NOMBRE, USTCK_DESCRIPCION, USTC" +
                "K_UBICACIONFISICA, USTCK_CANTIDADREAL, USTCK_CANTIDADVIRTUAL, UMED_CODIGO, USTCK" +
                "_PADRE, USTCK_ACTIVO, TUS_CODIGO FROM UBICACIONES_STOCK WHERE (USTCK_NUMERO = @U" +
                "STCK_NUMERO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_UBICACIONFISICA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_UBICACIONFISICA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_CANTIDADREAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "USTCK_CANTIDADREAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_CANTIDADVIRTUAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "USTCK_CANTIDADVIRTUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_PADRE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_PADRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "USTCK_ACTIVO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUS_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUS_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_UBICACIONFISICA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_UBICACIONFISICA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_UBICACIONFISICA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_UBICACIONFISICA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_CANTIDADREAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "USTCK_CANTIDADREAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_CANTIDADVIRTUAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "USTCK_CANTIDADVIRTUAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_PADRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_PADRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_PADRE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_PADRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "USTCK_ACTIVO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUS_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUS_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_NUMERO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT USTCK_NUMERO, USTCK_CODIGO, USTCK_NOMBRE, USTCK_DESCRIPCION, USTCK_UBICACI" +
                "ONFISICA, USTCK_CANTIDADREAL, USTCK_CANTIDADVIRTUAL, UMED_CODIGO, USTCK_PADRE, U" +
                "STCK_ACTIVO, TUS_CODIGO FROM dbo.UBICACIONES_STOCK";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsStock.UBICACIONES_STOCKDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsStock.UBICACIONES_STOCKDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsStock.UBICACIONES_STOCKDataTable dataTable = new dsStock.UBICACIONES_STOCKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsStock.UBICACIONES_STOCKDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsStock dataSet) {
            return this.Adapter.Update(dataSet, "UBICACIONES_STOCK");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_USTCK_NUMERO, string Original_USTCK_CODIGO, string Original_USTCK_NOMBRE, string Original_USTCK_DESCRIPCION, string Original_USTCK_UBICACIONFISICA, decimal Original_USTCK_CANTIDADREAL, decimal Original_USTCK_CANTIDADVIRTUAL, decimal Original_UMED_CODIGO, global::System.Nullable<decimal> Original_USTCK_PADRE, decimal Original_USTCK_ACTIVO, decimal Original_TUS_CODIGO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_USTCK_NUMERO));
            if ((Original_USTCK_CODIGO == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_USTCK_CODIGO));
            }
            if ((Original_USTCK_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_USTCK_NOMBRE));
            }
            if ((Original_USTCK_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_USTCK_DESCRIPCION));
            }
            if ((Original_USTCK_UBICACIONFISICA == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_USTCK_UBICACIONFISICA));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_USTCK_CANTIDADREAL));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_USTCK_CANTIDADVIRTUAL));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_UMED_CODIGO));
            if ((Original_USTCK_PADRE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_USTCK_PADRE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_USTCK_ACTIVO));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_TUS_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string USTCK_CODIGO, string USTCK_NOMBRE, string USTCK_DESCRIPCION, string USTCK_UBICACIONFISICA, decimal USTCK_CANTIDADREAL, decimal USTCK_CANTIDADVIRTUAL, decimal UMED_CODIGO, global::System.Nullable<decimal> USTCK_PADRE, decimal USTCK_ACTIVO, decimal TUS_CODIGO) {
            if ((USTCK_CODIGO == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(USTCK_CODIGO));
            }
            if ((USTCK_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(USTCK_NOMBRE));
            }
            if ((USTCK_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(USTCK_DESCRIPCION));
            }
            if ((USTCK_UBICACIONFISICA == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(USTCK_UBICACIONFISICA));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(USTCK_CANTIDADREAL));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(USTCK_CANTIDADVIRTUAL));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(UMED_CODIGO));
            if ((USTCK_PADRE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(USTCK_PADRE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(USTCK_ACTIVO));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(TUS_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string USTCK_CODIGO, 
                    string USTCK_NOMBRE, 
                    string USTCK_DESCRIPCION, 
                    string USTCK_UBICACIONFISICA, 
                    decimal USTCK_CANTIDADREAL, 
                    decimal USTCK_CANTIDADVIRTUAL, 
                    decimal UMED_CODIGO, 
                    global::System.Nullable<decimal> USTCK_PADRE, 
                    decimal USTCK_ACTIVO, 
                    decimal TUS_CODIGO, 
                    decimal Original_USTCK_NUMERO, 
                    string Original_USTCK_CODIGO, 
                    string Original_USTCK_NOMBRE, 
                    string Original_USTCK_DESCRIPCION, 
                    string Original_USTCK_UBICACIONFISICA, 
                    decimal Original_USTCK_CANTIDADREAL, 
                    decimal Original_USTCK_CANTIDADVIRTUAL, 
                    decimal Original_UMED_CODIGO, 
                    global::System.Nullable<decimal> Original_USTCK_PADRE, 
                    decimal Original_USTCK_ACTIVO, 
                    decimal Original_TUS_CODIGO, 
                    decimal USTCK_NUMERO) {
            if ((USTCK_CODIGO == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(USTCK_CODIGO));
            }
            if ((USTCK_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(USTCK_NOMBRE));
            }
            if ((USTCK_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(USTCK_DESCRIPCION));
            }
            if ((USTCK_UBICACIONFISICA == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(USTCK_UBICACIONFISICA));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(USTCK_CANTIDADREAL));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(USTCK_CANTIDADVIRTUAL));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(UMED_CODIGO));
            if ((USTCK_PADRE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(USTCK_PADRE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(USTCK_ACTIVO));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(TUS_CODIGO));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_USTCK_NUMERO));
            if ((Original_USTCK_CODIGO == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_USTCK_CODIGO));
            }
            if ((Original_USTCK_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_USTCK_NOMBRE));
            }
            if ((Original_USTCK_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_USTCK_DESCRIPCION));
            }
            if ((Original_USTCK_UBICACIONFISICA == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_USTCK_UBICACIONFISICA));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_USTCK_CANTIDADREAL));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_USTCK_CANTIDADVIRTUAL));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_UMED_CODIGO));
            if ((Original_USTCK_PADRE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_USTCK_PADRE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_USTCK_ACTIVO));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(Original_TUS_CODIGO));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(USTCK_NUMERO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string USTCK_CODIGO, 
                    string USTCK_NOMBRE, 
                    string USTCK_DESCRIPCION, 
                    string USTCK_UBICACIONFISICA, 
                    decimal USTCK_CANTIDADREAL, 
                    decimal USTCK_CANTIDADVIRTUAL, 
                    decimal UMED_CODIGO, 
                    global::System.Nullable<decimal> USTCK_PADRE, 
                    decimal USTCK_ACTIVO, 
                    decimal TUS_CODIGO, 
                    decimal Original_USTCK_NUMERO, 
                    string Original_USTCK_CODIGO, 
                    string Original_USTCK_NOMBRE, 
                    string Original_USTCK_DESCRIPCION, 
                    string Original_USTCK_UBICACIONFISICA, 
                    decimal Original_USTCK_CANTIDADREAL, 
                    decimal Original_USTCK_CANTIDADVIRTUAL, 
                    decimal Original_UMED_CODIGO, 
                    global::System.Nullable<decimal> Original_USTCK_PADRE, 
                    decimal Original_USTCK_ACTIVO, 
                    decimal Original_TUS_CODIGO) {
            return this.Update(USTCK_CODIGO, USTCK_NOMBRE, USTCK_DESCRIPCION, USTCK_UBICACIONFISICA, USTCK_CANTIDADREAL, USTCK_CANTIDADVIRTUAL, UMED_CODIGO, USTCK_PADRE, USTCK_ACTIVO, TUS_CODIGO, Original_USTCK_NUMERO, Original_USTCK_CODIGO, Original_USTCK_NOMBRE, Original_USTCK_DESCRIPCION, Original_USTCK_UBICACIONFISICA, Original_USTCK_CANTIDADREAL, Original_USTCK_CANTIDADVIRTUAL, Original_UMED_CODIGO, Original_USTCK_PADRE, Original_USTCK_ACTIVO, Original_TUS_CODIGO, Original_USTCK_NUMERO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TIPOS_UBICACIONES_STOCKTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TIPOS_UBICACIONES_STOCKTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TIPOS_UBICACIONES_STOCK";
            tableMapping.ColumnMappings.Add("TUS_CODIGO", "TUS_CODIGO");
            tableMapping.ColumnMappings.Add("TUS_NOMBRE", "TUS_NOMBRE");
            tableMapping.ColumnMappings.Add("TUS_DESCRIPCION", "TUS_DESCRIPCION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TIPOS_UBICACIONES_STOCK] WHERE (([TUS_CODIGO] = @Original_TUS_CODIGO) AND ((@IsNull_TUS_NOMBRE = 1 AND [TUS_NOMBRE] IS NULL) OR ([TUS_NOMBRE] = @Original_TUS_NOMBRE)) AND ((@IsNull_TUS_DESCRIPCION = 1 AND [TUS_DESCRIPCION] IS NULL) OR ([TUS_DESCRIPCION] = @Original_TUS_DESCRIPCION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUS_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUS_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUS_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUS_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUS_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUS_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TIPOS_UBICACIONES_STOCK] ([TUS_NOMBRE], [TUS_DESCRIPCION]) VAL" +
                "UES (@TUS_NOMBRE, @TUS_DESCRIPCION);\r\nSELECT TUS_CODIGO, TUS_NOMBRE, TUS_DESCRIP" +
                "CION FROM TIPOS_UBICACIONES_STOCK WHERE (TUS_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUS_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUS_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TIPOS_UBICACIONES_STOCK] SET [TUS_NOMBRE] = @TUS_NOMBRE, [TUS_DESCRIPCION] = @TUS_DESCRIPCION WHERE (([TUS_CODIGO] = @Original_TUS_CODIGO) AND ((@IsNull_TUS_NOMBRE = 1 AND [TUS_NOMBRE] IS NULL) OR ([TUS_NOMBRE] = @Original_TUS_NOMBRE)) AND ((@IsNull_TUS_DESCRIPCION = 1 AND [TUS_DESCRIPCION] IS NULL) OR ([TUS_DESCRIPCION] = @Original_TUS_DESCRIPCION)));
SELECT TUS_CODIGO, TUS_NOMBRE, TUS_DESCRIPCION FROM TIPOS_UBICACIONES_STOCK WHERE (TUS_CODIGO = @TUS_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUS_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUS_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUS_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUS_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUS_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUS_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUS_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUS_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUS_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "TUS_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TUS_CODIGO, TUS_NOMBRE, TUS_DESCRIPCION FROM dbo.TIPOS_UBICACIONES_STOCK";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsStock.TIPOS_UBICACIONES_STOCKDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsStock.TIPOS_UBICACIONES_STOCKDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsStock.TIPOS_UBICACIONES_STOCKDataTable dataTable = new dsStock.TIPOS_UBICACIONES_STOCKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsStock.TIPOS_UBICACIONES_STOCKDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsStock dataSet) {
            return this.Adapter.Update(dataSet, "TIPOS_UBICACIONES_STOCK");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_TUS_CODIGO, string Original_TUS_NOMBRE, string Original_TUS_DESCRIPCION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_TUS_CODIGO));
            if ((Original_TUS_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TUS_NOMBRE));
            }
            if ((Original_TUS_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TUS_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TUS_NOMBRE, string TUS_DESCRIPCION) {
            if ((TUS_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TUS_NOMBRE));
            }
            if ((TUS_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TUS_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TUS_NOMBRE, string TUS_DESCRIPCION, decimal Original_TUS_CODIGO, string Original_TUS_NOMBRE, string Original_TUS_DESCRIPCION, decimal TUS_CODIGO) {
            if ((TUS_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TUS_NOMBRE));
            }
            if ((TUS_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TUS_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_TUS_CODIGO));
            if ((Original_TUS_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_TUS_NOMBRE));
            }
            if ((Original_TUS_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_TUS_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(TUS_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TUS_NOMBRE, string TUS_DESCRIPCION, decimal Original_TUS_CODIGO, string Original_TUS_NOMBRE, string Original_TUS_DESCRIPCION) {
            return this.Update(TUS_NOMBRE, TUS_DESCRIPCION, Original_TUS_CODIGO, Original_TUS_NOMBRE, Original_TUS_DESCRIPCION, Original_TUS_CODIGO);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private MOVIMIENTOS_STOCKTableAdapter _mOVIMIENTOS_STOCKTableAdapter;
        
        private ESTADO_MOVIMIENTOS_STOCKTableAdapter _eSTADO_MOVIMIENTOS_STOCKTableAdapter;
        
        private UNIDADES_MEDIDATableAdapter _uNIDADES_MEDIDATableAdapter;
        
        private TIPOS_UNIDADES_MEDIDATableAdapter _tIPOS_UNIDADES_MEDIDATableAdapter;
        
        private UBICACIONES_STOCKTableAdapter _uBICACIONES_STOCKTableAdapter;
        
        private TIPOS_UBICACIONES_STOCKTableAdapter _tIPOS_UBICACIONES_STOCKTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MOVIMIENTOS_STOCKTableAdapter MOVIMIENTOS_STOCKTableAdapter {
            get {
                return this._mOVIMIENTOS_STOCKTableAdapter;
            }
            set {
                this._mOVIMIENTOS_STOCKTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ESTADO_MOVIMIENTOS_STOCKTableAdapter ESTADO_MOVIMIENTOS_STOCKTableAdapter {
            get {
                return this._eSTADO_MOVIMIENTOS_STOCKTableAdapter;
            }
            set {
                this._eSTADO_MOVIMIENTOS_STOCKTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public UNIDADES_MEDIDATableAdapter UNIDADES_MEDIDATableAdapter {
            get {
                return this._uNIDADES_MEDIDATableAdapter;
            }
            set {
                this._uNIDADES_MEDIDATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TIPOS_UNIDADES_MEDIDATableAdapter TIPOS_UNIDADES_MEDIDATableAdapter {
            get {
                return this._tIPOS_UNIDADES_MEDIDATableAdapter;
            }
            set {
                this._tIPOS_UNIDADES_MEDIDATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public UBICACIONES_STOCKTableAdapter UBICACIONES_STOCKTableAdapter {
            get {
                return this._uBICACIONES_STOCKTableAdapter;
            }
            set {
                this._uBICACIONES_STOCKTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TIPOS_UBICACIONES_STOCKTableAdapter TIPOS_UBICACIONES_STOCKTableAdapter {
            get {
                return this._tIPOS_UBICACIONES_STOCKTableAdapter;
            }
            set {
                this._tIPOS_UBICACIONES_STOCKTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._mOVIMIENTOS_STOCKTableAdapter != null) 
                            && (this._mOVIMIENTOS_STOCKTableAdapter.Connection != null))) {
                    return this._mOVIMIENTOS_STOCKTableAdapter.Connection;
                }
                if (((this._eSTADO_MOVIMIENTOS_STOCKTableAdapter != null) 
                            && (this._eSTADO_MOVIMIENTOS_STOCKTableAdapter.Connection != null))) {
                    return this._eSTADO_MOVIMIENTOS_STOCKTableAdapter.Connection;
                }
                if (((this._uNIDADES_MEDIDATableAdapter != null) 
                            && (this._uNIDADES_MEDIDATableAdapter.Connection != null))) {
                    return this._uNIDADES_MEDIDATableAdapter.Connection;
                }
                if (((this._tIPOS_UNIDADES_MEDIDATableAdapter != null) 
                            && (this._tIPOS_UNIDADES_MEDIDATableAdapter.Connection != null))) {
                    return this._tIPOS_UNIDADES_MEDIDATableAdapter.Connection;
                }
                if (((this._uBICACIONES_STOCKTableAdapter != null) 
                            && (this._uBICACIONES_STOCKTableAdapter.Connection != null))) {
                    return this._uBICACIONES_STOCKTableAdapter.Connection;
                }
                if (((this._tIPOS_UBICACIONES_STOCKTableAdapter != null) 
                            && (this._tIPOS_UBICACIONES_STOCKTableAdapter.Connection != null))) {
                    return this._tIPOS_UBICACIONES_STOCKTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._mOVIMIENTOS_STOCKTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eSTADO_MOVIMIENTOS_STOCKTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tIPOS_UNIDADES_MEDIDATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._uBICACIONES_STOCKTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tIPOS_UBICACIONES_STOCKTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(dsStock dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tIPOS_UNIDADES_MEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TIPOS_UNIDADES_MEDIDA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tIPOS_UNIDADES_MEDIDATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tIPOS_UBICACIONES_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TIPOS_UBICACIONES_STOCK.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tIPOS_UBICACIONES_STOCKTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UNIDADES_MEDIDA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._uNIDADES_MEDIDATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._uBICACIONES_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UBICACIONES_STOCK.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    this.SortSelfReferenceRows(updatedRows, dataSet.Relations["FK_UBICACIONES_STOCK_UBICACION_STOCK"], false);
                    result = (result + this._uBICACIONES_STOCKTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eSTADO_MOVIMIENTOS_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ESTADO_MOVIMIENTOS_STOCK.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eSTADO_MOVIMIENTOS_STOCKTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mOVIMIENTOS_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MOVIMIENTOS_STOCK.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mOVIMIENTOS_STOCKTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(dsStock dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tIPOS_UNIDADES_MEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TIPOS_UNIDADES_MEDIDA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tIPOS_UNIDADES_MEDIDATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tIPOS_UBICACIONES_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TIPOS_UBICACIONES_STOCK.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tIPOS_UBICACIONES_STOCKTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UNIDADES_MEDIDA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._uNIDADES_MEDIDATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._uBICACIONES_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UBICACIONES_STOCK.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    this.SortSelfReferenceRows(addedRows, dataSet.Relations["FK_UBICACIONES_STOCK_UBICACION_STOCK"], false);
                    result = (result + this._uBICACIONES_STOCKTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eSTADO_MOVIMIENTOS_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ESTADO_MOVIMIENTOS_STOCK.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eSTADO_MOVIMIENTOS_STOCKTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mOVIMIENTOS_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MOVIMIENTOS_STOCK.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mOVIMIENTOS_STOCKTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(dsStock dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._mOVIMIENTOS_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MOVIMIENTOS_STOCK.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mOVIMIENTOS_STOCKTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eSTADO_MOVIMIENTOS_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ESTADO_MOVIMIENTOS_STOCK.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eSTADO_MOVIMIENTOS_STOCKTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._uBICACIONES_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UBICACIONES_STOCK.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    this.SortSelfReferenceRows(deletedRows, dataSet.Relations["FK_UBICACIONES_STOCK_UBICACION_STOCK"], true);
                    result = (result + this._uBICACIONES_STOCKTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UNIDADES_MEDIDA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._uNIDADES_MEDIDATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tIPOS_UBICACIONES_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TIPOS_UBICACIONES_STOCK.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tIPOS_UBICACIONES_STOCKTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tIPOS_UNIDADES_MEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TIPOS_UNIDADES_MEDIDA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tIPOS_UNIDADES_MEDIDATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(dsStock dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._mOVIMIENTOS_STOCKTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mOVIMIENTOS_STOCKTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._eSTADO_MOVIMIENTOS_STOCKTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eSTADO_MOVIMIENTOS_STOCKTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._uNIDADES_MEDIDATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._uNIDADES_MEDIDATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tIPOS_UNIDADES_MEDIDATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tIPOS_UNIDADES_MEDIDATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._uBICACIONES_STOCKTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._uBICACIONES_STOCKTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tIPOS_UBICACIONES_STOCKTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tIPOS_UBICACIONES_STOCKTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._mOVIMIENTOS_STOCKTableAdapter != null)) {
                    revertConnections.Add(this._mOVIMIENTOS_STOCKTableAdapter, this._mOVIMIENTOS_STOCKTableAdapter.Connection);
                    this._mOVIMIENTOS_STOCKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mOVIMIENTOS_STOCKTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mOVIMIENTOS_STOCKTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mOVIMIENTOS_STOCKTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mOVIMIENTOS_STOCKTableAdapter.Adapter);
                    }
                }
                if ((this._eSTADO_MOVIMIENTOS_STOCKTableAdapter != null)) {
                    revertConnections.Add(this._eSTADO_MOVIMIENTOS_STOCKTableAdapter, this._eSTADO_MOVIMIENTOS_STOCKTableAdapter.Connection);
                    this._eSTADO_MOVIMIENTOS_STOCKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eSTADO_MOVIMIENTOS_STOCKTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eSTADO_MOVIMIENTOS_STOCKTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eSTADO_MOVIMIENTOS_STOCKTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eSTADO_MOVIMIENTOS_STOCKTableAdapter.Adapter);
                    }
                }
                if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                    revertConnections.Add(this._uNIDADES_MEDIDATableAdapter, this._uNIDADES_MEDIDATableAdapter.Connection);
                    this._uNIDADES_MEDIDATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._uNIDADES_MEDIDATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._uNIDADES_MEDIDATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._uNIDADES_MEDIDATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._uNIDADES_MEDIDATableAdapter.Adapter);
                    }
                }
                if ((this._tIPOS_UNIDADES_MEDIDATableAdapter != null)) {
                    revertConnections.Add(this._tIPOS_UNIDADES_MEDIDATableAdapter, this._tIPOS_UNIDADES_MEDIDATableAdapter.Connection);
                    this._tIPOS_UNIDADES_MEDIDATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tIPOS_UNIDADES_MEDIDATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tIPOS_UNIDADES_MEDIDATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tIPOS_UNIDADES_MEDIDATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tIPOS_UNIDADES_MEDIDATableAdapter.Adapter);
                    }
                }
                if ((this._uBICACIONES_STOCKTableAdapter != null)) {
                    revertConnections.Add(this._uBICACIONES_STOCKTableAdapter, this._uBICACIONES_STOCKTableAdapter.Connection);
                    this._uBICACIONES_STOCKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._uBICACIONES_STOCKTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._uBICACIONES_STOCKTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._uBICACIONES_STOCKTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._uBICACIONES_STOCKTableAdapter.Adapter);
                    }
                }
                if ((this._tIPOS_UBICACIONES_STOCKTableAdapter != null)) {
                    revertConnections.Add(this._tIPOS_UBICACIONES_STOCKTableAdapter, this._tIPOS_UBICACIONES_STOCKTableAdapter.Connection);
                    this._tIPOS_UBICACIONES_STOCKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tIPOS_UBICACIONES_STOCKTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tIPOS_UBICACIONES_STOCKTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tIPOS_UBICACIONES_STOCKTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tIPOS_UBICACIONES_STOCKTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._mOVIMIENTOS_STOCKTableAdapter != null)) {
                    this._mOVIMIENTOS_STOCKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mOVIMIENTOS_STOCKTableAdapter]));
                    this._mOVIMIENTOS_STOCKTableAdapter.Transaction = null;
                }
                if ((this._eSTADO_MOVIMIENTOS_STOCKTableAdapter != null)) {
                    this._eSTADO_MOVIMIENTOS_STOCKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eSTADO_MOVIMIENTOS_STOCKTableAdapter]));
                    this._eSTADO_MOVIMIENTOS_STOCKTableAdapter.Transaction = null;
                }
                if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                    this._uNIDADES_MEDIDATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._uNIDADES_MEDIDATableAdapter]));
                    this._uNIDADES_MEDIDATableAdapter.Transaction = null;
                }
                if ((this._tIPOS_UNIDADES_MEDIDATableAdapter != null)) {
                    this._tIPOS_UNIDADES_MEDIDATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tIPOS_UNIDADES_MEDIDATableAdapter]));
                    this._tIPOS_UNIDADES_MEDIDATableAdapter.Transaction = null;
                }
                if ((this._uBICACIONES_STOCKTableAdapter != null)) {
                    this._uBICACIONES_STOCKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._uBICACIONES_STOCKTableAdapter]));
                    this._uBICACIONES_STOCKTableAdapter.Transaction = null;
                }
                if ((this._tIPOS_UBICACIONES_STOCKTableAdapter != null)) {
                    this._tIPOS_UBICACIONES_STOCKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tIPOS_UBICACIONES_STOCKTableAdapter]));
                    this._tIPOS_UBICACIONES_STOCKTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591