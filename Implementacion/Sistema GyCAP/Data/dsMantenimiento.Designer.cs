//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GyCAP.Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsMantenimiento")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsMantenimiento : global::System.Data.DataSet {
        
        private MANTENIMIENTOSDataTable tableMANTENIMIENTOS;
        
        private PLANES_MANTENIMIENTODataTable tablePLANES_MANTENIMIENTO;
        
        private ESTADO_PLANES_MANTENIMIENTODataTable tableESTADO_PLANES_MANTENIMIENTO;
        
        private DETALLE_PLANES_MANTENIMIENTODataTable tableDETALLE_PLANES_MANTENIMIENTO;
        
        private TIPOS_MANTENIMIENTOSDataTable tableTIPOS_MANTENIMIENTOS;
        
        private global::System.Data.DataRelation relationplanMantenimiento_estadoPlanMantenimiento_fk;
        
        private global::System.Data.DataRelation relationdetallePlanMantenimiento_mantenimiento_fk;
        
        private global::System.Data.DataRelation relationdetallePlanMantenimiento_planMantenimiento_fk;
        
        private global::System.Data.DataRelation relationmantenimiento_tipoMantenimiento_fk;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsMantenimiento() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsMantenimiento(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MANTENIMIENTOS"] != null)) {
                    base.Tables.Add(new MANTENIMIENTOSDataTable(ds.Tables["MANTENIMIENTOS"]));
                }
                if ((ds.Tables["PLANES_MANTENIMIENTO"] != null)) {
                    base.Tables.Add(new PLANES_MANTENIMIENTODataTable(ds.Tables["PLANES_MANTENIMIENTO"]));
                }
                if ((ds.Tables["ESTADO_PLANES_MANTENIMIENTO"] != null)) {
                    base.Tables.Add(new ESTADO_PLANES_MANTENIMIENTODataTable(ds.Tables["ESTADO_PLANES_MANTENIMIENTO"]));
                }
                if ((ds.Tables["DETALLE_PLANES_MANTENIMIENTO"] != null)) {
                    base.Tables.Add(new DETALLE_PLANES_MANTENIMIENTODataTable(ds.Tables["DETALLE_PLANES_MANTENIMIENTO"]));
                }
                if ((ds.Tables["TIPOS_MANTENIMIENTOS"] != null)) {
                    base.Tables.Add(new TIPOS_MANTENIMIENTOSDataTable(ds.Tables["TIPOS_MANTENIMIENTOS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MANTENIMIENTOSDataTable MANTENIMIENTOS {
            get {
                return this.tableMANTENIMIENTOS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PLANES_MANTENIMIENTODataTable PLANES_MANTENIMIENTO {
            get {
                return this.tablePLANES_MANTENIMIENTO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ESTADO_PLANES_MANTENIMIENTODataTable ESTADO_PLANES_MANTENIMIENTO {
            get {
                return this.tableESTADO_PLANES_MANTENIMIENTO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DETALLE_PLANES_MANTENIMIENTODataTable DETALLE_PLANES_MANTENIMIENTO {
            get {
                return this.tableDETALLE_PLANES_MANTENIMIENTO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TIPOS_MANTENIMIENTOSDataTable TIPOS_MANTENIMIENTOS {
            get {
                return this.tableTIPOS_MANTENIMIENTOS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsMantenimiento cln = ((dsMantenimiento)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MANTENIMIENTOS"] != null)) {
                    base.Tables.Add(new MANTENIMIENTOSDataTable(ds.Tables["MANTENIMIENTOS"]));
                }
                if ((ds.Tables["PLANES_MANTENIMIENTO"] != null)) {
                    base.Tables.Add(new PLANES_MANTENIMIENTODataTable(ds.Tables["PLANES_MANTENIMIENTO"]));
                }
                if ((ds.Tables["ESTADO_PLANES_MANTENIMIENTO"] != null)) {
                    base.Tables.Add(new ESTADO_PLANES_MANTENIMIENTODataTable(ds.Tables["ESTADO_PLANES_MANTENIMIENTO"]));
                }
                if ((ds.Tables["DETALLE_PLANES_MANTENIMIENTO"] != null)) {
                    base.Tables.Add(new DETALLE_PLANES_MANTENIMIENTODataTable(ds.Tables["DETALLE_PLANES_MANTENIMIENTO"]));
                }
                if ((ds.Tables["TIPOS_MANTENIMIENTOS"] != null)) {
                    base.Tables.Add(new TIPOS_MANTENIMIENTOSDataTable(ds.Tables["TIPOS_MANTENIMIENTOS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMANTENIMIENTOS = ((MANTENIMIENTOSDataTable)(base.Tables["MANTENIMIENTOS"]));
            if ((initTable == true)) {
                if ((this.tableMANTENIMIENTOS != null)) {
                    this.tableMANTENIMIENTOS.InitVars();
                }
            }
            this.tablePLANES_MANTENIMIENTO = ((PLANES_MANTENIMIENTODataTable)(base.Tables["PLANES_MANTENIMIENTO"]));
            if ((initTable == true)) {
                if ((this.tablePLANES_MANTENIMIENTO != null)) {
                    this.tablePLANES_MANTENIMIENTO.InitVars();
                }
            }
            this.tableESTADO_PLANES_MANTENIMIENTO = ((ESTADO_PLANES_MANTENIMIENTODataTable)(base.Tables["ESTADO_PLANES_MANTENIMIENTO"]));
            if ((initTable == true)) {
                if ((this.tableESTADO_PLANES_MANTENIMIENTO != null)) {
                    this.tableESTADO_PLANES_MANTENIMIENTO.InitVars();
                }
            }
            this.tableDETALLE_PLANES_MANTENIMIENTO = ((DETALLE_PLANES_MANTENIMIENTODataTable)(base.Tables["DETALLE_PLANES_MANTENIMIENTO"]));
            if ((initTable == true)) {
                if ((this.tableDETALLE_PLANES_MANTENIMIENTO != null)) {
                    this.tableDETALLE_PLANES_MANTENIMIENTO.InitVars();
                }
            }
            this.tableTIPOS_MANTENIMIENTOS = ((TIPOS_MANTENIMIENTOSDataTable)(base.Tables["TIPOS_MANTENIMIENTOS"]));
            if ((initTable == true)) {
                if ((this.tableTIPOS_MANTENIMIENTOS != null)) {
                    this.tableTIPOS_MANTENIMIENTOS.InitVars();
                }
            }
            this.relationplanMantenimiento_estadoPlanMantenimiento_fk = this.Relations["planMantenimiento_estadoPlanMantenimiento_fk"];
            this.relationdetallePlanMantenimiento_mantenimiento_fk = this.Relations["detallePlanMantenimiento_mantenimiento_fk"];
            this.relationdetallePlanMantenimiento_planMantenimiento_fk = this.Relations["detallePlanMantenimiento_planMantenimiento_fk"];
            this.relationmantenimiento_tipoMantenimiento_fk = this.Relations["mantenimiento_tipoMantenimiento_fk"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsMantenimiento";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsMantenimiento.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMANTENIMIENTOS = new MANTENIMIENTOSDataTable();
            base.Tables.Add(this.tableMANTENIMIENTOS);
            this.tablePLANES_MANTENIMIENTO = new PLANES_MANTENIMIENTODataTable();
            base.Tables.Add(this.tablePLANES_MANTENIMIENTO);
            this.tableESTADO_PLANES_MANTENIMIENTO = new ESTADO_PLANES_MANTENIMIENTODataTable();
            base.Tables.Add(this.tableESTADO_PLANES_MANTENIMIENTO);
            this.tableDETALLE_PLANES_MANTENIMIENTO = new DETALLE_PLANES_MANTENIMIENTODataTable();
            base.Tables.Add(this.tableDETALLE_PLANES_MANTENIMIENTO);
            this.tableTIPOS_MANTENIMIENTOS = new TIPOS_MANTENIMIENTOSDataTable();
            base.Tables.Add(this.tableTIPOS_MANTENIMIENTOS);
            this.relationplanMantenimiento_estadoPlanMantenimiento_fk = new global::System.Data.DataRelation("planMantenimiento_estadoPlanMantenimiento_fk", new global::System.Data.DataColumn[] {
                        this.tableESTADO_PLANES_MANTENIMIENTO.EPMAN_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tablePLANES_MANTENIMIENTO.EPMAN_CODIGOColumn}, false);
            this.Relations.Add(this.relationplanMantenimiento_estadoPlanMantenimiento_fk);
            this.relationdetallePlanMantenimiento_mantenimiento_fk = new global::System.Data.DataRelation("detallePlanMantenimiento_mantenimiento_fk", new global::System.Data.DataColumn[] {
                        this.tableMANTENIMIENTOS.MAN_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableDETALLE_PLANES_MANTENIMIENTO.MAN_CODIGOColumn}, false);
            this.Relations.Add(this.relationdetallePlanMantenimiento_mantenimiento_fk);
            this.relationdetallePlanMantenimiento_planMantenimiento_fk = new global::System.Data.DataRelation("detallePlanMantenimiento_planMantenimiento_fk", new global::System.Data.DataColumn[] {
                        this.tablePLANES_MANTENIMIENTO.PMAN_NUMEROColumn}, new global::System.Data.DataColumn[] {
                        this.tableDETALLE_PLANES_MANTENIMIENTO.PMAN_NUMEROColumn}, false);
            this.Relations.Add(this.relationdetallePlanMantenimiento_planMantenimiento_fk);
            this.relationmantenimiento_tipoMantenimiento_fk = new global::System.Data.DataRelation("mantenimiento_tipoMantenimiento_fk", new global::System.Data.DataColumn[] {
                        this.tableTIPOS_MANTENIMIENTOS.TMAN_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableMANTENIMIENTOS.TMAN_CODIGOColumn}, false);
            this.Relations.Add(this.relationmantenimiento_tipoMantenimiento_fk);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMANTENIMIENTOS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePLANES_MANTENIMIENTO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeESTADO_PLANES_MANTENIMIENTO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDETALLE_PLANES_MANTENIMIENTO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTIPOS_MANTENIMIENTOS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsMantenimiento ds = new dsMantenimiento();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void MANTENIMIENTOSRowChangeEventHandler(object sender, MANTENIMIENTOSRowChangeEvent e);
        
        public delegate void PLANES_MANTENIMIENTORowChangeEventHandler(object sender, PLANES_MANTENIMIENTORowChangeEvent e);
        
        public delegate void ESTADO_PLANES_MANTENIMIENTORowChangeEventHandler(object sender, ESTADO_PLANES_MANTENIMIENTORowChangeEvent e);
        
        public delegate void DETALLE_PLANES_MANTENIMIENTORowChangeEventHandler(object sender, DETALLE_PLANES_MANTENIMIENTORowChangeEvent e);
        
        public delegate void TIPOS_MANTENIMIENTOSRowChangeEventHandler(object sender, TIPOS_MANTENIMIENTOSRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MANTENIMIENTOSDataTable : global::System.Data.TypedTableBase<MANTENIMIENTOSRow> {
            
            private global::System.Data.DataColumn columnMAN_CODIGO;
            
            private global::System.Data.DataColumn columnTMAN_CODIGO;
            
            private global::System.Data.DataColumn columnMAN_NOMBRE;
            
            private global::System.Data.DataColumn columnMAN_DESCRIPCION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MANTENIMIENTOSDataTable() {
                this.TableName = "MANTENIMIENTOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MANTENIMIENTOSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MANTENIMIENTOSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAN_CODIGOColumn {
                get {
                    return this.columnMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TMAN_CODIGOColumn {
                get {
                    return this.columnTMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAN_NOMBREColumn {
                get {
                    return this.columnMAN_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAN_DESCRIPCIONColumn {
                get {
                    return this.columnMAN_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MANTENIMIENTOSRow this[int index] {
                get {
                    return ((MANTENIMIENTOSRow)(this.Rows[index]));
                }
            }
            
            public event MANTENIMIENTOSRowChangeEventHandler MANTENIMIENTOSRowChanging;
            
            public event MANTENIMIENTOSRowChangeEventHandler MANTENIMIENTOSRowChanged;
            
            public event MANTENIMIENTOSRowChangeEventHandler MANTENIMIENTOSRowDeleting;
            
            public event MANTENIMIENTOSRowChangeEventHandler MANTENIMIENTOSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMANTENIMIENTOSRow(MANTENIMIENTOSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MANTENIMIENTOSRow AddMANTENIMIENTOSRow(TIPOS_MANTENIMIENTOSRow parentTIPOS_MANTENIMIENTOSRowBymantenimiento_tipoMantenimiento_fk, string MAN_NOMBRE, string MAN_DESCRIPCION) {
                MANTENIMIENTOSRow rowMANTENIMIENTOSRow = ((MANTENIMIENTOSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        MAN_NOMBRE,
                        MAN_DESCRIPCION};
                if ((parentTIPOS_MANTENIMIENTOSRowBymantenimiento_tipoMantenimiento_fk != null)) {
                    columnValuesArray[1] = parentTIPOS_MANTENIMIENTOSRowBymantenimiento_tipoMantenimiento_fk[0];
                }
                rowMANTENIMIENTOSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMANTENIMIENTOSRow);
                return rowMANTENIMIENTOSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MANTENIMIENTOSRow FindByMAN_CODIGO(decimal MAN_CODIGO) {
                return ((MANTENIMIENTOSRow)(this.Rows.Find(new object[] {
                            MAN_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MANTENIMIENTOSDataTable cln = ((MANTENIMIENTOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MANTENIMIENTOSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMAN_CODIGO = base.Columns["MAN_CODIGO"];
                this.columnTMAN_CODIGO = base.Columns["TMAN_CODIGO"];
                this.columnMAN_NOMBRE = base.Columns["MAN_NOMBRE"];
                this.columnMAN_DESCRIPCION = base.Columns["MAN_DESCRIPCION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMAN_CODIGO = new global::System.Data.DataColumn("MAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAN_CODIGO);
                this.columnTMAN_CODIGO = new global::System.Data.DataColumn("TMAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTMAN_CODIGO);
                this.columnMAN_NOMBRE = new global::System.Data.DataColumn("MAN_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAN_NOMBRE);
                this.columnMAN_DESCRIPCION = new global::System.Data.DataColumn("MAN_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAN_DESCRIPCION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMAN_CODIGO}, true));
                this.columnMAN_CODIGO.AutoIncrement = true;
                this.columnMAN_CODIGO.AutoIncrementSeed = -1;
                this.columnMAN_CODIGO.AutoIncrementStep = -1;
                this.columnMAN_CODIGO.AllowDBNull = false;
                this.columnMAN_CODIGO.ReadOnly = true;
                this.columnMAN_CODIGO.Unique = true;
                this.columnTMAN_CODIGO.AllowDBNull = false;
                this.columnMAN_NOMBRE.MaxLength = 80;
                this.columnMAN_DESCRIPCION.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MANTENIMIENTOSRow NewMANTENIMIENTOSRow() {
                return ((MANTENIMIENTOSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MANTENIMIENTOSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MANTENIMIENTOSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MANTENIMIENTOSRowChanged != null)) {
                    this.MANTENIMIENTOSRowChanged(this, new MANTENIMIENTOSRowChangeEvent(((MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MANTENIMIENTOSRowChanging != null)) {
                    this.MANTENIMIENTOSRowChanging(this, new MANTENIMIENTOSRowChangeEvent(((MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MANTENIMIENTOSRowDeleted != null)) {
                    this.MANTENIMIENTOSRowDeleted(this, new MANTENIMIENTOSRowChangeEvent(((MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MANTENIMIENTOSRowDeleting != null)) {
                    this.MANTENIMIENTOSRowDeleting(this, new MANTENIMIENTOSRowChangeEvent(((MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMANTENIMIENTOSRow(MANTENIMIENTOSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMantenimiento ds = new dsMantenimiento();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MANTENIMIENTOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PLANES_MANTENIMIENTODataTable : global::System.Data.TypedTableBase<PLANES_MANTENIMIENTORow> {
            
            private global::System.Data.DataColumn columnPMAN_NUMERO;
            
            private global::System.Data.DataColumn columnEPMAN_CODIGO;
            
            private global::System.Data.DataColumn columnPMAN_FECHA;
            
            private global::System.Data.DataColumn columnPMAN_OBSERVACIONES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_MANTENIMIENTODataTable() {
                this.TableName = "PLANES_MANTENIMIENTO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PLANES_MANTENIMIENTODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PLANES_MANTENIMIENTODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PMAN_NUMEROColumn {
                get {
                    return this.columnPMAN_NUMERO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EPMAN_CODIGOColumn {
                get {
                    return this.columnEPMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PMAN_FECHAColumn {
                get {
                    return this.columnPMAN_FECHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PMAN_OBSERVACIONESColumn {
                get {
                    return this.columnPMAN_OBSERVACIONES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_MANTENIMIENTORow this[int index] {
                get {
                    return ((PLANES_MANTENIMIENTORow)(this.Rows[index]));
                }
            }
            
            public event PLANES_MANTENIMIENTORowChangeEventHandler PLANES_MANTENIMIENTORowChanging;
            
            public event PLANES_MANTENIMIENTORowChangeEventHandler PLANES_MANTENIMIENTORowChanged;
            
            public event PLANES_MANTENIMIENTORowChangeEventHandler PLANES_MANTENIMIENTORowDeleting;
            
            public event PLANES_MANTENIMIENTORowChangeEventHandler PLANES_MANTENIMIENTORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPLANES_MANTENIMIENTORow(PLANES_MANTENIMIENTORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_MANTENIMIENTORow AddPLANES_MANTENIMIENTORow(ESTADO_PLANES_MANTENIMIENTORow parentESTADO_PLANES_MANTENIMIENTORowByplanMantenimiento_estadoPlanMantenimiento_fk, System.DateTime PMAN_FECHA, string PMAN_OBSERVACIONES) {
                PLANES_MANTENIMIENTORow rowPLANES_MANTENIMIENTORow = ((PLANES_MANTENIMIENTORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        PMAN_FECHA,
                        PMAN_OBSERVACIONES};
                if ((parentESTADO_PLANES_MANTENIMIENTORowByplanMantenimiento_estadoPlanMantenimiento_fk != null)) {
                    columnValuesArray[1] = parentESTADO_PLANES_MANTENIMIENTORowByplanMantenimiento_estadoPlanMantenimiento_fk[0];
                }
                rowPLANES_MANTENIMIENTORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPLANES_MANTENIMIENTORow);
                return rowPLANES_MANTENIMIENTORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_MANTENIMIENTORow FindByPMAN_NUMERO(decimal PMAN_NUMERO) {
                return ((PLANES_MANTENIMIENTORow)(this.Rows.Find(new object[] {
                            PMAN_NUMERO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PLANES_MANTENIMIENTODataTable cln = ((PLANES_MANTENIMIENTODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PLANES_MANTENIMIENTODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPMAN_NUMERO = base.Columns["PMAN_NUMERO"];
                this.columnEPMAN_CODIGO = base.Columns["EPMAN_CODIGO"];
                this.columnPMAN_FECHA = base.Columns["PMAN_FECHA"];
                this.columnPMAN_OBSERVACIONES = base.Columns["PMAN_OBSERVACIONES"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPMAN_NUMERO = new global::System.Data.DataColumn("PMAN_NUMERO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMAN_NUMERO);
                this.columnEPMAN_CODIGO = new global::System.Data.DataColumn("EPMAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPMAN_CODIGO);
                this.columnPMAN_FECHA = new global::System.Data.DataColumn("PMAN_FECHA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMAN_FECHA);
                this.columnPMAN_OBSERVACIONES = new global::System.Data.DataColumn("PMAN_OBSERVACIONES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMAN_OBSERVACIONES);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPMAN_NUMERO}, true));
                this.columnPMAN_NUMERO.AutoIncrement = true;
                this.columnPMAN_NUMERO.AutoIncrementSeed = -1;
                this.columnPMAN_NUMERO.AutoIncrementStep = -1;
                this.columnPMAN_NUMERO.AllowDBNull = false;
                this.columnPMAN_NUMERO.ReadOnly = true;
                this.columnPMAN_NUMERO.Unique = true;
                this.columnEPMAN_CODIGO.AllowDBNull = false;
                this.columnPMAN_OBSERVACIONES.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_MANTENIMIENTORow NewPLANES_MANTENIMIENTORow() {
                return ((PLANES_MANTENIMIENTORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PLANES_MANTENIMIENTORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PLANES_MANTENIMIENTORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PLANES_MANTENIMIENTORowChanged != null)) {
                    this.PLANES_MANTENIMIENTORowChanged(this, new PLANES_MANTENIMIENTORowChangeEvent(((PLANES_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PLANES_MANTENIMIENTORowChanging != null)) {
                    this.PLANES_MANTENIMIENTORowChanging(this, new PLANES_MANTENIMIENTORowChangeEvent(((PLANES_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PLANES_MANTENIMIENTORowDeleted != null)) {
                    this.PLANES_MANTENIMIENTORowDeleted(this, new PLANES_MANTENIMIENTORowChangeEvent(((PLANES_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PLANES_MANTENIMIENTORowDeleting != null)) {
                    this.PLANES_MANTENIMIENTORowDeleting(this, new PLANES_MANTENIMIENTORowChangeEvent(((PLANES_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePLANES_MANTENIMIENTORow(PLANES_MANTENIMIENTORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMantenimiento ds = new dsMantenimiento();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PLANES_MANTENIMIENTODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ESTADO_PLANES_MANTENIMIENTODataTable : global::System.Data.TypedTableBase<ESTADO_PLANES_MANTENIMIENTORow> {
            
            private global::System.Data.DataColumn columnEPMAN_CODIGO;
            
            private global::System.Data.DataColumn columnEPMAN_NOMBRE;
            
            private global::System.Data.DataColumn columnEPMAN_DESCRIPCION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_PLANES_MANTENIMIENTODataTable() {
                this.TableName = "ESTADO_PLANES_MANTENIMIENTO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ESTADO_PLANES_MANTENIMIENTODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ESTADO_PLANES_MANTENIMIENTODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EPMAN_CODIGOColumn {
                get {
                    return this.columnEPMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EPMAN_NOMBREColumn {
                get {
                    return this.columnEPMAN_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EPMAN_DESCRIPCIONColumn {
                get {
                    return this.columnEPMAN_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_PLANES_MANTENIMIENTORow this[int index] {
                get {
                    return ((ESTADO_PLANES_MANTENIMIENTORow)(this.Rows[index]));
                }
            }
            
            public event ESTADO_PLANES_MANTENIMIENTORowChangeEventHandler ESTADO_PLANES_MANTENIMIENTORowChanging;
            
            public event ESTADO_PLANES_MANTENIMIENTORowChangeEventHandler ESTADO_PLANES_MANTENIMIENTORowChanged;
            
            public event ESTADO_PLANES_MANTENIMIENTORowChangeEventHandler ESTADO_PLANES_MANTENIMIENTORowDeleting;
            
            public event ESTADO_PLANES_MANTENIMIENTORowChangeEventHandler ESTADO_PLANES_MANTENIMIENTORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddESTADO_PLANES_MANTENIMIENTORow(ESTADO_PLANES_MANTENIMIENTORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_PLANES_MANTENIMIENTORow AddESTADO_PLANES_MANTENIMIENTORow(string EPMAN_NOMBRE, string EPMAN_DESCRIPCION) {
                ESTADO_PLANES_MANTENIMIENTORow rowESTADO_PLANES_MANTENIMIENTORow = ((ESTADO_PLANES_MANTENIMIENTORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EPMAN_NOMBRE,
                        EPMAN_DESCRIPCION};
                rowESTADO_PLANES_MANTENIMIENTORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowESTADO_PLANES_MANTENIMIENTORow);
                return rowESTADO_PLANES_MANTENIMIENTORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_PLANES_MANTENIMIENTORow FindByEPMAN_CODIGO(decimal EPMAN_CODIGO) {
                return ((ESTADO_PLANES_MANTENIMIENTORow)(this.Rows.Find(new object[] {
                            EPMAN_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ESTADO_PLANES_MANTENIMIENTODataTable cln = ((ESTADO_PLANES_MANTENIMIENTODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ESTADO_PLANES_MANTENIMIENTODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEPMAN_CODIGO = base.Columns["EPMAN_CODIGO"];
                this.columnEPMAN_NOMBRE = base.Columns["EPMAN_NOMBRE"];
                this.columnEPMAN_DESCRIPCION = base.Columns["EPMAN_DESCRIPCION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEPMAN_CODIGO = new global::System.Data.DataColumn("EPMAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPMAN_CODIGO);
                this.columnEPMAN_NOMBRE = new global::System.Data.DataColumn("EPMAN_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPMAN_NOMBRE);
                this.columnEPMAN_DESCRIPCION = new global::System.Data.DataColumn("EPMAN_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPMAN_DESCRIPCION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEPMAN_CODIGO}, true));
                this.columnEPMAN_CODIGO.AutoIncrement = true;
                this.columnEPMAN_CODIGO.AutoIncrementSeed = -1;
                this.columnEPMAN_CODIGO.AutoIncrementStep = -1;
                this.columnEPMAN_CODIGO.AllowDBNull = false;
                this.columnEPMAN_CODIGO.ReadOnly = true;
                this.columnEPMAN_CODIGO.Unique = true;
                this.columnEPMAN_NOMBRE.MaxLength = 80;
                this.columnEPMAN_DESCRIPCION.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_PLANES_MANTENIMIENTORow NewESTADO_PLANES_MANTENIMIENTORow() {
                return ((ESTADO_PLANES_MANTENIMIENTORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ESTADO_PLANES_MANTENIMIENTORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ESTADO_PLANES_MANTENIMIENTORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ESTADO_PLANES_MANTENIMIENTORowChanged != null)) {
                    this.ESTADO_PLANES_MANTENIMIENTORowChanged(this, new ESTADO_PLANES_MANTENIMIENTORowChangeEvent(((ESTADO_PLANES_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ESTADO_PLANES_MANTENIMIENTORowChanging != null)) {
                    this.ESTADO_PLANES_MANTENIMIENTORowChanging(this, new ESTADO_PLANES_MANTENIMIENTORowChangeEvent(((ESTADO_PLANES_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ESTADO_PLANES_MANTENIMIENTORowDeleted != null)) {
                    this.ESTADO_PLANES_MANTENIMIENTORowDeleted(this, new ESTADO_PLANES_MANTENIMIENTORowChangeEvent(((ESTADO_PLANES_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ESTADO_PLANES_MANTENIMIENTORowDeleting != null)) {
                    this.ESTADO_PLANES_MANTENIMIENTORowDeleting(this, new ESTADO_PLANES_MANTENIMIENTORowChangeEvent(((ESTADO_PLANES_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveESTADO_PLANES_MANTENIMIENTORow(ESTADO_PLANES_MANTENIMIENTORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMantenimiento ds = new dsMantenimiento();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ESTADO_PLANES_MANTENIMIENTODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DETALLE_PLANES_MANTENIMIENTODataTable : global::System.Data.TypedTableBase<DETALLE_PLANES_MANTENIMIENTORow> {
            
            private global::System.Data.DataColumn columnDPMAN_CODIGO;
            
            private global::System.Data.DataColumn columnMAQ_CODIGO;
            
            private global::System.Data.DataColumn columnPMAN_NUMERO;
            
            private global::System.Data.DataColumn columnEDMAN_CODIGO;
            
            private global::System.Data.DataColumn columnCF_NUMERO;
            
            private global::System.Data.DataColumn columnE_CODIGO;
            
            private global::System.Data.DataColumn columnREP_CODIGO;
            
            private global::System.Data.DataColumn columnMAN_CODIGO;
            
            private global::System.Data.DataColumn columnDPMAN_FECHAREALIZACIONPREVISTA;
            
            private global::System.Data.DataColumn columnDPMAN_FECHAREALIZACIONREAL;
            
            private global::System.Data.DataColumn columnDPMAN_OBSERVACIONES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTODataTable() {
                this.TableName = "DETALLE_PLANES_MANTENIMIENTO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DETALLE_PLANES_MANTENIMIENTODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DETALLE_PLANES_MANTENIMIENTODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DPMAN_CODIGOColumn {
                get {
                    return this.columnDPMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAQ_CODIGOColumn {
                get {
                    return this.columnMAQ_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PMAN_NUMEROColumn {
                get {
                    return this.columnPMAN_NUMERO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EDMAN_CODIGOColumn {
                get {
                    return this.columnEDMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CF_NUMEROColumn {
                get {
                    return this.columnCF_NUMERO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_CODIGOColumn {
                get {
                    return this.columnE_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REP_CODIGOColumn {
                get {
                    return this.columnREP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAN_CODIGOColumn {
                get {
                    return this.columnMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DPMAN_FECHAREALIZACIONPREVISTAColumn {
                get {
                    return this.columnDPMAN_FECHAREALIZACIONPREVISTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DPMAN_FECHAREALIZACIONREALColumn {
                get {
                    return this.columnDPMAN_FECHAREALIZACIONREAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DPMAN_OBSERVACIONESColumn {
                get {
                    return this.columnDPMAN_OBSERVACIONES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTORow this[int index] {
                get {
                    return ((DETALLE_PLANES_MANTENIMIENTORow)(this.Rows[index]));
                }
            }
            
            public event DETALLE_PLANES_MANTENIMIENTORowChangeEventHandler DETALLE_PLANES_MANTENIMIENTORowChanging;
            
            public event DETALLE_PLANES_MANTENIMIENTORowChangeEventHandler DETALLE_PLANES_MANTENIMIENTORowChanged;
            
            public event DETALLE_PLANES_MANTENIMIENTORowChangeEventHandler DETALLE_PLANES_MANTENIMIENTORowDeleting;
            
            public event DETALLE_PLANES_MANTENIMIENTORowChangeEventHandler DETALLE_PLANES_MANTENIMIENTORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDETALLE_PLANES_MANTENIMIENTORow(DETALLE_PLANES_MANTENIMIENTORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTORow AddDETALLE_PLANES_MANTENIMIENTORow(decimal MAQ_CODIGO, PLANES_MANTENIMIENTORow parentPLANES_MANTENIMIENTORowBydetallePlanMantenimiento_planMantenimiento_fk, decimal EDMAN_CODIGO, decimal CF_NUMERO, decimal E_CODIGO, decimal REP_CODIGO, MANTENIMIENTOSRow parentMANTENIMIENTOSRowBydetallePlanMantenimiento_mantenimiento_fk, System.DateTime DPMAN_FECHAREALIZACIONPREVISTA, System.DateTime DPMAN_FECHAREALIZACIONREAL, string DPMAN_OBSERVACIONES) {
                DETALLE_PLANES_MANTENIMIENTORow rowDETALLE_PLANES_MANTENIMIENTORow = ((DETALLE_PLANES_MANTENIMIENTORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MAQ_CODIGO,
                        null,
                        EDMAN_CODIGO,
                        CF_NUMERO,
                        E_CODIGO,
                        REP_CODIGO,
                        null,
                        DPMAN_FECHAREALIZACIONPREVISTA,
                        DPMAN_FECHAREALIZACIONREAL,
                        DPMAN_OBSERVACIONES};
                if ((parentPLANES_MANTENIMIENTORowBydetallePlanMantenimiento_planMantenimiento_fk != null)) {
                    columnValuesArray[2] = parentPLANES_MANTENIMIENTORowBydetallePlanMantenimiento_planMantenimiento_fk[0];
                }
                if ((parentMANTENIMIENTOSRowBydetallePlanMantenimiento_mantenimiento_fk != null)) {
                    columnValuesArray[7] = parentMANTENIMIENTOSRowBydetallePlanMantenimiento_mantenimiento_fk[0];
                }
                rowDETALLE_PLANES_MANTENIMIENTORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDETALLE_PLANES_MANTENIMIENTORow);
                return rowDETALLE_PLANES_MANTENIMIENTORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTORow FindByDPMAN_CODIGO(decimal DPMAN_CODIGO) {
                return ((DETALLE_PLANES_MANTENIMIENTORow)(this.Rows.Find(new object[] {
                            DPMAN_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DETALLE_PLANES_MANTENIMIENTODataTable cln = ((DETALLE_PLANES_MANTENIMIENTODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DETALLE_PLANES_MANTENIMIENTODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDPMAN_CODIGO = base.Columns["DPMAN_CODIGO"];
                this.columnMAQ_CODIGO = base.Columns["MAQ_CODIGO"];
                this.columnPMAN_NUMERO = base.Columns["PMAN_NUMERO"];
                this.columnEDMAN_CODIGO = base.Columns["EDMAN_CODIGO"];
                this.columnCF_NUMERO = base.Columns["CF_NUMERO"];
                this.columnE_CODIGO = base.Columns["E_CODIGO"];
                this.columnREP_CODIGO = base.Columns["REP_CODIGO"];
                this.columnMAN_CODIGO = base.Columns["MAN_CODIGO"];
                this.columnDPMAN_FECHAREALIZACIONPREVISTA = base.Columns["DPMAN_FECHAREALIZACIONPREVISTA"];
                this.columnDPMAN_FECHAREALIZACIONREAL = base.Columns["DPMAN_FECHAREALIZACIONREAL"];
                this.columnDPMAN_OBSERVACIONES = base.Columns["DPMAN_OBSERVACIONES"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDPMAN_CODIGO = new global::System.Data.DataColumn("DPMAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPMAN_CODIGO);
                this.columnMAQ_CODIGO = new global::System.Data.DataColumn("MAQ_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAQ_CODIGO);
                this.columnPMAN_NUMERO = new global::System.Data.DataColumn("PMAN_NUMERO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMAN_NUMERO);
                this.columnEDMAN_CODIGO = new global::System.Data.DataColumn("EDMAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDMAN_CODIGO);
                this.columnCF_NUMERO = new global::System.Data.DataColumn("CF_NUMERO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCF_NUMERO);
                this.columnE_CODIGO = new global::System.Data.DataColumn("E_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_CODIGO);
                this.columnREP_CODIGO = new global::System.Data.DataColumn("REP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREP_CODIGO);
                this.columnMAN_CODIGO = new global::System.Data.DataColumn("MAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAN_CODIGO);
                this.columnDPMAN_FECHAREALIZACIONPREVISTA = new global::System.Data.DataColumn("DPMAN_FECHAREALIZACIONPREVISTA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPMAN_FECHAREALIZACIONPREVISTA);
                this.columnDPMAN_FECHAREALIZACIONREAL = new global::System.Data.DataColumn("DPMAN_FECHAREALIZACIONREAL", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPMAN_FECHAREALIZACIONREAL);
                this.columnDPMAN_OBSERVACIONES = new global::System.Data.DataColumn("DPMAN_OBSERVACIONES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPMAN_OBSERVACIONES);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDPMAN_CODIGO}, true));
                this.columnDPMAN_CODIGO.AutoIncrement = true;
                this.columnDPMAN_CODIGO.AutoIncrementSeed = -1;
                this.columnDPMAN_CODIGO.AutoIncrementStep = -1;
                this.columnDPMAN_CODIGO.AllowDBNull = false;
                this.columnDPMAN_CODIGO.ReadOnly = true;
                this.columnDPMAN_CODIGO.Unique = true;
                this.columnMAQ_CODIGO.AllowDBNull = false;
                this.columnPMAN_NUMERO.AllowDBNull = false;
                this.columnEDMAN_CODIGO.AllowDBNull = false;
                this.columnE_CODIGO.AllowDBNull = false;
                this.columnMAN_CODIGO.AllowDBNull = false;
                this.columnDPMAN_OBSERVACIONES.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTORow NewDETALLE_PLANES_MANTENIMIENTORow() {
                return ((DETALLE_PLANES_MANTENIMIENTORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DETALLE_PLANES_MANTENIMIENTORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DETALLE_PLANES_MANTENIMIENTORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DETALLE_PLANES_MANTENIMIENTORowChanged != null)) {
                    this.DETALLE_PLANES_MANTENIMIENTORowChanged(this, new DETALLE_PLANES_MANTENIMIENTORowChangeEvent(((DETALLE_PLANES_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DETALLE_PLANES_MANTENIMIENTORowChanging != null)) {
                    this.DETALLE_PLANES_MANTENIMIENTORowChanging(this, new DETALLE_PLANES_MANTENIMIENTORowChangeEvent(((DETALLE_PLANES_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DETALLE_PLANES_MANTENIMIENTORowDeleted != null)) {
                    this.DETALLE_PLANES_MANTENIMIENTORowDeleted(this, new DETALLE_PLANES_MANTENIMIENTORowChangeEvent(((DETALLE_PLANES_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DETALLE_PLANES_MANTENIMIENTORowDeleting != null)) {
                    this.DETALLE_PLANES_MANTENIMIENTORowDeleting(this, new DETALLE_PLANES_MANTENIMIENTORowChangeEvent(((DETALLE_PLANES_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDETALLE_PLANES_MANTENIMIENTORow(DETALLE_PLANES_MANTENIMIENTORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMantenimiento ds = new dsMantenimiento();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DETALLE_PLANES_MANTENIMIENTODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TIPOS_MANTENIMIENTOSDataTable : global::System.Data.TypedTableBase<TIPOS_MANTENIMIENTOSRow> {
            
            private global::System.Data.DataColumn columnTMAN_CODIGO;
            
            private global::System.Data.DataColumn columnTMAN_NOMBRE;
            
            private global::System.Data.DataColumn columnTMAN_DESCRIPCION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_MANTENIMIENTOSDataTable() {
                this.TableName = "TIPOS_MANTENIMIENTOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TIPOS_MANTENIMIENTOSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TIPOS_MANTENIMIENTOSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TMAN_CODIGOColumn {
                get {
                    return this.columnTMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TMAN_NOMBREColumn {
                get {
                    return this.columnTMAN_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TMAN_DESCRIPCIONColumn {
                get {
                    return this.columnTMAN_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_MANTENIMIENTOSRow this[int index] {
                get {
                    return ((TIPOS_MANTENIMIENTOSRow)(this.Rows[index]));
                }
            }
            
            public event TIPOS_MANTENIMIENTOSRowChangeEventHandler TIPOS_MANTENIMIENTOSRowChanging;
            
            public event TIPOS_MANTENIMIENTOSRowChangeEventHandler TIPOS_MANTENIMIENTOSRowChanged;
            
            public event TIPOS_MANTENIMIENTOSRowChangeEventHandler TIPOS_MANTENIMIENTOSRowDeleting;
            
            public event TIPOS_MANTENIMIENTOSRowChangeEventHandler TIPOS_MANTENIMIENTOSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTIPOS_MANTENIMIENTOSRow(TIPOS_MANTENIMIENTOSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_MANTENIMIENTOSRow AddTIPOS_MANTENIMIENTOSRow(string TMAN_NOMBRE, string TMAN_DESCRIPCION) {
                TIPOS_MANTENIMIENTOSRow rowTIPOS_MANTENIMIENTOSRow = ((TIPOS_MANTENIMIENTOSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TMAN_NOMBRE,
                        TMAN_DESCRIPCION};
                rowTIPOS_MANTENIMIENTOSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTIPOS_MANTENIMIENTOSRow);
                return rowTIPOS_MANTENIMIENTOSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_MANTENIMIENTOSRow FindByTMAN_CODIGO(decimal TMAN_CODIGO) {
                return ((TIPOS_MANTENIMIENTOSRow)(this.Rows.Find(new object[] {
                            TMAN_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TIPOS_MANTENIMIENTOSDataTable cln = ((TIPOS_MANTENIMIENTOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TIPOS_MANTENIMIENTOSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTMAN_CODIGO = base.Columns["TMAN_CODIGO"];
                this.columnTMAN_NOMBRE = base.Columns["TMAN_NOMBRE"];
                this.columnTMAN_DESCRIPCION = base.Columns["TMAN_DESCRIPCION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTMAN_CODIGO = new global::System.Data.DataColumn("TMAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTMAN_CODIGO);
                this.columnTMAN_NOMBRE = new global::System.Data.DataColumn("TMAN_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTMAN_NOMBRE);
                this.columnTMAN_DESCRIPCION = new global::System.Data.DataColumn("TMAN_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTMAN_DESCRIPCION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTMAN_CODIGO}, true));
                this.columnTMAN_CODIGO.AutoIncrement = true;
                this.columnTMAN_CODIGO.AutoIncrementSeed = -1;
                this.columnTMAN_CODIGO.AutoIncrementStep = -1;
                this.columnTMAN_CODIGO.AllowDBNull = false;
                this.columnTMAN_CODIGO.ReadOnly = true;
                this.columnTMAN_CODIGO.Unique = true;
                this.columnTMAN_NOMBRE.MaxLength = 80;
                this.columnTMAN_DESCRIPCION.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_MANTENIMIENTOSRow NewTIPOS_MANTENIMIENTOSRow() {
                return ((TIPOS_MANTENIMIENTOSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TIPOS_MANTENIMIENTOSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TIPOS_MANTENIMIENTOSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TIPOS_MANTENIMIENTOSRowChanged != null)) {
                    this.TIPOS_MANTENIMIENTOSRowChanged(this, new TIPOS_MANTENIMIENTOSRowChangeEvent(((TIPOS_MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TIPOS_MANTENIMIENTOSRowChanging != null)) {
                    this.TIPOS_MANTENIMIENTOSRowChanging(this, new TIPOS_MANTENIMIENTOSRowChangeEvent(((TIPOS_MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TIPOS_MANTENIMIENTOSRowDeleted != null)) {
                    this.TIPOS_MANTENIMIENTOSRowDeleted(this, new TIPOS_MANTENIMIENTOSRowChangeEvent(((TIPOS_MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TIPOS_MANTENIMIENTOSRowDeleting != null)) {
                    this.TIPOS_MANTENIMIENTOSRowDeleting(this, new TIPOS_MANTENIMIENTOSRowChangeEvent(((TIPOS_MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTIPOS_MANTENIMIENTOSRow(TIPOS_MANTENIMIENTOSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMantenimiento ds = new dsMantenimiento();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TIPOS_MANTENIMIENTOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MANTENIMIENTOSRow : global::System.Data.DataRow {
            
            private MANTENIMIENTOSDataTable tableMANTENIMIENTOS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MANTENIMIENTOSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMANTENIMIENTOS = ((MANTENIMIENTOSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MAN_CODIGO {
                get {
                    return ((decimal)(this[this.tableMANTENIMIENTOS.MAN_CODIGOColumn]));
                }
                set {
                    this[this.tableMANTENIMIENTOS.MAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TMAN_CODIGO {
                get {
                    return ((decimal)(this[this.tableMANTENIMIENTOS.TMAN_CODIGOColumn]));
                }
                set {
                    this[this.tableMANTENIMIENTOS.TMAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAN_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableMANTENIMIENTOS.MAN_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAN_NOMBRE\' in table \'MANTENIMIENTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMANTENIMIENTOS.MAN_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAN_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableMANTENIMIENTOS.MAN_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAN_DESCRIPCION\' in table \'MANTENIMIENTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMANTENIMIENTOS.MAN_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_MANTENIMIENTOSRow TIPOS_MANTENIMIENTOSRow {
                get {
                    return ((TIPOS_MANTENIMIENTOSRow)(this.GetParentRow(this.Table.ParentRelations["mantenimiento_tipoMantenimiento_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["mantenimiento_tipoMantenimiento_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAN_NOMBRENull() {
                return this.IsNull(this.tableMANTENIMIENTOS.MAN_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAN_NOMBRENull() {
                this[this.tableMANTENIMIENTOS.MAN_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAN_DESCRIPCIONNull() {
                return this.IsNull(this.tableMANTENIMIENTOS.MAN_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAN_DESCRIPCIONNull() {
                this[this.tableMANTENIMIENTOS.MAN_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTORow[] GetDETALLE_PLANES_MANTENIMIENTORows() {
                if ((this.Table.ChildRelations["detallePlanMantenimiento_mantenimiento_fk"] == null)) {
                    return new DETALLE_PLANES_MANTENIMIENTORow[0];
                }
                else {
                    return ((DETALLE_PLANES_MANTENIMIENTORow[])(base.GetChildRows(this.Table.ChildRelations["detallePlanMantenimiento_mantenimiento_fk"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PLANES_MANTENIMIENTORow : global::System.Data.DataRow {
            
            private PLANES_MANTENIMIENTODataTable tablePLANES_MANTENIMIENTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PLANES_MANTENIMIENTORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePLANES_MANTENIMIENTO = ((PLANES_MANTENIMIENTODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PMAN_NUMERO {
                get {
                    return ((decimal)(this[this.tablePLANES_MANTENIMIENTO.PMAN_NUMEROColumn]));
                }
                set {
                    this[this.tablePLANES_MANTENIMIENTO.PMAN_NUMEROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EPMAN_CODIGO {
                get {
                    return ((decimal)(this[this.tablePLANES_MANTENIMIENTO.EPMAN_CODIGOColumn]));
                }
                set {
                    this[this.tablePLANES_MANTENIMIENTO.EPMAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PMAN_FECHA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePLANES_MANTENIMIENTO.PMAN_FECHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PMAN_FECHA\' in table \'PLANES_MANTENIMIENTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLANES_MANTENIMIENTO.PMAN_FECHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PMAN_OBSERVACIONES {
                get {
                    try {
                        return ((string)(this[this.tablePLANES_MANTENIMIENTO.PMAN_OBSERVACIONESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PMAN_OBSERVACIONES\' in table \'PLANES_MANTENIMIENTO\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePLANES_MANTENIMIENTO.PMAN_OBSERVACIONESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_PLANES_MANTENIMIENTORow ESTADO_PLANES_MANTENIMIENTORow {
                get {
                    return ((ESTADO_PLANES_MANTENIMIENTORow)(this.GetParentRow(this.Table.ParentRelations["planMantenimiento_estadoPlanMantenimiento_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["planMantenimiento_estadoPlanMantenimiento_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPMAN_FECHANull() {
                return this.IsNull(this.tablePLANES_MANTENIMIENTO.PMAN_FECHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPMAN_FECHANull() {
                this[this.tablePLANES_MANTENIMIENTO.PMAN_FECHAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPMAN_OBSERVACIONESNull() {
                return this.IsNull(this.tablePLANES_MANTENIMIENTO.PMAN_OBSERVACIONESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPMAN_OBSERVACIONESNull() {
                this[this.tablePLANES_MANTENIMIENTO.PMAN_OBSERVACIONESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTORow[] GetDETALLE_PLANES_MANTENIMIENTORows() {
                if ((this.Table.ChildRelations["detallePlanMantenimiento_planMantenimiento_fk"] == null)) {
                    return new DETALLE_PLANES_MANTENIMIENTORow[0];
                }
                else {
                    return ((DETALLE_PLANES_MANTENIMIENTORow[])(base.GetChildRows(this.Table.ChildRelations["detallePlanMantenimiento_planMantenimiento_fk"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ESTADO_PLANES_MANTENIMIENTORow : global::System.Data.DataRow {
            
            private ESTADO_PLANES_MANTENIMIENTODataTable tableESTADO_PLANES_MANTENIMIENTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ESTADO_PLANES_MANTENIMIENTORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableESTADO_PLANES_MANTENIMIENTO = ((ESTADO_PLANES_MANTENIMIENTODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EPMAN_CODIGO {
                get {
                    return ((decimal)(this[this.tableESTADO_PLANES_MANTENIMIENTO.EPMAN_CODIGOColumn]));
                }
                set {
                    this[this.tableESTADO_PLANES_MANTENIMIENTO.EPMAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EPMAN_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableESTADO_PLANES_MANTENIMIENTO.EPMAN_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EPMAN_NOMBRE\' in table \'ESTADO_PLANES_MANTENIMIENTO\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableESTADO_PLANES_MANTENIMIENTO.EPMAN_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EPMAN_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableESTADO_PLANES_MANTENIMIENTO.EPMAN_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EPMAN_DESCRIPCION\' in table \'ESTADO_PLANES_MANTENIMIENTO\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableESTADO_PLANES_MANTENIMIENTO.EPMAN_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEPMAN_NOMBRENull() {
                return this.IsNull(this.tableESTADO_PLANES_MANTENIMIENTO.EPMAN_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEPMAN_NOMBRENull() {
                this[this.tableESTADO_PLANES_MANTENIMIENTO.EPMAN_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEPMAN_DESCRIPCIONNull() {
                return this.IsNull(this.tableESTADO_PLANES_MANTENIMIENTO.EPMAN_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEPMAN_DESCRIPCIONNull() {
                this[this.tableESTADO_PLANES_MANTENIMIENTO.EPMAN_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_MANTENIMIENTORow[] GetPLANES_MANTENIMIENTORows() {
                if ((this.Table.ChildRelations["planMantenimiento_estadoPlanMantenimiento_fk"] == null)) {
                    return new PLANES_MANTENIMIENTORow[0];
                }
                else {
                    return ((PLANES_MANTENIMIENTORow[])(base.GetChildRows(this.Table.ChildRelations["planMantenimiento_estadoPlanMantenimiento_fk"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DETALLE_PLANES_MANTENIMIENTORow : global::System.Data.DataRow {
            
            private DETALLE_PLANES_MANTENIMIENTODataTable tableDETALLE_PLANES_MANTENIMIENTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DETALLE_PLANES_MANTENIMIENTORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDETALLE_PLANES_MANTENIMIENTO = ((DETALLE_PLANES_MANTENIMIENTODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DPMAN_CODIGO {
                get {
                    return ((decimal)(this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_CODIGOColumn]));
                }
                set {
                    this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MAQ_CODIGO {
                get {
                    return ((decimal)(this[this.tableDETALLE_PLANES_MANTENIMIENTO.MAQ_CODIGOColumn]));
                }
                set {
                    this[this.tableDETALLE_PLANES_MANTENIMIENTO.MAQ_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PMAN_NUMERO {
                get {
                    return ((decimal)(this[this.tableDETALLE_PLANES_MANTENIMIENTO.PMAN_NUMEROColumn]));
                }
                set {
                    this[this.tableDETALLE_PLANES_MANTENIMIENTO.PMAN_NUMEROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EDMAN_CODIGO {
                get {
                    return ((decimal)(this[this.tableDETALLE_PLANES_MANTENIMIENTO.EDMAN_CODIGOColumn]));
                }
                set {
                    this[this.tableDETALLE_PLANES_MANTENIMIENTO.EDMAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CF_NUMERO {
                get {
                    try {
                        return ((decimal)(this[this.tableDETALLE_PLANES_MANTENIMIENTO.CF_NUMEROColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CF_NUMERO\' in table \'DETALLE_PLANES_MANTENIMIENTO\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDETALLE_PLANES_MANTENIMIENTO.CF_NUMEROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal E_CODIGO {
                get {
                    return ((decimal)(this[this.tableDETALLE_PLANES_MANTENIMIENTO.E_CODIGOColumn]));
                }
                set {
                    this[this.tableDETALLE_PLANES_MANTENIMIENTO.E_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REP_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableDETALLE_PLANES_MANTENIMIENTO.REP_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REP_CODIGO\' in table \'DETALLE_PLANES_MANTENIMIENTO\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDETALLE_PLANES_MANTENIMIENTO.REP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MAN_CODIGO {
                get {
                    return ((decimal)(this[this.tableDETALLE_PLANES_MANTENIMIENTO.MAN_CODIGOColumn]));
                }
                set {
                    this[this.tableDETALLE_PLANES_MANTENIMIENTO.MAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DPMAN_FECHAREALIZACIONPREVISTA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_FECHAREALIZACIONPREVISTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DPMAN_FECHAREALIZACIONPREVISTA\' in table \'DETALLE_PLANES_MA" +
                                "NTENIMIENTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_FECHAREALIZACIONPREVISTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DPMAN_FECHAREALIZACIONREAL {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_FECHAREALIZACIONREALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DPMAN_FECHAREALIZACIONREAL\' in table \'DETALLE_PLANES_MANTEN" +
                                "IMIENTO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_FECHAREALIZACIONREALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DPMAN_OBSERVACIONES {
                get {
                    try {
                        return ((string)(this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_OBSERVACIONESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DPMAN_OBSERVACIONES\' in table \'DETALLE_PLANES_MANTENIMIENTO" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_OBSERVACIONESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MANTENIMIENTOSRow MANTENIMIENTOSRow {
                get {
                    return ((MANTENIMIENTOSRow)(this.GetParentRow(this.Table.ParentRelations["detallePlanMantenimiento_mantenimiento_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["detallePlanMantenimiento_mantenimiento_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_MANTENIMIENTORow PLANES_MANTENIMIENTORow {
                get {
                    return ((PLANES_MANTENIMIENTORow)(this.GetParentRow(this.Table.ParentRelations["detallePlanMantenimiento_planMantenimiento_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["detallePlanMantenimiento_planMantenimiento_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCF_NUMERONull() {
                return this.IsNull(this.tableDETALLE_PLANES_MANTENIMIENTO.CF_NUMEROColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCF_NUMERONull() {
                this[this.tableDETALLE_PLANES_MANTENIMIENTO.CF_NUMEROColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREP_CODIGONull() {
                return this.IsNull(this.tableDETALLE_PLANES_MANTENIMIENTO.REP_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREP_CODIGONull() {
                this[this.tableDETALLE_PLANES_MANTENIMIENTO.REP_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDPMAN_FECHAREALIZACIONPREVISTANull() {
                return this.IsNull(this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_FECHAREALIZACIONPREVISTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDPMAN_FECHAREALIZACIONPREVISTANull() {
                this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_FECHAREALIZACIONPREVISTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDPMAN_FECHAREALIZACIONREALNull() {
                return this.IsNull(this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_FECHAREALIZACIONREALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDPMAN_FECHAREALIZACIONREALNull() {
                this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_FECHAREALIZACIONREALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDPMAN_OBSERVACIONESNull() {
                return this.IsNull(this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_OBSERVACIONESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDPMAN_OBSERVACIONESNull() {
                this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_OBSERVACIONESColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TIPOS_MANTENIMIENTOSRow : global::System.Data.DataRow {
            
            private TIPOS_MANTENIMIENTOSDataTable tableTIPOS_MANTENIMIENTOS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TIPOS_MANTENIMIENTOSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTIPOS_MANTENIMIENTOS = ((TIPOS_MANTENIMIENTOSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TMAN_CODIGO {
                get {
                    return ((decimal)(this[this.tableTIPOS_MANTENIMIENTOS.TMAN_CODIGOColumn]));
                }
                set {
                    this[this.tableTIPOS_MANTENIMIENTOS.TMAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TMAN_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableTIPOS_MANTENIMIENTOS.TMAN_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TMAN_NOMBRE\' in table \'TIPOS_MANTENIMIENTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTIPOS_MANTENIMIENTOS.TMAN_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TMAN_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableTIPOS_MANTENIMIENTOS.TMAN_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TMAN_DESCRIPCION\' in table \'TIPOS_MANTENIMIENTOS\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTIPOS_MANTENIMIENTOS.TMAN_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTMAN_NOMBRENull() {
                return this.IsNull(this.tableTIPOS_MANTENIMIENTOS.TMAN_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTMAN_NOMBRENull() {
                this[this.tableTIPOS_MANTENIMIENTOS.TMAN_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTMAN_DESCRIPCIONNull() {
                return this.IsNull(this.tableTIPOS_MANTENIMIENTOS.TMAN_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTMAN_DESCRIPCIONNull() {
                this[this.tableTIPOS_MANTENIMIENTOS.TMAN_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MANTENIMIENTOSRow[] GetMANTENIMIENTOSRows() {
                if ((this.Table.ChildRelations["mantenimiento_tipoMantenimiento_fk"] == null)) {
                    return new MANTENIMIENTOSRow[0];
                }
                else {
                    return ((MANTENIMIENTOSRow[])(base.GetChildRows(this.Table.ChildRelations["mantenimiento_tipoMantenimiento_fk"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MANTENIMIENTOSRowChangeEvent : global::System.EventArgs {
            
            private MANTENIMIENTOSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MANTENIMIENTOSRowChangeEvent(MANTENIMIENTOSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MANTENIMIENTOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PLANES_MANTENIMIENTORowChangeEvent : global::System.EventArgs {
            
            private PLANES_MANTENIMIENTORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_MANTENIMIENTORowChangeEvent(PLANES_MANTENIMIENTORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_MANTENIMIENTORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ESTADO_PLANES_MANTENIMIENTORowChangeEvent : global::System.EventArgs {
            
            private ESTADO_PLANES_MANTENIMIENTORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_PLANES_MANTENIMIENTORowChangeEvent(ESTADO_PLANES_MANTENIMIENTORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_PLANES_MANTENIMIENTORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DETALLE_PLANES_MANTENIMIENTORowChangeEvent : global::System.EventArgs {
            
            private DETALLE_PLANES_MANTENIMIENTORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTORowChangeEvent(DETALLE_PLANES_MANTENIMIENTORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TIPOS_MANTENIMIENTOSRowChangeEvent : global::System.EventArgs {
            
            private TIPOS_MANTENIMIENTOSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_MANTENIMIENTOSRowChangeEvent(TIPOS_MANTENIMIENTOSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_MANTENIMIENTOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GyCAP.Data.dsMantenimientoTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MANTENIMIENTOSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MANTENIMIENTOSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MANTENIMIENTOS";
            tableMapping.ColumnMappings.Add("MAN_CODIGO", "MAN_CODIGO");
            tableMapping.ColumnMappings.Add("TMAN_CODIGO", "TMAN_CODIGO");
            tableMapping.ColumnMappings.Add("MAN_NOMBRE", "MAN_NOMBRE");
            tableMapping.ColumnMappings.Add("MAN_DESCRIPCION", "MAN_DESCRIPCION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[MANTENIMIENTOS] WHERE (([MAN_CODIGO] = @Original_MAN_CODIGO) AND ([TMAN_CODIGO] = @Original_TMAN_CODIGO) AND ((@IsNull_MAN_NOMBRE = 1 AND [MAN_NOMBRE] IS NULL) OR ([MAN_NOMBRE] = @Original_MAN_NOMBRE)) AND ((@IsNull_MAN_DESCRIPCION = 1 AND [MAN_DESCRIPCION] IS NULL) OR ([MAN_DESCRIPCION] = @Original_MAN_DESCRIPCION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAN_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAN_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[MANTENIMIENTOS] ([TMAN_CODIGO], [MAN_NOMBRE], [MAN_DESCRIPCION]) VALUES (@TMAN_CODIGO, @MAN_NOMBRE, @MAN_DESCRIPCION);
SELECT MAN_CODIGO, TMAN_CODIGO, MAN_NOMBRE, MAN_DESCRIPCION FROM MANTENIMIENTOS WHERE (MAN_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[MANTENIMIENTOS] SET [TMAN_CODIGO] = @TMAN_CODIGO, [MAN_NOMBRE] = @MAN_NOMBRE, [MAN_DESCRIPCION] = @MAN_DESCRIPCION WHERE (([MAN_CODIGO] = @Original_MAN_CODIGO) AND ([TMAN_CODIGO] = @Original_TMAN_CODIGO) AND ((@IsNull_MAN_NOMBRE = 1 AND [MAN_NOMBRE] IS NULL) OR ([MAN_NOMBRE] = @Original_MAN_NOMBRE)) AND ((@IsNull_MAN_DESCRIPCION = 1 AND [MAN_DESCRIPCION] IS NULL) OR ([MAN_DESCRIPCION] = @Original_MAN_DESCRIPCION)));
SELECT MAN_CODIGO, TMAN_CODIGO, MAN_NOMBRE, MAN_DESCRIPCION FROM MANTENIMIENTOS WHERE (MAN_CODIGO = @MAN_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAN_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAN_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAN_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MAN_CODIGO, TMAN_CODIGO, MAN_NOMBRE, MAN_DESCRIPCION FROM dbo.MANTENIMIENT" +
                "OS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsMantenimiento.MANTENIMIENTOSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsMantenimiento.MANTENIMIENTOSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsMantenimiento.MANTENIMIENTOSDataTable dataTable = new dsMantenimiento.MANTENIMIENTOSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsMantenimiento.MANTENIMIENTOSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsMantenimiento dataSet) {
            return this.Adapter.Update(dataSet, "MANTENIMIENTOS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_MAN_CODIGO, decimal Original_TMAN_CODIGO, string Original_MAN_NOMBRE, string Original_MAN_DESCRIPCION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_MAN_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_TMAN_CODIGO));
            if ((Original_MAN_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_MAN_NOMBRE));
            }
            if ((Original_MAN_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_MAN_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal TMAN_CODIGO, string MAN_NOMBRE, string MAN_DESCRIPCION) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(TMAN_CODIGO));
            if ((MAN_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MAN_NOMBRE));
            }
            if ((MAN_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MAN_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal TMAN_CODIGO, string MAN_NOMBRE, string MAN_DESCRIPCION, decimal Original_MAN_CODIGO, decimal Original_TMAN_CODIGO, string Original_MAN_NOMBRE, string Original_MAN_DESCRIPCION, decimal MAN_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(TMAN_CODIGO));
            if ((MAN_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MAN_NOMBRE));
            }
            if ((MAN_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MAN_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_MAN_CODIGO));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_TMAN_CODIGO));
            if ((Original_MAN_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_MAN_NOMBRE));
            }
            if ((Original_MAN_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_MAN_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(MAN_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal TMAN_CODIGO, string MAN_NOMBRE, string MAN_DESCRIPCION, decimal Original_MAN_CODIGO, decimal Original_TMAN_CODIGO, string Original_MAN_NOMBRE, string Original_MAN_DESCRIPCION) {
            return this.Update(TMAN_CODIGO, MAN_NOMBRE, MAN_DESCRIPCION, Original_MAN_CODIGO, Original_TMAN_CODIGO, Original_MAN_NOMBRE, Original_MAN_DESCRIPCION, Original_MAN_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PLANES_MANTENIMIENTOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PLANES_MANTENIMIENTOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PLANES_MANTENIMIENTO";
            tableMapping.ColumnMappings.Add("PMAN_NUMERO", "PMAN_NUMERO");
            tableMapping.ColumnMappings.Add("EPMAN_CODIGO", "EPMAN_CODIGO");
            tableMapping.ColumnMappings.Add("PMAN_FECHA", "PMAN_FECHA");
            tableMapping.ColumnMappings.Add("PMAN_OBSERVACIONES", "PMAN_OBSERVACIONES");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PLANES_MANTENIMIENTO] WHERE (([PMAN_NUMERO] = @Original_PMAN_NUMERO) AND ([EPMAN_CODIGO] = @Original_EPMAN_CODIGO) AND ((@IsNull_PMAN_FECHA = 1 AND [PMAN_FECHA] IS NULL) OR ([PMAN_FECHA] = @Original_PMAN_FECHA)) AND ((@IsNull_PMAN_OBSERVACIONES = 1 AND [PMAN_OBSERVACIONES] IS NULL) OR ([PMAN_OBSERVACIONES] = @Original_PMAN_OBSERVACIONES)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMAN_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMAN_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EPMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PMAN_FECHA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMAN_FECHA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMAN_FECHA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMAN_FECHA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PMAN_OBSERVACIONES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMAN_OBSERVACIONES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMAN_OBSERVACIONES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMAN_OBSERVACIONES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PLANES_MANTENIMIENTO] ([EPMAN_CODIGO], [PMAN_FECHA], [PMAN_OBSERVACIONES]) VALUES (@EPMAN_CODIGO, @PMAN_FECHA, @PMAN_OBSERVACIONES);
SELECT PMAN_NUMERO, EPMAN_CODIGO, PMAN_FECHA, PMAN_OBSERVACIONES FROM PLANES_MANTENIMIENTO WHERE (PMAN_NUMERO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EPMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMAN_FECHA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMAN_FECHA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMAN_OBSERVACIONES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMAN_OBSERVACIONES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PLANES_MANTENIMIENTO] SET [EPMAN_CODIGO] = @EPMAN_CODIGO, [PMAN_FECHA] = @PMAN_FECHA, [PMAN_OBSERVACIONES] = @PMAN_OBSERVACIONES WHERE (([PMAN_NUMERO] = @Original_PMAN_NUMERO) AND ([EPMAN_CODIGO] = @Original_EPMAN_CODIGO) AND ((@IsNull_PMAN_FECHA = 1 AND [PMAN_FECHA] IS NULL) OR ([PMAN_FECHA] = @Original_PMAN_FECHA)) AND ((@IsNull_PMAN_OBSERVACIONES = 1 AND [PMAN_OBSERVACIONES] IS NULL) OR ([PMAN_OBSERVACIONES] = @Original_PMAN_OBSERVACIONES)));
SELECT PMAN_NUMERO, EPMAN_CODIGO, PMAN_FECHA, PMAN_OBSERVACIONES FROM PLANES_MANTENIMIENTO WHERE (PMAN_NUMERO = @PMAN_NUMERO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EPMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMAN_FECHA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMAN_FECHA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMAN_OBSERVACIONES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMAN_OBSERVACIONES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMAN_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMAN_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EPMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PMAN_FECHA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMAN_FECHA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMAN_FECHA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMAN_FECHA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PMAN_OBSERVACIONES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMAN_OBSERVACIONES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMAN_OBSERVACIONES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMAN_OBSERVACIONES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMAN_NUMERO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "PMAN_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PMAN_NUMERO, EPMAN_CODIGO, PMAN_FECHA, PMAN_OBSERVACIONES FROM dbo.PLANES_" +
                "MANTENIMIENTO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsMantenimiento.PLANES_MANTENIMIENTODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsMantenimiento.PLANES_MANTENIMIENTODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsMantenimiento.PLANES_MANTENIMIENTODataTable dataTable = new dsMantenimiento.PLANES_MANTENIMIENTODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsMantenimiento.PLANES_MANTENIMIENTODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsMantenimiento dataSet) {
            return this.Adapter.Update(dataSet, "PLANES_MANTENIMIENTO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_PMAN_NUMERO, decimal Original_EPMAN_CODIGO, global::System.Nullable<global::System.DateTime> Original_PMAN_FECHA, string Original_PMAN_OBSERVACIONES) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_PMAN_NUMERO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_EPMAN_CODIGO));
            if ((Original_PMAN_FECHA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_PMAN_FECHA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_PMAN_OBSERVACIONES == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_PMAN_OBSERVACIONES));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal EPMAN_CODIGO, global::System.Nullable<global::System.DateTime> PMAN_FECHA, string PMAN_OBSERVACIONES) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(EPMAN_CODIGO));
            if ((PMAN_FECHA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(PMAN_FECHA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PMAN_OBSERVACIONES == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PMAN_OBSERVACIONES));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal EPMAN_CODIGO, global::System.Nullable<global::System.DateTime> PMAN_FECHA, string PMAN_OBSERVACIONES, decimal Original_PMAN_NUMERO, decimal Original_EPMAN_CODIGO, global::System.Nullable<global::System.DateTime> Original_PMAN_FECHA, string Original_PMAN_OBSERVACIONES, decimal PMAN_NUMERO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(EPMAN_CODIGO));
            if ((PMAN_FECHA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(PMAN_FECHA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PMAN_OBSERVACIONES == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PMAN_OBSERVACIONES));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_PMAN_NUMERO));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_EPMAN_CODIGO));
            if ((Original_PMAN_FECHA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_PMAN_FECHA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_PMAN_OBSERVACIONES == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_PMAN_OBSERVACIONES));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(PMAN_NUMERO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal EPMAN_CODIGO, global::System.Nullable<global::System.DateTime> PMAN_FECHA, string PMAN_OBSERVACIONES, decimal Original_PMAN_NUMERO, decimal Original_EPMAN_CODIGO, global::System.Nullable<global::System.DateTime> Original_PMAN_FECHA, string Original_PMAN_OBSERVACIONES) {
            return this.Update(EPMAN_CODIGO, PMAN_FECHA, PMAN_OBSERVACIONES, Original_PMAN_NUMERO, Original_EPMAN_CODIGO, Original_PMAN_FECHA, Original_PMAN_OBSERVACIONES, Original_PMAN_NUMERO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ESTADO_PLANES_MANTENIMIENTOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ESTADO_PLANES_MANTENIMIENTOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ESTADO_PLANES_MANTENIMIENTO";
            tableMapping.ColumnMappings.Add("EPMAN_CODIGO", "EPMAN_CODIGO");
            tableMapping.ColumnMappings.Add("EPMAN_NOMBRE", "EPMAN_NOMBRE");
            tableMapping.ColumnMappings.Add("EPMAN_DESCRIPCION", "EPMAN_DESCRIPCION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ESTADO_PLANES_MANTENIMIENTO] WHERE (([EPMAN_CODIGO] = @Original_EPMAN_CODIGO) AND ((@IsNull_EPMAN_NOMBRE = 1 AND [EPMAN_NOMBRE] IS NULL) OR ([EPMAN_NOMBRE] = @Original_EPMAN_NOMBRE)) AND ((@IsNull_EPMAN_DESCRIPCION = 1 AND [EPMAN_DESCRIPCION] IS NULL) OR ([EPMAN_DESCRIPCION] = @Original_EPMAN_DESCRIPCION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EPMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPMAN_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPMAN_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPMAN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPMAN_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPMAN_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPMAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPMAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPMAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ESTADO_PLANES_MANTENIMIENTO] ([EPMAN_NOMBRE], [EPMAN_DESCRIPCION]) VALUES (@EPMAN_NOMBRE, @EPMAN_DESCRIPCION);
SELECT EPMAN_CODIGO, EPMAN_NOMBRE, EPMAN_DESCRIPCION FROM ESTADO_PLANES_MANTENIMIENTO WHERE (EPMAN_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPMAN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPMAN_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPMAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPMAN_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ESTADO_PLANES_MANTENIMIENTO] SET [EPMAN_NOMBRE] = @EPMAN_NOMBRE, [EPMAN_DESCRIPCION] = @EPMAN_DESCRIPCION WHERE (([EPMAN_CODIGO] = @Original_EPMAN_CODIGO) AND ((@IsNull_EPMAN_NOMBRE = 1 AND [EPMAN_NOMBRE] IS NULL) OR ([EPMAN_NOMBRE] = @Original_EPMAN_NOMBRE)) AND ((@IsNull_EPMAN_DESCRIPCION = 1 AND [EPMAN_DESCRIPCION] IS NULL) OR ([EPMAN_DESCRIPCION] = @Original_EPMAN_DESCRIPCION)));
SELECT EPMAN_CODIGO, EPMAN_NOMBRE, EPMAN_DESCRIPCION FROM ESTADO_PLANES_MANTENIMIENTO WHERE (EPMAN_CODIGO = @EPMAN_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPMAN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPMAN_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPMAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPMAN_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EPMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPMAN_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPMAN_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPMAN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPMAN_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPMAN_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPMAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPMAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPMAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "EPMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT EPMAN_CODIGO, EPMAN_NOMBRE, EPMAN_DESCRIPCION FROM dbo.ESTADO_PLANES_MANTE" +
                "NIMIENTO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsMantenimiento.ESTADO_PLANES_MANTENIMIENTODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsMantenimiento.ESTADO_PLANES_MANTENIMIENTODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsMantenimiento.ESTADO_PLANES_MANTENIMIENTODataTable dataTable = new dsMantenimiento.ESTADO_PLANES_MANTENIMIENTODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsMantenimiento.ESTADO_PLANES_MANTENIMIENTODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsMantenimiento dataSet) {
            return this.Adapter.Update(dataSet, "ESTADO_PLANES_MANTENIMIENTO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_EPMAN_CODIGO, string Original_EPMAN_NOMBRE, string Original_EPMAN_DESCRIPCION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_EPMAN_CODIGO));
            if ((Original_EPMAN_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_EPMAN_NOMBRE));
            }
            if ((Original_EPMAN_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_EPMAN_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string EPMAN_NOMBRE, string EPMAN_DESCRIPCION) {
            if ((EPMAN_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EPMAN_NOMBRE));
            }
            if ((EPMAN_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(EPMAN_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string EPMAN_NOMBRE, string EPMAN_DESCRIPCION, decimal Original_EPMAN_CODIGO, string Original_EPMAN_NOMBRE, string Original_EPMAN_DESCRIPCION, decimal EPMAN_CODIGO) {
            if ((EPMAN_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(EPMAN_NOMBRE));
            }
            if ((EPMAN_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(EPMAN_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_EPMAN_CODIGO));
            if ((Original_EPMAN_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_EPMAN_NOMBRE));
            }
            if ((Original_EPMAN_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_EPMAN_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(EPMAN_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string EPMAN_NOMBRE, string EPMAN_DESCRIPCION, decimal Original_EPMAN_CODIGO, string Original_EPMAN_NOMBRE, string Original_EPMAN_DESCRIPCION) {
            return this.Update(EPMAN_NOMBRE, EPMAN_DESCRIPCION, Original_EPMAN_CODIGO, Original_EPMAN_NOMBRE, Original_EPMAN_DESCRIPCION, Original_EPMAN_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DETALLE_PLANES_MANTENIMIENTOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DETALLE_PLANES_MANTENIMIENTOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DETALLE_PLANES_MANTENIMIENTO";
            tableMapping.ColumnMappings.Add("DPMAN_CODIGO", "DPMAN_CODIGO");
            tableMapping.ColumnMappings.Add("MAQ_CODIGO", "MAQ_CODIGO");
            tableMapping.ColumnMappings.Add("PMAN_NUMERO", "PMAN_NUMERO");
            tableMapping.ColumnMappings.Add("EDMAN_CODIGO", "EDMAN_CODIGO");
            tableMapping.ColumnMappings.Add("CF_NUMERO", "CF_NUMERO");
            tableMapping.ColumnMappings.Add("E_CODIGO", "E_CODIGO");
            tableMapping.ColumnMappings.Add("REP_CODIGO", "REP_CODIGO");
            tableMapping.ColumnMappings.Add("MAN_CODIGO", "MAN_CODIGO");
            tableMapping.ColumnMappings.Add("DPMAN_FECHAREALIZACIONPREVISTA", "DPMAN_FECHAREALIZACIONPREVISTA");
            tableMapping.ColumnMappings.Add("DPMAN_FECHAREALIZACIONREAL", "DPMAN_FECHAREALIZACIONREAL");
            tableMapping.ColumnMappings.Add("DPMAN_OBSERVACIONES", "DPMAN_OBSERVACIONES");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[DETALLE_PLANES_MANTENIMIENTO] WHERE (([DPMAN_CODIGO] = @Original_DPMAN_CODIGO) AND ([MAQ_CODIGO] = @Original_MAQ_CODIGO) AND ([PMAN_NUMERO] = @Original_PMAN_NUMERO) AND ([EDMAN_CODIGO] = @Original_EDMAN_CODIGO) AND ((@IsNull_CF_NUMERO = 1 AND [CF_NUMERO] IS NULL) OR ([CF_NUMERO] = @Original_CF_NUMERO)) AND ([E_CODIGO] = @Original_E_CODIGO) AND ((@IsNull_REP_CODIGO = 1 AND [REP_CODIGO] IS NULL) OR ([REP_CODIGO] = @Original_REP_CODIGO)) AND ([MAN_CODIGO] = @Original_MAN_CODIGO) AND ((@IsNull_DPMAN_FECHAREALIZACIONPREVISTA = 1 AND [DPMAN_FECHAREALIZACIONPREVISTA] IS NULL) OR ([DPMAN_FECHAREALIZACIONPREVISTA] = @Original_DPMAN_FECHAREALIZACIONPREVISTA)) AND ((@IsNull_DPMAN_FECHAREALIZACIONREAL = 1 AND [DPMAN_FECHAREALIZACIONREAL] IS NULL) OR ([DPMAN_FECHAREALIZACIONREAL] = @Original_DPMAN_FECHAREALIZACIONREAL)) AND ((@IsNull_DPMAN_OBSERVACIONES = 1 AND [DPMAN_OBSERVACIONES] IS NULL) OR ([DPMAN_OBSERVACIONES] = @Original_DPMAN_OBSERVACIONES)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAQ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAQ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMAN_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMAN_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EDMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EDMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CF_NUMERO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_NUMERO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CF_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CF_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_REP_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "REP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DPMAN_FECHAREALIZACIONPREVISTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_FECHAREALIZACIONPREVISTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMAN_FECHAREALIZACIONPREVISTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_FECHAREALIZACIONPREVISTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DPMAN_FECHAREALIZACIONREAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_FECHAREALIZACIONREAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMAN_FECHAREALIZACIONREAL", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_FECHAREALIZACIONREAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DPMAN_OBSERVACIONES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_OBSERVACIONES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMAN_OBSERVACIONES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_OBSERVACIONES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[DETALLE_PLANES_MANTENIMIENTO] ([MAQ_CODIGO], [PMAN_NUMERO], [EDMAN_CODIGO], [CF_NUMERO], [E_CODIGO], [REP_CODIGO], [MAN_CODIGO], [DPMAN_FECHAREALIZACIONPREVISTA], [DPMAN_FECHAREALIZACIONREAL], [DPMAN_OBSERVACIONES]) VALUES (@MAQ_CODIGO, @PMAN_NUMERO, @EDMAN_CODIGO, @CF_NUMERO, @E_CODIGO, @REP_CODIGO, @MAN_CODIGO, @DPMAN_FECHAREALIZACIONPREVISTA, @DPMAN_FECHAREALIZACIONREAL, @DPMAN_OBSERVACIONES);
SELECT DPMAN_CODIGO, MAQ_CODIGO, PMAN_NUMERO, EDMAN_CODIGO, CF_NUMERO, E_CODIGO, REP_CODIGO, MAN_CODIGO, DPMAN_FECHAREALIZACIONPREVISTA, DPMAN_FECHAREALIZACIONREAL, DPMAN_OBSERVACIONES FROM DETALLE_PLANES_MANTENIMIENTO WHERE (DPMAN_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAQ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAQ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMAN_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMAN_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EDMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CF_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CF_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "REP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPMAN_FECHAREALIZACIONPREVISTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_FECHAREALIZACIONPREVISTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPMAN_FECHAREALIZACIONREAL", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_FECHAREALIZACIONREAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPMAN_OBSERVACIONES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_OBSERVACIONES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[DETALLE_PLANES_MANTENIMIENTO] SET [MAQ_CODIGO] = @MAQ_CODIGO, [PMAN" +
                "_NUMERO] = @PMAN_NUMERO, [EDMAN_CODIGO] = @EDMAN_CODIGO, [CF_NUMERO] = @CF_NUMER" +
                "O, [E_CODIGO] = @E_CODIGO, [REP_CODIGO] = @REP_CODIGO, [MAN_CODIGO] = @MAN_CODIG" +
                "O, [DPMAN_FECHAREALIZACIONPREVISTA] = @DPMAN_FECHAREALIZACIONPREVISTA, [DPMAN_FE" +
                "CHAREALIZACIONREAL] = @DPMAN_FECHAREALIZACIONREAL, [DPMAN_OBSERVACIONES] = @DPMA" +
                "N_OBSERVACIONES WHERE (([DPMAN_CODIGO] = @Original_DPMAN_CODIGO) AND ([MAQ_CODIG" +
                "O] = @Original_MAQ_CODIGO) AND ([PMAN_NUMERO] = @Original_PMAN_NUMERO) AND ([EDM" +
                "AN_CODIGO] = @Original_EDMAN_CODIGO) AND ((@IsNull_CF_NUMERO = 1 AND [CF_NUMERO]" +
                " IS NULL) OR ([CF_NUMERO] = @Original_CF_NUMERO)) AND ([E_CODIGO] = @Original_E_" +
                "CODIGO) AND ((@IsNull_REP_CODIGO = 1 AND [REP_CODIGO] IS NULL) OR ([REP_CODIGO] " +
                "= @Original_REP_CODIGO)) AND ([MAN_CODIGO] = @Original_MAN_CODIGO) AND ((@IsNull" +
                "_DPMAN_FECHAREALIZACIONPREVISTA = 1 AND [DPMAN_FECHAREALIZACIONPREVISTA] IS NULL" +
                ") OR ([DPMAN_FECHAREALIZACIONPREVISTA] = @Original_DPMAN_FECHAREALIZACIONPREVIST" +
                "A)) AND ((@IsNull_DPMAN_FECHAREALIZACIONREAL = 1 AND [DPMAN_FECHAREALIZACIONREAL" +
                "] IS NULL) OR ([DPMAN_FECHAREALIZACIONREAL] = @Original_DPMAN_FECHAREALIZACIONRE" +
                "AL)) AND ((@IsNull_DPMAN_OBSERVACIONES = 1 AND [DPMAN_OBSERVACIONES] IS NULL) OR" +
                " ([DPMAN_OBSERVACIONES] = @Original_DPMAN_OBSERVACIONES)));\r\nSELECT DPMAN_CODIGO" +
                ", MAQ_CODIGO, PMAN_NUMERO, EDMAN_CODIGO, CF_NUMERO, E_CODIGO, REP_CODIGO, MAN_CO" +
                "DIGO, DPMAN_FECHAREALIZACIONPREVISTA, DPMAN_FECHAREALIZACIONREAL, DPMAN_OBSERVAC" +
                "IONES FROM DETALLE_PLANES_MANTENIMIENTO WHERE (DPMAN_CODIGO = @DPMAN_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAQ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAQ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMAN_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMAN_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EDMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CF_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CF_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "REP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPMAN_FECHAREALIZACIONPREVISTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_FECHAREALIZACIONPREVISTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPMAN_FECHAREALIZACIONREAL", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_FECHAREALIZACIONREAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPMAN_OBSERVACIONES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_OBSERVACIONES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAQ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAQ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMAN_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMAN_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EDMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EDMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CF_NUMERO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_NUMERO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CF_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CF_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_REP_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "REP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DPMAN_FECHAREALIZACIONPREVISTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_FECHAREALIZACIONPREVISTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMAN_FECHAREALIZACIONPREVISTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_FECHAREALIZACIONPREVISTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DPMAN_FECHAREALIZACIONREAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_FECHAREALIZACIONREAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMAN_FECHAREALIZACIONREAL", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_FECHAREALIZACIONREAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DPMAN_OBSERVACIONES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_OBSERVACIONES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMAN_OBSERVACIONES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_OBSERVACIONES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "DPMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DPMAN_CODIGO, MAQ_CODIGO, PMAN_NUMERO, EDMAN_CODIGO, CF_NUMERO, E_CODIGO, " +
                "REP_CODIGO, MAN_CODIGO, DPMAN_FECHAREALIZACIONPREVISTA, DPMAN_FECHAREALIZACIONRE" +
                "AL, DPMAN_OBSERVACIONES FROM dbo.DETALLE_PLANES_MANTENIMIENTO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsMantenimiento.DETALLE_PLANES_MANTENIMIENTODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsMantenimiento.DETALLE_PLANES_MANTENIMIENTODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsMantenimiento.DETALLE_PLANES_MANTENIMIENTODataTable dataTable = new dsMantenimiento.DETALLE_PLANES_MANTENIMIENTODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsMantenimiento.DETALLE_PLANES_MANTENIMIENTODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsMantenimiento dataSet) {
            return this.Adapter.Update(dataSet, "DETALLE_PLANES_MANTENIMIENTO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_DPMAN_CODIGO, decimal Original_MAQ_CODIGO, decimal Original_PMAN_NUMERO, decimal Original_EDMAN_CODIGO, global::System.Nullable<decimal> Original_CF_NUMERO, decimal Original_E_CODIGO, global::System.Nullable<decimal> Original_REP_CODIGO, decimal Original_MAN_CODIGO, global::System.Nullable<global::System.DateTime> Original_DPMAN_FECHAREALIZACIONPREVISTA, global::System.Nullable<global::System.DateTime> Original_DPMAN_FECHAREALIZACIONREAL, string Original_DPMAN_OBSERVACIONES) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_DPMAN_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_MAQ_CODIGO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_PMAN_NUMERO));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_EDMAN_CODIGO));
            if ((Original_CF_NUMERO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_CF_NUMERO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_E_CODIGO));
            if ((Original_REP_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_REP_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_MAN_CODIGO));
            if ((Original_DPMAN_FECHAREALIZACIONPREVISTA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_DPMAN_FECHAREALIZACIONPREVISTA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_DPMAN_FECHAREALIZACIONREAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_DPMAN_FECHAREALIZACIONREAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_DPMAN_OBSERVACIONES == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_DPMAN_OBSERVACIONES));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal MAQ_CODIGO, decimal PMAN_NUMERO, decimal EDMAN_CODIGO, global::System.Nullable<decimal> CF_NUMERO, decimal E_CODIGO, global::System.Nullable<decimal> REP_CODIGO, decimal MAN_CODIGO, global::System.Nullable<global::System.DateTime> DPMAN_FECHAREALIZACIONPREVISTA, global::System.Nullable<global::System.DateTime> DPMAN_FECHAREALIZACIONREAL, string DPMAN_OBSERVACIONES) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(MAQ_CODIGO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(PMAN_NUMERO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(EDMAN_CODIGO));
            if ((CF_NUMERO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(CF_NUMERO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(E_CODIGO));
            if ((REP_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(REP_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(MAN_CODIGO));
            if ((DPMAN_FECHAREALIZACIONPREVISTA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(DPMAN_FECHAREALIZACIONPREVISTA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((DPMAN_FECHAREALIZACIONREAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(DPMAN_FECHAREALIZACIONREAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((DPMAN_OBSERVACIONES == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(DPMAN_OBSERVACIONES));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal MAQ_CODIGO, 
                    decimal PMAN_NUMERO, 
                    decimal EDMAN_CODIGO, 
                    global::System.Nullable<decimal> CF_NUMERO, 
                    decimal E_CODIGO, 
                    global::System.Nullable<decimal> REP_CODIGO, 
                    decimal MAN_CODIGO, 
                    global::System.Nullable<global::System.DateTime> DPMAN_FECHAREALIZACIONPREVISTA, 
                    global::System.Nullable<global::System.DateTime> DPMAN_FECHAREALIZACIONREAL, 
                    string DPMAN_OBSERVACIONES, 
                    decimal Original_DPMAN_CODIGO, 
                    decimal Original_MAQ_CODIGO, 
                    decimal Original_PMAN_NUMERO, 
                    decimal Original_EDMAN_CODIGO, 
                    global::System.Nullable<decimal> Original_CF_NUMERO, 
                    decimal Original_E_CODIGO, 
                    global::System.Nullable<decimal> Original_REP_CODIGO, 
                    decimal Original_MAN_CODIGO, 
                    global::System.Nullable<global::System.DateTime> Original_DPMAN_FECHAREALIZACIONPREVISTA, 
                    global::System.Nullable<global::System.DateTime> Original_DPMAN_FECHAREALIZACIONREAL, 
                    string Original_DPMAN_OBSERVACIONES, 
                    decimal DPMAN_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(MAQ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(PMAN_NUMERO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(EDMAN_CODIGO));
            if ((CF_NUMERO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(CF_NUMERO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(E_CODIGO));
            if ((REP_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(REP_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(MAN_CODIGO));
            if ((DPMAN_FECHAREALIZACIONPREVISTA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(DPMAN_FECHAREALIZACIONPREVISTA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((DPMAN_FECHAREALIZACIONREAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(DPMAN_FECHAREALIZACIONREAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((DPMAN_OBSERVACIONES == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(DPMAN_OBSERVACIONES));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_DPMAN_CODIGO));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_MAQ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_PMAN_NUMERO));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_EDMAN_CODIGO));
            if ((Original_CF_NUMERO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_CF_NUMERO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_E_CODIGO));
            if ((Original_REP_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_REP_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_MAN_CODIGO));
            if ((Original_DPMAN_FECHAREALIZACIONPREVISTA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_DPMAN_FECHAREALIZACIONPREVISTA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_DPMAN_FECHAREALIZACIONREAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_DPMAN_FECHAREALIZACIONREAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_DPMAN_OBSERVACIONES == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_DPMAN_OBSERVACIONES));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(DPMAN_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal MAQ_CODIGO, 
                    decimal PMAN_NUMERO, 
                    decimal EDMAN_CODIGO, 
                    global::System.Nullable<decimal> CF_NUMERO, 
                    decimal E_CODIGO, 
                    global::System.Nullable<decimal> REP_CODIGO, 
                    decimal MAN_CODIGO, 
                    global::System.Nullable<global::System.DateTime> DPMAN_FECHAREALIZACIONPREVISTA, 
                    global::System.Nullable<global::System.DateTime> DPMAN_FECHAREALIZACIONREAL, 
                    string DPMAN_OBSERVACIONES, 
                    decimal Original_DPMAN_CODIGO, 
                    decimal Original_MAQ_CODIGO, 
                    decimal Original_PMAN_NUMERO, 
                    decimal Original_EDMAN_CODIGO, 
                    global::System.Nullable<decimal> Original_CF_NUMERO, 
                    decimal Original_E_CODIGO, 
                    global::System.Nullable<decimal> Original_REP_CODIGO, 
                    decimal Original_MAN_CODIGO, 
                    global::System.Nullable<global::System.DateTime> Original_DPMAN_FECHAREALIZACIONPREVISTA, 
                    global::System.Nullable<global::System.DateTime> Original_DPMAN_FECHAREALIZACIONREAL, 
                    string Original_DPMAN_OBSERVACIONES) {
            return this.Update(MAQ_CODIGO, PMAN_NUMERO, EDMAN_CODIGO, CF_NUMERO, E_CODIGO, REP_CODIGO, MAN_CODIGO, DPMAN_FECHAREALIZACIONPREVISTA, DPMAN_FECHAREALIZACIONREAL, DPMAN_OBSERVACIONES, Original_DPMAN_CODIGO, Original_MAQ_CODIGO, Original_PMAN_NUMERO, Original_EDMAN_CODIGO, Original_CF_NUMERO, Original_E_CODIGO, Original_REP_CODIGO, Original_MAN_CODIGO, Original_DPMAN_FECHAREALIZACIONPREVISTA, Original_DPMAN_FECHAREALIZACIONREAL, Original_DPMAN_OBSERVACIONES, Original_DPMAN_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TIPOS_MANTENIMIENTOSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TIPOS_MANTENIMIENTOSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TIPOS_MANTENIMIENTOS";
            tableMapping.ColumnMappings.Add("TMAN_CODIGO", "TMAN_CODIGO");
            tableMapping.ColumnMappings.Add("TMAN_NOMBRE", "TMAN_NOMBRE");
            tableMapping.ColumnMappings.Add("TMAN_DESCRIPCION", "TMAN_DESCRIPCION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TIPOS_MANTENIMIENTOS] WHERE (([TMAN_CODIGO] = @Original_TMAN_CODIGO) AND ((@IsNull_TMAN_NOMBRE = 1 AND [TMAN_NOMBRE] IS NULL) OR ([TMAN_NOMBRE] = @Original_TMAN_NOMBRE)) AND ((@IsNull_TMAN_DESCRIPCION = 1 AND [TMAN_DESCRIPCION] IS NULL) OR ([TMAN_DESCRIPCION] = @Original_TMAN_DESCRIPCION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TMAN_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMAN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TMAN_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TIPOS_MANTENIMIENTOS] ([TMAN_NOMBRE], [TMAN_DESCRIPCION]) VALU" +
                "ES (@TMAN_NOMBRE, @TMAN_DESCRIPCION);\r\nSELECT TMAN_CODIGO, TMAN_NOMBRE, TMAN_DES" +
                "CRIPCION FROM TIPOS_MANTENIMIENTOS WHERE (TMAN_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMAN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TIPOS_MANTENIMIENTOS] SET [TMAN_NOMBRE] = @TMAN_NOMBRE, [TMAN_DESCRIPCION] = @TMAN_DESCRIPCION WHERE (([TMAN_CODIGO] = @Original_TMAN_CODIGO) AND ((@IsNull_TMAN_NOMBRE = 1 AND [TMAN_NOMBRE] IS NULL) OR ([TMAN_NOMBRE] = @Original_TMAN_NOMBRE)) AND ((@IsNull_TMAN_DESCRIPCION = 1 AND [TMAN_DESCRIPCION] IS NULL) OR ([TMAN_DESCRIPCION] = @Original_TMAN_DESCRIPCION)));
SELECT TMAN_CODIGO, TMAN_NOMBRE, TMAN_DESCRIPCION FROM TIPOS_MANTENIMIENTOS WHERE (TMAN_CODIGO = @TMAN_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMAN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TMAN_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMAN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TMAN_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TMAN_CODIGO, TMAN_NOMBRE, TMAN_DESCRIPCION FROM dbo.TIPOS_MANTENIMIENTOS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsMantenimiento.TIPOS_MANTENIMIENTOSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsMantenimiento.TIPOS_MANTENIMIENTOSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsMantenimiento.TIPOS_MANTENIMIENTOSDataTable dataTable = new dsMantenimiento.TIPOS_MANTENIMIENTOSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsMantenimiento.TIPOS_MANTENIMIENTOSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsMantenimiento dataSet) {
            return this.Adapter.Update(dataSet, "TIPOS_MANTENIMIENTOS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_TMAN_CODIGO, string Original_TMAN_NOMBRE, string Original_TMAN_DESCRIPCION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_TMAN_CODIGO));
            if ((Original_TMAN_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TMAN_NOMBRE));
            }
            if ((Original_TMAN_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TMAN_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TMAN_NOMBRE, string TMAN_DESCRIPCION) {
            if ((TMAN_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TMAN_NOMBRE));
            }
            if ((TMAN_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TMAN_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TMAN_NOMBRE, string TMAN_DESCRIPCION, decimal Original_TMAN_CODIGO, string Original_TMAN_NOMBRE, string Original_TMAN_DESCRIPCION, decimal TMAN_CODIGO) {
            if ((TMAN_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TMAN_NOMBRE));
            }
            if ((TMAN_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TMAN_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_TMAN_CODIGO));
            if ((Original_TMAN_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_TMAN_NOMBRE));
            }
            if ((Original_TMAN_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_TMAN_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(TMAN_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TMAN_NOMBRE, string TMAN_DESCRIPCION, decimal Original_TMAN_CODIGO, string Original_TMAN_NOMBRE, string Original_TMAN_DESCRIPCION) {
            return this.Update(TMAN_NOMBRE, TMAN_DESCRIPCION, Original_TMAN_CODIGO, Original_TMAN_NOMBRE, Original_TMAN_DESCRIPCION, Original_TMAN_CODIGO);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private MANTENIMIENTOSTableAdapter _mANTENIMIENTOSTableAdapter;
        
        private PLANES_MANTENIMIENTOTableAdapter _pLANES_MANTENIMIENTOTableAdapter;
        
        private ESTADO_PLANES_MANTENIMIENTOTableAdapter _eSTADO_PLANES_MANTENIMIENTOTableAdapter;
        
        private DETALLE_PLANES_MANTENIMIENTOTableAdapter _dETALLE_PLANES_MANTENIMIENTOTableAdapter;
        
        private TIPOS_MANTENIMIENTOSTableAdapter _tIPOS_MANTENIMIENTOSTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MANTENIMIENTOSTableAdapter MANTENIMIENTOSTableAdapter {
            get {
                return this._mANTENIMIENTOSTableAdapter;
            }
            set {
                this._mANTENIMIENTOSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PLANES_MANTENIMIENTOTableAdapter PLANES_MANTENIMIENTOTableAdapter {
            get {
                return this._pLANES_MANTENIMIENTOTableAdapter;
            }
            set {
                this._pLANES_MANTENIMIENTOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ESTADO_PLANES_MANTENIMIENTOTableAdapter ESTADO_PLANES_MANTENIMIENTOTableAdapter {
            get {
                return this._eSTADO_PLANES_MANTENIMIENTOTableAdapter;
            }
            set {
                this._eSTADO_PLANES_MANTENIMIENTOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public DETALLE_PLANES_MANTENIMIENTOTableAdapter DETALLE_PLANES_MANTENIMIENTOTableAdapter {
            get {
                return this._dETALLE_PLANES_MANTENIMIENTOTableAdapter;
            }
            set {
                this._dETALLE_PLANES_MANTENIMIENTOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TIPOS_MANTENIMIENTOSTableAdapter TIPOS_MANTENIMIENTOSTableAdapter {
            get {
                return this._tIPOS_MANTENIMIENTOSTableAdapter;
            }
            set {
                this._tIPOS_MANTENIMIENTOSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._mANTENIMIENTOSTableAdapter != null) 
                            && (this._mANTENIMIENTOSTableAdapter.Connection != null))) {
                    return this._mANTENIMIENTOSTableAdapter.Connection;
                }
                if (((this._pLANES_MANTENIMIENTOTableAdapter != null) 
                            && (this._pLANES_MANTENIMIENTOTableAdapter.Connection != null))) {
                    return this._pLANES_MANTENIMIENTOTableAdapter.Connection;
                }
                if (((this._eSTADO_PLANES_MANTENIMIENTOTableAdapter != null) 
                            && (this._eSTADO_PLANES_MANTENIMIENTOTableAdapter.Connection != null))) {
                    return this._eSTADO_PLANES_MANTENIMIENTOTableAdapter.Connection;
                }
                if (((this._dETALLE_PLANES_MANTENIMIENTOTableAdapter != null) 
                            && (this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Connection != null))) {
                    return this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Connection;
                }
                if (((this._tIPOS_MANTENIMIENTOSTableAdapter != null) 
                            && (this._tIPOS_MANTENIMIENTOSTableAdapter.Connection != null))) {
                    return this._tIPOS_MANTENIMIENTOSTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._mANTENIMIENTOSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pLANES_MANTENIMIENTOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eSTADO_PLANES_MANTENIMIENTOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dETALLE_PLANES_MANTENIMIENTOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tIPOS_MANTENIMIENTOSTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(dsMantenimiento dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tIPOS_MANTENIMIENTOSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TIPOS_MANTENIMIENTOS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tIPOS_MANTENIMIENTOSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eSTADO_PLANES_MANTENIMIENTOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ESTADO_PLANES_MANTENIMIENTO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eSTADO_PLANES_MANTENIMIENTOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mANTENIMIENTOSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MANTENIMIENTOS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mANTENIMIENTOSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pLANES_MANTENIMIENTOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PLANES_MANTENIMIENTO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pLANES_MANTENIMIENTOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dETALLE_PLANES_MANTENIMIENTOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DETALLE_PLANES_MANTENIMIENTO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(dsMantenimiento dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tIPOS_MANTENIMIENTOSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TIPOS_MANTENIMIENTOS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tIPOS_MANTENIMIENTOSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eSTADO_PLANES_MANTENIMIENTOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ESTADO_PLANES_MANTENIMIENTO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eSTADO_PLANES_MANTENIMIENTOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mANTENIMIENTOSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MANTENIMIENTOS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mANTENIMIENTOSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pLANES_MANTENIMIENTOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PLANES_MANTENIMIENTO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pLANES_MANTENIMIENTOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dETALLE_PLANES_MANTENIMIENTOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DETALLE_PLANES_MANTENIMIENTO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(dsMantenimiento dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._dETALLE_PLANES_MANTENIMIENTOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DETALLE_PLANES_MANTENIMIENTO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pLANES_MANTENIMIENTOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PLANES_MANTENIMIENTO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pLANES_MANTENIMIENTOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mANTENIMIENTOSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MANTENIMIENTOS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mANTENIMIENTOSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eSTADO_PLANES_MANTENIMIENTOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ESTADO_PLANES_MANTENIMIENTO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eSTADO_PLANES_MANTENIMIENTOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tIPOS_MANTENIMIENTOSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TIPOS_MANTENIMIENTOS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tIPOS_MANTENIMIENTOSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(dsMantenimiento dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._mANTENIMIENTOSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mANTENIMIENTOSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pLANES_MANTENIMIENTOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pLANES_MANTENIMIENTOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._eSTADO_PLANES_MANTENIMIENTOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eSTADO_PLANES_MANTENIMIENTOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dETALLE_PLANES_MANTENIMIENTOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tIPOS_MANTENIMIENTOSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tIPOS_MANTENIMIENTOSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._mANTENIMIENTOSTableAdapter != null)) {
                    revertConnections.Add(this._mANTENIMIENTOSTableAdapter, this._mANTENIMIENTOSTableAdapter.Connection);
                    this._mANTENIMIENTOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mANTENIMIENTOSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mANTENIMIENTOSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mANTENIMIENTOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mANTENIMIENTOSTableAdapter.Adapter);
                    }
                }
                if ((this._pLANES_MANTENIMIENTOTableAdapter != null)) {
                    revertConnections.Add(this._pLANES_MANTENIMIENTOTableAdapter, this._pLANES_MANTENIMIENTOTableAdapter.Connection);
                    this._pLANES_MANTENIMIENTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pLANES_MANTENIMIENTOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pLANES_MANTENIMIENTOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pLANES_MANTENIMIENTOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pLANES_MANTENIMIENTOTableAdapter.Adapter);
                    }
                }
                if ((this._eSTADO_PLANES_MANTENIMIENTOTableAdapter != null)) {
                    revertConnections.Add(this._eSTADO_PLANES_MANTENIMIENTOTableAdapter, this._eSTADO_PLANES_MANTENIMIENTOTableAdapter.Connection);
                    this._eSTADO_PLANES_MANTENIMIENTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eSTADO_PLANES_MANTENIMIENTOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eSTADO_PLANES_MANTENIMIENTOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eSTADO_PLANES_MANTENIMIENTOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eSTADO_PLANES_MANTENIMIENTOTableAdapter.Adapter);
                    }
                }
                if ((this._dETALLE_PLANES_MANTENIMIENTOTableAdapter != null)) {
                    revertConnections.Add(this._dETALLE_PLANES_MANTENIMIENTOTableAdapter, this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Connection);
                    this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Adapter);
                    }
                }
                if ((this._tIPOS_MANTENIMIENTOSTableAdapter != null)) {
                    revertConnections.Add(this._tIPOS_MANTENIMIENTOSTableAdapter, this._tIPOS_MANTENIMIENTOSTableAdapter.Connection);
                    this._tIPOS_MANTENIMIENTOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tIPOS_MANTENIMIENTOSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tIPOS_MANTENIMIENTOSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tIPOS_MANTENIMIENTOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tIPOS_MANTENIMIENTOSTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._mANTENIMIENTOSTableAdapter != null)) {
                    this._mANTENIMIENTOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mANTENIMIENTOSTableAdapter]));
                    this._mANTENIMIENTOSTableAdapter.Transaction = null;
                }
                if ((this._pLANES_MANTENIMIENTOTableAdapter != null)) {
                    this._pLANES_MANTENIMIENTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pLANES_MANTENIMIENTOTableAdapter]));
                    this._pLANES_MANTENIMIENTOTableAdapter.Transaction = null;
                }
                if ((this._eSTADO_PLANES_MANTENIMIENTOTableAdapter != null)) {
                    this._eSTADO_PLANES_MANTENIMIENTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eSTADO_PLANES_MANTENIMIENTOTableAdapter]));
                    this._eSTADO_PLANES_MANTENIMIENTOTableAdapter.Transaction = null;
                }
                if ((this._dETALLE_PLANES_MANTENIMIENTOTableAdapter != null)) {
                    this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dETALLE_PLANES_MANTENIMIENTOTableAdapter]));
                    this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Transaction = null;
                }
                if ((this._tIPOS_MANTENIMIENTOSTableAdapter != null)) {
                    this._tIPOS_MANTENIMIENTOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tIPOS_MANTENIMIENTOSTableAdapter]));
                    this._tIPOS_MANTENIMIENTOSTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591