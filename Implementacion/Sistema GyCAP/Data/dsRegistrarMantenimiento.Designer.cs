//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GyCAP.Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsRegistrarMantenimiento")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsRegistrarMantenimiento : global::System.Data.DataSet {
        
        private REPUESTOSDataTable tableREPUESTOS;
        
        private TIPOS_REPUESTOSDataTable tableTIPOS_REPUESTOS;
        
        private REPUESTOS_REGISTRO_MANTENIMIENTODataTable tableREPUESTOS_REGISTRO_MANTENIMIENTO;
        
        private TIPOS_MANTENIMIENTOSDataTable tableTIPOS_MANTENIMIENTOS;
        
        private MANTENIMIENTOSDataTable tableMANTENIMIENTOS;
        
        private MAQUINASDataTable tableMAQUINAS;
        
        private ESTADO_MAQUINASDataTable tableESTADO_MAQUINAS;
        
        private FABRICANTE_MAQUINASDataTable tableFABRICANTE_MAQUINAS;
        
        private EMPLEADOSDataTable tableEMPLEADOS;
        
        private DETALLE_PLANES_MANTENIMIENTODataTable tableDETALLE_PLANES_MANTENIMIENTO;
        
        private UNIDADES_MEDIDADataTable tableUNIDADES_MEDIDA;
        
        private CAUSAS_FALLODataTable tableCAUSAS_FALLO;
        
        private REGISTROS_MANTENIMIENTOSDataTable tableREGISTROS_MANTENIMIENTOS;
        
        private global::System.Data.DataRelation relationrepuesto_tipoRepuesto_fk;
        
        private global::System.Data.DataRelation relationFK_REPUESTO_REP_RRMAN_REPUESTO;
        
        private global::System.Data.DataRelation relationmaquina_estadoMaquina_fk;
        
        private global::System.Data.DataRelation relationmaquina_fabricanteMaquina_fk;
        
        private global::System.Data.DataRelation relationdetallePlanMantenimiento_mantenimiento_fk;
        
        private global::System.Data.DataRelation relationFK_DETALLE__RELATIONS_UNIDADES;
        
        private global::System.Data.DataRelation relationFK_REPUESTO_RMAN_RRMA_REGISTRO;
        
        private global::System.Data.DataRelation relationFK_REGISTRO_CF_MAN_CAUSAS_F;
        
        private global::System.Data.DataRelation relationFK_REGISTRO_DPMAN_RMA_DETALLE_;
        
        private global::System.Data.DataRelation relationFK_REGISTRO_E_MAN_EMPLEADO;
        
        private global::System.Data.DataRelation relationFK_REGISTRO_MAN_RMAN_MANTENIM;
        
        private global::System.Data.DataRelation relationFK_REGISTRO_MAQ_RMAN_MAQUINAS;
        
        private global::System.Data.DataRelation relationFK_REGISTRO_TMAN_RMAN_TIPOS_MA;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsRegistrarMantenimiento() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsRegistrarMantenimiento(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["REPUESTOS"] != null)) {
                    base.Tables.Add(new REPUESTOSDataTable(ds.Tables["REPUESTOS"]));
                }
                if ((ds.Tables["TIPOS_REPUESTOS"] != null)) {
                    base.Tables.Add(new TIPOS_REPUESTOSDataTable(ds.Tables["TIPOS_REPUESTOS"]));
                }
                if ((ds.Tables["REPUESTOS_REGISTRO_MANTENIMIENTO"] != null)) {
                    base.Tables.Add(new REPUESTOS_REGISTRO_MANTENIMIENTODataTable(ds.Tables["REPUESTOS_REGISTRO_MANTENIMIENTO"]));
                }
                if ((ds.Tables["TIPOS_MANTENIMIENTOS"] != null)) {
                    base.Tables.Add(new TIPOS_MANTENIMIENTOSDataTable(ds.Tables["TIPOS_MANTENIMIENTOS"]));
                }
                if ((ds.Tables["MANTENIMIENTOS"] != null)) {
                    base.Tables.Add(new MANTENIMIENTOSDataTable(ds.Tables["MANTENIMIENTOS"]));
                }
                if ((ds.Tables["MAQUINAS"] != null)) {
                    base.Tables.Add(new MAQUINASDataTable(ds.Tables["MAQUINAS"]));
                }
                if ((ds.Tables["ESTADO_MAQUINAS"] != null)) {
                    base.Tables.Add(new ESTADO_MAQUINASDataTable(ds.Tables["ESTADO_MAQUINAS"]));
                }
                if ((ds.Tables["FABRICANTE_MAQUINAS"] != null)) {
                    base.Tables.Add(new FABRICANTE_MAQUINASDataTable(ds.Tables["FABRICANTE_MAQUINAS"]));
                }
                if ((ds.Tables["EMPLEADOS"] != null)) {
                    base.Tables.Add(new EMPLEADOSDataTable(ds.Tables["EMPLEADOS"]));
                }
                if ((ds.Tables["DETALLE_PLANES_MANTENIMIENTO"] != null)) {
                    base.Tables.Add(new DETALLE_PLANES_MANTENIMIENTODataTable(ds.Tables["DETALLE_PLANES_MANTENIMIENTO"]));
                }
                if ((ds.Tables["UNIDADES_MEDIDA"] != null)) {
                    base.Tables.Add(new UNIDADES_MEDIDADataTable(ds.Tables["UNIDADES_MEDIDA"]));
                }
                if ((ds.Tables["CAUSAS_FALLO"] != null)) {
                    base.Tables.Add(new CAUSAS_FALLODataTable(ds.Tables["CAUSAS_FALLO"]));
                }
                if ((ds.Tables["REGISTROS_MANTENIMIENTOS"] != null)) {
                    base.Tables.Add(new REGISTROS_MANTENIMIENTOSDataTable(ds.Tables["REGISTROS_MANTENIMIENTOS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public REPUESTOSDataTable REPUESTOS {
            get {
                return this.tableREPUESTOS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TIPOS_REPUESTOSDataTable TIPOS_REPUESTOS {
            get {
                return this.tableTIPOS_REPUESTOS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public REPUESTOS_REGISTRO_MANTENIMIENTODataTable REPUESTOS_REGISTRO_MANTENIMIENTO {
            get {
                return this.tableREPUESTOS_REGISTRO_MANTENIMIENTO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TIPOS_MANTENIMIENTOSDataTable TIPOS_MANTENIMIENTOS {
            get {
                return this.tableTIPOS_MANTENIMIENTOS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MANTENIMIENTOSDataTable MANTENIMIENTOS {
            get {
                return this.tableMANTENIMIENTOS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MAQUINASDataTable MAQUINAS {
            get {
                return this.tableMAQUINAS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ESTADO_MAQUINASDataTable ESTADO_MAQUINAS {
            get {
                return this.tableESTADO_MAQUINAS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FABRICANTE_MAQUINASDataTable FABRICANTE_MAQUINAS {
            get {
                return this.tableFABRICANTE_MAQUINAS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EMPLEADOSDataTable EMPLEADOS {
            get {
                return this.tableEMPLEADOS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DETALLE_PLANES_MANTENIMIENTODataTable DETALLE_PLANES_MANTENIMIENTO {
            get {
                return this.tableDETALLE_PLANES_MANTENIMIENTO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UNIDADES_MEDIDADataTable UNIDADES_MEDIDA {
            get {
                return this.tableUNIDADES_MEDIDA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CAUSAS_FALLODataTable CAUSAS_FALLO {
            get {
                return this.tableCAUSAS_FALLO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public REGISTROS_MANTENIMIENTOSDataTable REGISTROS_MANTENIMIENTOS {
            get {
                return this.tableREGISTROS_MANTENIMIENTOS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsRegistrarMantenimiento cln = ((dsRegistrarMantenimiento)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["REPUESTOS"] != null)) {
                    base.Tables.Add(new REPUESTOSDataTable(ds.Tables["REPUESTOS"]));
                }
                if ((ds.Tables["TIPOS_REPUESTOS"] != null)) {
                    base.Tables.Add(new TIPOS_REPUESTOSDataTable(ds.Tables["TIPOS_REPUESTOS"]));
                }
                if ((ds.Tables["REPUESTOS_REGISTRO_MANTENIMIENTO"] != null)) {
                    base.Tables.Add(new REPUESTOS_REGISTRO_MANTENIMIENTODataTable(ds.Tables["REPUESTOS_REGISTRO_MANTENIMIENTO"]));
                }
                if ((ds.Tables["TIPOS_MANTENIMIENTOS"] != null)) {
                    base.Tables.Add(new TIPOS_MANTENIMIENTOSDataTable(ds.Tables["TIPOS_MANTENIMIENTOS"]));
                }
                if ((ds.Tables["MANTENIMIENTOS"] != null)) {
                    base.Tables.Add(new MANTENIMIENTOSDataTable(ds.Tables["MANTENIMIENTOS"]));
                }
                if ((ds.Tables["MAQUINAS"] != null)) {
                    base.Tables.Add(new MAQUINASDataTable(ds.Tables["MAQUINAS"]));
                }
                if ((ds.Tables["ESTADO_MAQUINAS"] != null)) {
                    base.Tables.Add(new ESTADO_MAQUINASDataTable(ds.Tables["ESTADO_MAQUINAS"]));
                }
                if ((ds.Tables["FABRICANTE_MAQUINAS"] != null)) {
                    base.Tables.Add(new FABRICANTE_MAQUINASDataTable(ds.Tables["FABRICANTE_MAQUINAS"]));
                }
                if ((ds.Tables["EMPLEADOS"] != null)) {
                    base.Tables.Add(new EMPLEADOSDataTable(ds.Tables["EMPLEADOS"]));
                }
                if ((ds.Tables["DETALLE_PLANES_MANTENIMIENTO"] != null)) {
                    base.Tables.Add(new DETALLE_PLANES_MANTENIMIENTODataTable(ds.Tables["DETALLE_PLANES_MANTENIMIENTO"]));
                }
                if ((ds.Tables["UNIDADES_MEDIDA"] != null)) {
                    base.Tables.Add(new UNIDADES_MEDIDADataTable(ds.Tables["UNIDADES_MEDIDA"]));
                }
                if ((ds.Tables["CAUSAS_FALLO"] != null)) {
                    base.Tables.Add(new CAUSAS_FALLODataTable(ds.Tables["CAUSAS_FALLO"]));
                }
                if ((ds.Tables["REGISTROS_MANTENIMIENTOS"] != null)) {
                    base.Tables.Add(new REGISTROS_MANTENIMIENTOSDataTable(ds.Tables["REGISTROS_MANTENIMIENTOS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableREPUESTOS = ((REPUESTOSDataTable)(base.Tables["REPUESTOS"]));
            if ((initTable == true)) {
                if ((this.tableREPUESTOS != null)) {
                    this.tableREPUESTOS.InitVars();
                }
            }
            this.tableTIPOS_REPUESTOS = ((TIPOS_REPUESTOSDataTable)(base.Tables["TIPOS_REPUESTOS"]));
            if ((initTable == true)) {
                if ((this.tableTIPOS_REPUESTOS != null)) {
                    this.tableTIPOS_REPUESTOS.InitVars();
                }
            }
            this.tableREPUESTOS_REGISTRO_MANTENIMIENTO = ((REPUESTOS_REGISTRO_MANTENIMIENTODataTable)(base.Tables["REPUESTOS_REGISTRO_MANTENIMIENTO"]));
            if ((initTable == true)) {
                if ((this.tableREPUESTOS_REGISTRO_MANTENIMIENTO != null)) {
                    this.tableREPUESTOS_REGISTRO_MANTENIMIENTO.InitVars();
                }
            }
            this.tableTIPOS_MANTENIMIENTOS = ((TIPOS_MANTENIMIENTOSDataTable)(base.Tables["TIPOS_MANTENIMIENTOS"]));
            if ((initTable == true)) {
                if ((this.tableTIPOS_MANTENIMIENTOS != null)) {
                    this.tableTIPOS_MANTENIMIENTOS.InitVars();
                }
            }
            this.tableMANTENIMIENTOS = ((MANTENIMIENTOSDataTable)(base.Tables["MANTENIMIENTOS"]));
            if ((initTable == true)) {
                if ((this.tableMANTENIMIENTOS != null)) {
                    this.tableMANTENIMIENTOS.InitVars();
                }
            }
            this.tableMAQUINAS = ((MAQUINASDataTable)(base.Tables["MAQUINAS"]));
            if ((initTable == true)) {
                if ((this.tableMAQUINAS != null)) {
                    this.tableMAQUINAS.InitVars();
                }
            }
            this.tableESTADO_MAQUINAS = ((ESTADO_MAQUINASDataTable)(base.Tables["ESTADO_MAQUINAS"]));
            if ((initTable == true)) {
                if ((this.tableESTADO_MAQUINAS != null)) {
                    this.tableESTADO_MAQUINAS.InitVars();
                }
            }
            this.tableFABRICANTE_MAQUINAS = ((FABRICANTE_MAQUINASDataTable)(base.Tables["FABRICANTE_MAQUINAS"]));
            if ((initTable == true)) {
                if ((this.tableFABRICANTE_MAQUINAS != null)) {
                    this.tableFABRICANTE_MAQUINAS.InitVars();
                }
            }
            this.tableEMPLEADOS = ((EMPLEADOSDataTable)(base.Tables["EMPLEADOS"]));
            if ((initTable == true)) {
                if ((this.tableEMPLEADOS != null)) {
                    this.tableEMPLEADOS.InitVars();
                }
            }
            this.tableDETALLE_PLANES_MANTENIMIENTO = ((DETALLE_PLANES_MANTENIMIENTODataTable)(base.Tables["DETALLE_PLANES_MANTENIMIENTO"]));
            if ((initTable == true)) {
                if ((this.tableDETALLE_PLANES_MANTENIMIENTO != null)) {
                    this.tableDETALLE_PLANES_MANTENIMIENTO.InitVars();
                }
            }
            this.tableUNIDADES_MEDIDA = ((UNIDADES_MEDIDADataTable)(base.Tables["UNIDADES_MEDIDA"]));
            if ((initTable == true)) {
                if ((this.tableUNIDADES_MEDIDA != null)) {
                    this.tableUNIDADES_MEDIDA.InitVars();
                }
            }
            this.tableCAUSAS_FALLO = ((CAUSAS_FALLODataTable)(base.Tables["CAUSAS_FALLO"]));
            if ((initTable == true)) {
                if ((this.tableCAUSAS_FALLO != null)) {
                    this.tableCAUSAS_FALLO.InitVars();
                }
            }
            this.tableREGISTROS_MANTENIMIENTOS = ((REGISTROS_MANTENIMIENTOSDataTable)(base.Tables["REGISTROS_MANTENIMIENTOS"]));
            if ((initTable == true)) {
                if ((this.tableREGISTROS_MANTENIMIENTOS != null)) {
                    this.tableREGISTROS_MANTENIMIENTOS.InitVars();
                }
            }
            this.relationrepuesto_tipoRepuesto_fk = this.Relations["repuesto_tipoRepuesto_fk"];
            this.relationFK_REPUESTO_REP_RRMAN_REPUESTO = this.Relations["FK_REPUESTO_REP_RRMAN_REPUESTO"];
            this.relationmaquina_estadoMaquina_fk = this.Relations["maquina_estadoMaquina_fk"];
            this.relationmaquina_fabricanteMaquina_fk = this.Relations["maquina_fabricanteMaquina_fk"];
            this.relationdetallePlanMantenimiento_mantenimiento_fk = this.Relations["detallePlanMantenimiento_mantenimiento_fk"];
            this.relationFK_DETALLE__RELATIONS_UNIDADES = this.Relations["FK_DETALLE__RELATIONS_UNIDADES"];
            this.relationFK_REPUESTO_RMAN_RRMA_REGISTRO = this.Relations["FK_REPUESTO_RMAN_RRMA_REGISTRO"];
            this.relationFK_REGISTRO_CF_MAN_CAUSAS_F = this.Relations["FK_REGISTRO_CF_MAN_CAUSAS_F"];
            this.relationFK_REGISTRO_DPMAN_RMA_DETALLE_ = this.Relations["FK_REGISTRO_DPMAN_RMA_DETALLE_"];
            this.relationFK_REGISTRO_E_MAN_EMPLEADO = this.Relations["FK_REGISTRO_E_MAN_EMPLEADO"];
            this.relationFK_REGISTRO_MAN_RMAN_MANTENIM = this.Relations["FK_REGISTRO_MAN_RMAN_MANTENIM"];
            this.relationFK_REGISTRO_MAQ_RMAN_MAQUINAS = this.Relations["FK_REGISTRO_MAQ_RMAN_MAQUINAS"];
            this.relationFK_REGISTRO_TMAN_RMAN_TIPOS_MA = this.Relations["FK_REGISTRO_TMAN_RMAN_TIPOS_MA"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsRegistrarMantenimiento";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsRegistrarMantenimiento.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableREPUESTOS = new REPUESTOSDataTable();
            base.Tables.Add(this.tableREPUESTOS);
            this.tableTIPOS_REPUESTOS = new TIPOS_REPUESTOSDataTable();
            base.Tables.Add(this.tableTIPOS_REPUESTOS);
            this.tableREPUESTOS_REGISTRO_MANTENIMIENTO = new REPUESTOS_REGISTRO_MANTENIMIENTODataTable();
            base.Tables.Add(this.tableREPUESTOS_REGISTRO_MANTENIMIENTO);
            this.tableTIPOS_MANTENIMIENTOS = new TIPOS_MANTENIMIENTOSDataTable();
            base.Tables.Add(this.tableTIPOS_MANTENIMIENTOS);
            this.tableMANTENIMIENTOS = new MANTENIMIENTOSDataTable();
            base.Tables.Add(this.tableMANTENIMIENTOS);
            this.tableMAQUINAS = new MAQUINASDataTable();
            base.Tables.Add(this.tableMAQUINAS);
            this.tableESTADO_MAQUINAS = new ESTADO_MAQUINASDataTable();
            base.Tables.Add(this.tableESTADO_MAQUINAS);
            this.tableFABRICANTE_MAQUINAS = new FABRICANTE_MAQUINASDataTable();
            base.Tables.Add(this.tableFABRICANTE_MAQUINAS);
            this.tableEMPLEADOS = new EMPLEADOSDataTable();
            base.Tables.Add(this.tableEMPLEADOS);
            this.tableDETALLE_PLANES_MANTENIMIENTO = new DETALLE_PLANES_MANTENIMIENTODataTable();
            base.Tables.Add(this.tableDETALLE_PLANES_MANTENIMIENTO);
            this.tableUNIDADES_MEDIDA = new UNIDADES_MEDIDADataTable();
            base.Tables.Add(this.tableUNIDADES_MEDIDA);
            this.tableCAUSAS_FALLO = new CAUSAS_FALLODataTable();
            base.Tables.Add(this.tableCAUSAS_FALLO);
            this.tableREGISTROS_MANTENIMIENTOS = new REGISTROS_MANTENIMIENTOSDataTable();
            base.Tables.Add(this.tableREGISTROS_MANTENIMIENTOS);
            this.relationrepuesto_tipoRepuesto_fk = new global::System.Data.DataRelation("repuesto_tipoRepuesto_fk", new global::System.Data.DataColumn[] {
                        this.tableTIPOS_REPUESTOS.TREP_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableREPUESTOS.TREP_CODIGOColumn}, false);
            this.Relations.Add(this.relationrepuesto_tipoRepuesto_fk);
            this.relationFK_REPUESTO_REP_RRMAN_REPUESTO = new global::System.Data.DataRelation("FK_REPUESTO_REP_RRMAN_REPUESTO", new global::System.Data.DataColumn[] {
                        this.tableREPUESTOS.REP_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableREPUESTOS_REGISTRO_MANTENIMIENTO.REP_CODIGOColumn}, false);
            this.Relations.Add(this.relationFK_REPUESTO_REP_RRMAN_REPUESTO);
            this.relationmaquina_estadoMaquina_fk = new global::System.Data.DataRelation("maquina_estadoMaquina_fk", new global::System.Data.DataColumn[] {
                        this.tableESTADO_MAQUINAS.EMAQ_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableMAQUINAS.EMAQ_CODIGOColumn}, false);
            this.Relations.Add(this.relationmaquina_estadoMaquina_fk);
            this.relationmaquina_fabricanteMaquina_fk = new global::System.Data.DataRelation("maquina_fabricanteMaquina_fk", new global::System.Data.DataColumn[] {
                        this.tableFABRICANTE_MAQUINAS.FAB_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableMAQUINAS.FAB_CODIGOColumn}, false);
            this.Relations.Add(this.relationmaquina_fabricanteMaquina_fk);
            this.relationdetallePlanMantenimiento_mantenimiento_fk = new global::System.Data.DataRelation("detallePlanMantenimiento_mantenimiento_fk", new global::System.Data.DataColumn[] {
                        this.tableMANTENIMIENTOS.MAN_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableDETALLE_PLANES_MANTENIMIENTO.MAN_CODIGOColumn}, false);
            this.Relations.Add(this.relationdetallePlanMantenimiento_mantenimiento_fk);
            this.relationFK_DETALLE__RELATIONS_UNIDADES = new global::System.Data.DataRelation("FK_DETALLE__RELATIONS_UNIDADES", new global::System.Data.DataColumn[] {
                        this.tableUNIDADES_MEDIDA.UMED_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableDETALLE_PLANES_MANTENIMIENTO.UMED_CODIGOColumn}, false);
            this.Relations.Add(this.relationFK_DETALLE__RELATIONS_UNIDADES);
            this.relationFK_REPUESTO_RMAN_RRMA_REGISTRO = new global::System.Data.DataRelation("FK_REPUESTO_RMAN_RRMA_REGISTRO", new global::System.Data.DataColumn[] {
                        this.tableREGISTROS_MANTENIMIENTOS.RMAN_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableREPUESTOS_REGISTRO_MANTENIMIENTO.RMAN_CODIGOColumn}, false);
            this.Relations.Add(this.relationFK_REPUESTO_RMAN_RRMA_REGISTRO);
            this.relationFK_REGISTRO_CF_MAN_CAUSAS_F = new global::System.Data.DataRelation("FK_REGISTRO_CF_MAN_CAUSAS_F", new global::System.Data.DataColumn[] {
                        this.tableCAUSAS_FALLO.CF_NUMEROColumn}, new global::System.Data.DataColumn[] {
                        this.tableREGISTROS_MANTENIMIENTOS.CF_NUMEROColumn}, false);
            this.Relations.Add(this.relationFK_REGISTRO_CF_MAN_CAUSAS_F);
            this.relationFK_REGISTRO_DPMAN_RMA_DETALLE_ = new global::System.Data.DataRelation("FK_REGISTRO_DPMAN_RMA_DETALLE_", new global::System.Data.DataColumn[] {
                        this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableREGISTROS_MANTENIMIENTOS.DPMAN_CODIGOColumn}, false);
            this.Relations.Add(this.relationFK_REGISTRO_DPMAN_RMA_DETALLE_);
            this.relationFK_REGISTRO_E_MAN_EMPLEADO = new global::System.Data.DataRelation("FK_REGISTRO_E_MAN_EMPLEADO", new global::System.Data.DataColumn[] {
                        this.tableEMPLEADOS.E_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableREGISTROS_MANTENIMIENTOS.E_CODIGOColumn}, false);
            this.Relations.Add(this.relationFK_REGISTRO_E_MAN_EMPLEADO);
            this.relationFK_REGISTRO_MAN_RMAN_MANTENIM = new global::System.Data.DataRelation("FK_REGISTRO_MAN_RMAN_MANTENIM", new global::System.Data.DataColumn[] {
                        this.tableMANTENIMIENTOS.MAN_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableREGISTROS_MANTENIMIENTOS.MAN_CODIGOColumn}, false);
            this.Relations.Add(this.relationFK_REGISTRO_MAN_RMAN_MANTENIM);
            this.relationFK_REGISTRO_MAQ_RMAN_MAQUINAS = new global::System.Data.DataRelation("FK_REGISTRO_MAQ_RMAN_MAQUINAS", new global::System.Data.DataColumn[] {
                        this.tableMAQUINAS.MAQ_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableREGISTROS_MANTENIMIENTOS.MAQ_CODIGOColumn}, false);
            this.Relations.Add(this.relationFK_REGISTRO_MAQ_RMAN_MAQUINAS);
            this.relationFK_REGISTRO_TMAN_RMAN_TIPOS_MA = new global::System.Data.DataRelation("FK_REGISTRO_TMAN_RMAN_TIPOS_MA", new global::System.Data.DataColumn[] {
                        this.tableTIPOS_MANTENIMIENTOS.TMAN_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableREGISTROS_MANTENIMIENTOS.TMAN_CODIGOColumn}, false);
            this.Relations.Add(this.relationFK_REGISTRO_TMAN_RMAN_TIPOS_MA);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeREPUESTOS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTIPOS_REPUESTOS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeREPUESTOS_REGISTRO_MANTENIMIENTO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTIPOS_MANTENIMIENTOS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMANTENIMIENTOS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMAQUINAS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeESTADO_MAQUINAS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFABRICANTE_MAQUINAS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEMPLEADOS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDETALLE_PLANES_MANTENIMIENTO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUNIDADES_MEDIDA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCAUSAS_FALLO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeREGISTROS_MANTENIMIENTOS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsRegistrarMantenimiento ds = new dsRegistrarMantenimiento();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void REPUESTOSRowChangeEventHandler(object sender, REPUESTOSRowChangeEvent e);
        
        public delegate void TIPOS_REPUESTOSRowChangeEventHandler(object sender, TIPOS_REPUESTOSRowChangeEvent e);
        
        public delegate void REPUESTOS_REGISTRO_MANTENIMIENTORowChangeEventHandler(object sender, REPUESTOS_REGISTRO_MANTENIMIENTORowChangeEvent e);
        
        public delegate void TIPOS_MANTENIMIENTOSRowChangeEventHandler(object sender, TIPOS_MANTENIMIENTOSRowChangeEvent e);
        
        public delegate void MANTENIMIENTOSRowChangeEventHandler(object sender, MANTENIMIENTOSRowChangeEvent e);
        
        public delegate void MAQUINASRowChangeEventHandler(object sender, MAQUINASRowChangeEvent e);
        
        public delegate void ESTADO_MAQUINASRowChangeEventHandler(object sender, ESTADO_MAQUINASRowChangeEvent e);
        
        public delegate void FABRICANTE_MAQUINASRowChangeEventHandler(object sender, FABRICANTE_MAQUINASRowChangeEvent e);
        
        public delegate void EMPLEADOSRowChangeEventHandler(object sender, EMPLEADOSRowChangeEvent e);
        
        public delegate void DETALLE_PLANES_MANTENIMIENTORowChangeEventHandler(object sender, DETALLE_PLANES_MANTENIMIENTORowChangeEvent e);
        
        public delegate void UNIDADES_MEDIDARowChangeEventHandler(object sender, UNIDADES_MEDIDARowChangeEvent e);
        
        public delegate void CAUSAS_FALLORowChangeEventHandler(object sender, CAUSAS_FALLORowChangeEvent e);
        
        public delegate void REGISTROS_MANTENIMIENTOSRowChangeEventHandler(object sender, REGISTROS_MANTENIMIENTOSRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class REPUESTOSDataTable : global::System.Data.TypedTableBase<REPUESTOSRow> {
            
            private global::System.Data.DataColumn columnREP_CODIGO;
            
            private global::System.Data.DataColumn columnTREP_CODIGO;
            
            private global::System.Data.DataColumn columnREP_NOMBRE;
            
            private global::System.Data.DataColumn columnREP_DESCRIPCION;
            
            private global::System.Data.DataColumn columnREP_CANTIDADSTOCK;
            
            private global::System.Data.DataColumn columnREP_COSTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REPUESTOSDataTable() {
                this.TableName = "REPUESTOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal REPUESTOSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected REPUESTOSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REP_CODIGOColumn {
                get {
                    return this.columnREP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TREP_CODIGOColumn {
                get {
                    return this.columnTREP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REP_NOMBREColumn {
                get {
                    return this.columnREP_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REP_DESCRIPCIONColumn {
                get {
                    return this.columnREP_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REP_CANTIDADSTOCKColumn {
                get {
                    return this.columnREP_CANTIDADSTOCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REP_COSTOColumn {
                get {
                    return this.columnREP_COSTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REPUESTOSRow this[int index] {
                get {
                    return ((REPUESTOSRow)(this.Rows[index]));
                }
            }
            
            public event REPUESTOSRowChangeEventHandler REPUESTOSRowChanging;
            
            public event REPUESTOSRowChangeEventHandler REPUESTOSRowChanged;
            
            public event REPUESTOSRowChangeEventHandler REPUESTOSRowDeleting;
            
            public event REPUESTOSRowChangeEventHandler REPUESTOSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddREPUESTOSRow(REPUESTOSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REPUESTOSRow AddREPUESTOSRow(TIPOS_REPUESTOSRow parentTIPOS_REPUESTOSRowByrepuesto_tipoRepuesto_fk, string REP_NOMBRE, string REP_DESCRIPCION, int REP_CANTIDADSTOCK, float REP_COSTO) {
                REPUESTOSRow rowREPUESTOSRow = ((REPUESTOSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        REP_NOMBRE,
                        REP_DESCRIPCION,
                        REP_CANTIDADSTOCK,
                        REP_COSTO};
                if ((parentTIPOS_REPUESTOSRowByrepuesto_tipoRepuesto_fk != null)) {
                    columnValuesArray[1] = parentTIPOS_REPUESTOSRowByrepuesto_tipoRepuesto_fk[0];
                }
                rowREPUESTOSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowREPUESTOSRow);
                return rowREPUESTOSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REPUESTOSRow FindByREP_CODIGO(decimal REP_CODIGO) {
                return ((REPUESTOSRow)(this.Rows.Find(new object[] {
                            REP_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                REPUESTOSDataTable cln = ((REPUESTOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new REPUESTOSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnREP_CODIGO = base.Columns["REP_CODIGO"];
                this.columnTREP_CODIGO = base.Columns["TREP_CODIGO"];
                this.columnREP_NOMBRE = base.Columns["REP_NOMBRE"];
                this.columnREP_DESCRIPCION = base.Columns["REP_DESCRIPCION"];
                this.columnREP_CANTIDADSTOCK = base.Columns["REP_CANTIDADSTOCK"];
                this.columnREP_COSTO = base.Columns["REP_COSTO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnREP_CODIGO = new global::System.Data.DataColumn("REP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREP_CODIGO);
                this.columnTREP_CODIGO = new global::System.Data.DataColumn("TREP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTREP_CODIGO);
                this.columnREP_NOMBRE = new global::System.Data.DataColumn("REP_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREP_NOMBRE);
                this.columnREP_DESCRIPCION = new global::System.Data.DataColumn("REP_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREP_DESCRIPCION);
                this.columnREP_CANTIDADSTOCK = new global::System.Data.DataColumn("REP_CANTIDADSTOCK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREP_CANTIDADSTOCK);
                this.columnREP_COSTO = new global::System.Data.DataColumn("REP_COSTO", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREP_COSTO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnREP_CODIGO}, true));
                this.columnREP_CODIGO.AutoIncrement = true;
                this.columnREP_CODIGO.AutoIncrementSeed = -1;
                this.columnREP_CODIGO.AutoIncrementStep = -1;
                this.columnREP_CODIGO.AllowDBNull = false;
                this.columnREP_CODIGO.ReadOnly = true;
                this.columnREP_CODIGO.Unique = true;
                this.columnTREP_CODIGO.AllowDBNull = false;
                this.columnREP_NOMBRE.MaxLength = 80;
                this.columnREP_DESCRIPCION.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REPUESTOSRow NewREPUESTOSRow() {
                return ((REPUESTOSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new REPUESTOSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(REPUESTOSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.REPUESTOSRowChanged != null)) {
                    this.REPUESTOSRowChanged(this, new REPUESTOSRowChangeEvent(((REPUESTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.REPUESTOSRowChanging != null)) {
                    this.REPUESTOSRowChanging(this, new REPUESTOSRowChangeEvent(((REPUESTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.REPUESTOSRowDeleted != null)) {
                    this.REPUESTOSRowDeleted(this, new REPUESTOSRowChangeEvent(((REPUESTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.REPUESTOSRowDeleting != null)) {
                    this.REPUESTOSRowDeleting(this, new REPUESTOSRowChangeEvent(((REPUESTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveREPUESTOSRow(REPUESTOSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRegistrarMantenimiento ds = new dsRegistrarMantenimiento();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "REPUESTOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TIPOS_REPUESTOSDataTable : global::System.Data.TypedTableBase<TIPOS_REPUESTOSRow> {
            
            private global::System.Data.DataColumn columnTREP_CODIGO;
            
            private global::System.Data.DataColumn columnTREP_NOMBRE;
            
            private global::System.Data.DataColumn columnTREP_DESCRIPCION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_REPUESTOSDataTable() {
                this.TableName = "TIPOS_REPUESTOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TIPOS_REPUESTOSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TIPOS_REPUESTOSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TREP_CODIGOColumn {
                get {
                    return this.columnTREP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TREP_NOMBREColumn {
                get {
                    return this.columnTREP_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TREP_DESCRIPCIONColumn {
                get {
                    return this.columnTREP_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_REPUESTOSRow this[int index] {
                get {
                    return ((TIPOS_REPUESTOSRow)(this.Rows[index]));
                }
            }
            
            public event TIPOS_REPUESTOSRowChangeEventHandler TIPOS_REPUESTOSRowChanging;
            
            public event TIPOS_REPUESTOSRowChangeEventHandler TIPOS_REPUESTOSRowChanged;
            
            public event TIPOS_REPUESTOSRowChangeEventHandler TIPOS_REPUESTOSRowDeleting;
            
            public event TIPOS_REPUESTOSRowChangeEventHandler TIPOS_REPUESTOSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTIPOS_REPUESTOSRow(TIPOS_REPUESTOSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_REPUESTOSRow AddTIPOS_REPUESTOSRow(string TREP_NOMBRE, string TREP_DESCRIPCION) {
                TIPOS_REPUESTOSRow rowTIPOS_REPUESTOSRow = ((TIPOS_REPUESTOSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TREP_NOMBRE,
                        TREP_DESCRIPCION};
                rowTIPOS_REPUESTOSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTIPOS_REPUESTOSRow);
                return rowTIPOS_REPUESTOSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_REPUESTOSRow FindByTREP_CODIGO(decimal TREP_CODIGO) {
                return ((TIPOS_REPUESTOSRow)(this.Rows.Find(new object[] {
                            TREP_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TIPOS_REPUESTOSDataTable cln = ((TIPOS_REPUESTOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TIPOS_REPUESTOSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTREP_CODIGO = base.Columns["TREP_CODIGO"];
                this.columnTREP_NOMBRE = base.Columns["TREP_NOMBRE"];
                this.columnTREP_DESCRIPCION = base.Columns["TREP_DESCRIPCION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTREP_CODIGO = new global::System.Data.DataColumn("TREP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTREP_CODIGO);
                this.columnTREP_NOMBRE = new global::System.Data.DataColumn("TREP_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTREP_NOMBRE);
                this.columnTREP_DESCRIPCION = new global::System.Data.DataColumn("TREP_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTREP_DESCRIPCION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTREP_CODIGO}, true));
                this.columnTREP_CODIGO.AutoIncrement = true;
                this.columnTREP_CODIGO.AutoIncrementSeed = -1;
                this.columnTREP_CODIGO.AutoIncrementStep = -1;
                this.columnTREP_CODIGO.AllowDBNull = false;
                this.columnTREP_CODIGO.ReadOnly = true;
                this.columnTREP_CODIGO.Unique = true;
                this.columnTREP_NOMBRE.MaxLength = 80;
                this.columnTREP_DESCRIPCION.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_REPUESTOSRow NewTIPOS_REPUESTOSRow() {
                return ((TIPOS_REPUESTOSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TIPOS_REPUESTOSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TIPOS_REPUESTOSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TIPOS_REPUESTOSRowChanged != null)) {
                    this.TIPOS_REPUESTOSRowChanged(this, new TIPOS_REPUESTOSRowChangeEvent(((TIPOS_REPUESTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TIPOS_REPUESTOSRowChanging != null)) {
                    this.TIPOS_REPUESTOSRowChanging(this, new TIPOS_REPUESTOSRowChangeEvent(((TIPOS_REPUESTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TIPOS_REPUESTOSRowDeleted != null)) {
                    this.TIPOS_REPUESTOSRowDeleted(this, new TIPOS_REPUESTOSRowChangeEvent(((TIPOS_REPUESTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TIPOS_REPUESTOSRowDeleting != null)) {
                    this.TIPOS_REPUESTOSRowDeleting(this, new TIPOS_REPUESTOSRowChangeEvent(((TIPOS_REPUESTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTIPOS_REPUESTOSRow(TIPOS_REPUESTOSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRegistrarMantenimiento ds = new dsRegistrarMantenimiento();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TIPOS_REPUESTOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class REPUESTOS_REGISTRO_MANTENIMIENTODataTable : global::System.Data.TypedTableBase<REPUESTOS_REGISTRO_MANTENIMIENTORow> {
            
            private global::System.Data.DataColumn columnRRMAN_CODIGO;
            
            private global::System.Data.DataColumn columnRMAN_CODIGO;
            
            private global::System.Data.DataColumn columnREP_CODIGO;
            
            private global::System.Data.DataColumn columnRRMAN_CANTIDAD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REPUESTOS_REGISTRO_MANTENIMIENTODataTable() {
                this.TableName = "REPUESTOS_REGISTRO_MANTENIMIENTO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal REPUESTOS_REGISTRO_MANTENIMIENTODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected REPUESTOS_REGISTRO_MANTENIMIENTODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RRMAN_CODIGOColumn {
                get {
                    return this.columnRRMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMAN_CODIGOColumn {
                get {
                    return this.columnRMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REP_CODIGOColumn {
                get {
                    return this.columnREP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RRMAN_CANTIDADColumn {
                get {
                    return this.columnRRMAN_CANTIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REPUESTOS_REGISTRO_MANTENIMIENTORow this[int index] {
                get {
                    return ((REPUESTOS_REGISTRO_MANTENIMIENTORow)(this.Rows[index]));
                }
            }
            
            public event REPUESTOS_REGISTRO_MANTENIMIENTORowChangeEventHandler REPUESTOS_REGISTRO_MANTENIMIENTORowChanging;
            
            public event REPUESTOS_REGISTRO_MANTENIMIENTORowChangeEventHandler REPUESTOS_REGISTRO_MANTENIMIENTORowChanged;
            
            public event REPUESTOS_REGISTRO_MANTENIMIENTORowChangeEventHandler REPUESTOS_REGISTRO_MANTENIMIENTORowDeleting;
            
            public event REPUESTOS_REGISTRO_MANTENIMIENTORowChangeEventHandler REPUESTOS_REGISTRO_MANTENIMIENTORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddREPUESTOS_REGISTRO_MANTENIMIENTORow(REPUESTOS_REGISTRO_MANTENIMIENTORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REPUESTOS_REGISTRO_MANTENIMIENTORow AddREPUESTOS_REGISTRO_MANTENIMIENTORow(REGISTROS_MANTENIMIENTOSRow parentREGISTROS_MANTENIMIENTOSRowByFK_REPUESTO_RMAN_RRMA_REGISTRO, REPUESTOSRow parentREPUESTOSRowByFK_REPUESTO_REP_RRMAN_REPUESTO, decimal RRMAN_CANTIDAD) {
                REPUESTOS_REGISTRO_MANTENIMIENTORow rowREPUESTOS_REGISTRO_MANTENIMIENTORow = ((REPUESTOS_REGISTRO_MANTENIMIENTORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        RRMAN_CANTIDAD};
                if ((parentREGISTROS_MANTENIMIENTOSRowByFK_REPUESTO_RMAN_RRMA_REGISTRO != null)) {
                    columnValuesArray[1] = parentREGISTROS_MANTENIMIENTOSRowByFK_REPUESTO_RMAN_RRMA_REGISTRO[0];
                }
                if ((parentREPUESTOSRowByFK_REPUESTO_REP_RRMAN_REPUESTO != null)) {
                    columnValuesArray[2] = parentREPUESTOSRowByFK_REPUESTO_REP_RRMAN_REPUESTO[0];
                }
                rowREPUESTOS_REGISTRO_MANTENIMIENTORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowREPUESTOS_REGISTRO_MANTENIMIENTORow);
                return rowREPUESTOS_REGISTRO_MANTENIMIENTORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REPUESTOS_REGISTRO_MANTENIMIENTORow FindByRRMAN_CODIGO(decimal RRMAN_CODIGO) {
                return ((REPUESTOS_REGISTRO_MANTENIMIENTORow)(this.Rows.Find(new object[] {
                            RRMAN_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                REPUESTOS_REGISTRO_MANTENIMIENTODataTable cln = ((REPUESTOS_REGISTRO_MANTENIMIENTODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new REPUESTOS_REGISTRO_MANTENIMIENTODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRRMAN_CODIGO = base.Columns["RRMAN_CODIGO"];
                this.columnRMAN_CODIGO = base.Columns["RMAN_CODIGO"];
                this.columnREP_CODIGO = base.Columns["REP_CODIGO"];
                this.columnRRMAN_CANTIDAD = base.Columns["RRMAN_CANTIDAD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRRMAN_CODIGO = new global::System.Data.DataColumn("RRMAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRRMAN_CODIGO);
                this.columnRMAN_CODIGO = new global::System.Data.DataColumn("RMAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMAN_CODIGO);
                this.columnREP_CODIGO = new global::System.Data.DataColumn("REP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREP_CODIGO);
                this.columnRRMAN_CANTIDAD = new global::System.Data.DataColumn("RRMAN_CANTIDAD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRRMAN_CANTIDAD);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRRMAN_CODIGO}, true));
                this.columnRRMAN_CODIGO.AutoIncrement = true;
                this.columnRRMAN_CODIGO.AutoIncrementSeed = -1;
                this.columnRRMAN_CODIGO.AutoIncrementStep = -1;
                this.columnRRMAN_CODIGO.AllowDBNull = false;
                this.columnRRMAN_CODIGO.ReadOnly = true;
                this.columnRRMAN_CODIGO.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REPUESTOS_REGISTRO_MANTENIMIENTORow NewREPUESTOS_REGISTRO_MANTENIMIENTORow() {
                return ((REPUESTOS_REGISTRO_MANTENIMIENTORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new REPUESTOS_REGISTRO_MANTENIMIENTORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(REPUESTOS_REGISTRO_MANTENIMIENTORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.REPUESTOS_REGISTRO_MANTENIMIENTORowChanged != null)) {
                    this.REPUESTOS_REGISTRO_MANTENIMIENTORowChanged(this, new REPUESTOS_REGISTRO_MANTENIMIENTORowChangeEvent(((REPUESTOS_REGISTRO_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.REPUESTOS_REGISTRO_MANTENIMIENTORowChanging != null)) {
                    this.REPUESTOS_REGISTRO_MANTENIMIENTORowChanging(this, new REPUESTOS_REGISTRO_MANTENIMIENTORowChangeEvent(((REPUESTOS_REGISTRO_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.REPUESTOS_REGISTRO_MANTENIMIENTORowDeleted != null)) {
                    this.REPUESTOS_REGISTRO_MANTENIMIENTORowDeleted(this, new REPUESTOS_REGISTRO_MANTENIMIENTORowChangeEvent(((REPUESTOS_REGISTRO_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.REPUESTOS_REGISTRO_MANTENIMIENTORowDeleting != null)) {
                    this.REPUESTOS_REGISTRO_MANTENIMIENTORowDeleting(this, new REPUESTOS_REGISTRO_MANTENIMIENTORowChangeEvent(((REPUESTOS_REGISTRO_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveREPUESTOS_REGISTRO_MANTENIMIENTORow(REPUESTOS_REGISTRO_MANTENIMIENTORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRegistrarMantenimiento ds = new dsRegistrarMantenimiento();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "REPUESTOS_REGISTRO_MANTENIMIENTODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TIPOS_MANTENIMIENTOSDataTable : global::System.Data.TypedTableBase<TIPOS_MANTENIMIENTOSRow> {
            
            private global::System.Data.DataColumn columnTMAN_CODIGO;
            
            private global::System.Data.DataColumn columnTMAN_NOMBRE;
            
            private global::System.Data.DataColumn columnTMAN_DESCRIPCION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_MANTENIMIENTOSDataTable() {
                this.TableName = "TIPOS_MANTENIMIENTOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TIPOS_MANTENIMIENTOSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TIPOS_MANTENIMIENTOSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TMAN_CODIGOColumn {
                get {
                    return this.columnTMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TMAN_NOMBREColumn {
                get {
                    return this.columnTMAN_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TMAN_DESCRIPCIONColumn {
                get {
                    return this.columnTMAN_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_MANTENIMIENTOSRow this[int index] {
                get {
                    return ((TIPOS_MANTENIMIENTOSRow)(this.Rows[index]));
                }
            }
            
            public event TIPOS_MANTENIMIENTOSRowChangeEventHandler TIPOS_MANTENIMIENTOSRowChanging;
            
            public event TIPOS_MANTENIMIENTOSRowChangeEventHandler TIPOS_MANTENIMIENTOSRowChanged;
            
            public event TIPOS_MANTENIMIENTOSRowChangeEventHandler TIPOS_MANTENIMIENTOSRowDeleting;
            
            public event TIPOS_MANTENIMIENTOSRowChangeEventHandler TIPOS_MANTENIMIENTOSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTIPOS_MANTENIMIENTOSRow(TIPOS_MANTENIMIENTOSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_MANTENIMIENTOSRow AddTIPOS_MANTENIMIENTOSRow(string TMAN_NOMBRE, string TMAN_DESCRIPCION) {
                TIPOS_MANTENIMIENTOSRow rowTIPOS_MANTENIMIENTOSRow = ((TIPOS_MANTENIMIENTOSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TMAN_NOMBRE,
                        TMAN_DESCRIPCION};
                rowTIPOS_MANTENIMIENTOSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTIPOS_MANTENIMIENTOSRow);
                return rowTIPOS_MANTENIMIENTOSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_MANTENIMIENTOSRow FindByTMAN_CODIGO(decimal TMAN_CODIGO) {
                return ((TIPOS_MANTENIMIENTOSRow)(this.Rows.Find(new object[] {
                            TMAN_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TIPOS_MANTENIMIENTOSDataTable cln = ((TIPOS_MANTENIMIENTOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TIPOS_MANTENIMIENTOSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTMAN_CODIGO = base.Columns["TMAN_CODIGO"];
                this.columnTMAN_NOMBRE = base.Columns["TMAN_NOMBRE"];
                this.columnTMAN_DESCRIPCION = base.Columns["TMAN_DESCRIPCION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTMAN_CODIGO = new global::System.Data.DataColumn("TMAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTMAN_CODIGO);
                this.columnTMAN_NOMBRE = new global::System.Data.DataColumn("TMAN_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTMAN_NOMBRE);
                this.columnTMAN_DESCRIPCION = new global::System.Data.DataColumn("TMAN_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTMAN_DESCRIPCION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTMAN_CODIGO}, true));
                this.columnTMAN_CODIGO.AutoIncrement = true;
                this.columnTMAN_CODIGO.AutoIncrementSeed = -1;
                this.columnTMAN_CODIGO.AutoIncrementStep = -1;
                this.columnTMAN_CODIGO.AllowDBNull = false;
                this.columnTMAN_CODIGO.ReadOnly = true;
                this.columnTMAN_CODIGO.Unique = true;
                this.columnTMAN_NOMBRE.MaxLength = 80;
                this.columnTMAN_DESCRIPCION.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_MANTENIMIENTOSRow NewTIPOS_MANTENIMIENTOSRow() {
                return ((TIPOS_MANTENIMIENTOSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TIPOS_MANTENIMIENTOSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TIPOS_MANTENIMIENTOSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TIPOS_MANTENIMIENTOSRowChanged != null)) {
                    this.TIPOS_MANTENIMIENTOSRowChanged(this, new TIPOS_MANTENIMIENTOSRowChangeEvent(((TIPOS_MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TIPOS_MANTENIMIENTOSRowChanging != null)) {
                    this.TIPOS_MANTENIMIENTOSRowChanging(this, new TIPOS_MANTENIMIENTOSRowChangeEvent(((TIPOS_MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TIPOS_MANTENIMIENTOSRowDeleted != null)) {
                    this.TIPOS_MANTENIMIENTOSRowDeleted(this, new TIPOS_MANTENIMIENTOSRowChangeEvent(((TIPOS_MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TIPOS_MANTENIMIENTOSRowDeleting != null)) {
                    this.TIPOS_MANTENIMIENTOSRowDeleting(this, new TIPOS_MANTENIMIENTOSRowChangeEvent(((TIPOS_MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTIPOS_MANTENIMIENTOSRow(TIPOS_MANTENIMIENTOSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRegistrarMantenimiento ds = new dsRegistrarMantenimiento();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TIPOS_MANTENIMIENTOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MANTENIMIENTOSDataTable : global::System.Data.TypedTableBase<MANTENIMIENTOSRow> {
            
            private global::System.Data.DataColumn columnMAN_CODIGO;
            
            private global::System.Data.DataColumn columnTMAN_CODIGO;
            
            private global::System.Data.DataColumn columnMAN_DESCRIPCION;
            
            private global::System.Data.DataColumn columnCEMP_CODIGO;
            
            private global::System.Data.DataColumn columnMAN_OBSERVACION;
            
            private global::System.Data.DataColumn columnMAN_REQUIERE_PARAR_PLANTA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MANTENIMIENTOSDataTable() {
                this.TableName = "MANTENIMIENTOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MANTENIMIENTOSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MANTENIMIENTOSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAN_CODIGOColumn {
                get {
                    return this.columnMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TMAN_CODIGOColumn {
                get {
                    return this.columnTMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAN_DESCRIPCIONColumn {
                get {
                    return this.columnMAN_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CEMP_CODIGOColumn {
                get {
                    return this.columnCEMP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAN_OBSERVACIONColumn {
                get {
                    return this.columnMAN_OBSERVACION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAN_REQUIERE_PARAR_PLANTAColumn {
                get {
                    return this.columnMAN_REQUIERE_PARAR_PLANTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MANTENIMIENTOSRow this[int index] {
                get {
                    return ((MANTENIMIENTOSRow)(this.Rows[index]));
                }
            }
            
            public event MANTENIMIENTOSRowChangeEventHandler MANTENIMIENTOSRowChanging;
            
            public event MANTENIMIENTOSRowChangeEventHandler MANTENIMIENTOSRowChanged;
            
            public event MANTENIMIENTOSRowChangeEventHandler MANTENIMIENTOSRowDeleting;
            
            public event MANTENIMIENTOSRowChangeEventHandler MANTENIMIENTOSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMANTENIMIENTOSRow(MANTENIMIENTOSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MANTENIMIENTOSRow AddMANTENIMIENTOSRow(decimal TMAN_CODIGO, string MAN_DESCRIPCION, decimal CEMP_CODIGO, string MAN_OBSERVACION, string MAN_REQUIERE_PARAR_PLANTA) {
                MANTENIMIENTOSRow rowMANTENIMIENTOSRow = ((MANTENIMIENTOSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TMAN_CODIGO,
                        MAN_DESCRIPCION,
                        CEMP_CODIGO,
                        MAN_OBSERVACION,
                        MAN_REQUIERE_PARAR_PLANTA};
                rowMANTENIMIENTOSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMANTENIMIENTOSRow);
                return rowMANTENIMIENTOSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MANTENIMIENTOSRow FindByMAN_CODIGO(decimal MAN_CODIGO) {
                return ((MANTENIMIENTOSRow)(this.Rows.Find(new object[] {
                            MAN_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MANTENIMIENTOSDataTable cln = ((MANTENIMIENTOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MANTENIMIENTOSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMAN_CODIGO = base.Columns["MAN_CODIGO"];
                this.columnTMAN_CODIGO = base.Columns["TMAN_CODIGO"];
                this.columnMAN_DESCRIPCION = base.Columns["MAN_DESCRIPCION"];
                this.columnCEMP_CODIGO = base.Columns["CEMP_CODIGO"];
                this.columnMAN_OBSERVACION = base.Columns["MAN_OBSERVACION"];
                this.columnMAN_REQUIERE_PARAR_PLANTA = base.Columns["MAN_REQUIERE_PARAR_PLANTA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMAN_CODIGO = new global::System.Data.DataColumn("MAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAN_CODIGO);
                this.columnTMAN_CODIGO = new global::System.Data.DataColumn("TMAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTMAN_CODIGO);
                this.columnMAN_DESCRIPCION = new global::System.Data.DataColumn("MAN_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAN_DESCRIPCION);
                this.columnCEMP_CODIGO = new global::System.Data.DataColumn("CEMP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEMP_CODIGO);
                this.columnMAN_OBSERVACION = new global::System.Data.DataColumn("MAN_OBSERVACION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAN_OBSERVACION);
                this.columnMAN_REQUIERE_PARAR_PLANTA = new global::System.Data.DataColumn("MAN_REQUIERE_PARAR_PLANTA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAN_REQUIERE_PARAR_PLANTA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMAN_CODIGO}, true));
                this.columnMAN_CODIGO.AutoIncrement = true;
                this.columnMAN_CODIGO.AutoIncrementSeed = -1;
                this.columnMAN_CODIGO.AutoIncrementStep = -1;
                this.columnMAN_CODIGO.AllowDBNull = false;
                this.columnMAN_CODIGO.ReadOnly = true;
                this.columnMAN_CODIGO.Unique = true;
                this.columnTMAN_CODIGO.AllowDBNull = false;
                this.columnMAN_DESCRIPCION.MaxLength = 250;
                this.columnMAN_OBSERVACION.MaxLength = 250;
                this.columnMAN_REQUIERE_PARAR_PLANTA.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MANTENIMIENTOSRow NewMANTENIMIENTOSRow() {
                return ((MANTENIMIENTOSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MANTENIMIENTOSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MANTENIMIENTOSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MANTENIMIENTOSRowChanged != null)) {
                    this.MANTENIMIENTOSRowChanged(this, new MANTENIMIENTOSRowChangeEvent(((MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MANTENIMIENTOSRowChanging != null)) {
                    this.MANTENIMIENTOSRowChanging(this, new MANTENIMIENTOSRowChangeEvent(((MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MANTENIMIENTOSRowDeleted != null)) {
                    this.MANTENIMIENTOSRowDeleted(this, new MANTENIMIENTOSRowChangeEvent(((MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MANTENIMIENTOSRowDeleting != null)) {
                    this.MANTENIMIENTOSRowDeleting(this, new MANTENIMIENTOSRowChangeEvent(((MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMANTENIMIENTOSRow(MANTENIMIENTOSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRegistrarMantenimiento ds = new dsRegistrarMantenimiento();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MANTENIMIENTOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MAQUINASDataTable : global::System.Data.TypedTableBase<MAQUINASRow> {
            
            private global::System.Data.DataColumn columnMAQ_CODIGO;
            
            private global::System.Data.DataColumn columnMODM_CODIGO;
            
            private global::System.Data.DataColumn columnEMAQ_CODIGO;
            
            private global::System.Data.DataColumn columnFAB_CODIGO;
            
            private global::System.Data.DataColumn columnMAQ_NOMBRE;
            
            private global::System.Data.DataColumn columnMAQ_NUMEROSERIE;
            
            private global::System.Data.DataColumn columnMAQ_FECHAALTA;
            
            private global::System.Data.DataColumn columnMAQ_MARCA;
            
            private global::System.Data.DataColumn columnMAQ_ES_CRITICA;
            
            private global::System.Data.DataColumn columnPMAN_NUMERO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAQUINASDataTable() {
                this.TableName = "MAQUINAS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MAQUINASDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MAQUINASDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAQ_CODIGOColumn {
                get {
                    return this.columnMAQ_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODM_CODIGOColumn {
                get {
                    return this.columnMODM_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAQ_CODIGOColumn {
                get {
                    return this.columnEMAQ_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FAB_CODIGOColumn {
                get {
                    return this.columnFAB_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAQ_NOMBREColumn {
                get {
                    return this.columnMAQ_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAQ_NUMEROSERIEColumn {
                get {
                    return this.columnMAQ_NUMEROSERIE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAQ_FECHAALTAColumn {
                get {
                    return this.columnMAQ_FECHAALTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAQ_MARCAColumn {
                get {
                    return this.columnMAQ_MARCA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAQ_ES_CRITICAColumn {
                get {
                    return this.columnMAQ_ES_CRITICA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PMAN_NUMEROColumn {
                get {
                    return this.columnPMAN_NUMERO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAQUINASRow this[int index] {
                get {
                    return ((MAQUINASRow)(this.Rows[index]));
                }
            }
            
            public event MAQUINASRowChangeEventHandler MAQUINASRowChanging;
            
            public event MAQUINASRowChangeEventHandler MAQUINASRowChanged;
            
            public event MAQUINASRowChangeEventHandler MAQUINASRowDeleting;
            
            public event MAQUINASRowChangeEventHandler MAQUINASRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMAQUINASRow(MAQUINASRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAQUINASRow AddMAQUINASRow(decimal MODM_CODIGO, ESTADO_MAQUINASRow parentESTADO_MAQUINASRowBymaquina_estadoMaquina_fk, FABRICANTE_MAQUINASRow parentFABRICANTE_MAQUINASRowBymaquina_fabricanteMaquina_fk, string MAQ_NOMBRE, string MAQ_NUMEROSERIE, System.DateTime MAQ_FECHAALTA, string MAQ_MARCA, string MAQ_ES_CRITICA, decimal PMAN_NUMERO) {
                MAQUINASRow rowMAQUINASRow = ((MAQUINASRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MODM_CODIGO,
                        null,
                        null,
                        MAQ_NOMBRE,
                        MAQ_NUMEROSERIE,
                        MAQ_FECHAALTA,
                        MAQ_MARCA,
                        MAQ_ES_CRITICA,
                        PMAN_NUMERO};
                if ((parentESTADO_MAQUINASRowBymaquina_estadoMaquina_fk != null)) {
                    columnValuesArray[2] = parentESTADO_MAQUINASRowBymaquina_estadoMaquina_fk[0];
                }
                if ((parentFABRICANTE_MAQUINASRowBymaquina_fabricanteMaquina_fk != null)) {
                    columnValuesArray[3] = parentFABRICANTE_MAQUINASRowBymaquina_fabricanteMaquina_fk[0];
                }
                rowMAQUINASRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMAQUINASRow);
                return rowMAQUINASRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAQUINASRow FindByMAQ_CODIGO(decimal MAQ_CODIGO) {
                return ((MAQUINASRow)(this.Rows.Find(new object[] {
                            MAQ_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MAQUINASDataTable cln = ((MAQUINASDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MAQUINASDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMAQ_CODIGO = base.Columns["MAQ_CODIGO"];
                this.columnMODM_CODIGO = base.Columns["MODM_CODIGO"];
                this.columnEMAQ_CODIGO = base.Columns["EMAQ_CODIGO"];
                this.columnFAB_CODIGO = base.Columns["FAB_CODIGO"];
                this.columnMAQ_NOMBRE = base.Columns["MAQ_NOMBRE"];
                this.columnMAQ_NUMEROSERIE = base.Columns["MAQ_NUMEROSERIE"];
                this.columnMAQ_FECHAALTA = base.Columns["MAQ_FECHAALTA"];
                this.columnMAQ_MARCA = base.Columns["MAQ_MARCA"];
                this.columnMAQ_ES_CRITICA = base.Columns["MAQ_ES_CRITICA"];
                this.columnPMAN_NUMERO = base.Columns["PMAN_NUMERO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMAQ_CODIGO = new global::System.Data.DataColumn("MAQ_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAQ_CODIGO);
                this.columnMODM_CODIGO = new global::System.Data.DataColumn("MODM_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODM_CODIGO);
                this.columnEMAQ_CODIGO = new global::System.Data.DataColumn("EMAQ_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAQ_CODIGO);
                this.columnFAB_CODIGO = new global::System.Data.DataColumn("FAB_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAB_CODIGO);
                this.columnMAQ_NOMBRE = new global::System.Data.DataColumn("MAQ_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAQ_NOMBRE);
                this.columnMAQ_NUMEROSERIE = new global::System.Data.DataColumn("MAQ_NUMEROSERIE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAQ_NUMEROSERIE);
                this.columnMAQ_FECHAALTA = new global::System.Data.DataColumn("MAQ_FECHAALTA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAQ_FECHAALTA);
                this.columnMAQ_MARCA = new global::System.Data.DataColumn("MAQ_MARCA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAQ_MARCA);
                this.columnMAQ_ES_CRITICA = new global::System.Data.DataColumn("MAQ_ES_CRITICA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAQ_ES_CRITICA);
                this.columnPMAN_NUMERO = new global::System.Data.DataColumn("PMAN_NUMERO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMAN_NUMERO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMAQ_CODIGO}, true));
                this.columnMAQ_CODIGO.AutoIncrement = true;
                this.columnMAQ_CODIGO.AutoIncrementSeed = -1;
                this.columnMAQ_CODIGO.AutoIncrementStep = -1;
                this.columnMAQ_CODIGO.AllowDBNull = false;
                this.columnMAQ_CODIGO.ReadOnly = true;
                this.columnMAQ_CODIGO.Unique = true;
                this.columnMODM_CODIGO.AllowDBNull = false;
                this.columnEMAQ_CODIGO.AllowDBNull = false;
                this.columnFAB_CODIGO.AllowDBNull = false;
                this.columnMAQ_NOMBRE.MaxLength = 80;
                this.columnMAQ_NUMEROSERIE.MaxLength = 20;
                this.columnMAQ_MARCA.MaxLength = 80;
                this.columnMAQ_ES_CRITICA.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAQUINASRow NewMAQUINASRow() {
                return ((MAQUINASRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MAQUINASRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MAQUINASRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MAQUINASRowChanged != null)) {
                    this.MAQUINASRowChanged(this, new MAQUINASRowChangeEvent(((MAQUINASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MAQUINASRowChanging != null)) {
                    this.MAQUINASRowChanging(this, new MAQUINASRowChangeEvent(((MAQUINASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MAQUINASRowDeleted != null)) {
                    this.MAQUINASRowDeleted(this, new MAQUINASRowChangeEvent(((MAQUINASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MAQUINASRowDeleting != null)) {
                    this.MAQUINASRowDeleting(this, new MAQUINASRowChangeEvent(((MAQUINASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMAQUINASRow(MAQUINASRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRegistrarMantenimiento ds = new dsRegistrarMantenimiento();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MAQUINASDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ESTADO_MAQUINASDataTable : global::System.Data.TypedTableBase<ESTADO_MAQUINASRow> {
            
            private global::System.Data.DataColumn columnEMAQ_CODIGO;
            
            private global::System.Data.DataColumn columnEMAQ_NOMBRE;
            
            private global::System.Data.DataColumn columnEMAQ_DESCRIPCION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_MAQUINASDataTable() {
                this.TableName = "ESTADO_MAQUINAS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ESTADO_MAQUINASDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ESTADO_MAQUINASDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAQ_CODIGOColumn {
                get {
                    return this.columnEMAQ_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAQ_NOMBREColumn {
                get {
                    return this.columnEMAQ_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAQ_DESCRIPCIONColumn {
                get {
                    return this.columnEMAQ_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_MAQUINASRow this[int index] {
                get {
                    return ((ESTADO_MAQUINASRow)(this.Rows[index]));
                }
            }
            
            public event ESTADO_MAQUINASRowChangeEventHandler ESTADO_MAQUINASRowChanging;
            
            public event ESTADO_MAQUINASRowChangeEventHandler ESTADO_MAQUINASRowChanged;
            
            public event ESTADO_MAQUINASRowChangeEventHandler ESTADO_MAQUINASRowDeleting;
            
            public event ESTADO_MAQUINASRowChangeEventHandler ESTADO_MAQUINASRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddESTADO_MAQUINASRow(ESTADO_MAQUINASRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_MAQUINASRow AddESTADO_MAQUINASRow(string EMAQ_NOMBRE, string EMAQ_DESCRIPCION) {
                ESTADO_MAQUINASRow rowESTADO_MAQUINASRow = ((ESTADO_MAQUINASRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EMAQ_NOMBRE,
                        EMAQ_DESCRIPCION};
                rowESTADO_MAQUINASRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowESTADO_MAQUINASRow);
                return rowESTADO_MAQUINASRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_MAQUINASRow FindByEMAQ_CODIGO(decimal EMAQ_CODIGO) {
                return ((ESTADO_MAQUINASRow)(this.Rows.Find(new object[] {
                            EMAQ_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ESTADO_MAQUINASDataTable cln = ((ESTADO_MAQUINASDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ESTADO_MAQUINASDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEMAQ_CODIGO = base.Columns["EMAQ_CODIGO"];
                this.columnEMAQ_NOMBRE = base.Columns["EMAQ_NOMBRE"];
                this.columnEMAQ_DESCRIPCION = base.Columns["EMAQ_DESCRIPCION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEMAQ_CODIGO = new global::System.Data.DataColumn("EMAQ_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAQ_CODIGO);
                this.columnEMAQ_NOMBRE = new global::System.Data.DataColumn("EMAQ_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAQ_NOMBRE);
                this.columnEMAQ_DESCRIPCION = new global::System.Data.DataColumn("EMAQ_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAQ_DESCRIPCION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEMAQ_CODIGO}, true));
                this.columnEMAQ_CODIGO.AutoIncrement = true;
                this.columnEMAQ_CODIGO.AutoIncrementSeed = -1;
                this.columnEMAQ_CODIGO.AutoIncrementStep = -1;
                this.columnEMAQ_CODIGO.AllowDBNull = false;
                this.columnEMAQ_CODIGO.ReadOnly = true;
                this.columnEMAQ_CODIGO.Unique = true;
                this.columnEMAQ_NOMBRE.MaxLength = 80;
                this.columnEMAQ_DESCRIPCION.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_MAQUINASRow NewESTADO_MAQUINASRow() {
                return ((ESTADO_MAQUINASRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ESTADO_MAQUINASRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ESTADO_MAQUINASRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ESTADO_MAQUINASRowChanged != null)) {
                    this.ESTADO_MAQUINASRowChanged(this, new ESTADO_MAQUINASRowChangeEvent(((ESTADO_MAQUINASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ESTADO_MAQUINASRowChanging != null)) {
                    this.ESTADO_MAQUINASRowChanging(this, new ESTADO_MAQUINASRowChangeEvent(((ESTADO_MAQUINASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ESTADO_MAQUINASRowDeleted != null)) {
                    this.ESTADO_MAQUINASRowDeleted(this, new ESTADO_MAQUINASRowChangeEvent(((ESTADO_MAQUINASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ESTADO_MAQUINASRowDeleting != null)) {
                    this.ESTADO_MAQUINASRowDeleting(this, new ESTADO_MAQUINASRowChangeEvent(((ESTADO_MAQUINASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveESTADO_MAQUINASRow(ESTADO_MAQUINASRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRegistrarMantenimiento ds = new dsRegistrarMantenimiento();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ESTADO_MAQUINASDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FABRICANTE_MAQUINASDataTable : global::System.Data.TypedTableBase<FABRICANTE_MAQUINASRow> {
            
            private global::System.Data.DataColumn columnFAB_CODIGO;
            
            private global::System.Data.DataColumn columnFAB_RAZONSOCIAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FABRICANTE_MAQUINASDataTable() {
                this.TableName = "FABRICANTE_MAQUINAS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FABRICANTE_MAQUINASDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FABRICANTE_MAQUINASDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FAB_CODIGOColumn {
                get {
                    return this.columnFAB_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FAB_RAZONSOCIALColumn {
                get {
                    return this.columnFAB_RAZONSOCIAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FABRICANTE_MAQUINASRow this[int index] {
                get {
                    return ((FABRICANTE_MAQUINASRow)(this.Rows[index]));
                }
            }
            
            public event FABRICANTE_MAQUINASRowChangeEventHandler FABRICANTE_MAQUINASRowChanging;
            
            public event FABRICANTE_MAQUINASRowChangeEventHandler FABRICANTE_MAQUINASRowChanged;
            
            public event FABRICANTE_MAQUINASRowChangeEventHandler FABRICANTE_MAQUINASRowDeleting;
            
            public event FABRICANTE_MAQUINASRowChangeEventHandler FABRICANTE_MAQUINASRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFABRICANTE_MAQUINASRow(FABRICANTE_MAQUINASRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FABRICANTE_MAQUINASRow AddFABRICANTE_MAQUINASRow(string FAB_RAZONSOCIAL) {
                FABRICANTE_MAQUINASRow rowFABRICANTE_MAQUINASRow = ((FABRICANTE_MAQUINASRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FAB_RAZONSOCIAL};
                rowFABRICANTE_MAQUINASRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFABRICANTE_MAQUINASRow);
                return rowFABRICANTE_MAQUINASRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FABRICANTE_MAQUINASRow FindByFAB_CODIGO(decimal FAB_CODIGO) {
                return ((FABRICANTE_MAQUINASRow)(this.Rows.Find(new object[] {
                            FAB_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FABRICANTE_MAQUINASDataTable cln = ((FABRICANTE_MAQUINASDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FABRICANTE_MAQUINASDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFAB_CODIGO = base.Columns["FAB_CODIGO"];
                this.columnFAB_RAZONSOCIAL = base.Columns["FAB_RAZONSOCIAL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFAB_CODIGO = new global::System.Data.DataColumn("FAB_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAB_CODIGO);
                this.columnFAB_RAZONSOCIAL = new global::System.Data.DataColumn("FAB_RAZONSOCIAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAB_RAZONSOCIAL);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFAB_CODIGO}, true));
                this.columnFAB_CODIGO.AutoIncrement = true;
                this.columnFAB_CODIGO.AutoIncrementSeed = -1;
                this.columnFAB_CODIGO.AutoIncrementStep = -1;
                this.columnFAB_CODIGO.AllowDBNull = false;
                this.columnFAB_CODIGO.ReadOnly = true;
                this.columnFAB_CODIGO.Unique = true;
                this.columnFAB_RAZONSOCIAL.MaxLength = 35;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FABRICANTE_MAQUINASRow NewFABRICANTE_MAQUINASRow() {
                return ((FABRICANTE_MAQUINASRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FABRICANTE_MAQUINASRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FABRICANTE_MAQUINASRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FABRICANTE_MAQUINASRowChanged != null)) {
                    this.FABRICANTE_MAQUINASRowChanged(this, new FABRICANTE_MAQUINASRowChangeEvent(((FABRICANTE_MAQUINASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FABRICANTE_MAQUINASRowChanging != null)) {
                    this.FABRICANTE_MAQUINASRowChanging(this, new FABRICANTE_MAQUINASRowChangeEvent(((FABRICANTE_MAQUINASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FABRICANTE_MAQUINASRowDeleted != null)) {
                    this.FABRICANTE_MAQUINASRowDeleted(this, new FABRICANTE_MAQUINASRowChangeEvent(((FABRICANTE_MAQUINASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FABRICANTE_MAQUINASRowDeleting != null)) {
                    this.FABRICANTE_MAQUINASRowDeleting(this, new FABRICANTE_MAQUINASRowChangeEvent(((FABRICANTE_MAQUINASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFABRICANTE_MAQUINASRow(FABRICANTE_MAQUINASRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRegistrarMantenimiento ds = new dsRegistrarMantenimiento();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FABRICANTE_MAQUINASDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EMPLEADOSDataTable : global::System.Data.TypedTableBase<EMPLEADOSRow> {
            
            private global::System.Data.DataColumn columnE_CODIGO;
            
            private global::System.Data.DataColumn columnE_LEGAJO;
            
            private global::System.Data.DataColumn columnEE_CODIGO;
            
            private global::System.Data.DataColumn columnSEC_CODIGO;
            
            private global::System.Data.DataColumn columnE_APELLIDO;
            
            private global::System.Data.DataColumn columnE_NOMBRE;
            
            private global::System.Data.DataColumn columnE_FECHANACIMIENTO;
            
            private global::System.Data.DataColumn columnE_TELEFONO;
            
            private global::System.Data.DataColumn columnE_FECHA_ALTA;
            
            private global::System.Data.DataColumn columnE_FECHA_BAJA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLEADOSDataTable() {
                this.TableName = "EMPLEADOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EMPLEADOSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EMPLEADOSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_CODIGOColumn {
                get {
                    return this.columnE_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_LEGAJOColumn {
                get {
                    return this.columnE_LEGAJO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EE_CODIGOColumn {
                get {
                    return this.columnEE_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEC_CODIGOColumn {
                get {
                    return this.columnSEC_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_APELLIDOColumn {
                get {
                    return this.columnE_APELLIDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_NOMBREColumn {
                get {
                    return this.columnE_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_FECHANACIMIENTOColumn {
                get {
                    return this.columnE_FECHANACIMIENTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_TELEFONOColumn {
                get {
                    return this.columnE_TELEFONO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_FECHA_ALTAColumn {
                get {
                    return this.columnE_FECHA_ALTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_FECHA_BAJAColumn {
                get {
                    return this.columnE_FECHA_BAJA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLEADOSRow this[int index] {
                get {
                    return ((EMPLEADOSRow)(this.Rows[index]));
                }
            }
            
            public event EMPLEADOSRowChangeEventHandler EMPLEADOSRowChanging;
            
            public event EMPLEADOSRowChangeEventHandler EMPLEADOSRowChanged;
            
            public event EMPLEADOSRowChangeEventHandler EMPLEADOSRowDeleting;
            
            public event EMPLEADOSRowChangeEventHandler EMPLEADOSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEMPLEADOSRow(EMPLEADOSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLEADOSRow AddEMPLEADOSRow(string E_LEGAJO, decimal EE_CODIGO, decimal SEC_CODIGO, string E_APELLIDO, string E_NOMBRE, System.DateTime E_FECHANACIMIENTO, string E_TELEFONO, System.DateTime E_FECHA_ALTA, System.DateTime E_FECHA_BAJA) {
                EMPLEADOSRow rowEMPLEADOSRow = ((EMPLEADOSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        E_LEGAJO,
                        EE_CODIGO,
                        SEC_CODIGO,
                        E_APELLIDO,
                        E_NOMBRE,
                        E_FECHANACIMIENTO,
                        E_TELEFONO,
                        E_FECHA_ALTA,
                        E_FECHA_BAJA};
                rowEMPLEADOSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEMPLEADOSRow);
                return rowEMPLEADOSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLEADOSRow FindByE_CODIGO(decimal E_CODIGO) {
                return ((EMPLEADOSRow)(this.Rows.Find(new object[] {
                            E_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EMPLEADOSDataTable cln = ((EMPLEADOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EMPLEADOSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnE_CODIGO = base.Columns["E_CODIGO"];
                this.columnE_LEGAJO = base.Columns["E_LEGAJO"];
                this.columnEE_CODIGO = base.Columns["EE_CODIGO"];
                this.columnSEC_CODIGO = base.Columns["SEC_CODIGO"];
                this.columnE_APELLIDO = base.Columns["E_APELLIDO"];
                this.columnE_NOMBRE = base.Columns["E_NOMBRE"];
                this.columnE_FECHANACIMIENTO = base.Columns["E_FECHANACIMIENTO"];
                this.columnE_TELEFONO = base.Columns["E_TELEFONO"];
                this.columnE_FECHA_ALTA = base.Columns["E_FECHA_ALTA"];
                this.columnE_FECHA_BAJA = base.Columns["E_FECHA_BAJA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnE_CODIGO = new global::System.Data.DataColumn("E_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_CODIGO);
                this.columnE_LEGAJO = new global::System.Data.DataColumn("E_LEGAJO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_LEGAJO);
                this.columnEE_CODIGO = new global::System.Data.DataColumn("EE_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEE_CODIGO);
                this.columnSEC_CODIGO = new global::System.Data.DataColumn("SEC_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEC_CODIGO);
                this.columnE_APELLIDO = new global::System.Data.DataColumn("E_APELLIDO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_APELLIDO);
                this.columnE_NOMBRE = new global::System.Data.DataColumn("E_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_NOMBRE);
                this.columnE_FECHANACIMIENTO = new global::System.Data.DataColumn("E_FECHANACIMIENTO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_FECHANACIMIENTO);
                this.columnE_TELEFONO = new global::System.Data.DataColumn("E_TELEFONO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_TELEFONO);
                this.columnE_FECHA_ALTA = new global::System.Data.DataColumn("E_FECHA_ALTA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_FECHA_ALTA);
                this.columnE_FECHA_BAJA = new global::System.Data.DataColumn("E_FECHA_BAJA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_FECHA_BAJA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnE_CODIGO}, true));
                this.columnE_CODIGO.AutoIncrement = true;
                this.columnE_CODIGO.AutoIncrementSeed = -1;
                this.columnE_CODIGO.AutoIncrementStep = -1;
                this.columnE_CODIGO.AllowDBNull = false;
                this.columnE_CODIGO.ReadOnly = true;
                this.columnE_CODIGO.Unique = true;
                this.columnE_LEGAJO.MaxLength = 20;
                this.columnEE_CODIGO.AllowDBNull = false;
                this.columnE_APELLIDO.MaxLength = 80;
                this.columnE_NOMBRE.MaxLength = 80;
                this.columnE_TELEFONO.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLEADOSRow NewEMPLEADOSRow() {
                return ((EMPLEADOSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EMPLEADOSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EMPLEADOSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EMPLEADOSRowChanged != null)) {
                    this.EMPLEADOSRowChanged(this, new EMPLEADOSRowChangeEvent(((EMPLEADOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EMPLEADOSRowChanging != null)) {
                    this.EMPLEADOSRowChanging(this, new EMPLEADOSRowChangeEvent(((EMPLEADOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EMPLEADOSRowDeleted != null)) {
                    this.EMPLEADOSRowDeleted(this, new EMPLEADOSRowChangeEvent(((EMPLEADOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EMPLEADOSRowDeleting != null)) {
                    this.EMPLEADOSRowDeleting(this, new EMPLEADOSRowChangeEvent(((EMPLEADOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEMPLEADOSRow(EMPLEADOSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRegistrarMantenimiento ds = new dsRegistrarMantenimiento();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EMPLEADOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DETALLE_PLANES_MANTENIMIENTODataTable : global::System.Data.TypedTableBase<DETALLE_PLANES_MANTENIMIENTORow> {
            
            private global::System.Data.DataColumn columnDPMAN_CODIGO;
            
            private global::System.Data.DataColumn columnPMAN_NUMERO;
            
            private global::System.Data.DataColumn columnEDMAN_CODIGO;
            
            private global::System.Data.DataColumn columnMAN_CODIGO;
            
            private global::System.Data.DataColumn columnUMED_CODIGO;
            
            private global::System.Data.DataColumn columnDPMAN_FRECUENCIA;
            
            private global::System.Data.DataColumn columnDPMAN_DESCRIPCION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTODataTable() {
                this.TableName = "DETALLE_PLANES_MANTENIMIENTO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DETALLE_PLANES_MANTENIMIENTODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DETALLE_PLANES_MANTENIMIENTODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DPMAN_CODIGOColumn {
                get {
                    return this.columnDPMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PMAN_NUMEROColumn {
                get {
                    return this.columnPMAN_NUMERO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EDMAN_CODIGOColumn {
                get {
                    return this.columnEDMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAN_CODIGOColumn {
                get {
                    return this.columnMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_CODIGOColumn {
                get {
                    return this.columnUMED_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DPMAN_FRECUENCIAColumn {
                get {
                    return this.columnDPMAN_FRECUENCIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DPMAN_DESCRIPCIONColumn {
                get {
                    return this.columnDPMAN_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTORow this[int index] {
                get {
                    return ((DETALLE_PLANES_MANTENIMIENTORow)(this.Rows[index]));
                }
            }
            
            public event DETALLE_PLANES_MANTENIMIENTORowChangeEventHandler DETALLE_PLANES_MANTENIMIENTORowChanging;
            
            public event DETALLE_PLANES_MANTENIMIENTORowChangeEventHandler DETALLE_PLANES_MANTENIMIENTORowChanged;
            
            public event DETALLE_PLANES_MANTENIMIENTORowChangeEventHandler DETALLE_PLANES_MANTENIMIENTORowDeleting;
            
            public event DETALLE_PLANES_MANTENIMIENTORowChangeEventHandler DETALLE_PLANES_MANTENIMIENTORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDETALLE_PLANES_MANTENIMIENTORow(DETALLE_PLANES_MANTENIMIENTORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTORow AddDETALLE_PLANES_MANTENIMIENTORow(decimal PMAN_NUMERO, decimal EDMAN_CODIGO, MANTENIMIENTOSRow parentMANTENIMIENTOSRowBydetallePlanMantenimiento_mantenimiento_fk, UNIDADES_MEDIDARow parentUNIDADES_MEDIDARowByFK_DETALLE__RELATIONS_UNIDADES, string DPMAN_FRECUENCIA, string DPMAN_DESCRIPCION) {
                DETALLE_PLANES_MANTENIMIENTORow rowDETALLE_PLANES_MANTENIMIENTORow = ((DETALLE_PLANES_MANTENIMIENTORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PMAN_NUMERO,
                        EDMAN_CODIGO,
                        null,
                        null,
                        DPMAN_FRECUENCIA,
                        DPMAN_DESCRIPCION};
                if ((parentMANTENIMIENTOSRowBydetallePlanMantenimiento_mantenimiento_fk != null)) {
                    columnValuesArray[3] = parentMANTENIMIENTOSRowBydetallePlanMantenimiento_mantenimiento_fk[0];
                }
                if ((parentUNIDADES_MEDIDARowByFK_DETALLE__RELATIONS_UNIDADES != null)) {
                    columnValuesArray[4] = parentUNIDADES_MEDIDARowByFK_DETALLE__RELATIONS_UNIDADES[0];
                }
                rowDETALLE_PLANES_MANTENIMIENTORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDETALLE_PLANES_MANTENIMIENTORow);
                return rowDETALLE_PLANES_MANTENIMIENTORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTORow FindByDPMAN_CODIGO(decimal DPMAN_CODIGO) {
                return ((DETALLE_PLANES_MANTENIMIENTORow)(this.Rows.Find(new object[] {
                            DPMAN_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DETALLE_PLANES_MANTENIMIENTODataTable cln = ((DETALLE_PLANES_MANTENIMIENTODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DETALLE_PLANES_MANTENIMIENTODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDPMAN_CODIGO = base.Columns["DPMAN_CODIGO"];
                this.columnPMAN_NUMERO = base.Columns["PMAN_NUMERO"];
                this.columnEDMAN_CODIGO = base.Columns["EDMAN_CODIGO"];
                this.columnMAN_CODIGO = base.Columns["MAN_CODIGO"];
                this.columnUMED_CODIGO = base.Columns["UMED_CODIGO"];
                this.columnDPMAN_FRECUENCIA = base.Columns["DPMAN_FRECUENCIA"];
                this.columnDPMAN_DESCRIPCION = base.Columns["DPMAN_DESCRIPCION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDPMAN_CODIGO = new global::System.Data.DataColumn("DPMAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPMAN_CODIGO);
                this.columnPMAN_NUMERO = new global::System.Data.DataColumn("PMAN_NUMERO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMAN_NUMERO);
                this.columnEDMAN_CODIGO = new global::System.Data.DataColumn("EDMAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDMAN_CODIGO);
                this.columnMAN_CODIGO = new global::System.Data.DataColumn("MAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAN_CODIGO);
                this.columnUMED_CODIGO = new global::System.Data.DataColumn("UMED_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_CODIGO);
                this.columnDPMAN_FRECUENCIA = new global::System.Data.DataColumn("DPMAN_FRECUENCIA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPMAN_FRECUENCIA);
                this.columnDPMAN_DESCRIPCION = new global::System.Data.DataColumn("DPMAN_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPMAN_DESCRIPCION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDPMAN_CODIGO}, true));
                this.columnDPMAN_CODIGO.AutoIncrement = true;
                this.columnDPMAN_CODIGO.AutoIncrementSeed = -1;
                this.columnDPMAN_CODIGO.AutoIncrementStep = -1;
                this.columnDPMAN_CODIGO.AllowDBNull = false;
                this.columnDPMAN_CODIGO.ReadOnly = true;
                this.columnDPMAN_CODIGO.Unique = true;
                this.columnPMAN_NUMERO.AllowDBNull = false;
                this.columnEDMAN_CODIGO.AllowDBNull = false;
                this.columnMAN_CODIGO.AllowDBNull = false;
                this.columnDPMAN_FRECUENCIA.MaxLength = 20;
                this.columnDPMAN_DESCRIPCION.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTORow NewDETALLE_PLANES_MANTENIMIENTORow() {
                return ((DETALLE_PLANES_MANTENIMIENTORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DETALLE_PLANES_MANTENIMIENTORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DETALLE_PLANES_MANTENIMIENTORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DETALLE_PLANES_MANTENIMIENTORowChanged != null)) {
                    this.DETALLE_PLANES_MANTENIMIENTORowChanged(this, new DETALLE_PLANES_MANTENIMIENTORowChangeEvent(((DETALLE_PLANES_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DETALLE_PLANES_MANTENIMIENTORowChanging != null)) {
                    this.DETALLE_PLANES_MANTENIMIENTORowChanging(this, new DETALLE_PLANES_MANTENIMIENTORowChangeEvent(((DETALLE_PLANES_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DETALLE_PLANES_MANTENIMIENTORowDeleted != null)) {
                    this.DETALLE_PLANES_MANTENIMIENTORowDeleted(this, new DETALLE_PLANES_MANTENIMIENTORowChangeEvent(((DETALLE_PLANES_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DETALLE_PLANES_MANTENIMIENTORowDeleting != null)) {
                    this.DETALLE_PLANES_MANTENIMIENTORowDeleting(this, new DETALLE_PLANES_MANTENIMIENTORowChangeEvent(((DETALLE_PLANES_MANTENIMIENTORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDETALLE_PLANES_MANTENIMIENTORow(DETALLE_PLANES_MANTENIMIENTORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRegistrarMantenimiento ds = new dsRegistrarMantenimiento();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DETALLE_PLANES_MANTENIMIENTODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UNIDADES_MEDIDADataTable : global::System.Data.TypedTableBase<UNIDADES_MEDIDARow> {
            
            private global::System.Data.DataColumn columnUMED_CODIGO;
            
            private global::System.Data.DataColumn columnTUMED_CODIGO;
            
            private global::System.Data.DataColumn columnUMED_NOMBRE;
            
            private global::System.Data.DataColumn columnUMED_ABREVIATURA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDADataTable() {
                this.TableName = "UNIDADES_MEDIDA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UNIDADES_MEDIDADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UNIDADES_MEDIDADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_CODIGOColumn {
                get {
                    return this.columnUMED_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUMED_CODIGOColumn {
                get {
                    return this.columnTUMED_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_NOMBREColumn {
                get {
                    return this.columnUMED_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_ABREVIATURAColumn {
                get {
                    return this.columnUMED_ABREVIATURA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow this[int index] {
                get {
                    return ((UNIDADES_MEDIDARow)(this.Rows[index]));
                }
            }
            
            public event UNIDADES_MEDIDARowChangeEventHandler UNIDADES_MEDIDARowChanging;
            
            public event UNIDADES_MEDIDARowChangeEventHandler UNIDADES_MEDIDARowChanged;
            
            public event UNIDADES_MEDIDARowChangeEventHandler UNIDADES_MEDIDARowDeleting;
            
            public event UNIDADES_MEDIDARowChangeEventHandler UNIDADES_MEDIDARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUNIDADES_MEDIDARow(UNIDADES_MEDIDARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow AddUNIDADES_MEDIDARow(decimal TUMED_CODIGO, string UMED_NOMBRE, string UMED_ABREVIATURA) {
                UNIDADES_MEDIDARow rowUNIDADES_MEDIDARow = ((UNIDADES_MEDIDARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TUMED_CODIGO,
                        UMED_NOMBRE,
                        UMED_ABREVIATURA};
                rowUNIDADES_MEDIDARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUNIDADES_MEDIDARow);
                return rowUNIDADES_MEDIDARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow FindByUMED_CODIGO(decimal UMED_CODIGO) {
                return ((UNIDADES_MEDIDARow)(this.Rows.Find(new object[] {
                            UMED_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UNIDADES_MEDIDADataTable cln = ((UNIDADES_MEDIDADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UNIDADES_MEDIDADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUMED_CODIGO = base.Columns["UMED_CODIGO"];
                this.columnTUMED_CODIGO = base.Columns["TUMED_CODIGO"];
                this.columnUMED_NOMBRE = base.Columns["UMED_NOMBRE"];
                this.columnUMED_ABREVIATURA = base.Columns["UMED_ABREVIATURA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUMED_CODIGO = new global::System.Data.DataColumn("UMED_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_CODIGO);
                this.columnTUMED_CODIGO = new global::System.Data.DataColumn("TUMED_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUMED_CODIGO);
                this.columnUMED_NOMBRE = new global::System.Data.DataColumn("UMED_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_NOMBRE);
                this.columnUMED_ABREVIATURA = new global::System.Data.DataColumn("UMED_ABREVIATURA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_ABREVIATURA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUMED_CODIGO}, true));
                this.columnUMED_CODIGO.AutoIncrement = true;
                this.columnUMED_CODIGO.AutoIncrementSeed = -1;
                this.columnUMED_CODIGO.AutoIncrementStep = -1;
                this.columnUMED_CODIGO.AllowDBNull = false;
                this.columnUMED_CODIGO.ReadOnly = true;
                this.columnUMED_CODIGO.Unique = true;
                this.columnUMED_NOMBRE.MaxLength = 80;
                this.columnUMED_ABREVIATURA.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow NewUNIDADES_MEDIDARow() {
                return ((UNIDADES_MEDIDARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UNIDADES_MEDIDARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UNIDADES_MEDIDARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UNIDADES_MEDIDARowChanged != null)) {
                    this.UNIDADES_MEDIDARowChanged(this, new UNIDADES_MEDIDARowChangeEvent(((UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UNIDADES_MEDIDARowChanging != null)) {
                    this.UNIDADES_MEDIDARowChanging(this, new UNIDADES_MEDIDARowChangeEvent(((UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UNIDADES_MEDIDARowDeleted != null)) {
                    this.UNIDADES_MEDIDARowDeleted(this, new UNIDADES_MEDIDARowChangeEvent(((UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UNIDADES_MEDIDARowDeleting != null)) {
                    this.UNIDADES_MEDIDARowDeleting(this, new UNIDADES_MEDIDARowChangeEvent(((UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUNIDADES_MEDIDARow(UNIDADES_MEDIDARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRegistrarMantenimiento ds = new dsRegistrarMantenimiento();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UNIDADES_MEDIDADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CAUSAS_FALLODataTable : global::System.Data.TypedTableBase<CAUSAS_FALLORow> {
            
            private global::System.Data.DataColumn columnCF_NUMERO;
            
            private global::System.Data.DataColumn columnCF_CODIGO;
            
            private global::System.Data.DataColumn columnCF_NOMBRE;
            
            private global::System.Data.DataColumn columnCF_DESCRPCION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAUSAS_FALLODataTable() {
                this.TableName = "CAUSAS_FALLO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CAUSAS_FALLODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CAUSAS_FALLODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CF_NUMEROColumn {
                get {
                    return this.columnCF_NUMERO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CF_CODIGOColumn {
                get {
                    return this.columnCF_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CF_NOMBREColumn {
                get {
                    return this.columnCF_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CF_DESCRPCIONColumn {
                get {
                    return this.columnCF_DESCRPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAUSAS_FALLORow this[int index] {
                get {
                    return ((CAUSAS_FALLORow)(this.Rows[index]));
                }
            }
            
            public event CAUSAS_FALLORowChangeEventHandler CAUSAS_FALLORowChanging;
            
            public event CAUSAS_FALLORowChangeEventHandler CAUSAS_FALLORowChanged;
            
            public event CAUSAS_FALLORowChangeEventHandler CAUSAS_FALLORowDeleting;
            
            public event CAUSAS_FALLORowChangeEventHandler CAUSAS_FALLORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCAUSAS_FALLORow(CAUSAS_FALLORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAUSAS_FALLORow AddCAUSAS_FALLORow(string CF_CODIGO, string CF_NOMBRE, string CF_DESCRPCION) {
                CAUSAS_FALLORow rowCAUSAS_FALLORow = ((CAUSAS_FALLORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CF_CODIGO,
                        CF_NOMBRE,
                        CF_DESCRPCION};
                rowCAUSAS_FALLORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCAUSAS_FALLORow);
                return rowCAUSAS_FALLORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAUSAS_FALLORow FindByCF_NUMERO(decimal CF_NUMERO) {
                return ((CAUSAS_FALLORow)(this.Rows.Find(new object[] {
                            CF_NUMERO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CAUSAS_FALLODataTable cln = ((CAUSAS_FALLODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CAUSAS_FALLODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCF_NUMERO = base.Columns["CF_NUMERO"];
                this.columnCF_CODIGO = base.Columns["CF_CODIGO"];
                this.columnCF_NOMBRE = base.Columns["CF_NOMBRE"];
                this.columnCF_DESCRPCION = base.Columns["CF_DESCRPCION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCF_NUMERO = new global::System.Data.DataColumn("CF_NUMERO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCF_NUMERO);
                this.columnCF_CODIGO = new global::System.Data.DataColumn("CF_CODIGO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCF_CODIGO);
                this.columnCF_NOMBRE = new global::System.Data.DataColumn("CF_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCF_NOMBRE);
                this.columnCF_DESCRPCION = new global::System.Data.DataColumn("CF_DESCRPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCF_DESCRPCION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCF_NUMERO}, true));
                this.columnCF_NUMERO.AutoIncrement = true;
                this.columnCF_NUMERO.AutoIncrementSeed = -1;
                this.columnCF_NUMERO.AutoIncrementStep = -1;
                this.columnCF_NUMERO.AllowDBNull = false;
                this.columnCF_NUMERO.ReadOnly = true;
                this.columnCF_NUMERO.Unique = true;
                this.columnCF_CODIGO.MaxLength = 80;
                this.columnCF_NOMBRE.MaxLength = 80;
                this.columnCF_DESCRPCION.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAUSAS_FALLORow NewCAUSAS_FALLORow() {
                return ((CAUSAS_FALLORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CAUSAS_FALLORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CAUSAS_FALLORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAUSAS_FALLORowChanged != null)) {
                    this.CAUSAS_FALLORowChanged(this, new CAUSAS_FALLORowChangeEvent(((CAUSAS_FALLORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAUSAS_FALLORowChanging != null)) {
                    this.CAUSAS_FALLORowChanging(this, new CAUSAS_FALLORowChangeEvent(((CAUSAS_FALLORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAUSAS_FALLORowDeleted != null)) {
                    this.CAUSAS_FALLORowDeleted(this, new CAUSAS_FALLORowChangeEvent(((CAUSAS_FALLORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAUSAS_FALLORowDeleting != null)) {
                    this.CAUSAS_FALLORowDeleting(this, new CAUSAS_FALLORowChangeEvent(((CAUSAS_FALLORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCAUSAS_FALLORow(CAUSAS_FALLORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRegistrarMantenimiento ds = new dsRegistrarMantenimiento();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CAUSAS_FALLODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class REGISTROS_MANTENIMIENTOSDataTable : global::System.Data.TypedTableBase<REGISTROS_MANTENIMIENTOSRow> {
            
            private global::System.Data.DataColumn columnRMAN_CODIGO;
            
            private global::System.Data.DataColumn columnTMAN_CODIGO;
            
            private global::System.Data.DataColumn columnMAN_CODIGO;
            
            private global::System.Data.DataColumn columnMAQ_CODIGO;
            
            private global::System.Data.DataColumn columnDPMAN_CODIGO;
            
            private global::System.Data.DataColumn columnE_CODIGO;
            
            private global::System.Data.DataColumn columnRMAN_FECHA_REALIZACION;
            
            private global::System.Data.DataColumn columnRMAN_FECHA;
            
            private global::System.Data.DataColumn columnRMAN_OBSERVACION;
            
            private global::System.Data.DataColumn columnCF_NUMERO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGISTROS_MANTENIMIENTOSDataTable() {
                this.TableName = "REGISTROS_MANTENIMIENTOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal REGISTROS_MANTENIMIENTOSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected REGISTROS_MANTENIMIENTOSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMAN_CODIGOColumn {
                get {
                    return this.columnRMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TMAN_CODIGOColumn {
                get {
                    return this.columnTMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAN_CODIGOColumn {
                get {
                    return this.columnMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAQ_CODIGOColumn {
                get {
                    return this.columnMAQ_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DPMAN_CODIGOColumn {
                get {
                    return this.columnDPMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_CODIGOColumn {
                get {
                    return this.columnE_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMAN_FECHA_REALIZACIONColumn {
                get {
                    return this.columnRMAN_FECHA_REALIZACION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMAN_FECHAColumn {
                get {
                    return this.columnRMAN_FECHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMAN_OBSERVACIONColumn {
                get {
                    return this.columnRMAN_OBSERVACION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CF_NUMEROColumn {
                get {
                    return this.columnCF_NUMERO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGISTROS_MANTENIMIENTOSRow this[int index] {
                get {
                    return ((REGISTROS_MANTENIMIENTOSRow)(this.Rows[index]));
                }
            }
            
            public event REGISTROS_MANTENIMIENTOSRowChangeEventHandler REGISTROS_MANTENIMIENTOSRowChanging;
            
            public event REGISTROS_MANTENIMIENTOSRowChangeEventHandler REGISTROS_MANTENIMIENTOSRowChanged;
            
            public event REGISTROS_MANTENIMIENTOSRowChangeEventHandler REGISTROS_MANTENIMIENTOSRowDeleting;
            
            public event REGISTROS_MANTENIMIENTOSRowChangeEventHandler REGISTROS_MANTENIMIENTOSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddREGISTROS_MANTENIMIENTOSRow(REGISTROS_MANTENIMIENTOSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGISTROS_MANTENIMIENTOSRow AddREGISTROS_MANTENIMIENTOSRow(TIPOS_MANTENIMIENTOSRow parentTIPOS_MANTENIMIENTOSRowByFK_REGISTRO_TMAN_RMAN_TIPOS_MA, MANTENIMIENTOSRow parentMANTENIMIENTOSRowByFK_REGISTRO_MAN_RMAN_MANTENIM, MAQUINASRow parentMAQUINASRowByFK_REGISTRO_MAQ_RMAN_MAQUINAS, DETALLE_PLANES_MANTENIMIENTORow parentDETALLE_PLANES_MANTENIMIENTORowByFK_REGISTRO_DPMAN_RMA_DETALLE_, EMPLEADOSRow parentEMPLEADOSRowByFK_REGISTRO_E_MAN_EMPLEADO, System.DateTime RMAN_FECHA_REALIZACION, System.DateTime RMAN_FECHA, string RMAN_OBSERVACION, CAUSAS_FALLORow parentCAUSAS_FALLORowByFK_REGISTRO_CF_MAN_CAUSAS_F) {
                REGISTROS_MANTENIMIENTOSRow rowREGISTROS_MANTENIMIENTOSRow = ((REGISTROS_MANTENIMIENTOSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        RMAN_FECHA_REALIZACION,
                        RMAN_FECHA,
                        RMAN_OBSERVACION,
                        null};
                if ((parentTIPOS_MANTENIMIENTOSRowByFK_REGISTRO_TMAN_RMAN_TIPOS_MA != null)) {
                    columnValuesArray[1] = parentTIPOS_MANTENIMIENTOSRowByFK_REGISTRO_TMAN_RMAN_TIPOS_MA[0];
                }
                if ((parentMANTENIMIENTOSRowByFK_REGISTRO_MAN_RMAN_MANTENIM != null)) {
                    columnValuesArray[2] = parentMANTENIMIENTOSRowByFK_REGISTRO_MAN_RMAN_MANTENIM[0];
                }
                if ((parentMAQUINASRowByFK_REGISTRO_MAQ_RMAN_MAQUINAS != null)) {
                    columnValuesArray[3] = parentMAQUINASRowByFK_REGISTRO_MAQ_RMAN_MAQUINAS[0];
                }
                if ((parentDETALLE_PLANES_MANTENIMIENTORowByFK_REGISTRO_DPMAN_RMA_DETALLE_ != null)) {
                    columnValuesArray[4] = parentDETALLE_PLANES_MANTENIMIENTORowByFK_REGISTRO_DPMAN_RMA_DETALLE_[0];
                }
                if ((parentEMPLEADOSRowByFK_REGISTRO_E_MAN_EMPLEADO != null)) {
                    columnValuesArray[5] = parentEMPLEADOSRowByFK_REGISTRO_E_MAN_EMPLEADO[0];
                }
                if ((parentCAUSAS_FALLORowByFK_REGISTRO_CF_MAN_CAUSAS_F != null)) {
                    columnValuesArray[9] = parentCAUSAS_FALLORowByFK_REGISTRO_CF_MAN_CAUSAS_F[0];
                }
                rowREGISTROS_MANTENIMIENTOSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowREGISTROS_MANTENIMIENTOSRow);
                return rowREGISTROS_MANTENIMIENTOSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGISTROS_MANTENIMIENTOSRow FindByRMAN_CODIGO(decimal RMAN_CODIGO) {
                return ((REGISTROS_MANTENIMIENTOSRow)(this.Rows.Find(new object[] {
                            RMAN_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                REGISTROS_MANTENIMIENTOSDataTable cln = ((REGISTROS_MANTENIMIENTOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new REGISTROS_MANTENIMIENTOSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRMAN_CODIGO = base.Columns["RMAN_CODIGO"];
                this.columnTMAN_CODIGO = base.Columns["TMAN_CODIGO"];
                this.columnMAN_CODIGO = base.Columns["MAN_CODIGO"];
                this.columnMAQ_CODIGO = base.Columns["MAQ_CODIGO"];
                this.columnDPMAN_CODIGO = base.Columns["DPMAN_CODIGO"];
                this.columnE_CODIGO = base.Columns["E_CODIGO"];
                this.columnRMAN_FECHA_REALIZACION = base.Columns["RMAN_FECHA_REALIZACION"];
                this.columnRMAN_FECHA = base.Columns["RMAN_FECHA"];
                this.columnRMAN_OBSERVACION = base.Columns["RMAN_OBSERVACION"];
                this.columnCF_NUMERO = base.Columns["CF_NUMERO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRMAN_CODIGO = new global::System.Data.DataColumn("RMAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMAN_CODIGO);
                this.columnTMAN_CODIGO = new global::System.Data.DataColumn("TMAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTMAN_CODIGO);
                this.columnMAN_CODIGO = new global::System.Data.DataColumn("MAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAN_CODIGO);
                this.columnMAQ_CODIGO = new global::System.Data.DataColumn("MAQ_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAQ_CODIGO);
                this.columnDPMAN_CODIGO = new global::System.Data.DataColumn("DPMAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPMAN_CODIGO);
                this.columnE_CODIGO = new global::System.Data.DataColumn("E_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_CODIGO);
                this.columnRMAN_FECHA_REALIZACION = new global::System.Data.DataColumn("RMAN_FECHA_REALIZACION", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMAN_FECHA_REALIZACION);
                this.columnRMAN_FECHA = new global::System.Data.DataColumn("RMAN_FECHA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMAN_FECHA);
                this.columnRMAN_OBSERVACION = new global::System.Data.DataColumn("RMAN_OBSERVACION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMAN_OBSERVACION);
                this.columnCF_NUMERO = new global::System.Data.DataColumn("CF_NUMERO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCF_NUMERO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRMAN_CODIGO}, true));
                this.columnRMAN_CODIGO.AutoIncrement = true;
                this.columnRMAN_CODIGO.AutoIncrementSeed = -1;
                this.columnRMAN_CODIGO.AutoIncrementStep = -1;
                this.columnRMAN_CODIGO.AllowDBNull = false;
                this.columnRMAN_CODIGO.ReadOnly = true;
                this.columnRMAN_CODIGO.Unique = true;
                this.columnRMAN_OBSERVACION.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGISTROS_MANTENIMIENTOSRow NewREGISTROS_MANTENIMIENTOSRow() {
                return ((REGISTROS_MANTENIMIENTOSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new REGISTROS_MANTENIMIENTOSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(REGISTROS_MANTENIMIENTOSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.REGISTROS_MANTENIMIENTOSRowChanged != null)) {
                    this.REGISTROS_MANTENIMIENTOSRowChanged(this, new REGISTROS_MANTENIMIENTOSRowChangeEvent(((REGISTROS_MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.REGISTROS_MANTENIMIENTOSRowChanging != null)) {
                    this.REGISTROS_MANTENIMIENTOSRowChanging(this, new REGISTROS_MANTENIMIENTOSRowChangeEvent(((REGISTROS_MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.REGISTROS_MANTENIMIENTOSRowDeleted != null)) {
                    this.REGISTROS_MANTENIMIENTOSRowDeleted(this, new REGISTROS_MANTENIMIENTOSRowChangeEvent(((REGISTROS_MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.REGISTROS_MANTENIMIENTOSRowDeleting != null)) {
                    this.REGISTROS_MANTENIMIENTOSRowDeleting(this, new REGISTROS_MANTENIMIENTOSRowChangeEvent(((REGISTROS_MANTENIMIENTOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveREGISTROS_MANTENIMIENTOSRow(REGISTROS_MANTENIMIENTOSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRegistrarMantenimiento ds = new dsRegistrarMantenimiento();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "REGISTROS_MANTENIMIENTOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class REPUESTOSRow : global::System.Data.DataRow {
            
            private REPUESTOSDataTable tableREPUESTOS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal REPUESTOSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableREPUESTOS = ((REPUESTOSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REP_CODIGO {
                get {
                    return ((decimal)(this[this.tableREPUESTOS.REP_CODIGOColumn]));
                }
                set {
                    this[this.tableREPUESTOS.REP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TREP_CODIGO {
                get {
                    return ((decimal)(this[this.tableREPUESTOS.TREP_CODIGOColumn]));
                }
                set {
                    this[this.tableREPUESTOS.TREP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REP_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableREPUESTOS.REP_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REP_NOMBRE\' in table \'REPUESTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREPUESTOS.REP_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REP_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableREPUESTOS.REP_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REP_DESCRIPCION\' in table \'REPUESTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREPUESTOS.REP_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int REP_CANTIDADSTOCK {
                get {
                    try {
                        return ((int)(this[this.tableREPUESTOS.REP_CANTIDADSTOCKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REP_CANTIDADSTOCK\' in table \'REPUESTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREPUESTOS.REP_CANTIDADSTOCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float REP_COSTO {
                get {
                    try {
                        return ((float)(this[this.tableREPUESTOS.REP_COSTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REP_COSTO\' in table \'REPUESTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREPUESTOS.REP_COSTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_REPUESTOSRow TIPOS_REPUESTOSRow {
                get {
                    return ((TIPOS_REPUESTOSRow)(this.GetParentRow(this.Table.ParentRelations["repuesto_tipoRepuesto_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["repuesto_tipoRepuesto_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREP_NOMBRENull() {
                return this.IsNull(this.tableREPUESTOS.REP_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREP_NOMBRENull() {
                this[this.tableREPUESTOS.REP_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREP_DESCRIPCIONNull() {
                return this.IsNull(this.tableREPUESTOS.REP_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREP_DESCRIPCIONNull() {
                this[this.tableREPUESTOS.REP_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREP_CANTIDADSTOCKNull() {
                return this.IsNull(this.tableREPUESTOS.REP_CANTIDADSTOCKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREP_CANTIDADSTOCKNull() {
                this[this.tableREPUESTOS.REP_CANTIDADSTOCKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREP_COSTONull() {
                return this.IsNull(this.tableREPUESTOS.REP_COSTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREP_COSTONull() {
                this[this.tableREPUESTOS.REP_COSTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REPUESTOS_REGISTRO_MANTENIMIENTORow[] GetREPUESTOS_REGISTRO_MANTENIMIENTORows() {
                if ((this.Table.ChildRelations["FK_REPUESTO_REP_RRMAN_REPUESTO"] == null)) {
                    return new REPUESTOS_REGISTRO_MANTENIMIENTORow[0];
                }
                else {
                    return ((REPUESTOS_REGISTRO_MANTENIMIENTORow[])(base.GetChildRows(this.Table.ChildRelations["FK_REPUESTO_REP_RRMAN_REPUESTO"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TIPOS_REPUESTOSRow : global::System.Data.DataRow {
            
            private TIPOS_REPUESTOSDataTable tableTIPOS_REPUESTOS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TIPOS_REPUESTOSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTIPOS_REPUESTOS = ((TIPOS_REPUESTOSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TREP_CODIGO {
                get {
                    return ((decimal)(this[this.tableTIPOS_REPUESTOS.TREP_CODIGOColumn]));
                }
                set {
                    this[this.tableTIPOS_REPUESTOS.TREP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TREP_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableTIPOS_REPUESTOS.TREP_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TREP_NOMBRE\' in table \'TIPOS_REPUESTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTIPOS_REPUESTOS.TREP_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TREP_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableTIPOS_REPUESTOS.TREP_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TREP_DESCRIPCION\' in table \'TIPOS_REPUESTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTIPOS_REPUESTOS.TREP_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTREP_NOMBRENull() {
                return this.IsNull(this.tableTIPOS_REPUESTOS.TREP_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTREP_NOMBRENull() {
                this[this.tableTIPOS_REPUESTOS.TREP_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTREP_DESCRIPCIONNull() {
                return this.IsNull(this.tableTIPOS_REPUESTOS.TREP_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTREP_DESCRIPCIONNull() {
                this[this.tableTIPOS_REPUESTOS.TREP_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REPUESTOSRow[] GetREPUESTOSRows() {
                if ((this.Table.ChildRelations["repuesto_tipoRepuesto_fk"] == null)) {
                    return new REPUESTOSRow[0];
                }
                else {
                    return ((REPUESTOSRow[])(base.GetChildRows(this.Table.ChildRelations["repuesto_tipoRepuesto_fk"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class REPUESTOS_REGISTRO_MANTENIMIENTORow : global::System.Data.DataRow {
            
            private REPUESTOS_REGISTRO_MANTENIMIENTODataTable tableREPUESTOS_REGISTRO_MANTENIMIENTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal REPUESTOS_REGISTRO_MANTENIMIENTORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableREPUESTOS_REGISTRO_MANTENIMIENTO = ((REPUESTOS_REGISTRO_MANTENIMIENTODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RRMAN_CODIGO {
                get {
                    return ((decimal)(this[this.tableREPUESTOS_REGISTRO_MANTENIMIENTO.RRMAN_CODIGOColumn]));
                }
                set {
                    this[this.tableREPUESTOS_REGISTRO_MANTENIMIENTO.RRMAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RMAN_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableREPUESTOS_REGISTRO_MANTENIMIENTO.RMAN_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RMAN_CODIGO\' in table \'REPUESTOS_REGISTRO_MANTENIMIENTO\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableREPUESTOS_REGISTRO_MANTENIMIENTO.RMAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REP_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableREPUESTOS_REGISTRO_MANTENIMIENTO.REP_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REP_CODIGO\' in table \'REPUESTOS_REGISTRO_MANTENIMIENTO\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableREPUESTOS_REGISTRO_MANTENIMIENTO.REP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RRMAN_CANTIDAD {
                get {
                    try {
                        return ((decimal)(this[this.tableREPUESTOS_REGISTRO_MANTENIMIENTO.RRMAN_CANTIDADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RRMAN_CANTIDAD\' in table \'REPUESTOS_REGISTRO_MANTENIMIENTO\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREPUESTOS_REGISTRO_MANTENIMIENTO.RRMAN_CANTIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REPUESTOSRow REPUESTOSRow {
                get {
                    return ((REPUESTOSRow)(this.GetParentRow(this.Table.ParentRelations["FK_REPUESTO_REP_RRMAN_REPUESTO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_REPUESTO_REP_RRMAN_REPUESTO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGISTROS_MANTENIMIENTOSRow REGISTROS_MANTENIMIENTOSRow {
                get {
                    return ((REGISTROS_MANTENIMIENTOSRow)(this.GetParentRow(this.Table.ParentRelations["FK_REPUESTO_RMAN_RRMA_REGISTRO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_REPUESTO_RMAN_RRMA_REGISTRO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRMAN_CODIGONull() {
                return this.IsNull(this.tableREPUESTOS_REGISTRO_MANTENIMIENTO.RMAN_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRMAN_CODIGONull() {
                this[this.tableREPUESTOS_REGISTRO_MANTENIMIENTO.RMAN_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREP_CODIGONull() {
                return this.IsNull(this.tableREPUESTOS_REGISTRO_MANTENIMIENTO.REP_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREP_CODIGONull() {
                this[this.tableREPUESTOS_REGISTRO_MANTENIMIENTO.REP_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRRMAN_CANTIDADNull() {
                return this.IsNull(this.tableREPUESTOS_REGISTRO_MANTENIMIENTO.RRMAN_CANTIDADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRRMAN_CANTIDADNull() {
                this[this.tableREPUESTOS_REGISTRO_MANTENIMIENTO.RRMAN_CANTIDADColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TIPOS_MANTENIMIENTOSRow : global::System.Data.DataRow {
            
            private TIPOS_MANTENIMIENTOSDataTable tableTIPOS_MANTENIMIENTOS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TIPOS_MANTENIMIENTOSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTIPOS_MANTENIMIENTOS = ((TIPOS_MANTENIMIENTOSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TMAN_CODIGO {
                get {
                    return ((decimal)(this[this.tableTIPOS_MANTENIMIENTOS.TMAN_CODIGOColumn]));
                }
                set {
                    this[this.tableTIPOS_MANTENIMIENTOS.TMAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TMAN_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableTIPOS_MANTENIMIENTOS.TMAN_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TMAN_NOMBRE\' in table \'TIPOS_MANTENIMIENTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTIPOS_MANTENIMIENTOS.TMAN_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TMAN_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableTIPOS_MANTENIMIENTOS.TMAN_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TMAN_DESCRIPCION\' in table \'TIPOS_MANTENIMIENTOS\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTIPOS_MANTENIMIENTOS.TMAN_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTMAN_NOMBRENull() {
                return this.IsNull(this.tableTIPOS_MANTENIMIENTOS.TMAN_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTMAN_NOMBRENull() {
                this[this.tableTIPOS_MANTENIMIENTOS.TMAN_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTMAN_DESCRIPCIONNull() {
                return this.IsNull(this.tableTIPOS_MANTENIMIENTOS.TMAN_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTMAN_DESCRIPCIONNull() {
                this[this.tableTIPOS_MANTENIMIENTOS.TMAN_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGISTROS_MANTENIMIENTOSRow[] GetREGISTROS_MANTENIMIENTOSRows() {
                if ((this.Table.ChildRelations["FK_REGISTRO_TMAN_RMAN_TIPOS_MA"] == null)) {
                    return new REGISTROS_MANTENIMIENTOSRow[0];
                }
                else {
                    return ((REGISTROS_MANTENIMIENTOSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_REGISTRO_TMAN_RMAN_TIPOS_MA"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MANTENIMIENTOSRow : global::System.Data.DataRow {
            
            private MANTENIMIENTOSDataTable tableMANTENIMIENTOS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MANTENIMIENTOSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMANTENIMIENTOS = ((MANTENIMIENTOSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MAN_CODIGO {
                get {
                    return ((decimal)(this[this.tableMANTENIMIENTOS.MAN_CODIGOColumn]));
                }
                set {
                    this[this.tableMANTENIMIENTOS.MAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TMAN_CODIGO {
                get {
                    return ((decimal)(this[this.tableMANTENIMIENTOS.TMAN_CODIGOColumn]));
                }
                set {
                    this[this.tableMANTENIMIENTOS.TMAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAN_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableMANTENIMIENTOS.MAN_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAN_DESCRIPCION\' in table \'MANTENIMIENTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMANTENIMIENTOS.MAN_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CEMP_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableMANTENIMIENTOS.CEMP_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CEMP_CODIGO\' in table \'MANTENIMIENTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMANTENIMIENTOS.CEMP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAN_OBSERVACION {
                get {
                    try {
                        return ((string)(this[this.tableMANTENIMIENTOS.MAN_OBSERVACIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAN_OBSERVACION\' in table \'MANTENIMIENTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMANTENIMIENTOS.MAN_OBSERVACIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAN_REQUIERE_PARAR_PLANTA {
                get {
                    try {
                        return ((string)(this[this.tableMANTENIMIENTOS.MAN_REQUIERE_PARAR_PLANTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAN_REQUIERE_PARAR_PLANTA\' in table \'MANTENIMIENTOS\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableMANTENIMIENTOS.MAN_REQUIERE_PARAR_PLANTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAN_DESCRIPCIONNull() {
                return this.IsNull(this.tableMANTENIMIENTOS.MAN_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAN_DESCRIPCIONNull() {
                this[this.tableMANTENIMIENTOS.MAN_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCEMP_CODIGONull() {
                return this.IsNull(this.tableMANTENIMIENTOS.CEMP_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCEMP_CODIGONull() {
                this[this.tableMANTENIMIENTOS.CEMP_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAN_OBSERVACIONNull() {
                return this.IsNull(this.tableMANTENIMIENTOS.MAN_OBSERVACIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAN_OBSERVACIONNull() {
                this[this.tableMANTENIMIENTOS.MAN_OBSERVACIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAN_REQUIERE_PARAR_PLANTANull() {
                return this.IsNull(this.tableMANTENIMIENTOS.MAN_REQUIERE_PARAR_PLANTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAN_REQUIERE_PARAR_PLANTANull() {
                this[this.tableMANTENIMIENTOS.MAN_REQUIERE_PARAR_PLANTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTORow[] GetDETALLE_PLANES_MANTENIMIENTORows() {
                if ((this.Table.ChildRelations["detallePlanMantenimiento_mantenimiento_fk"] == null)) {
                    return new DETALLE_PLANES_MANTENIMIENTORow[0];
                }
                else {
                    return ((DETALLE_PLANES_MANTENIMIENTORow[])(base.GetChildRows(this.Table.ChildRelations["detallePlanMantenimiento_mantenimiento_fk"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGISTROS_MANTENIMIENTOSRow[] GetREGISTROS_MANTENIMIENTOSRows() {
                if ((this.Table.ChildRelations["FK_REGISTRO_MAN_RMAN_MANTENIM"] == null)) {
                    return new REGISTROS_MANTENIMIENTOSRow[0];
                }
                else {
                    return ((REGISTROS_MANTENIMIENTOSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_REGISTRO_MAN_RMAN_MANTENIM"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MAQUINASRow : global::System.Data.DataRow {
            
            private MAQUINASDataTable tableMAQUINAS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MAQUINASRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMAQUINAS = ((MAQUINASDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MAQ_CODIGO {
                get {
                    return ((decimal)(this[this.tableMAQUINAS.MAQ_CODIGOColumn]));
                }
                set {
                    this[this.tableMAQUINAS.MAQ_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MODM_CODIGO {
                get {
                    return ((decimal)(this[this.tableMAQUINAS.MODM_CODIGOColumn]));
                }
                set {
                    this[this.tableMAQUINAS.MODM_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EMAQ_CODIGO {
                get {
                    return ((decimal)(this[this.tableMAQUINAS.EMAQ_CODIGOColumn]));
                }
                set {
                    this[this.tableMAQUINAS.EMAQ_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FAB_CODIGO {
                get {
                    return ((decimal)(this[this.tableMAQUINAS.FAB_CODIGOColumn]));
                }
                set {
                    this[this.tableMAQUINAS.FAB_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAQ_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableMAQUINAS.MAQ_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAQ_NOMBRE\' in table \'MAQUINAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAQUINAS.MAQ_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAQ_NUMEROSERIE {
                get {
                    try {
                        return ((string)(this[this.tableMAQUINAS.MAQ_NUMEROSERIEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAQ_NUMEROSERIE\' in table \'MAQUINAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAQUINAS.MAQ_NUMEROSERIEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MAQ_FECHAALTA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMAQUINAS.MAQ_FECHAALTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAQ_FECHAALTA\' in table \'MAQUINAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAQUINAS.MAQ_FECHAALTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAQ_MARCA {
                get {
                    try {
                        return ((string)(this[this.tableMAQUINAS.MAQ_MARCAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAQ_MARCA\' in table \'MAQUINAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAQUINAS.MAQ_MARCAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAQ_ES_CRITICA {
                get {
                    try {
                        return ((string)(this[this.tableMAQUINAS.MAQ_ES_CRITICAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAQ_ES_CRITICA\' in table \'MAQUINAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAQUINAS.MAQ_ES_CRITICAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PMAN_NUMERO {
                get {
                    try {
                        return ((decimal)(this[this.tableMAQUINAS.PMAN_NUMEROColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PMAN_NUMERO\' in table \'MAQUINAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMAQUINAS.PMAN_NUMEROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_MAQUINASRow ESTADO_MAQUINASRow {
                get {
                    return ((ESTADO_MAQUINASRow)(this.GetParentRow(this.Table.ParentRelations["maquina_estadoMaquina_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["maquina_estadoMaquina_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FABRICANTE_MAQUINASRow FABRICANTE_MAQUINASRow {
                get {
                    return ((FABRICANTE_MAQUINASRow)(this.GetParentRow(this.Table.ParentRelations["maquina_fabricanteMaquina_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["maquina_fabricanteMaquina_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAQ_NOMBRENull() {
                return this.IsNull(this.tableMAQUINAS.MAQ_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAQ_NOMBRENull() {
                this[this.tableMAQUINAS.MAQ_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAQ_NUMEROSERIENull() {
                return this.IsNull(this.tableMAQUINAS.MAQ_NUMEROSERIEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAQ_NUMEROSERIENull() {
                this[this.tableMAQUINAS.MAQ_NUMEROSERIEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAQ_FECHAALTANull() {
                return this.IsNull(this.tableMAQUINAS.MAQ_FECHAALTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAQ_FECHAALTANull() {
                this[this.tableMAQUINAS.MAQ_FECHAALTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAQ_MARCANull() {
                return this.IsNull(this.tableMAQUINAS.MAQ_MARCAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAQ_MARCANull() {
                this[this.tableMAQUINAS.MAQ_MARCAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAQ_ES_CRITICANull() {
                return this.IsNull(this.tableMAQUINAS.MAQ_ES_CRITICAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAQ_ES_CRITICANull() {
                this[this.tableMAQUINAS.MAQ_ES_CRITICAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPMAN_NUMERONull() {
                return this.IsNull(this.tableMAQUINAS.PMAN_NUMEROColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPMAN_NUMERONull() {
                this[this.tableMAQUINAS.PMAN_NUMEROColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGISTROS_MANTENIMIENTOSRow[] GetREGISTROS_MANTENIMIENTOSRows() {
                if ((this.Table.ChildRelations["FK_REGISTRO_MAQ_RMAN_MAQUINAS"] == null)) {
                    return new REGISTROS_MANTENIMIENTOSRow[0];
                }
                else {
                    return ((REGISTROS_MANTENIMIENTOSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_REGISTRO_MAQ_RMAN_MAQUINAS"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ESTADO_MAQUINASRow : global::System.Data.DataRow {
            
            private ESTADO_MAQUINASDataTable tableESTADO_MAQUINAS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ESTADO_MAQUINASRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableESTADO_MAQUINAS = ((ESTADO_MAQUINASDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EMAQ_CODIGO {
                get {
                    return ((decimal)(this[this.tableESTADO_MAQUINAS.EMAQ_CODIGOColumn]));
                }
                set {
                    this[this.tableESTADO_MAQUINAS.EMAQ_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAQ_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableESTADO_MAQUINAS.EMAQ_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAQ_NOMBRE\' in table \'ESTADO_MAQUINAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableESTADO_MAQUINAS.EMAQ_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAQ_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableESTADO_MAQUINAS.EMAQ_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAQ_DESCRIPCION\' in table \'ESTADO_MAQUINAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableESTADO_MAQUINAS.EMAQ_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAQ_NOMBRENull() {
                return this.IsNull(this.tableESTADO_MAQUINAS.EMAQ_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAQ_NOMBRENull() {
                this[this.tableESTADO_MAQUINAS.EMAQ_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAQ_DESCRIPCIONNull() {
                return this.IsNull(this.tableESTADO_MAQUINAS.EMAQ_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAQ_DESCRIPCIONNull() {
                this[this.tableESTADO_MAQUINAS.EMAQ_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAQUINASRow[] GetMAQUINASRows() {
                if ((this.Table.ChildRelations["maquina_estadoMaquina_fk"] == null)) {
                    return new MAQUINASRow[0];
                }
                else {
                    return ((MAQUINASRow[])(base.GetChildRows(this.Table.ChildRelations["maquina_estadoMaquina_fk"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FABRICANTE_MAQUINASRow : global::System.Data.DataRow {
            
            private FABRICANTE_MAQUINASDataTable tableFABRICANTE_MAQUINAS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FABRICANTE_MAQUINASRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFABRICANTE_MAQUINAS = ((FABRICANTE_MAQUINASDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FAB_CODIGO {
                get {
                    return ((decimal)(this[this.tableFABRICANTE_MAQUINAS.FAB_CODIGOColumn]));
                }
                set {
                    this[this.tableFABRICANTE_MAQUINAS.FAB_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FAB_RAZONSOCIAL {
                get {
                    try {
                        return ((string)(this[this.tableFABRICANTE_MAQUINAS.FAB_RAZONSOCIALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FAB_RAZONSOCIAL\' in table \'FABRICANTE_MAQUINAS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFABRICANTE_MAQUINAS.FAB_RAZONSOCIALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFAB_RAZONSOCIALNull() {
                return this.IsNull(this.tableFABRICANTE_MAQUINAS.FAB_RAZONSOCIALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFAB_RAZONSOCIALNull() {
                this[this.tableFABRICANTE_MAQUINAS.FAB_RAZONSOCIALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAQUINASRow[] GetMAQUINASRows() {
                if ((this.Table.ChildRelations["maquina_fabricanteMaquina_fk"] == null)) {
                    return new MAQUINASRow[0];
                }
                else {
                    return ((MAQUINASRow[])(base.GetChildRows(this.Table.ChildRelations["maquina_fabricanteMaquina_fk"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EMPLEADOSRow : global::System.Data.DataRow {
            
            private EMPLEADOSDataTable tableEMPLEADOS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EMPLEADOSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEMPLEADOS = ((EMPLEADOSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal E_CODIGO {
                get {
                    return ((decimal)(this[this.tableEMPLEADOS.E_CODIGOColumn]));
                }
                set {
                    this[this.tableEMPLEADOS.E_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string E_LEGAJO {
                get {
                    try {
                        return ((string)(this[this.tableEMPLEADOS.E_LEGAJOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_LEGAJO\' in table \'EMPLEADOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPLEADOS.E_LEGAJOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EE_CODIGO {
                get {
                    return ((decimal)(this[this.tableEMPLEADOS.EE_CODIGOColumn]));
                }
                set {
                    this[this.tableEMPLEADOS.EE_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SEC_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableEMPLEADOS.SEC_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEC_CODIGO\' in table \'EMPLEADOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPLEADOS.SEC_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string E_APELLIDO {
                get {
                    try {
                        return ((string)(this[this.tableEMPLEADOS.E_APELLIDOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_APELLIDO\' in table \'EMPLEADOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPLEADOS.E_APELLIDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string E_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableEMPLEADOS.E_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_NOMBRE\' in table \'EMPLEADOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPLEADOS.E_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime E_FECHANACIMIENTO {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEMPLEADOS.E_FECHANACIMIENTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_FECHANACIMIENTO\' in table \'EMPLEADOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPLEADOS.E_FECHANACIMIENTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string E_TELEFONO {
                get {
                    try {
                        return ((string)(this[this.tableEMPLEADOS.E_TELEFONOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_TELEFONO\' in table \'EMPLEADOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPLEADOS.E_TELEFONOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime E_FECHA_ALTA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEMPLEADOS.E_FECHA_ALTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_FECHA_ALTA\' in table \'EMPLEADOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPLEADOS.E_FECHA_ALTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime E_FECHA_BAJA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEMPLEADOS.E_FECHA_BAJAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_FECHA_BAJA\' in table \'EMPLEADOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPLEADOS.E_FECHA_BAJAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_LEGAJONull() {
                return this.IsNull(this.tableEMPLEADOS.E_LEGAJOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_LEGAJONull() {
                this[this.tableEMPLEADOS.E_LEGAJOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEC_CODIGONull() {
                return this.IsNull(this.tableEMPLEADOS.SEC_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEC_CODIGONull() {
                this[this.tableEMPLEADOS.SEC_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_APELLIDONull() {
                return this.IsNull(this.tableEMPLEADOS.E_APELLIDOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_APELLIDONull() {
                this[this.tableEMPLEADOS.E_APELLIDOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_NOMBRENull() {
                return this.IsNull(this.tableEMPLEADOS.E_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_NOMBRENull() {
                this[this.tableEMPLEADOS.E_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_FECHANACIMIENTONull() {
                return this.IsNull(this.tableEMPLEADOS.E_FECHANACIMIENTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_FECHANACIMIENTONull() {
                this[this.tableEMPLEADOS.E_FECHANACIMIENTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_TELEFONONull() {
                return this.IsNull(this.tableEMPLEADOS.E_TELEFONOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_TELEFONONull() {
                this[this.tableEMPLEADOS.E_TELEFONOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_FECHA_ALTANull() {
                return this.IsNull(this.tableEMPLEADOS.E_FECHA_ALTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_FECHA_ALTANull() {
                this[this.tableEMPLEADOS.E_FECHA_ALTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_FECHA_BAJANull() {
                return this.IsNull(this.tableEMPLEADOS.E_FECHA_BAJAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_FECHA_BAJANull() {
                this[this.tableEMPLEADOS.E_FECHA_BAJAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGISTROS_MANTENIMIENTOSRow[] GetREGISTROS_MANTENIMIENTOSRows() {
                if ((this.Table.ChildRelations["FK_REGISTRO_E_MAN_EMPLEADO"] == null)) {
                    return new REGISTROS_MANTENIMIENTOSRow[0];
                }
                else {
                    return ((REGISTROS_MANTENIMIENTOSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_REGISTRO_E_MAN_EMPLEADO"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DETALLE_PLANES_MANTENIMIENTORow : global::System.Data.DataRow {
            
            private DETALLE_PLANES_MANTENIMIENTODataTable tableDETALLE_PLANES_MANTENIMIENTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DETALLE_PLANES_MANTENIMIENTORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDETALLE_PLANES_MANTENIMIENTO = ((DETALLE_PLANES_MANTENIMIENTODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DPMAN_CODIGO {
                get {
                    return ((decimal)(this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_CODIGOColumn]));
                }
                set {
                    this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PMAN_NUMERO {
                get {
                    return ((decimal)(this[this.tableDETALLE_PLANES_MANTENIMIENTO.PMAN_NUMEROColumn]));
                }
                set {
                    this[this.tableDETALLE_PLANES_MANTENIMIENTO.PMAN_NUMEROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EDMAN_CODIGO {
                get {
                    return ((decimal)(this[this.tableDETALLE_PLANES_MANTENIMIENTO.EDMAN_CODIGOColumn]));
                }
                set {
                    this[this.tableDETALLE_PLANES_MANTENIMIENTO.EDMAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MAN_CODIGO {
                get {
                    return ((decimal)(this[this.tableDETALLE_PLANES_MANTENIMIENTO.MAN_CODIGOColumn]));
                }
                set {
                    this[this.tableDETALLE_PLANES_MANTENIMIENTO.MAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UMED_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableDETALLE_PLANES_MANTENIMIENTO.UMED_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UMED_CODIGO\' in table \'DETALLE_PLANES_MANTENIMIENTO\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE_PLANES_MANTENIMIENTO.UMED_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DPMAN_FRECUENCIA {
                get {
                    try {
                        return ((string)(this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_FRECUENCIAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DPMAN_FRECUENCIA\' in table \'DETALLE_PLANES_MANTENIMIENTO\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_FRECUENCIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DPMAN_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DPMAN_DESCRIPCION\' in table \'DETALLE_PLANES_MANTENIMIENTO\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MANTENIMIENTOSRow MANTENIMIENTOSRow {
                get {
                    return ((MANTENIMIENTOSRow)(this.GetParentRow(this.Table.ParentRelations["detallePlanMantenimiento_mantenimiento_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["detallePlanMantenimiento_mantenimiento_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow UNIDADES_MEDIDARow {
                get {
                    return ((UNIDADES_MEDIDARow)(this.GetParentRow(this.Table.ParentRelations["FK_DETALLE__RELATIONS_UNIDADES"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DETALLE__RELATIONS_UNIDADES"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUMED_CODIGONull() {
                return this.IsNull(this.tableDETALLE_PLANES_MANTENIMIENTO.UMED_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUMED_CODIGONull() {
                this[this.tableDETALLE_PLANES_MANTENIMIENTO.UMED_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDPMAN_FRECUENCIANull() {
                return this.IsNull(this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_FRECUENCIAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDPMAN_FRECUENCIANull() {
                this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_FRECUENCIAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDPMAN_DESCRIPCIONNull() {
                return this.IsNull(this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDPMAN_DESCRIPCIONNull() {
                this[this.tableDETALLE_PLANES_MANTENIMIENTO.DPMAN_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGISTROS_MANTENIMIENTOSRow[] GetREGISTROS_MANTENIMIENTOSRows() {
                if ((this.Table.ChildRelations["FK_REGISTRO_DPMAN_RMA_DETALLE_"] == null)) {
                    return new REGISTROS_MANTENIMIENTOSRow[0];
                }
                else {
                    return ((REGISTROS_MANTENIMIENTOSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_REGISTRO_DPMAN_RMA_DETALLE_"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UNIDADES_MEDIDARow : global::System.Data.DataRow {
            
            private UNIDADES_MEDIDADataTable tableUNIDADES_MEDIDA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UNIDADES_MEDIDARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUNIDADES_MEDIDA = ((UNIDADES_MEDIDADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UMED_CODIGO {
                get {
                    return ((decimal)(this[this.tableUNIDADES_MEDIDA.UMED_CODIGOColumn]));
                }
                set {
                    this[this.tableUNIDADES_MEDIDA.UMED_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TUMED_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableUNIDADES_MEDIDA.TUMED_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TUMED_CODIGO\' in table \'UNIDADES_MEDIDA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUNIDADES_MEDIDA.TUMED_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UMED_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableUNIDADES_MEDIDA.UMED_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UMED_NOMBRE\' in table \'UNIDADES_MEDIDA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUNIDADES_MEDIDA.UMED_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UMED_ABREVIATURA {
                get {
                    try {
                        return ((string)(this[this.tableUNIDADES_MEDIDA.UMED_ABREVIATURAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UMED_ABREVIATURA\' in table \'UNIDADES_MEDIDA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUNIDADES_MEDIDA.UMED_ABREVIATURAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTUMED_CODIGONull() {
                return this.IsNull(this.tableUNIDADES_MEDIDA.TUMED_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTUMED_CODIGONull() {
                this[this.tableUNIDADES_MEDIDA.TUMED_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUMED_NOMBRENull() {
                return this.IsNull(this.tableUNIDADES_MEDIDA.UMED_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUMED_NOMBRENull() {
                this[this.tableUNIDADES_MEDIDA.UMED_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUMED_ABREVIATURANull() {
                return this.IsNull(this.tableUNIDADES_MEDIDA.UMED_ABREVIATURAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUMED_ABREVIATURANull() {
                this[this.tableUNIDADES_MEDIDA.UMED_ABREVIATURAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTORow[] GetDETALLE_PLANES_MANTENIMIENTORows() {
                if ((this.Table.ChildRelations["FK_DETALLE__RELATIONS_UNIDADES"] == null)) {
                    return new DETALLE_PLANES_MANTENIMIENTORow[0];
                }
                else {
                    return ((DETALLE_PLANES_MANTENIMIENTORow[])(base.GetChildRows(this.Table.ChildRelations["FK_DETALLE__RELATIONS_UNIDADES"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CAUSAS_FALLORow : global::System.Data.DataRow {
            
            private CAUSAS_FALLODataTable tableCAUSAS_FALLO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CAUSAS_FALLORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAUSAS_FALLO = ((CAUSAS_FALLODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CF_NUMERO {
                get {
                    return ((decimal)(this[this.tableCAUSAS_FALLO.CF_NUMEROColumn]));
                }
                set {
                    this[this.tableCAUSAS_FALLO.CF_NUMEROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CF_CODIGO {
                get {
                    try {
                        return ((string)(this[this.tableCAUSAS_FALLO.CF_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CF_CODIGO\' in table \'CAUSAS_FALLO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCAUSAS_FALLO.CF_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CF_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableCAUSAS_FALLO.CF_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CF_NOMBRE\' in table \'CAUSAS_FALLO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCAUSAS_FALLO.CF_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CF_DESCRPCION {
                get {
                    try {
                        return ((string)(this[this.tableCAUSAS_FALLO.CF_DESCRPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CF_DESCRPCION\' in table \'CAUSAS_FALLO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCAUSAS_FALLO.CF_DESCRPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCF_CODIGONull() {
                return this.IsNull(this.tableCAUSAS_FALLO.CF_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCF_CODIGONull() {
                this[this.tableCAUSAS_FALLO.CF_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCF_NOMBRENull() {
                return this.IsNull(this.tableCAUSAS_FALLO.CF_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCF_NOMBRENull() {
                this[this.tableCAUSAS_FALLO.CF_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCF_DESCRPCIONNull() {
                return this.IsNull(this.tableCAUSAS_FALLO.CF_DESCRPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCF_DESCRPCIONNull() {
                this[this.tableCAUSAS_FALLO.CF_DESCRPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGISTROS_MANTENIMIENTOSRow[] GetREGISTROS_MANTENIMIENTOSRows() {
                if ((this.Table.ChildRelations["FK_REGISTRO_CF_MAN_CAUSAS_F"] == null)) {
                    return new REGISTROS_MANTENIMIENTOSRow[0];
                }
                else {
                    return ((REGISTROS_MANTENIMIENTOSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_REGISTRO_CF_MAN_CAUSAS_F"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class REGISTROS_MANTENIMIENTOSRow : global::System.Data.DataRow {
            
            private REGISTROS_MANTENIMIENTOSDataTable tableREGISTROS_MANTENIMIENTOS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal REGISTROS_MANTENIMIENTOSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableREGISTROS_MANTENIMIENTOS = ((REGISTROS_MANTENIMIENTOSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RMAN_CODIGO {
                get {
                    return ((decimal)(this[this.tableREGISTROS_MANTENIMIENTOS.RMAN_CODIGOColumn]));
                }
                set {
                    this[this.tableREGISTROS_MANTENIMIENTOS.RMAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TMAN_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableREGISTROS_MANTENIMIENTOS.TMAN_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TMAN_CODIGO\' in table \'REGISTROS_MANTENIMIENTOS\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableREGISTROS_MANTENIMIENTOS.TMAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MAN_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableREGISTROS_MANTENIMIENTOS.MAN_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAN_CODIGO\' in table \'REGISTROS_MANTENIMIENTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREGISTROS_MANTENIMIENTOS.MAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MAQ_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableREGISTROS_MANTENIMIENTOS.MAQ_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAQ_CODIGO\' in table \'REGISTROS_MANTENIMIENTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREGISTROS_MANTENIMIENTOS.MAQ_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DPMAN_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableREGISTROS_MANTENIMIENTOS.DPMAN_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DPMAN_CODIGO\' in table \'REGISTROS_MANTENIMIENTOS\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableREGISTROS_MANTENIMIENTOS.DPMAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal E_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableREGISTROS_MANTENIMIENTOS.E_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_CODIGO\' in table \'REGISTROS_MANTENIMIENTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREGISTROS_MANTENIMIENTOS.E_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RMAN_FECHA_REALIZACION {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableREGISTROS_MANTENIMIENTOS.RMAN_FECHA_REALIZACIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RMAN_FECHA_REALIZACION\' in table \'REGISTROS_MANTENIMIENTOS\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREGISTROS_MANTENIMIENTOS.RMAN_FECHA_REALIZACIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RMAN_FECHA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableREGISTROS_MANTENIMIENTOS.RMAN_FECHAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RMAN_FECHA\' in table \'REGISTROS_MANTENIMIENTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREGISTROS_MANTENIMIENTOS.RMAN_FECHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RMAN_OBSERVACION {
                get {
                    try {
                        return ((string)(this[this.tableREGISTROS_MANTENIMIENTOS.RMAN_OBSERVACIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RMAN_OBSERVACION\' in table \'REGISTROS_MANTENIMIENTOS\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableREGISTROS_MANTENIMIENTOS.RMAN_OBSERVACIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CF_NUMERO {
                get {
                    try {
                        return ((decimal)(this[this.tableREGISTROS_MANTENIMIENTOS.CF_NUMEROColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CF_NUMERO\' in table \'REGISTROS_MANTENIMIENTOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableREGISTROS_MANTENIMIENTOS.CF_NUMEROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAUSAS_FALLORow CAUSAS_FALLORow {
                get {
                    return ((CAUSAS_FALLORow)(this.GetParentRow(this.Table.ParentRelations["FK_REGISTRO_CF_MAN_CAUSAS_F"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_REGISTRO_CF_MAN_CAUSAS_F"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTORow DETALLE_PLANES_MANTENIMIENTORow {
                get {
                    return ((DETALLE_PLANES_MANTENIMIENTORow)(this.GetParentRow(this.Table.ParentRelations["FK_REGISTRO_DPMAN_RMA_DETALLE_"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_REGISTRO_DPMAN_RMA_DETALLE_"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLEADOSRow EMPLEADOSRow {
                get {
                    return ((EMPLEADOSRow)(this.GetParentRow(this.Table.ParentRelations["FK_REGISTRO_E_MAN_EMPLEADO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_REGISTRO_E_MAN_EMPLEADO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MANTENIMIENTOSRow MANTENIMIENTOSRow {
                get {
                    return ((MANTENIMIENTOSRow)(this.GetParentRow(this.Table.ParentRelations["FK_REGISTRO_MAN_RMAN_MANTENIM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_REGISTRO_MAN_RMAN_MANTENIM"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAQUINASRow MAQUINASRow {
                get {
                    return ((MAQUINASRow)(this.GetParentRow(this.Table.ParentRelations["FK_REGISTRO_MAQ_RMAN_MAQUINAS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_REGISTRO_MAQ_RMAN_MAQUINAS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_MANTENIMIENTOSRow TIPOS_MANTENIMIENTOSRow {
                get {
                    return ((TIPOS_MANTENIMIENTOSRow)(this.GetParentRow(this.Table.ParentRelations["FK_REGISTRO_TMAN_RMAN_TIPOS_MA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_REGISTRO_TMAN_RMAN_TIPOS_MA"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTMAN_CODIGONull() {
                return this.IsNull(this.tableREGISTROS_MANTENIMIENTOS.TMAN_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTMAN_CODIGONull() {
                this[this.tableREGISTROS_MANTENIMIENTOS.TMAN_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAN_CODIGONull() {
                return this.IsNull(this.tableREGISTROS_MANTENIMIENTOS.MAN_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAN_CODIGONull() {
                this[this.tableREGISTROS_MANTENIMIENTOS.MAN_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAQ_CODIGONull() {
                return this.IsNull(this.tableREGISTROS_MANTENIMIENTOS.MAQ_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAQ_CODIGONull() {
                this[this.tableREGISTROS_MANTENIMIENTOS.MAQ_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDPMAN_CODIGONull() {
                return this.IsNull(this.tableREGISTROS_MANTENIMIENTOS.DPMAN_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDPMAN_CODIGONull() {
                this[this.tableREGISTROS_MANTENIMIENTOS.DPMAN_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_CODIGONull() {
                return this.IsNull(this.tableREGISTROS_MANTENIMIENTOS.E_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_CODIGONull() {
                this[this.tableREGISTROS_MANTENIMIENTOS.E_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRMAN_FECHA_REALIZACIONNull() {
                return this.IsNull(this.tableREGISTROS_MANTENIMIENTOS.RMAN_FECHA_REALIZACIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRMAN_FECHA_REALIZACIONNull() {
                this[this.tableREGISTROS_MANTENIMIENTOS.RMAN_FECHA_REALIZACIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRMAN_FECHANull() {
                return this.IsNull(this.tableREGISTROS_MANTENIMIENTOS.RMAN_FECHAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRMAN_FECHANull() {
                this[this.tableREGISTROS_MANTENIMIENTOS.RMAN_FECHAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRMAN_OBSERVACIONNull() {
                return this.IsNull(this.tableREGISTROS_MANTENIMIENTOS.RMAN_OBSERVACIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRMAN_OBSERVACIONNull() {
                this[this.tableREGISTROS_MANTENIMIENTOS.RMAN_OBSERVACIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCF_NUMERONull() {
                return this.IsNull(this.tableREGISTROS_MANTENIMIENTOS.CF_NUMEROColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCF_NUMERONull() {
                this[this.tableREGISTROS_MANTENIMIENTOS.CF_NUMEROColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REPUESTOS_REGISTRO_MANTENIMIENTORow[] GetREPUESTOS_REGISTRO_MANTENIMIENTORows() {
                if ((this.Table.ChildRelations["FK_REPUESTO_RMAN_RRMA_REGISTRO"] == null)) {
                    return new REPUESTOS_REGISTRO_MANTENIMIENTORow[0];
                }
                else {
                    return ((REPUESTOS_REGISTRO_MANTENIMIENTORow[])(base.GetChildRows(this.Table.ChildRelations["FK_REPUESTO_RMAN_RRMA_REGISTRO"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class REPUESTOSRowChangeEvent : global::System.EventArgs {
            
            private REPUESTOSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REPUESTOSRowChangeEvent(REPUESTOSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REPUESTOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TIPOS_REPUESTOSRowChangeEvent : global::System.EventArgs {
            
            private TIPOS_REPUESTOSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_REPUESTOSRowChangeEvent(TIPOS_REPUESTOSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_REPUESTOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class REPUESTOS_REGISTRO_MANTENIMIENTORowChangeEvent : global::System.EventArgs {
            
            private REPUESTOS_REGISTRO_MANTENIMIENTORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REPUESTOS_REGISTRO_MANTENIMIENTORowChangeEvent(REPUESTOS_REGISTRO_MANTENIMIENTORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REPUESTOS_REGISTRO_MANTENIMIENTORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TIPOS_MANTENIMIENTOSRowChangeEvent : global::System.EventArgs {
            
            private TIPOS_MANTENIMIENTOSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_MANTENIMIENTOSRowChangeEvent(TIPOS_MANTENIMIENTOSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_MANTENIMIENTOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MANTENIMIENTOSRowChangeEvent : global::System.EventArgs {
            
            private MANTENIMIENTOSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MANTENIMIENTOSRowChangeEvent(MANTENIMIENTOSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MANTENIMIENTOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MAQUINASRowChangeEvent : global::System.EventArgs {
            
            private MAQUINASRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAQUINASRowChangeEvent(MAQUINASRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAQUINASRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ESTADO_MAQUINASRowChangeEvent : global::System.EventArgs {
            
            private ESTADO_MAQUINASRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_MAQUINASRowChangeEvent(ESTADO_MAQUINASRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_MAQUINASRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FABRICANTE_MAQUINASRowChangeEvent : global::System.EventArgs {
            
            private FABRICANTE_MAQUINASRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FABRICANTE_MAQUINASRowChangeEvent(FABRICANTE_MAQUINASRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FABRICANTE_MAQUINASRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EMPLEADOSRowChangeEvent : global::System.EventArgs {
            
            private EMPLEADOSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLEADOSRowChangeEvent(EMPLEADOSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLEADOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DETALLE_PLANES_MANTENIMIENTORowChangeEvent : global::System.EventArgs {
            
            private DETALLE_PLANES_MANTENIMIENTORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTORowChangeEvent(DETALLE_PLANES_MANTENIMIENTORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLANES_MANTENIMIENTORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UNIDADES_MEDIDARowChangeEvent : global::System.EventArgs {
            
            private UNIDADES_MEDIDARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARowChangeEvent(UNIDADES_MEDIDARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CAUSAS_FALLORowChangeEvent : global::System.EventArgs {
            
            private CAUSAS_FALLORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAUSAS_FALLORowChangeEvent(CAUSAS_FALLORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAUSAS_FALLORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class REGISTROS_MANTENIMIENTOSRowChangeEvent : global::System.EventArgs {
            
            private REGISTROS_MANTENIMIENTOSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGISTROS_MANTENIMIENTOSRowChangeEvent(REGISTROS_MANTENIMIENTOSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public REGISTROS_MANTENIMIENTOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GyCAP.Data.dsRegistrarMantenimientoTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class REPUESTOSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public REPUESTOSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "REPUESTOS";
            tableMapping.ColumnMappings.Add("REP_CODIGO", "REP_CODIGO");
            tableMapping.ColumnMappings.Add("TREP_CODIGO", "TREP_CODIGO");
            tableMapping.ColumnMappings.Add("REP_NOMBRE", "REP_NOMBRE");
            tableMapping.ColumnMappings.Add("REP_DESCRIPCION", "REP_DESCRIPCION");
            tableMapping.ColumnMappings.Add("REP_CANTIDADSTOCK", "REP_CANTIDADSTOCK");
            tableMapping.ColumnMappings.Add("REP_COSTO", "REP_COSTO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[REPUESTOS] WHERE (([REP_CODIGO] = @Original_REP_CODIGO) AND ([TREP_CODIGO] = @Original_TREP_CODIGO) AND ((@IsNull_REP_NOMBRE = 1 AND [REP_NOMBRE] IS NULL) OR ([REP_NOMBRE] = @Original_REP_NOMBRE)) AND ((@IsNull_REP_DESCRIPCION = 1 AND [REP_DESCRIPCION] IS NULL) OR ([REP_DESCRIPCION] = @Original_REP_DESCRIPCION)) AND ((@IsNull_REP_CANTIDADSTOCK = 1 AND [REP_CANTIDADSTOCK] IS NULL) OR ([REP_CANTIDADSTOCK] = @Original_REP_CANTIDADSTOCK)) AND ((@IsNull_REP_COSTO = 1 AND [REP_COSTO] IS NULL) OR ([REP_COSTO] = @Original_REP_COSTO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "REP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TREP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TREP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_REP_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_REP_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_REP_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REP_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_REP_COSTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_COSTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REP_COSTO", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_COSTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[REPUESTOS] ([TREP_CODIGO], [REP_NOMBRE], [REP_DESCRIPCION], [REP_CANTIDADSTOCK], [REP_COSTO]) VALUES (@TREP_CODIGO, @REP_NOMBRE, @REP_DESCRIPCION, @REP_CANTIDADSTOCK, @REP_COSTO);
SELECT REP_CODIGO, TREP_CODIGO, REP_NOMBRE, REP_DESCRIPCION, REP_CANTIDADSTOCK, REP_COSTO FROM REPUESTOS WHERE (REP_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TREP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TREP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REP_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_CANTIDADSTOCK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REP_COSTO", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_COSTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[REPUESTOS] SET [TREP_CODIGO] = @TREP_CODIGO, [REP_NOMBRE] = @REP_NOMBRE, [REP_DESCRIPCION] = @REP_DESCRIPCION, [REP_CANTIDADSTOCK] = @REP_CANTIDADSTOCK, [REP_COSTO] = @REP_COSTO WHERE (([REP_CODIGO] = @Original_REP_CODIGO) AND ([TREP_CODIGO] = @Original_TREP_CODIGO) AND ((@IsNull_REP_NOMBRE = 1 AND [REP_NOMBRE] IS NULL) OR ([REP_NOMBRE] = @Original_REP_NOMBRE)) AND ((@IsNull_REP_DESCRIPCION = 1 AND [REP_DESCRIPCION] IS NULL) OR ([REP_DESCRIPCION] = @Original_REP_DESCRIPCION)) AND ((@IsNull_REP_CANTIDADSTOCK = 1 AND [REP_CANTIDADSTOCK] IS NULL) OR ([REP_CANTIDADSTOCK] = @Original_REP_CANTIDADSTOCK)) AND ((@IsNull_REP_COSTO = 1 AND [REP_COSTO] IS NULL) OR ([REP_COSTO] = @Original_REP_COSTO)));
SELECT REP_CODIGO, TREP_CODIGO, REP_NOMBRE, REP_DESCRIPCION, REP_CANTIDADSTOCK, REP_COSTO FROM REPUESTOS WHERE (REP_CODIGO = @REP_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TREP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TREP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REP_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_CANTIDADSTOCK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REP_COSTO", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_COSTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "REP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TREP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TREP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_REP_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_REP_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_REP_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REP_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_REP_COSTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_COSTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REP_COSTO", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_COSTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REP_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "REP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT REP_CODIGO, TREP_CODIGO, REP_NOMBRE, REP_DESCRIPCION, REP_CANTIDADSTOCK, R" +
                "EP_COSTO FROM dbo.REPUESTOS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRegistrarMantenimiento.REPUESTOSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRegistrarMantenimiento.REPUESTOSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsRegistrarMantenimiento.REPUESTOSDataTable dataTable = new dsRegistrarMantenimiento.REPUESTOSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento.REPUESTOSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento dataSet) {
            return this.Adapter.Update(dataSet, "REPUESTOS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_REP_CODIGO, decimal Original_TREP_CODIGO, string Original_REP_NOMBRE, string Original_REP_DESCRIPCION, global::System.Nullable<int> Original_REP_CANTIDADSTOCK, global::System.Nullable<float> Original_REP_COSTO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_REP_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_TREP_CODIGO));
            if ((Original_REP_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_REP_NOMBRE));
            }
            if ((Original_REP_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_REP_DESCRIPCION));
            }
            if ((Original_REP_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_REP_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_REP_COSTO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((float)(Original_REP_COSTO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal TREP_CODIGO, string REP_NOMBRE, string REP_DESCRIPCION, global::System.Nullable<int> REP_CANTIDADSTOCK, global::System.Nullable<float> REP_COSTO) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(TREP_CODIGO));
            if ((REP_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(REP_NOMBRE));
            }
            if ((REP_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(REP_DESCRIPCION));
            }
            if ((REP_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(REP_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((REP_COSTO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((float)(REP_COSTO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal TREP_CODIGO, string REP_NOMBRE, string REP_DESCRIPCION, global::System.Nullable<int> REP_CANTIDADSTOCK, global::System.Nullable<float> REP_COSTO, decimal Original_REP_CODIGO, decimal Original_TREP_CODIGO, string Original_REP_NOMBRE, string Original_REP_DESCRIPCION, global::System.Nullable<int> Original_REP_CANTIDADSTOCK, global::System.Nullable<float> Original_REP_COSTO, decimal REP_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(TREP_CODIGO));
            if ((REP_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(REP_NOMBRE));
            }
            if ((REP_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(REP_DESCRIPCION));
            }
            if ((REP_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(REP_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((REP_COSTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((float)(REP_COSTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_REP_CODIGO));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_TREP_CODIGO));
            if ((Original_REP_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_REP_NOMBRE));
            }
            if ((Original_REP_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_REP_DESCRIPCION));
            }
            if ((Original_REP_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_REP_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_REP_COSTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((float)(Original_REP_COSTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(REP_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal TREP_CODIGO, string REP_NOMBRE, string REP_DESCRIPCION, global::System.Nullable<int> REP_CANTIDADSTOCK, global::System.Nullable<float> REP_COSTO, decimal Original_REP_CODIGO, decimal Original_TREP_CODIGO, string Original_REP_NOMBRE, string Original_REP_DESCRIPCION, global::System.Nullable<int> Original_REP_CANTIDADSTOCK, global::System.Nullable<float> Original_REP_COSTO) {
            return this.Update(TREP_CODIGO, REP_NOMBRE, REP_DESCRIPCION, REP_CANTIDADSTOCK, REP_COSTO, Original_REP_CODIGO, Original_TREP_CODIGO, Original_REP_NOMBRE, Original_REP_DESCRIPCION, Original_REP_CANTIDADSTOCK, Original_REP_COSTO, Original_REP_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TIPOS_REPUESTOSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TIPOS_REPUESTOSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TIPOS_REPUESTOS";
            tableMapping.ColumnMappings.Add("TREP_CODIGO", "TREP_CODIGO");
            tableMapping.ColumnMappings.Add("TREP_NOMBRE", "TREP_NOMBRE");
            tableMapping.ColumnMappings.Add("TREP_DESCRIPCION", "TREP_DESCRIPCION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TIPOS_REPUESTOS] WHERE (([TREP_CODIGO] = @Original_TREP_CODIGO) AND ((@IsNull_TREP_NOMBRE = 1 AND [TREP_NOMBRE] IS NULL) OR ([TREP_NOMBRE] = @Original_TREP_NOMBRE)) AND ((@IsNull_TREP_DESCRIPCION = 1 AND [TREP_DESCRIPCION] IS NULL) OR ([TREP_DESCRIPCION] = @Original_TREP_DESCRIPCION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TREP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TREP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TREP_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TREP_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TREP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TREP_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TREP_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TREP_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TREP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TREP_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TIPOS_REPUESTOS] ([TREP_NOMBRE], [TREP_DESCRIPCION]) VALUES (@" +
                "TREP_NOMBRE, @TREP_DESCRIPCION);\r\nSELECT TREP_CODIGO, TREP_NOMBRE, TREP_DESCRIPC" +
                "ION FROM TIPOS_REPUESTOS WHERE (TREP_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TREP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TREP_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TREP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TREP_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TIPOS_REPUESTOS] SET [TREP_NOMBRE] = @TREP_NOMBRE, [TREP_DESCRIPCION] = @TREP_DESCRIPCION WHERE (([TREP_CODIGO] = @Original_TREP_CODIGO) AND ((@IsNull_TREP_NOMBRE = 1 AND [TREP_NOMBRE] IS NULL) OR ([TREP_NOMBRE] = @Original_TREP_NOMBRE)) AND ((@IsNull_TREP_DESCRIPCION = 1 AND [TREP_DESCRIPCION] IS NULL) OR ([TREP_DESCRIPCION] = @Original_TREP_DESCRIPCION)));
SELECT TREP_CODIGO, TREP_NOMBRE, TREP_DESCRIPCION FROM TIPOS_REPUESTOS WHERE (TREP_CODIGO = @TREP_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TREP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TREP_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TREP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TREP_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TREP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TREP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TREP_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TREP_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TREP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TREP_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TREP_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TREP_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TREP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TREP_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TREP_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "TREP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TREP_CODIGO, TREP_NOMBRE, TREP_DESCRIPCION FROM dbo.TIPOS_REPUESTOS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRegistrarMantenimiento.TIPOS_REPUESTOSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRegistrarMantenimiento.TIPOS_REPUESTOSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsRegistrarMantenimiento.TIPOS_REPUESTOSDataTable dataTable = new dsRegistrarMantenimiento.TIPOS_REPUESTOSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento.TIPOS_REPUESTOSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento dataSet) {
            return this.Adapter.Update(dataSet, "TIPOS_REPUESTOS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_TREP_CODIGO, string Original_TREP_NOMBRE, string Original_TREP_DESCRIPCION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_TREP_CODIGO));
            if ((Original_TREP_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TREP_NOMBRE));
            }
            if ((Original_TREP_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TREP_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TREP_NOMBRE, string TREP_DESCRIPCION) {
            if ((TREP_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TREP_NOMBRE));
            }
            if ((TREP_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TREP_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TREP_NOMBRE, string TREP_DESCRIPCION, decimal Original_TREP_CODIGO, string Original_TREP_NOMBRE, string Original_TREP_DESCRIPCION, decimal TREP_CODIGO) {
            if ((TREP_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TREP_NOMBRE));
            }
            if ((TREP_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TREP_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_TREP_CODIGO));
            if ((Original_TREP_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_TREP_NOMBRE));
            }
            if ((Original_TREP_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_TREP_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(TREP_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TREP_NOMBRE, string TREP_DESCRIPCION, decimal Original_TREP_CODIGO, string Original_TREP_NOMBRE, string Original_TREP_DESCRIPCION) {
            return this.Update(TREP_NOMBRE, TREP_DESCRIPCION, Original_TREP_CODIGO, Original_TREP_NOMBRE, Original_TREP_DESCRIPCION, Original_TREP_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class REPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public REPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "REPUESTOS_REGISTRO_MANTENIMIENTO";
            tableMapping.ColumnMappings.Add("RRMAN_CODIGO", "RRMAN_CODIGO");
            tableMapping.ColumnMappings.Add("RMAN_CODIGO", "RMAN_CODIGO");
            tableMapping.ColumnMappings.Add("REP_CODIGO", "REP_CODIGO");
            tableMapping.ColumnMappings.Add("RRMAN_CANTIDAD", "RRMAN_CANTIDAD");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[REPUESTOS_REGISTRO_MANTENIMIENTO] WHERE (([RRMAN_CODIGO] = @Original_RRMAN_CODIGO) AND ((@IsNull_RMAN_CODIGO = 1 AND [RMAN_CODIGO] IS NULL) OR ([RMAN_CODIGO] = @Original_RMAN_CODIGO)) AND ((@IsNull_REP_CODIGO = 1 AND [REP_CODIGO] IS NULL) OR ([REP_CODIGO] = @Original_REP_CODIGO)) AND ((@IsNull_RRMAN_CANTIDAD = 1 AND [RRMAN_CANTIDAD] IS NULL) OR ([RRMAN_CANTIDAD] = @Original_RRMAN_CANTIDAD)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RRMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "RRMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RMAN_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "RMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_REP_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "REP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RRMAN_CANTIDAD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RRMAN_CANTIDAD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RRMAN_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "RRMAN_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[REPUESTOS_REGISTRO_MANTENIMIENTO] ([RMAN_CODIGO], [REP_CODIGO], [RRMAN_CANTIDAD]) VALUES (@RMAN_CODIGO, @REP_CODIGO, @RRMAN_CANTIDAD);
SELECT RRMAN_CODIGO, RMAN_CODIGO, REP_CODIGO, RRMAN_CANTIDAD FROM REPUESTOS_REGISTRO_MANTENIMIENTO WHERE (RRMAN_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "RMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "REP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RRMAN_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "RRMAN_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[REPUESTOS_REGISTRO_MANTENIMIENTO] SET [RMAN_CODIGO] = @RMAN_CODIGO, [REP_CODIGO] = @REP_CODIGO, [RRMAN_CANTIDAD] = @RRMAN_CANTIDAD WHERE (([RRMAN_CODIGO] = @Original_RRMAN_CODIGO) AND ((@IsNull_RMAN_CODIGO = 1 AND [RMAN_CODIGO] IS NULL) OR ([RMAN_CODIGO] = @Original_RMAN_CODIGO)) AND ((@IsNull_REP_CODIGO = 1 AND [REP_CODIGO] IS NULL) OR ([REP_CODIGO] = @Original_REP_CODIGO)) AND ((@IsNull_RRMAN_CANTIDAD = 1 AND [RRMAN_CANTIDAD] IS NULL) OR ([RRMAN_CANTIDAD] = @Original_RRMAN_CANTIDAD)));
SELECT RRMAN_CODIGO, RMAN_CODIGO, REP_CODIGO, RRMAN_CANTIDAD FROM REPUESTOS_REGISTRO_MANTENIMIENTO WHERE (RRMAN_CODIGO = @RRMAN_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "RMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "REP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RRMAN_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "RRMAN_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RRMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "RRMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RMAN_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "RMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_REP_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REP_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "REP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RRMAN_CANTIDAD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RRMAN_CANTIDAD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RRMAN_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "RRMAN_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RRMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "RRMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT RRMAN_CODIGO, RMAN_CODIGO, REP_CODIGO, RRMAN_CANTIDAD FROM dbo.REPUESTOS_R" +
                "EGISTRO_MANTENIMIENTO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRegistrarMantenimiento.REPUESTOS_REGISTRO_MANTENIMIENTODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRegistrarMantenimiento.REPUESTOS_REGISTRO_MANTENIMIENTODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsRegistrarMantenimiento.REPUESTOS_REGISTRO_MANTENIMIENTODataTable dataTable = new dsRegistrarMantenimiento.REPUESTOS_REGISTRO_MANTENIMIENTODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento.REPUESTOS_REGISTRO_MANTENIMIENTODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento dataSet) {
            return this.Adapter.Update(dataSet, "REPUESTOS_REGISTRO_MANTENIMIENTO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_RRMAN_CODIGO, global::System.Nullable<decimal> Original_RMAN_CODIGO, global::System.Nullable<decimal> Original_REP_CODIGO, global::System.Nullable<decimal> Original_RRMAN_CANTIDAD) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_RRMAN_CODIGO));
            if ((Original_RMAN_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_RMAN_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_REP_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_REP_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_RRMAN_CANTIDAD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_RRMAN_CANTIDAD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<decimal> RMAN_CODIGO, global::System.Nullable<decimal> REP_CODIGO, global::System.Nullable<decimal> RRMAN_CANTIDAD) {
            if ((RMAN_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(RMAN_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((REP_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(REP_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((RRMAN_CANTIDAD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(RRMAN_CANTIDAD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> RMAN_CODIGO, global::System.Nullable<decimal> REP_CODIGO, global::System.Nullable<decimal> RRMAN_CANTIDAD, decimal Original_RRMAN_CODIGO, global::System.Nullable<decimal> Original_RMAN_CODIGO, global::System.Nullable<decimal> Original_REP_CODIGO, global::System.Nullable<decimal> Original_RRMAN_CANTIDAD, decimal RRMAN_CODIGO) {
            if ((RMAN_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(RMAN_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((REP_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(REP_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((RRMAN_CANTIDAD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(RRMAN_CANTIDAD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_RRMAN_CODIGO));
            if ((Original_RMAN_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_RMAN_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_REP_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_REP_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_RRMAN_CANTIDAD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_RRMAN_CANTIDAD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(RRMAN_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> RMAN_CODIGO, global::System.Nullable<decimal> REP_CODIGO, global::System.Nullable<decimal> RRMAN_CANTIDAD, decimal Original_RRMAN_CODIGO, global::System.Nullable<decimal> Original_RMAN_CODIGO, global::System.Nullable<decimal> Original_REP_CODIGO, global::System.Nullable<decimal> Original_RRMAN_CANTIDAD) {
            return this.Update(RMAN_CODIGO, REP_CODIGO, RRMAN_CANTIDAD, Original_RRMAN_CODIGO, Original_RMAN_CODIGO, Original_REP_CODIGO, Original_RRMAN_CANTIDAD, Original_RRMAN_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TIPOS_MANTENIMIENTOSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TIPOS_MANTENIMIENTOSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TIPOS_MANTENIMIENTOS";
            tableMapping.ColumnMappings.Add("TMAN_CODIGO", "TMAN_CODIGO");
            tableMapping.ColumnMappings.Add("TMAN_NOMBRE", "TMAN_NOMBRE");
            tableMapping.ColumnMappings.Add("TMAN_DESCRIPCION", "TMAN_DESCRIPCION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TIPOS_MANTENIMIENTOS] WHERE (([TMAN_CODIGO] = @Original_TMAN_CODIGO) AND ((@IsNull_TMAN_NOMBRE = 1 AND [TMAN_NOMBRE] IS NULL) OR ([TMAN_NOMBRE] = @Original_TMAN_NOMBRE)) AND ((@IsNull_TMAN_DESCRIPCION = 1 AND [TMAN_DESCRIPCION] IS NULL) OR ([TMAN_DESCRIPCION] = @Original_TMAN_DESCRIPCION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TMAN_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMAN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TMAN_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TIPOS_MANTENIMIENTOS] ([TMAN_NOMBRE], [TMAN_DESCRIPCION]) VALU" +
                "ES (@TMAN_NOMBRE, @TMAN_DESCRIPCION);\r\nSELECT TMAN_CODIGO, TMAN_NOMBRE, TMAN_DES" +
                "CRIPCION FROM TIPOS_MANTENIMIENTOS WHERE (TMAN_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMAN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TIPOS_MANTENIMIENTOS] SET [TMAN_NOMBRE] = @TMAN_NOMBRE, [TMAN_DESCRIPCION] = @TMAN_DESCRIPCION WHERE (([TMAN_CODIGO] = @Original_TMAN_CODIGO) AND ((@IsNull_TMAN_NOMBRE = 1 AND [TMAN_NOMBRE] IS NULL) OR ([TMAN_NOMBRE] = @Original_TMAN_NOMBRE)) AND ((@IsNull_TMAN_DESCRIPCION = 1 AND [TMAN_DESCRIPCION] IS NULL) OR ([TMAN_DESCRIPCION] = @Original_TMAN_DESCRIPCION)));
SELECT TMAN_CODIGO, TMAN_NOMBRE, TMAN_DESCRIPCION FROM TIPOS_MANTENIMIENTOS WHERE (TMAN_CODIGO = @TMAN_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMAN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TMAN_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMAN_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TMAN_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TMAN_CODIGO, TMAN_NOMBRE, TMAN_DESCRIPCION FROM dbo.TIPOS_MANTENIMIENTOS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRegistrarMantenimiento.TIPOS_MANTENIMIENTOSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRegistrarMantenimiento.TIPOS_MANTENIMIENTOSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsRegistrarMantenimiento.TIPOS_MANTENIMIENTOSDataTable dataTable = new dsRegistrarMantenimiento.TIPOS_MANTENIMIENTOSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento.TIPOS_MANTENIMIENTOSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento dataSet) {
            return this.Adapter.Update(dataSet, "TIPOS_MANTENIMIENTOS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_TMAN_CODIGO, string Original_TMAN_NOMBRE, string Original_TMAN_DESCRIPCION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_TMAN_CODIGO));
            if ((Original_TMAN_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TMAN_NOMBRE));
            }
            if ((Original_TMAN_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TMAN_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TMAN_NOMBRE, string TMAN_DESCRIPCION) {
            if ((TMAN_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TMAN_NOMBRE));
            }
            if ((TMAN_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TMAN_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TMAN_NOMBRE, string TMAN_DESCRIPCION, decimal Original_TMAN_CODIGO, string Original_TMAN_NOMBRE, string Original_TMAN_DESCRIPCION, decimal TMAN_CODIGO) {
            if ((TMAN_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TMAN_NOMBRE));
            }
            if ((TMAN_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TMAN_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_TMAN_CODIGO));
            if ((Original_TMAN_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_TMAN_NOMBRE));
            }
            if ((Original_TMAN_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_TMAN_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(TMAN_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TMAN_NOMBRE, string TMAN_DESCRIPCION, decimal Original_TMAN_CODIGO, string Original_TMAN_NOMBRE, string Original_TMAN_DESCRIPCION) {
            return this.Update(TMAN_NOMBRE, TMAN_DESCRIPCION, Original_TMAN_CODIGO, Original_TMAN_NOMBRE, Original_TMAN_DESCRIPCION, Original_TMAN_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MANTENIMIENTOSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MANTENIMIENTOSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MANTENIMIENTOS";
            tableMapping.ColumnMappings.Add("MAN_CODIGO", "MAN_CODIGO");
            tableMapping.ColumnMappings.Add("TMAN_CODIGO", "TMAN_CODIGO");
            tableMapping.ColumnMappings.Add("MAN_DESCRIPCION", "MAN_DESCRIPCION");
            tableMapping.ColumnMappings.Add("CEMP_CODIGO", "CEMP_CODIGO");
            tableMapping.ColumnMappings.Add("MAN_OBSERVACION", "MAN_OBSERVACION");
            tableMapping.ColumnMappings.Add("MAN_REQUIERE_PARAR_PLANTA", "MAN_REQUIERE_PARAR_PLANTA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[MANTENIMIENTOS] WHERE (([MAN_CODIGO] = @Original_MAN_CODIGO) AND ([TMAN_CODIGO] = @Original_TMAN_CODIGO) AND ((@IsNull_MAN_DESCRIPCION = 1 AND [MAN_DESCRIPCION] IS NULL) OR ([MAN_DESCRIPCION] = @Original_MAN_DESCRIPCION)) AND ((@IsNull_CEMP_CODIGO = 1 AND [CEMP_CODIGO] IS NULL) OR ([CEMP_CODIGO] = @Original_CEMP_CODIGO)) AND ((@IsNull_MAN_OBSERVACION = 1 AND [MAN_OBSERVACION] IS NULL) OR ([MAN_OBSERVACION] = @Original_MAN_OBSERVACION)) AND ((@IsNull_MAN_REQUIERE_PARAR_PLANTA = 1 AND [MAN_REQUIERE_PARAR_PLANTA] IS NULL) OR ([MAN_REQUIERE_PARAR_PLANTA] = @Original_MAN_REQUIERE_PARAR_PLANTA)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAN_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CEMP_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEMP_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEMP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CEMP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAN_OBSERVACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_OBSERVACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_OBSERVACION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_OBSERVACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAN_REQUIERE_PARAR_PLANTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_REQUIERE_PARAR_PLANTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_REQUIERE_PARAR_PLANTA", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_REQUIERE_PARAR_PLANTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[MANTENIMIENTOS] ([TMAN_CODIGO], [MAN_DESCRIPCION], [CEMP_CODIGO], [MAN_OBSERVACION], [MAN_REQUIERE_PARAR_PLANTA]) VALUES (@TMAN_CODIGO, @MAN_DESCRIPCION, @CEMP_CODIGO, @MAN_OBSERVACION, @MAN_REQUIERE_PARAR_PLANTA);
SELECT MAN_CODIGO, TMAN_CODIGO, MAN_DESCRIPCION, CEMP_CODIGO, MAN_OBSERVACION, MAN_REQUIERE_PARAR_PLANTA FROM MANTENIMIENTOS WHERE (MAN_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEMP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CEMP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAN_OBSERVACION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_OBSERVACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAN_REQUIERE_PARAR_PLANTA", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_REQUIERE_PARAR_PLANTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[MANTENIMIENTOS] SET [TMAN_CODIGO] = @TMAN_CODIGO, [MAN_DESCRIPCION] = @MAN_DESCRIPCION, [CEMP_CODIGO] = @CEMP_CODIGO, [MAN_OBSERVACION] = @MAN_OBSERVACION, [MAN_REQUIERE_PARAR_PLANTA] = @MAN_REQUIERE_PARAR_PLANTA WHERE (([MAN_CODIGO] = @Original_MAN_CODIGO) AND ([TMAN_CODIGO] = @Original_TMAN_CODIGO) AND ((@IsNull_MAN_DESCRIPCION = 1 AND [MAN_DESCRIPCION] IS NULL) OR ([MAN_DESCRIPCION] = @Original_MAN_DESCRIPCION)) AND ((@IsNull_CEMP_CODIGO = 1 AND [CEMP_CODIGO] IS NULL) OR ([CEMP_CODIGO] = @Original_CEMP_CODIGO)) AND ((@IsNull_MAN_OBSERVACION = 1 AND [MAN_OBSERVACION] IS NULL) OR ([MAN_OBSERVACION] = @Original_MAN_OBSERVACION)) AND ((@IsNull_MAN_REQUIERE_PARAR_PLANTA = 1 AND [MAN_REQUIERE_PARAR_PLANTA] IS NULL) OR ([MAN_REQUIERE_PARAR_PLANTA] = @Original_MAN_REQUIERE_PARAR_PLANTA)));
SELECT MAN_CODIGO, TMAN_CODIGO, MAN_DESCRIPCION, CEMP_CODIGO, MAN_OBSERVACION, MAN_REQUIERE_PARAR_PLANTA FROM MANTENIMIENTOS WHERE (MAN_CODIGO = @MAN_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEMP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CEMP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAN_OBSERVACION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_OBSERVACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAN_REQUIERE_PARAR_PLANTA", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_REQUIERE_PARAR_PLANTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAN_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CEMP_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEMP_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEMP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CEMP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAN_OBSERVACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_OBSERVACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_OBSERVACION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_OBSERVACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAN_REQUIERE_PARAR_PLANTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_REQUIERE_PARAR_PLANTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_REQUIERE_PARAR_PLANTA", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_REQUIERE_PARAR_PLANTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAN_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MAN_CODIGO, TMAN_CODIGO, MAN_DESCRIPCION, CEMP_CODIGO, MAN_OBSERVACION, MA" +
                "N_REQUIERE_PARAR_PLANTA FROM dbo.MANTENIMIENTOS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRegistrarMantenimiento.MANTENIMIENTOSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRegistrarMantenimiento.MANTENIMIENTOSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsRegistrarMantenimiento.MANTENIMIENTOSDataTable dataTable = new dsRegistrarMantenimiento.MANTENIMIENTOSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento.MANTENIMIENTOSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento dataSet) {
            return this.Adapter.Update(dataSet, "MANTENIMIENTOS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_MAN_CODIGO, decimal Original_TMAN_CODIGO, string Original_MAN_DESCRIPCION, global::System.Nullable<decimal> Original_CEMP_CODIGO, string Original_MAN_OBSERVACION, string Original_MAN_REQUIERE_PARAR_PLANTA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_MAN_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_TMAN_CODIGO));
            if ((Original_MAN_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_MAN_DESCRIPCION));
            }
            if ((Original_CEMP_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_CEMP_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_MAN_OBSERVACION == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_MAN_OBSERVACION));
            }
            if ((Original_MAN_REQUIERE_PARAR_PLANTA == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_MAN_REQUIERE_PARAR_PLANTA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal TMAN_CODIGO, string MAN_DESCRIPCION, global::System.Nullable<decimal> CEMP_CODIGO, string MAN_OBSERVACION, string MAN_REQUIERE_PARAR_PLANTA) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(TMAN_CODIGO));
            if ((MAN_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MAN_DESCRIPCION));
            }
            if ((CEMP_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(CEMP_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((MAN_OBSERVACION == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MAN_OBSERVACION));
            }
            if ((MAN_REQUIERE_PARAR_PLANTA == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(MAN_REQUIERE_PARAR_PLANTA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal TMAN_CODIGO, string MAN_DESCRIPCION, global::System.Nullable<decimal> CEMP_CODIGO, string MAN_OBSERVACION, string MAN_REQUIERE_PARAR_PLANTA, decimal Original_MAN_CODIGO, decimal Original_TMAN_CODIGO, string Original_MAN_DESCRIPCION, global::System.Nullable<decimal> Original_CEMP_CODIGO, string Original_MAN_OBSERVACION, string Original_MAN_REQUIERE_PARAR_PLANTA, decimal MAN_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(TMAN_CODIGO));
            if ((MAN_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MAN_DESCRIPCION));
            }
            if ((CEMP_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(CEMP_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((MAN_OBSERVACION == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MAN_OBSERVACION));
            }
            if ((MAN_REQUIERE_PARAR_PLANTA == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(MAN_REQUIERE_PARAR_PLANTA));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_MAN_CODIGO));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_TMAN_CODIGO));
            if ((Original_MAN_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_MAN_DESCRIPCION));
            }
            if ((Original_CEMP_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_CEMP_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_MAN_OBSERVACION == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_MAN_OBSERVACION));
            }
            if ((Original_MAN_REQUIERE_PARAR_PLANTA == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_MAN_REQUIERE_PARAR_PLANTA));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(MAN_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal TMAN_CODIGO, string MAN_DESCRIPCION, global::System.Nullable<decimal> CEMP_CODIGO, string MAN_OBSERVACION, string MAN_REQUIERE_PARAR_PLANTA, decimal Original_MAN_CODIGO, decimal Original_TMAN_CODIGO, string Original_MAN_DESCRIPCION, global::System.Nullable<decimal> Original_CEMP_CODIGO, string Original_MAN_OBSERVACION, string Original_MAN_REQUIERE_PARAR_PLANTA) {
            return this.Update(TMAN_CODIGO, MAN_DESCRIPCION, CEMP_CODIGO, MAN_OBSERVACION, MAN_REQUIERE_PARAR_PLANTA, Original_MAN_CODIGO, Original_TMAN_CODIGO, Original_MAN_DESCRIPCION, Original_CEMP_CODIGO, Original_MAN_OBSERVACION, Original_MAN_REQUIERE_PARAR_PLANTA, Original_MAN_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MAQUINASTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MAQUINASTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MAQUINAS";
            tableMapping.ColumnMappings.Add("MAQ_CODIGO", "MAQ_CODIGO");
            tableMapping.ColumnMappings.Add("MODM_CODIGO", "MODM_CODIGO");
            tableMapping.ColumnMappings.Add("EMAQ_CODIGO", "EMAQ_CODIGO");
            tableMapping.ColumnMappings.Add("FAB_CODIGO", "FAB_CODIGO");
            tableMapping.ColumnMappings.Add("MAQ_NOMBRE", "MAQ_NOMBRE");
            tableMapping.ColumnMappings.Add("MAQ_NUMEROSERIE", "MAQ_NUMEROSERIE");
            tableMapping.ColumnMappings.Add("MAQ_FECHAALTA", "MAQ_FECHAALTA");
            tableMapping.ColumnMappings.Add("MAQ_MARCA", "MAQ_MARCA");
            tableMapping.ColumnMappings.Add("MAQ_ES_CRITICA", "MAQ_ES_CRITICA");
            tableMapping.ColumnMappings.Add("PMAN_NUMERO", "PMAN_NUMERO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[MAQUINAS] WHERE (([MAQ_CODIGO] = @Original_MAQ_CODIGO) AND ([MODM_CODIGO] = @Original_MODM_CODIGO) AND ([EMAQ_CODIGO] = @Original_EMAQ_CODIGO) AND ([FAB_CODIGO] = @Original_FAB_CODIGO) AND ((@IsNull_MAQ_NOMBRE = 1 AND [MAQ_NOMBRE] IS NULL) OR ([MAQ_NOMBRE] = @Original_MAQ_NOMBRE)) AND ((@IsNull_MAQ_NUMEROSERIE = 1 AND [MAQ_NUMEROSERIE] IS NULL) OR ([MAQ_NUMEROSERIE] = @Original_MAQ_NUMEROSERIE)) AND ((@IsNull_MAQ_FECHAALTA = 1 AND [MAQ_FECHAALTA] IS NULL) OR ([MAQ_FECHAALTA] = @Original_MAQ_FECHAALTA)) AND ((@IsNull_MAQ_MARCA = 1 AND [MAQ_MARCA] IS NULL) OR ([MAQ_MARCA] = @Original_MAQ_MARCA)) AND ((@IsNull_MAQ_ES_CRITICA = 1 AND [MAQ_ES_CRITICA] IS NULL) OR ([MAQ_ES_CRITICA] = @Original_MAQ_ES_CRITICA)) AND ((@IsNull_PMAN_NUMERO = 1 AND [PMAN_NUMERO] IS NULL) OR ([PMAN_NUMERO] = @Original_PMAN_NUMERO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAQ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAQ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MODM_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MODM_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAQ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EMAQ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAB_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "FAB_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAQ_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAQ_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAQ_NUMEROSERIE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_NUMEROSERIE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAQ_NUMEROSERIE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_NUMEROSERIE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAQ_FECHAALTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_FECHAALTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAQ_FECHAALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_FECHAALTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAQ_MARCA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_MARCA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAQ_MARCA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_MARCA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAQ_ES_CRITICA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_ES_CRITICA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAQ_ES_CRITICA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_ES_CRITICA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PMAN_NUMERO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMAN_NUMERO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMAN_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMAN_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[MAQUINAS] ([MODM_CODIGO], [EMAQ_CODIGO], [FAB_CODIGO], [MAQ_NOMBRE], [MAQ_NUMEROSERIE], [MAQ_FECHAALTA], [MAQ_MARCA], [MAQ_ES_CRITICA], [PMAN_NUMERO]) VALUES (@MODM_CODIGO, @EMAQ_CODIGO, @FAB_CODIGO, @MAQ_NOMBRE, @MAQ_NUMEROSERIE, @MAQ_FECHAALTA, @MAQ_MARCA, @MAQ_ES_CRITICA, @PMAN_NUMERO);
SELECT MAQ_CODIGO, MODM_CODIGO, EMAQ_CODIGO, FAB_CODIGO, MAQ_NOMBRE, MAQ_NUMEROSERIE, MAQ_FECHAALTA, MAQ_MARCA, MAQ_ES_CRITICA, PMAN_NUMERO FROM MAQUINAS WHERE (MAQ_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MODM_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MODM_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAQ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EMAQ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAB_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "FAB_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAQ_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAQ_NUMEROSERIE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_NUMEROSERIE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAQ_FECHAALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_FECHAALTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAQ_MARCA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_MARCA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAQ_ES_CRITICA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_ES_CRITICA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMAN_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMAN_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[MAQUINAS] SET [MODM_CODIGO] = @MODM_CODIGO, [EMAQ_CODIGO] = @EMAQ_CODIGO, [FAB_CODIGO] = @FAB_CODIGO, [MAQ_NOMBRE] = @MAQ_NOMBRE, [MAQ_NUMEROSERIE] = @MAQ_NUMEROSERIE, [MAQ_FECHAALTA] = @MAQ_FECHAALTA, [MAQ_MARCA] = @MAQ_MARCA, [MAQ_ES_CRITICA] = @MAQ_ES_CRITICA, [PMAN_NUMERO] = @PMAN_NUMERO WHERE (([MAQ_CODIGO] = @Original_MAQ_CODIGO) AND ([MODM_CODIGO] = @Original_MODM_CODIGO) AND ([EMAQ_CODIGO] = @Original_EMAQ_CODIGO) AND ([FAB_CODIGO] = @Original_FAB_CODIGO) AND ((@IsNull_MAQ_NOMBRE = 1 AND [MAQ_NOMBRE] IS NULL) OR ([MAQ_NOMBRE] = @Original_MAQ_NOMBRE)) AND ((@IsNull_MAQ_NUMEROSERIE = 1 AND [MAQ_NUMEROSERIE] IS NULL) OR ([MAQ_NUMEROSERIE] = @Original_MAQ_NUMEROSERIE)) AND ((@IsNull_MAQ_FECHAALTA = 1 AND [MAQ_FECHAALTA] IS NULL) OR ([MAQ_FECHAALTA] = @Original_MAQ_FECHAALTA)) AND ((@IsNull_MAQ_MARCA = 1 AND [MAQ_MARCA] IS NULL) OR ([MAQ_MARCA] = @Original_MAQ_MARCA)) AND ((@IsNull_MAQ_ES_CRITICA = 1 AND [MAQ_ES_CRITICA] IS NULL) OR ([MAQ_ES_CRITICA] = @Original_MAQ_ES_CRITICA)) AND ((@IsNull_PMAN_NUMERO = 1 AND [PMAN_NUMERO] IS NULL) OR ([PMAN_NUMERO] = @Original_PMAN_NUMERO)));
SELECT MAQ_CODIGO, MODM_CODIGO, EMAQ_CODIGO, FAB_CODIGO, MAQ_NOMBRE, MAQ_NUMEROSERIE, MAQ_FECHAALTA, MAQ_MARCA, MAQ_ES_CRITICA, PMAN_NUMERO FROM MAQUINAS WHERE (MAQ_CODIGO = @MAQ_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MODM_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MODM_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAQ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EMAQ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAB_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "FAB_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAQ_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAQ_NUMEROSERIE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_NUMEROSERIE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAQ_FECHAALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_FECHAALTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAQ_MARCA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_MARCA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAQ_ES_CRITICA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_ES_CRITICA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMAN_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMAN_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAQ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAQ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MODM_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MODM_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAQ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EMAQ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAB_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "FAB_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAQ_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAQ_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAQ_NUMEROSERIE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_NUMEROSERIE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAQ_NUMEROSERIE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_NUMEROSERIE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAQ_FECHAALTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_FECHAALTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAQ_FECHAALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_FECHAALTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAQ_MARCA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_MARCA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAQ_MARCA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_MARCA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAQ_ES_CRITICA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_ES_CRITICA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAQ_ES_CRITICA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_ES_CRITICA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PMAN_NUMERO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMAN_NUMERO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMAN_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMAN_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAQ_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "MAQ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MAQ_CODIGO, MODM_CODIGO, EMAQ_CODIGO, FAB_CODIGO, MAQ_NOMBRE, MAQ_NUMEROSE" +
                "RIE, MAQ_FECHAALTA, MAQ_MARCA, MAQ_ES_CRITICA, PMAN_NUMERO FROM dbo.MAQUINAS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRegistrarMantenimiento.MAQUINASDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRegistrarMantenimiento.MAQUINASDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsRegistrarMantenimiento.MAQUINASDataTable dataTable = new dsRegistrarMantenimiento.MAQUINASDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento.MAQUINASDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento dataSet) {
            return this.Adapter.Update(dataSet, "MAQUINAS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_MAQ_CODIGO, decimal Original_MODM_CODIGO, decimal Original_EMAQ_CODIGO, decimal Original_FAB_CODIGO, string Original_MAQ_NOMBRE, string Original_MAQ_NUMEROSERIE, global::System.Nullable<global::System.DateTime> Original_MAQ_FECHAALTA, string Original_MAQ_MARCA, string Original_MAQ_ES_CRITICA, global::System.Nullable<decimal> Original_PMAN_NUMERO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_MAQ_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_MODM_CODIGO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_EMAQ_CODIGO));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_FAB_CODIGO));
            if ((Original_MAQ_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_MAQ_NOMBRE));
            }
            if ((Original_MAQ_NUMEROSERIE == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_MAQ_NUMEROSERIE));
            }
            if ((Original_MAQ_FECHAALTA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_MAQ_FECHAALTA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_MAQ_MARCA == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_MAQ_MARCA));
            }
            if ((Original_MAQ_ES_CRITICA == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_MAQ_ES_CRITICA));
            }
            if ((Original_PMAN_NUMERO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_PMAN_NUMERO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal MODM_CODIGO, decimal EMAQ_CODIGO, decimal FAB_CODIGO, string MAQ_NOMBRE, string MAQ_NUMEROSERIE, global::System.Nullable<global::System.DateTime> MAQ_FECHAALTA, string MAQ_MARCA, string MAQ_ES_CRITICA, global::System.Nullable<decimal> PMAN_NUMERO) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(MODM_CODIGO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(EMAQ_CODIGO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(FAB_CODIGO));
            if ((MAQ_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MAQ_NOMBRE));
            }
            if ((MAQ_NUMEROSERIE == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(MAQ_NUMEROSERIE));
            }
            if ((MAQ_FECHAALTA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(MAQ_FECHAALTA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((MAQ_MARCA == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(MAQ_MARCA));
            }
            if ((MAQ_ES_CRITICA == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(MAQ_ES_CRITICA));
            }
            if ((PMAN_NUMERO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(PMAN_NUMERO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal MODM_CODIGO, 
                    decimal EMAQ_CODIGO, 
                    decimal FAB_CODIGO, 
                    string MAQ_NOMBRE, 
                    string MAQ_NUMEROSERIE, 
                    global::System.Nullable<global::System.DateTime> MAQ_FECHAALTA, 
                    string MAQ_MARCA, 
                    string MAQ_ES_CRITICA, 
                    global::System.Nullable<decimal> PMAN_NUMERO, 
                    decimal Original_MAQ_CODIGO, 
                    decimal Original_MODM_CODIGO, 
                    decimal Original_EMAQ_CODIGO, 
                    decimal Original_FAB_CODIGO, 
                    string Original_MAQ_NOMBRE, 
                    string Original_MAQ_NUMEROSERIE, 
                    global::System.Nullable<global::System.DateTime> Original_MAQ_FECHAALTA, 
                    string Original_MAQ_MARCA, 
                    string Original_MAQ_ES_CRITICA, 
                    global::System.Nullable<decimal> Original_PMAN_NUMERO, 
                    decimal MAQ_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(MODM_CODIGO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(EMAQ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(FAB_CODIGO));
            if ((MAQ_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MAQ_NOMBRE));
            }
            if ((MAQ_NUMEROSERIE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(MAQ_NUMEROSERIE));
            }
            if ((MAQ_FECHAALTA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(MAQ_FECHAALTA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((MAQ_MARCA == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(MAQ_MARCA));
            }
            if ((MAQ_ES_CRITICA == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(MAQ_ES_CRITICA));
            }
            if ((PMAN_NUMERO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(PMAN_NUMERO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_MAQ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_MODM_CODIGO));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_EMAQ_CODIGO));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_FAB_CODIGO));
            if ((Original_MAQ_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_MAQ_NOMBRE));
            }
            if ((Original_MAQ_NUMEROSERIE == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_MAQ_NUMEROSERIE));
            }
            if ((Original_MAQ_FECHAALTA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_MAQ_FECHAALTA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_MAQ_MARCA == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_MAQ_MARCA));
            }
            if ((Original_MAQ_ES_CRITICA == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_MAQ_ES_CRITICA));
            }
            if ((Original_PMAN_NUMERO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_PMAN_NUMERO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(MAQ_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal MODM_CODIGO, 
                    decimal EMAQ_CODIGO, 
                    decimal FAB_CODIGO, 
                    string MAQ_NOMBRE, 
                    string MAQ_NUMEROSERIE, 
                    global::System.Nullable<global::System.DateTime> MAQ_FECHAALTA, 
                    string MAQ_MARCA, 
                    string MAQ_ES_CRITICA, 
                    global::System.Nullable<decimal> PMAN_NUMERO, 
                    decimal Original_MAQ_CODIGO, 
                    decimal Original_MODM_CODIGO, 
                    decimal Original_EMAQ_CODIGO, 
                    decimal Original_FAB_CODIGO, 
                    string Original_MAQ_NOMBRE, 
                    string Original_MAQ_NUMEROSERIE, 
                    global::System.Nullable<global::System.DateTime> Original_MAQ_FECHAALTA, 
                    string Original_MAQ_MARCA, 
                    string Original_MAQ_ES_CRITICA, 
                    global::System.Nullable<decimal> Original_PMAN_NUMERO) {
            return this.Update(MODM_CODIGO, EMAQ_CODIGO, FAB_CODIGO, MAQ_NOMBRE, MAQ_NUMEROSERIE, MAQ_FECHAALTA, MAQ_MARCA, MAQ_ES_CRITICA, PMAN_NUMERO, Original_MAQ_CODIGO, Original_MODM_CODIGO, Original_EMAQ_CODIGO, Original_FAB_CODIGO, Original_MAQ_NOMBRE, Original_MAQ_NUMEROSERIE, Original_MAQ_FECHAALTA, Original_MAQ_MARCA, Original_MAQ_ES_CRITICA, Original_PMAN_NUMERO, Original_MAQ_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ESTADO_MAQUINASTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ESTADO_MAQUINASTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ESTADO_MAQUINAS";
            tableMapping.ColumnMappings.Add("EMAQ_CODIGO", "EMAQ_CODIGO");
            tableMapping.ColumnMappings.Add("EMAQ_NOMBRE", "EMAQ_NOMBRE");
            tableMapping.ColumnMappings.Add("EMAQ_DESCRIPCION", "EMAQ_DESCRIPCION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ESTADO_MAQUINAS] WHERE (([EMAQ_CODIGO] = @Original_EMAQ_CODIGO) AND ((@IsNull_EMAQ_NOMBRE = 1 AND [EMAQ_NOMBRE] IS NULL) OR ([EMAQ_NOMBRE] = @Original_EMAQ_NOMBRE)) AND ((@IsNull_EMAQ_DESCRIPCION = 1 AND [EMAQ_DESCRIPCION] IS NULL) OR ([EMAQ_DESCRIPCION] = @Original_EMAQ_DESCRIPCION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAQ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EMAQ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMAQ_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAQ_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAQ_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAQ_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMAQ_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAQ_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAQ_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAQ_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ESTADO_MAQUINAS] ([EMAQ_NOMBRE], [EMAQ_DESCRIPCION]) VALUES (@" +
                "EMAQ_NOMBRE, @EMAQ_DESCRIPCION);\r\nSELECT EMAQ_CODIGO, EMAQ_NOMBRE, EMAQ_DESCRIPC" +
                "ION FROM ESTADO_MAQUINAS WHERE (EMAQ_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAQ_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAQ_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAQ_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAQ_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ESTADO_MAQUINAS] SET [EMAQ_NOMBRE] = @EMAQ_NOMBRE, [EMAQ_DESCRIPCION] = @EMAQ_DESCRIPCION WHERE (([EMAQ_CODIGO] = @Original_EMAQ_CODIGO) AND ((@IsNull_EMAQ_NOMBRE = 1 AND [EMAQ_NOMBRE] IS NULL) OR ([EMAQ_NOMBRE] = @Original_EMAQ_NOMBRE)) AND ((@IsNull_EMAQ_DESCRIPCION = 1 AND [EMAQ_DESCRIPCION] IS NULL) OR ([EMAQ_DESCRIPCION] = @Original_EMAQ_DESCRIPCION)));
SELECT EMAQ_CODIGO, EMAQ_NOMBRE, EMAQ_DESCRIPCION FROM ESTADO_MAQUINAS WHERE (EMAQ_CODIGO = @EMAQ_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAQ_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAQ_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAQ_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAQ_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAQ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EMAQ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMAQ_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAQ_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAQ_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAQ_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMAQ_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAQ_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAQ_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAQ_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAQ_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "EMAQ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT EMAQ_CODIGO, EMAQ_NOMBRE, EMAQ_DESCRIPCION FROM dbo.ESTADO_MAQUINAS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRegistrarMantenimiento.ESTADO_MAQUINASDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRegistrarMantenimiento.ESTADO_MAQUINASDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsRegistrarMantenimiento.ESTADO_MAQUINASDataTable dataTable = new dsRegistrarMantenimiento.ESTADO_MAQUINASDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento.ESTADO_MAQUINASDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento dataSet) {
            return this.Adapter.Update(dataSet, "ESTADO_MAQUINAS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_EMAQ_CODIGO, string Original_EMAQ_NOMBRE, string Original_EMAQ_DESCRIPCION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_EMAQ_CODIGO));
            if ((Original_EMAQ_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_EMAQ_NOMBRE));
            }
            if ((Original_EMAQ_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_EMAQ_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string EMAQ_NOMBRE, string EMAQ_DESCRIPCION) {
            if ((EMAQ_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EMAQ_NOMBRE));
            }
            if ((EMAQ_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(EMAQ_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string EMAQ_NOMBRE, string EMAQ_DESCRIPCION, decimal Original_EMAQ_CODIGO, string Original_EMAQ_NOMBRE, string Original_EMAQ_DESCRIPCION, decimal EMAQ_CODIGO) {
            if ((EMAQ_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(EMAQ_NOMBRE));
            }
            if ((EMAQ_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(EMAQ_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_EMAQ_CODIGO));
            if ((Original_EMAQ_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_EMAQ_NOMBRE));
            }
            if ((Original_EMAQ_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_EMAQ_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(EMAQ_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string EMAQ_NOMBRE, string EMAQ_DESCRIPCION, decimal Original_EMAQ_CODIGO, string Original_EMAQ_NOMBRE, string Original_EMAQ_DESCRIPCION) {
            return this.Update(EMAQ_NOMBRE, EMAQ_DESCRIPCION, Original_EMAQ_CODIGO, Original_EMAQ_NOMBRE, Original_EMAQ_DESCRIPCION, Original_EMAQ_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FABRICANTE_MAQUINASTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FABRICANTE_MAQUINASTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FABRICANTE_MAQUINAS";
            tableMapping.ColumnMappings.Add("FAB_CODIGO", "FAB_CODIGO");
            tableMapping.ColumnMappings.Add("FAB_RAZONSOCIAL", "FAB_RAZONSOCIAL");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[FABRICANTE_MAQUINAS] WHERE (([FAB_CODIGO] = @Original_FAB_CODI" +
                "GO) AND ((@IsNull_FAB_RAZONSOCIAL = 1 AND [FAB_RAZONSOCIAL] IS NULL) OR ([FAB_RA" +
                "ZONSOCIAL] = @Original_FAB_RAZONSOCIAL)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAB_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "FAB_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FAB_RAZONSOCIAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAB_RAZONSOCIAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAB_RAZONSOCIAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAB_RAZONSOCIAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[FABRICANTE_MAQUINAS] ([FAB_RAZONSOCIAL]) VALUES (@FAB_RAZONSOC" +
                "IAL);\r\nSELECT FAB_CODIGO, FAB_RAZONSOCIAL FROM FABRICANTE_MAQUINAS WHERE (FAB_CO" +
                "DIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAB_RAZONSOCIAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAB_RAZONSOCIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FABRICANTE_MAQUINAS] SET [FAB_RAZONSOCIAL] = @FAB_RAZONSOCIAL WHERE (([FAB_CODIGO] = @Original_FAB_CODIGO) AND ((@IsNull_FAB_RAZONSOCIAL = 1 AND [FAB_RAZONSOCIAL] IS NULL) OR ([FAB_RAZONSOCIAL] = @Original_FAB_RAZONSOCIAL)));
SELECT FAB_CODIGO, FAB_RAZONSOCIAL FROM FABRICANTE_MAQUINAS WHERE (FAB_CODIGO = @FAB_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAB_RAZONSOCIAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAB_RAZONSOCIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAB_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "FAB_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FAB_RAZONSOCIAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAB_RAZONSOCIAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAB_RAZONSOCIAL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAB_RAZONSOCIAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAB_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "FAB_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT FAB_CODIGO, FAB_RAZONSOCIAL FROM dbo.FABRICANTE_MAQUINAS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRegistrarMantenimiento.FABRICANTE_MAQUINASDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRegistrarMantenimiento.FABRICANTE_MAQUINASDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsRegistrarMantenimiento.FABRICANTE_MAQUINASDataTable dataTable = new dsRegistrarMantenimiento.FABRICANTE_MAQUINASDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento.FABRICANTE_MAQUINASDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento dataSet) {
            return this.Adapter.Update(dataSet, "FABRICANTE_MAQUINAS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_FAB_CODIGO, string Original_FAB_RAZONSOCIAL) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_FAB_CODIGO));
            if ((Original_FAB_RAZONSOCIAL == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_FAB_RAZONSOCIAL));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string FAB_RAZONSOCIAL) {
            if ((FAB_RAZONSOCIAL == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FAB_RAZONSOCIAL));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string FAB_RAZONSOCIAL, decimal Original_FAB_CODIGO, string Original_FAB_RAZONSOCIAL, decimal FAB_CODIGO) {
            if ((FAB_RAZONSOCIAL == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FAB_RAZONSOCIAL));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Original_FAB_CODIGO));
            if ((Original_FAB_RAZONSOCIAL == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_FAB_RAZONSOCIAL));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(FAB_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string FAB_RAZONSOCIAL, decimal Original_FAB_CODIGO, string Original_FAB_RAZONSOCIAL) {
            return this.Update(FAB_RAZONSOCIAL, Original_FAB_CODIGO, Original_FAB_RAZONSOCIAL, Original_FAB_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EMPLEADOSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EMPLEADOSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EMPLEADOS";
            tableMapping.ColumnMappings.Add("E_CODIGO", "E_CODIGO");
            tableMapping.ColumnMappings.Add("E_LEGAJO", "E_LEGAJO");
            tableMapping.ColumnMappings.Add("EE_CODIGO", "EE_CODIGO");
            tableMapping.ColumnMappings.Add("SEC_CODIGO", "SEC_CODIGO");
            tableMapping.ColumnMappings.Add("E_APELLIDO", "E_APELLIDO");
            tableMapping.ColumnMappings.Add("E_NOMBRE", "E_NOMBRE");
            tableMapping.ColumnMappings.Add("E_FECHANACIMIENTO", "E_FECHANACIMIENTO");
            tableMapping.ColumnMappings.Add("E_TELEFONO", "E_TELEFONO");
            tableMapping.ColumnMappings.Add("E_FECHA_ALTA", "E_FECHA_ALTA");
            tableMapping.ColumnMappings.Add("E_FECHA_BAJA", "E_FECHA_BAJA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[EMPLEADOS] WHERE (([E_CODIGO] = @Original_E_CODIGO) AND ((@IsNull_E_LEGAJO = 1 AND [E_LEGAJO] IS NULL) OR ([E_LEGAJO] = @Original_E_LEGAJO)) AND ([EE_CODIGO] = @Original_EE_CODIGO) AND ((@IsNull_SEC_CODIGO = 1 AND [SEC_CODIGO] IS NULL) OR ([SEC_CODIGO] = @Original_SEC_CODIGO)) AND ((@IsNull_E_APELLIDO = 1 AND [E_APELLIDO] IS NULL) OR ([E_APELLIDO] = @Original_E_APELLIDO)) AND ((@IsNull_E_NOMBRE = 1 AND [E_NOMBRE] IS NULL) OR ([E_NOMBRE] = @Original_E_NOMBRE)) AND ((@IsNull_E_FECHANACIMIENTO = 1 AND [E_FECHANACIMIENTO] IS NULL) OR ([E_FECHANACIMIENTO] = @Original_E_FECHANACIMIENTO)) AND ((@IsNull_E_TELEFONO = 1 AND [E_TELEFONO] IS NULL) OR ([E_TELEFONO] = @Original_E_TELEFONO)) AND ((@IsNull_E_FECHA_ALTA = 1 AND [E_FECHA_ALTA] IS NULL) OR ([E_FECHA_ALTA] = @Original_E_FECHA_ALTA)) AND ((@IsNull_E_FECHA_BAJA = 1 AND [E_FECHA_BAJA] IS NULL) OR ([E_FECHA_BAJA] = @Original_E_FECHA_BAJA)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_LEGAJO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_LEGAJO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_LEGAJO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_LEGAJO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEC_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_APELLIDO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_APELLIDO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_APELLIDO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_APELLIDO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_FECHANACIMIENTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHANACIMIENTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_FECHANACIMIENTO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHANACIMIENTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_TELEFONO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_TELEFONO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_TELEFONO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_TELEFONO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_FECHA_ALTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_ALTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_FECHA_ALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_ALTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_FECHA_BAJA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_BAJA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_FECHA_BAJA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_BAJA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[EMPLEADOS] ([E_LEGAJO], [EE_CODIGO], [SEC_CODIGO], [E_APELLIDO], [E_NOMBRE], [E_FECHANACIMIENTO], [E_TELEFONO], [E_FECHA_ALTA], [E_FECHA_BAJA]) VALUES (@E_LEGAJO, @EE_CODIGO, @SEC_CODIGO, @E_APELLIDO, @E_NOMBRE, @E_FECHANACIMIENTO, @E_TELEFONO, @E_FECHA_ALTA, @E_FECHA_BAJA);
SELECT E_CODIGO, E_LEGAJO, EE_CODIGO, SEC_CODIGO, E_APELLIDO, E_NOMBRE, E_FECHANACIMIENTO, E_TELEFONO, E_FECHA_ALTA, E_FECHA_BAJA FROM EMPLEADOS WHERE (E_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_LEGAJO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_LEGAJO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EE_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_APELLIDO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_APELLIDO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_FECHANACIMIENTO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHANACIMIENTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_TELEFONO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_TELEFONO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_FECHA_ALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_ALTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_FECHA_BAJA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_BAJA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[EMPLEADOS] SET [E_LEGAJO] = @E_LEGAJO, [EE_CODIGO] = @EE_CODIGO, [SEC_CODIGO] = @SEC_CODIGO, [E_APELLIDO] = @E_APELLIDO, [E_NOMBRE] = @E_NOMBRE, [E_FECHANACIMIENTO] = @E_FECHANACIMIENTO, [E_TELEFONO] = @E_TELEFONO, [E_FECHA_ALTA] = @E_FECHA_ALTA, [E_FECHA_BAJA] = @E_FECHA_BAJA WHERE (([E_CODIGO] = @Original_E_CODIGO) AND ((@IsNull_E_LEGAJO = 1 AND [E_LEGAJO] IS NULL) OR ([E_LEGAJO] = @Original_E_LEGAJO)) AND ([EE_CODIGO] = @Original_EE_CODIGO) AND ((@IsNull_SEC_CODIGO = 1 AND [SEC_CODIGO] IS NULL) OR ([SEC_CODIGO] = @Original_SEC_CODIGO)) AND ((@IsNull_E_APELLIDO = 1 AND [E_APELLIDO] IS NULL) OR ([E_APELLIDO] = @Original_E_APELLIDO)) AND ((@IsNull_E_NOMBRE = 1 AND [E_NOMBRE] IS NULL) OR ([E_NOMBRE] = @Original_E_NOMBRE)) AND ((@IsNull_E_FECHANACIMIENTO = 1 AND [E_FECHANACIMIENTO] IS NULL) OR ([E_FECHANACIMIENTO] = @Original_E_FECHANACIMIENTO)) AND ((@IsNull_E_TELEFONO = 1 AND [E_TELEFONO] IS NULL) OR ([E_TELEFONO] = @Original_E_TELEFONO)) AND ((@IsNull_E_FECHA_ALTA = 1 AND [E_FECHA_ALTA] IS NULL) OR ([E_FECHA_ALTA] = @Original_E_FECHA_ALTA)) AND ((@IsNull_E_FECHA_BAJA = 1 AND [E_FECHA_BAJA] IS NULL) OR ([E_FECHA_BAJA] = @Original_E_FECHA_BAJA)));
SELECT E_CODIGO, E_LEGAJO, EE_CODIGO, SEC_CODIGO, E_APELLIDO, E_NOMBRE, E_FECHANACIMIENTO, E_TELEFONO, E_FECHA_ALTA, E_FECHA_BAJA FROM EMPLEADOS WHERE (E_CODIGO = @E_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_LEGAJO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_LEGAJO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EE_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_APELLIDO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_APELLIDO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_FECHANACIMIENTO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHANACIMIENTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_TELEFONO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_TELEFONO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_FECHA_ALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_ALTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_FECHA_BAJA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_BAJA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_LEGAJO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_LEGAJO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_LEGAJO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_LEGAJO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEC_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_APELLIDO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_APELLIDO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_APELLIDO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_APELLIDO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_FECHANACIMIENTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHANACIMIENTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_FECHANACIMIENTO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHANACIMIENTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_TELEFONO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_TELEFONO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_TELEFONO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_TELEFONO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_FECHA_ALTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_ALTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_FECHA_ALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_ALTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_FECHA_BAJA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_BAJA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_FECHA_BAJA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_BAJA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT E_CODIGO, E_LEGAJO, EE_CODIGO, SEC_CODIGO, E_APELLIDO, E_NOMBRE, E_FECHANA" +
                "CIMIENTO, E_TELEFONO, E_FECHA_ALTA, E_FECHA_BAJA FROM dbo.EMPLEADOS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRegistrarMantenimiento.EMPLEADOSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRegistrarMantenimiento.EMPLEADOSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsRegistrarMantenimiento.EMPLEADOSDataTable dataTable = new dsRegistrarMantenimiento.EMPLEADOSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento.EMPLEADOSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento dataSet) {
            return this.Adapter.Update(dataSet, "EMPLEADOS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_E_CODIGO, string Original_E_LEGAJO, decimal Original_EE_CODIGO, global::System.Nullable<decimal> Original_SEC_CODIGO, string Original_E_APELLIDO, string Original_E_NOMBRE, global::System.Nullable<global::System.DateTime> Original_E_FECHANACIMIENTO, string Original_E_TELEFONO, global::System.Nullable<global::System.DateTime> Original_E_FECHA_ALTA, global::System.Nullable<global::System.DateTime> Original_E_FECHA_BAJA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_E_CODIGO));
            if ((Original_E_LEGAJO == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_E_LEGAJO));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_EE_CODIGO));
            if ((Original_SEC_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_SEC_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_E_APELLIDO == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_E_APELLIDO));
            }
            if ((Original_E_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_E_NOMBRE));
            }
            if ((Original_E_FECHANACIMIENTO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_E_FECHANACIMIENTO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_E_TELEFONO == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_E_TELEFONO));
            }
            if ((Original_E_FECHA_ALTA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_E_FECHA_ALTA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_E_FECHA_BAJA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_E_FECHA_BAJA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string E_LEGAJO, decimal EE_CODIGO, global::System.Nullable<decimal> SEC_CODIGO, string E_APELLIDO, string E_NOMBRE, global::System.Nullable<global::System.DateTime> E_FECHANACIMIENTO, string E_TELEFONO, global::System.Nullable<global::System.DateTime> E_FECHA_ALTA, global::System.Nullable<global::System.DateTime> E_FECHA_BAJA) {
            if ((E_LEGAJO == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(E_LEGAJO));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(EE_CODIGO));
            if ((SEC_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(SEC_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((E_APELLIDO == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(E_APELLIDO));
            }
            if ((E_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(E_NOMBRE));
            }
            if ((E_FECHANACIMIENTO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(E_FECHANACIMIENTO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((E_TELEFONO == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(E_TELEFONO));
            }
            if ((E_FECHA_ALTA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(E_FECHA_ALTA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((E_FECHA_BAJA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(E_FECHA_BAJA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string E_LEGAJO, 
                    decimal EE_CODIGO, 
                    global::System.Nullable<decimal> SEC_CODIGO, 
                    string E_APELLIDO, 
                    string E_NOMBRE, 
                    global::System.Nullable<global::System.DateTime> E_FECHANACIMIENTO, 
                    string E_TELEFONO, 
                    global::System.Nullable<global::System.DateTime> E_FECHA_ALTA, 
                    global::System.Nullable<global::System.DateTime> E_FECHA_BAJA, 
                    decimal Original_E_CODIGO, 
                    string Original_E_LEGAJO, 
                    decimal Original_EE_CODIGO, 
                    global::System.Nullable<decimal> Original_SEC_CODIGO, 
                    string Original_E_APELLIDO, 
                    string Original_E_NOMBRE, 
                    global::System.Nullable<global::System.DateTime> Original_E_FECHANACIMIENTO, 
                    string Original_E_TELEFONO, 
                    global::System.Nullable<global::System.DateTime> Original_E_FECHA_ALTA, 
                    global::System.Nullable<global::System.DateTime> Original_E_FECHA_BAJA, 
                    decimal E_CODIGO) {
            if ((E_LEGAJO == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(E_LEGAJO));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(EE_CODIGO));
            if ((SEC_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(SEC_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((E_APELLIDO == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(E_APELLIDO));
            }
            if ((E_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(E_NOMBRE));
            }
            if ((E_FECHANACIMIENTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(E_FECHANACIMIENTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((E_TELEFONO == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(E_TELEFONO));
            }
            if ((E_FECHA_ALTA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(E_FECHA_ALTA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((E_FECHA_BAJA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(E_FECHA_BAJA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_E_CODIGO));
            if ((Original_E_LEGAJO == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_E_LEGAJO));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_EE_CODIGO));
            if ((Original_SEC_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_SEC_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_E_APELLIDO == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_E_APELLIDO));
            }
            if ((Original_E_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_E_NOMBRE));
            }
            if ((Original_E_FECHANACIMIENTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_E_FECHANACIMIENTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_E_TELEFONO == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_E_TELEFONO));
            }
            if ((Original_E_FECHA_ALTA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_E_FECHA_ALTA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_E_FECHA_BAJA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_E_FECHA_BAJA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(E_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string E_LEGAJO, 
                    decimal EE_CODIGO, 
                    global::System.Nullable<decimal> SEC_CODIGO, 
                    string E_APELLIDO, 
                    string E_NOMBRE, 
                    global::System.Nullable<global::System.DateTime> E_FECHANACIMIENTO, 
                    string E_TELEFONO, 
                    global::System.Nullable<global::System.DateTime> E_FECHA_ALTA, 
                    global::System.Nullable<global::System.DateTime> E_FECHA_BAJA, 
                    decimal Original_E_CODIGO, 
                    string Original_E_LEGAJO, 
                    decimal Original_EE_CODIGO, 
                    global::System.Nullable<decimal> Original_SEC_CODIGO, 
                    string Original_E_APELLIDO, 
                    string Original_E_NOMBRE, 
                    global::System.Nullable<global::System.DateTime> Original_E_FECHANACIMIENTO, 
                    string Original_E_TELEFONO, 
                    global::System.Nullable<global::System.DateTime> Original_E_FECHA_ALTA, 
                    global::System.Nullable<global::System.DateTime> Original_E_FECHA_BAJA) {
            return this.Update(E_LEGAJO, EE_CODIGO, SEC_CODIGO, E_APELLIDO, E_NOMBRE, E_FECHANACIMIENTO, E_TELEFONO, E_FECHA_ALTA, E_FECHA_BAJA, Original_E_CODIGO, Original_E_LEGAJO, Original_EE_CODIGO, Original_SEC_CODIGO, Original_E_APELLIDO, Original_E_NOMBRE, Original_E_FECHANACIMIENTO, Original_E_TELEFONO, Original_E_FECHA_ALTA, Original_E_FECHA_BAJA, Original_E_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DETALLE_PLANES_MANTENIMIENTOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DETALLE_PLANES_MANTENIMIENTOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DETALLE_PLANES_MANTENIMIENTO";
            tableMapping.ColumnMappings.Add("DPMAN_CODIGO", "DPMAN_CODIGO");
            tableMapping.ColumnMappings.Add("PMAN_NUMERO", "PMAN_NUMERO");
            tableMapping.ColumnMappings.Add("EDMAN_CODIGO", "EDMAN_CODIGO");
            tableMapping.ColumnMappings.Add("MAN_CODIGO", "MAN_CODIGO");
            tableMapping.ColumnMappings.Add("UMED_CODIGO", "UMED_CODIGO");
            tableMapping.ColumnMappings.Add("DPMAN_FRECUENCIA", "DPMAN_FRECUENCIA");
            tableMapping.ColumnMappings.Add("DPMAN_DESCRIPCION", "DPMAN_DESCRIPCION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[DETALLE_PLANES_MANTENIMIENTO] WHERE (([DPMAN_CODIGO] = @Original_DPMAN_CODIGO) AND ([PMAN_NUMERO] = @Original_PMAN_NUMERO) AND ([EDMAN_CODIGO] = @Original_EDMAN_CODIGO) AND ([MAN_CODIGO] = @Original_MAN_CODIGO) AND ((@IsNull_UMED_CODIGO = 1 AND [UMED_CODIGO] IS NULL) OR ([UMED_CODIGO] = @Original_UMED_CODIGO)) AND ((@IsNull_DPMAN_FRECUENCIA = 1 AND [DPMAN_FRECUENCIA] IS NULL) OR ([DPMAN_FRECUENCIA] = @Original_DPMAN_FRECUENCIA)) AND ((@IsNull_DPMAN_DESCRIPCION = 1 AND [DPMAN_DESCRIPCION] IS NULL) OR ([DPMAN_DESCRIPCION] = @Original_DPMAN_DESCRIPCION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMAN_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMAN_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EDMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EDMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DPMAN_FRECUENCIA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_FRECUENCIA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMAN_FRECUENCIA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_FRECUENCIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DPMAN_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[DETALLE_PLANES_MANTENIMIENTO] ([PMAN_NUMERO], [EDMAN_CODIGO], [MAN_CODIGO], [UMED_CODIGO], [DPMAN_FRECUENCIA], [DPMAN_DESCRIPCION]) VALUES (@PMAN_NUMERO, @EDMAN_CODIGO, @MAN_CODIGO, @UMED_CODIGO, @DPMAN_FRECUENCIA, @DPMAN_DESCRIPCION);
SELECT DPMAN_CODIGO, PMAN_NUMERO, EDMAN_CODIGO, MAN_CODIGO, UMED_CODIGO, DPMAN_FRECUENCIA, DPMAN_DESCRIPCION FROM DETALLE_PLANES_MANTENIMIENTO WHERE (DPMAN_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMAN_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMAN_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EDMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPMAN_FRECUENCIA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_FRECUENCIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPMAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[DETALLE_PLANES_MANTENIMIENTO] SET [PMAN_NUMERO] = @PMAN_NUMERO, [EDMAN_CODIGO] = @EDMAN_CODIGO, [MAN_CODIGO] = @MAN_CODIGO, [UMED_CODIGO] = @UMED_CODIGO, [DPMAN_FRECUENCIA] = @DPMAN_FRECUENCIA, [DPMAN_DESCRIPCION] = @DPMAN_DESCRIPCION WHERE (([DPMAN_CODIGO] = @Original_DPMAN_CODIGO) AND ([PMAN_NUMERO] = @Original_PMAN_NUMERO) AND ([EDMAN_CODIGO] = @Original_EDMAN_CODIGO) AND ([MAN_CODIGO] = @Original_MAN_CODIGO) AND ((@IsNull_UMED_CODIGO = 1 AND [UMED_CODIGO] IS NULL) OR ([UMED_CODIGO] = @Original_UMED_CODIGO)) AND ((@IsNull_DPMAN_FRECUENCIA = 1 AND [DPMAN_FRECUENCIA] IS NULL) OR ([DPMAN_FRECUENCIA] = @Original_DPMAN_FRECUENCIA)) AND ((@IsNull_DPMAN_DESCRIPCION = 1 AND [DPMAN_DESCRIPCION] IS NULL) OR ([DPMAN_DESCRIPCION] = @Original_DPMAN_DESCRIPCION)));
SELECT DPMAN_CODIGO, PMAN_NUMERO, EDMAN_CODIGO, MAN_CODIGO, UMED_CODIGO, DPMAN_FRECUENCIA, DPMAN_DESCRIPCION FROM DETALLE_PLANES_MANTENIMIENTO WHERE (DPMAN_CODIGO = @DPMAN_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMAN_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMAN_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EDMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPMAN_FRECUENCIA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_FRECUENCIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPMAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMAN_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMAN_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EDMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EDMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DPMAN_FRECUENCIA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_FRECUENCIA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMAN_FRECUENCIA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_FRECUENCIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DPMAN_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMAN_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "DPMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DPMAN_CODIGO, PMAN_NUMERO, EDMAN_CODIGO, MAN_CODIGO, UMED_CODIGO, DPMAN_FR" +
                "ECUENCIA, DPMAN_DESCRIPCION FROM dbo.DETALLE_PLANES_MANTENIMIENTO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRegistrarMantenimiento.DETALLE_PLANES_MANTENIMIENTODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRegistrarMantenimiento.DETALLE_PLANES_MANTENIMIENTODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsRegistrarMantenimiento.DETALLE_PLANES_MANTENIMIENTODataTable dataTable = new dsRegistrarMantenimiento.DETALLE_PLANES_MANTENIMIENTODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento.DETALLE_PLANES_MANTENIMIENTODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento dataSet) {
            return this.Adapter.Update(dataSet, "DETALLE_PLANES_MANTENIMIENTO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_DPMAN_CODIGO, decimal Original_PMAN_NUMERO, decimal Original_EDMAN_CODIGO, decimal Original_MAN_CODIGO, global::System.Nullable<decimal> Original_UMED_CODIGO, string Original_DPMAN_FRECUENCIA, string Original_DPMAN_DESCRIPCION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_DPMAN_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_PMAN_NUMERO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_EDMAN_CODIGO));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_MAN_CODIGO));
            if ((Original_UMED_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_UMED_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_DPMAN_FRECUENCIA == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_DPMAN_FRECUENCIA));
            }
            if ((Original_DPMAN_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_DPMAN_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal PMAN_NUMERO, decimal EDMAN_CODIGO, decimal MAN_CODIGO, global::System.Nullable<decimal> UMED_CODIGO, string DPMAN_FRECUENCIA, string DPMAN_DESCRIPCION) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(PMAN_NUMERO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(EDMAN_CODIGO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(MAN_CODIGO));
            if ((UMED_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(UMED_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DPMAN_FRECUENCIA == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DPMAN_FRECUENCIA));
            }
            if ((DPMAN_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(DPMAN_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal PMAN_NUMERO, decimal EDMAN_CODIGO, decimal MAN_CODIGO, global::System.Nullable<decimal> UMED_CODIGO, string DPMAN_FRECUENCIA, string DPMAN_DESCRIPCION, decimal Original_DPMAN_CODIGO, decimal Original_PMAN_NUMERO, decimal Original_EDMAN_CODIGO, decimal Original_MAN_CODIGO, global::System.Nullable<decimal> Original_UMED_CODIGO, string Original_DPMAN_FRECUENCIA, string Original_DPMAN_DESCRIPCION, decimal DPMAN_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(PMAN_NUMERO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(EDMAN_CODIGO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(MAN_CODIGO));
            if ((UMED_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(UMED_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DPMAN_FRECUENCIA == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DPMAN_FRECUENCIA));
            }
            if ((DPMAN_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(DPMAN_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_DPMAN_CODIGO));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_PMAN_NUMERO));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_EDMAN_CODIGO));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_MAN_CODIGO));
            if ((Original_UMED_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_UMED_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_DPMAN_FRECUENCIA == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_DPMAN_FRECUENCIA));
            }
            if ((Original_DPMAN_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_DPMAN_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(DPMAN_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal PMAN_NUMERO, decimal EDMAN_CODIGO, decimal MAN_CODIGO, global::System.Nullable<decimal> UMED_CODIGO, string DPMAN_FRECUENCIA, string DPMAN_DESCRIPCION, decimal Original_DPMAN_CODIGO, decimal Original_PMAN_NUMERO, decimal Original_EDMAN_CODIGO, decimal Original_MAN_CODIGO, global::System.Nullable<decimal> Original_UMED_CODIGO, string Original_DPMAN_FRECUENCIA, string Original_DPMAN_DESCRIPCION) {
            return this.Update(PMAN_NUMERO, EDMAN_CODIGO, MAN_CODIGO, UMED_CODIGO, DPMAN_FRECUENCIA, DPMAN_DESCRIPCION, Original_DPMAN_CODIGO, Original_PMAN_NUMERO, Original_EDMAN_CODIGO, Original_MAN_CODIGO, Original_UMED_CODIGO, Original_DPMAN_FRECUENCIA, Original_DPMAN_DESCRIPCION, Original_DPMAN_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UNIDADES_MEDIDATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UNIDADES_MEDIDATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UNIDADES_MEDIDA";
            tableMapping.ColumnMappings.Add("UMED_CODIGO", "UMED_CODIGO");
            tableMapping.ColumnMappings.Add("TUMED_CODIGO", "TUMED_CODIGO");
            tableMapping.ColumnMappings.Add("UMED_NOMBRE", "UMED_NOMBRE");
            tableMapping.ColumnMappings.Add("UMED_ABREVIATURA", "UMED_ABREVIATURA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[UNIDADES_MEDIDA] WHERE (([UMED_CODIGO] = @Original_UMED_CODIGO) AND ((@IsNull_TUMED_CODIGO = 1 AND [TUMED_CODIGO] IS NULL) OR ([TUMED_CODIGO] = @Original_TUMED_CODIGO)) AND ((@IsNull_UMED_NOMBRE = 1 AND [UMED_NOMBRE] IS NULL) OR ([UMED_NOMBRE] = @Original_UMED_NOMBRE)) AND ((@IsNull_UMED_ABREVIATURA = 1 AND [UMED_ABREVIATURA] IS NULL) OR ([UMED_ABREVIATURA] = @Original_UMED_ABREVIATURA)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUMED_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_ABREVIATURA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[UNIDADES_MEDIDA] ([TUMED_CODIGO], [UMED_NOMBRE], [UMED_ABREVIATURA]) VALUES (@TUMED_CODIGO, @UMED_NOMBRE, @UMED_ABREVIATURA);
SELECT UMED_CODIGO, TUMED_CODIGO, UMED_NOMBRE, UMED_ABREVIATURA FROM UNIDADES_MEDIDA WHERE (UMED_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[UNIDADES_MEDIDA] SET [TUMED_CODIGO] = @TUMED_CODIGO, [UMED_NOMBRE] = @UMED_NOMBRE, [UMED_ABREVIATURA] = @UMED_ABREVIATURA WHERE (([UMED_CODIGO] = @Original_UMED_CODIGO) AND ((@IsNull_TUMED_CODIGO = 1 AND [TUMED_CODIGO] IS NULL) OR ([TUMED_CODIGO] = @Original_TUMED_CODIGO)) AND ((@IsNull_UMED_NOMBRE = 1 AND [UMED_NOMBRE] IS NULL) OR ([UMED_NOMBRE] = @Original_UMED_NOMBRE)) AND ((@IsNull_UMED_ABREVIATURA = 1 AND [UMED_ABREVIATURA] IS NULL) OR ([UMED_ABREVIATURA] = @Original_UMED_ABREVIATURA)));
SELECT UMED_CODIGO, TUMED_CODIGO, UMED_NOMBRE, UMED_ABREVIATURA FROM UNIDADES_MEDIDA WHERE (UMED_CODIGO = @UMED_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUMED_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_ABREVIATURA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT UMED_CODIGO, TUMED_CODIGO, UMED_NOMBRE, UMED_ABREVIATURA FROM dbo.UNIDADES" +
                "_MEDIDA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRegistrarMantenimiento.UNIDADES_MEDIDADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRegistrarMantenimiento.UNIDADES_MEDIDADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsRegistrarMantenimiento.UNIDADES_MEDIDADataTable dataTable = new dsRegistrarMantenimiento.UNIDADES_MEDIDADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento.UNIDADES_MEDIDADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento dataSet) {
            return this.Adapter.Update(dataSet, "UNIDADES_MEDIDA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_UMED_CODIGO, global::System.Nullable<decimal> Original_TUMED_CODIGO, string Original_UMED_NOMBRE, string Original_UMED_ABREVIATURA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_UMED_CODIGO));
            if ((Original_TUMED_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_TUMED_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_UMED_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_UMED_NOMBRE));
            }
            if ((Original_UMED_ABREVIATURA == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_UMED_ABREVIATURA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<decimal> TUMED_CODIGO, string UMED_NOMBRE, string UMED_ABREVIATURA) {
            if ((TUMED_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(TUMED_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((UMED_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(UMED_NOMBRE));
            }
            if ((UMED_ABREVIATURA == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(UMED_ABREVIATURA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> TUMED_CODIGO, string UMED_NOMBRE, string UMED_ABREVIATURA, decimal Original_UMED_CODIGO, global::System.Nullable<decimal> Original_TUMED_CODIGO, string Original_UMED_NOMBRE, string Original_UMED_ABREVIATURA, decimal UMED_CODIGO) {
            if ((TUMED_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(TUMED_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((UMED_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(UMED_NOMBRE));
            }
            if ((UMED_ABREVIATURA == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(UMED_ABREVIATURA));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_UMED_CODIGO));
            if ((Original_TUMED_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_TUMED_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_UMED_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_UMED_NOMBRE));
            }
            if ((Original_UMED_ABREVIATURA == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_UMED_ABREVIATURA));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(UMED_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> TUMED_CODIGO, string UMED_NOMBRE, string UMED_ABREVIATURA, decimal Original_UMED_CODIGO, global::System.Nullable<decimal> Original_TUMED_CODIGO, string Original_UMED_NOMBRE, string Original_UMED_ABREVIATURA) {
            return this.Update(TUMED_CODIGO, UMED_NOMBRE, UMED_ABREVIATURA, Original_UMED_CODIGO, Original_TUMED_CODIGO, Original_UMED_NOMBRE, Original_UMED_ABREVIATURA, Original_UMED_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CAUSAS_FALLOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CAUSAS_FALLOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CAUSAS_FALLO";
            tableMapping.ColumnMappings.Add("CF_NUMERO", "CF_NUMERO");
            tableMapping.ColumnMappings.Add("CF_CODIGO", "CF_CODIGO");
            tableMapping.ColumnMappings.Add("CF_NOMBRE", "CF_NOMBRE");
            tableMapping.ColumnMappings.Add("CF_DESCRPCION", "CF_DESCRPCION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CAUSAS_FALLO] WHERE (([CF_NUMERO] = @Original_CF_NUMERO) AND ((@IsNull_CF_CODIGO = 1 AND [CF_CODIGO] IS NULL) OR ([CF_CODIGO] = @Original_CF_CODIGO)) AND ((@IsNull_CF_NOMBRE = 1 AND [CF_NOMBRE] IS NULL) OR ([CF_NOMBRE] = @Original_CF_NOMBRE)) AND ((@IsNull_CF_DESCRPCION = 1 AND [CF_DESCRPCION] IS NULL) OR ([CF_DESCRPCION] = @Original_CF_DESCRPCION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CF_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CF_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CF_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CF_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CF_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CF_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CF_DESCRPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_DESCRPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CF_DESCRPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_DESCRPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CAUSAS_FALLO] ([CF_CODIGO], [CF_NOMBRE], [CF_DESCRPCION]) VALU" +
                "ES (@CF_CODIGO, @CF_NOMBRE, @CF_DESCRPCION);\r\nSELECT CF_NUMERO, CF_CODIGO, CF_NO" +
                "MBRE, CF_DESCRPCION FROM CAUSAS_FALLO WHERE (CF_NUMERO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CF_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CF_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CF_DESCRPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_DESCRPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CAUSAS_FALLO] SET [CF_CODIGO] = @CF_CODIGO, [CF_NOMBRE] = @CF_NOMBRE, [CF_DESCRPCION] = @CF_DESCRPCION WHERE (([CF_NUMERO] = @Original_CF_NUMERO) AND ((@IsNull_CF_CODIGO = 1 AND [CF_CODIGO] IS NULL) OR ([CF_CODIGO] = @Original_CF_CODIGO)) AND ((@IsNull_CF_NOMBRE = 1 AND [CF_NOMBRE] IS NULL) OR ([CF_NOMBRE] = @Original_CF_NOMBRE)) AND ((@IsNull_CF_DESCRPCION = 1 AND [CF_DESCRPCION] IS NULL) OR ([CF_DESCRPCION] = @Original_CF_DESCRPCION)));
SELECT CF_NUMERO, CF_CODIGO, CF_NOMBRE, CF_DESCRPCION FROM CAUSAS_FALLO WHERE (CF_NUMERO = @CF_NUMERO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CF_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CF_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CF_DESCRPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_DESCRPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CF_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CF_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CF_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CF_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CF_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CF_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CF_DESCRPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_DESCRPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CF_DESCRPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_DESCRPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CF_NUMERO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "CF_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CF_NUMERO, CF_CODIGO, CF_NOMBRE, CF_DESCRPCION FROM dbo.CAUSAS_FALLO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRegistrarMantenimiento.CAUSAS_FALLODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRegistrarMantenimiento.CAUSAS_FALLODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsRegistrarMantenimiento.CAUSAS_FALLODataTable dataTable = new dsRegistrarMantenimiento.CAUSAS_FALLODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento.CAUSAS_FALLODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento dataSet) {
            return this.Adapter.Update(dataSet, "CAUSAS_FALLO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_CF_NUMERO, string Original_CF_CODIGO, string Original_CF_NOMBRE, string Original_CF_DESCRPCION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_CF_NUMERO));
            if ((Original_CF_CODIGO == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CF_CODIGO));
            }
            if ((Original_CF_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CF_NOMBRE));
            }
            if ((Original_CF_DESCRPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_CF_DESCRPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CF_CODIGO, string CF_NOMBRE, string CF_DESCRPCION) {
            if ((CF_CODIGO == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CF_CODIGO));
            }
            if ((CF_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CF_NOMBRE));
            }
            if ((CF_DESCRPCION == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CF_DESCRPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CF_CODIGO, string CF_NOMBRE, string CF_DESCRPCION, decimal Original_CF_NUMERO, string Original_CF_CODIGO, string Original_CF_NOMBRE, string Original_CF_DESCRPCION, decimal CF_NUMERO) {
            if ((CF_CODIGO == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CF_CODIGO));
            }
            if ((CF_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CF_NOMBRE));
            }
            if ((CF_DESCRPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CF_DESCRPCION));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_CF_NUMERO));
            if ((Original_CF_CODIGO == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_CF_CODIGO));
            }
            if ((Original_CF_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_CF_NOMBRE));
            }
            if ((Original_CF_DESCRPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_CF_DESCRPCION));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(CF_NUMERO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CF_CODIGO, string CF_NOMBRE, string CF_DESCRPCION, decimal Original_CF_NUMERO, string Original_CF_CODIGO, string Original_CF_NOMBRE, string Original_CF_DESCRPCION) {
            return this.Update(CF_CODIGO, CF_NOMBRE, CF_DESCRPCION, Original_CF_NUMERO, Original_CF_CODIGO, Original_CF_NOMBRE, Original_CF_DESCRPCION, Original_CF_NUMERO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class REGISTROS_MANTENIMIENTOSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public REGISTROS_MANTENIMIENTOSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "REGISTROS_MANTENIMIENTOS";
            tableMapping.ColumnMappings.Add("RMAN_CODIGO", "RMAN_CODIGO");
            tableMapping.ColumnMappings.Add("TMAN_CODIGO", "TMAN_CODIGO");
            tableMapping.ColumnMappings.Add("MAN_CODIGO", "MAN_CODIGO");
            tableMapping.ColumnMappings.Add("MAQ_CODIGO", "MAQ_CODIGO");
            tableMapping.ColumnMappings.Add("DPMAN_CODIGO", "DPMAN_CODIGO");
            tableMapping.ColumnMappings.Add("E_CODIGO", "E_CODIGO");
            tableMapping.ColumnMappings.Add("RMAN_FECHA_REALIZACION", "RMAN_FECHA_REALIZACION");
            tableMapping.ColumnMappings.Add("RMAN_FECHA", "RMAN_FECHA");
            tableMapping.ColumnMappings.Add("RMAN_OBSERVACION", "RMAN_OBSERVACION");
            tableMapping.ColumnMappings.Add("CF_NUMERO", "CF_NUMERO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[REGISTROS_MANTENIMIENTOS] WHERE (([RMAN_CODIGO] = @Original_RMAN_CODIGO) AND ((@IsNull_TMAN_CODIGO = 1 AND [TMAN_CODIGO] IS NULL) OR ([TMAN_CODIGO] = @Original_TMAN_CODIGO)) AND ((@IsNull_MAN_CODIGO = 1 AND [MAN_CODIGO] IS NULL) OR ([MAN_CODIGO] = @Original_MAN_CODIGO)) AND ((@IsNull_MAQ_CODIGO = 1 AND [MAQ_CODIGO] IS NULL) OR ([MAQ_CODIGO] = @Original_MAQ_CODIGO)) AND ((@IsNull_DPMAN_CODIGO = 1 AND [DPMAN_CODIGO] IS NULL) OR ([DPMAN_CODIGO] = @Original_DPMAN_CODIGO)) AND ((@IsNull_E_CODIGO = 1 AND [E_CODIGO] IS NULL) OR ([E_CODIGO] = @Original_E_CODIGO)) AND ((@IsNull_RMAN_FECHA_REALIZACION = 1 AND [RMAN_FECHA_REALIZACION] IS NULL) OR ([RMAN_FECHA_REALIZACION] = @Original_RMAN_FECHA_REALIZACION)) AND ((@IsNull_RMAN_FECHA = 1 AND [RMAN_FECHA] IS NULL) OR ([RMAN_FECHA] = @Original_RMAN_FECHA)) AND ((@IsNull_RMAN_OBSERVACION = 1 AND [RMAN_OBSERVACION] IS NULL) OR ([RMAN_OBSERVACION] = @Original_RMAN_OBSERVACION)) AND ((@IsNull_CF_NUMERO = 1 AND [CF_NUMERO] IS NULL) OR ([CF_NUMERO] = @Original_CF_NUMERO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "RMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TMAN_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAN_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAQ_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAQ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAQ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DPMAN_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RMAN_FECHA_REALIZACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_FECHA_REALIZACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMAN_FECHA_REALIZACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_FECHA_REALIZACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RMAN_FECHA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_FECHA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMAN_FECHA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_FECHA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RMAN_OBSERVACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_OBSERVACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMAN_OBSERVACION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_OBSERVACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CF_NUMERO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_NUMERO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CF_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CF_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[REGISTROS_MANTENIMIENTOS] ([TMAN_CODIGO], [MAN_CODIGO], [MAQ_CODIGO], [DPMAN_CODIGO], [E_CODIGO], [RMAN_FECHA_REALIZACION], [RMAN_FECHA], [RMAN_OBSERVACION], [CF_NUMERO]) VALUES (@TMAN_CODIGO, @MAN_CODIGO, @MAQ_CODIGO, @DPMAN_CODIGO, @E_CODIGO, @RMAN_FECHA_REALIZACION, @RMAN_FECHA, @RMAN_OBSERVACION, @CF_NUMERO);
SELECT RMAN_CODIGO, TMAN_CODIGO, MAN_CODIGO, MAQ_CODIGO, DPMAN_CODIGO, E_CODIGO, RMAN_FECHA_REALIZACION, RMAN_FECHA, RMAN_OBSERVACION, CF_NUMERO FROM REGISTROS_MANTENIMIENTOS WHERE (RMAN_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAQ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAQ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMAN_FECHA_REALIZACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_FECHA_REALIZACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMAN_FECHA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_FECHA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMAN_OBSERVACION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_OBSERVACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CF_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CF_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[REGISTROS_MANTENIMIENTOS] SET [TMAN_CODIGO] = @TMAN_CODIGO, [MAN_CO" +
                "DIGO] = @MAN_CODIGO, [MAQ_CODIGO] = @MAQ_CODIGO, [DPMAN_CODIGO] = @DPMAN_CODIGO," +
                " [E_CODIGO] = @E_CODIGO, [RMAN_FECHA_REALIZACION] = @RMAN_FECHA_REALIZACION, [RM" +
                "AN_FECHA] = @RMAN_FECHA, [RMAN_OBSERVACION] = @RMAN_OBSERVACION, [CF_NUMERO] = @" +
                "CF_NUMERO WHERE (([RMAN_CODIGO] = @Original_RMAN_CODIGO) AND ((@IsNull_TMAN_CODI" +
                "GO = 1 AND [TMAN_CODIGO] IS NULL) OR ([TMAN_CODIGO] = @Original_TMAN_CODIGO)) AN" +
                "D ((@IsNull_MAN_CODIGO = 1 AND [MAN_CODIGO] IS NULL) OR ([MAN_CODIGO] = @Origina" +
                "l_MAN_CODIGO)) AND ((@IsNull_MAQ_CODIGO = 1 AND [MAQ_CODIGO] IS NULL) OR ([MAQ_C" +
                "ODIGO] = @Original_MAQ_CODIGO)) AND ((@IsNull_DPMAN_CODIGO = 1 AND [DPMAN_CODIGO" +
                "] IS NULL) OR ([DPMAN_CODIGO] = @Original_DPMAN_CODIGO)) AND ((@IsNull_E_CODIGO " +
                "= 1 AND [E_CODIGO] IS NULL) OR ([E_CODIGO] = @Original_E_CODIGO)) AND ((@IsNull_" +
                "RMAN_FECHA_REALIZACION = 1 AND [RMAN_FECHA_REALIZACION] IS NULL) OR ([RMAN_FECHA" +
                "_REALIZACION] = @Original_RMAN_FECHA_REALIZACION)) AND ((@IsNull_RMAN_FECHA = 1 " +
                "AND [RMAN_FECHA] IS NULL) OR ([RMAN_FECHA] = @Original_RMAN_FECHA)) AND ((@IsNul" +
                "l_RMAN_OBSERVACION = 1 AND [RMAN_OBSERVACION] IS NULL) OR ([RMAN_OBSERVACION] = " +
                "@Original_RMAN_OBSERVACION)) AND ((@IsNull_CF_NUMERO = 1 AND [CF_NUMERO] IS NULL" +
                ") OR ([CF_NUMERO] = @Original_CF_NUMERO)));\r\nSELECT RMAN_CODIGO, TMAN_CODIGO, MA" +
                "N_CODIGO, MAQ_CODIGO, DPMAN_CODIGO, E_CODIGO, RMAN_FECHA_REALIZACION, RMAN_FECHA" +
                ", RMAN_OBSERVACION, CF_NUMERO FROM REGISTROS_MANTENIMIENTOS WHERE (RMAN_CODIGO =" +
                " @RMAN_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAQ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAQ_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMAN_FECHA_REALIZACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_FECHA_REALIZACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMAN_FECHA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_FECHA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMAN_OBSERVACION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_OBSERVACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CF_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CF_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "RMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TMAN_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAN_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MAQ_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MAQ_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAQ_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MAQ_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DPMAN_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMAN_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RMAN_FECHA_REALIZACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_FECHA_REALIZACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMAN_FECHA_REALIZACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_FECHA_REALIZACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RMAN_FECHA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_FECHA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMAN_FECHA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_FECHA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RMAN_OBSERVACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_OBSERVACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMAN_OBSERVACION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAN_OBSERVACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CF_NUMERO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF_NUMERO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CF_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CF_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "RMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT RMAN_CODIGO, TMAN_CODIGO, MAN_CODIGO, MAQ_CODIGO, DPMAN_CODIGO, E_CODIGO, " +
                "RMAN_FECHA_REALIZACION, RMAN_FECHA, RMAN_OBSERVACION, CF_NUMERO FROM dbo.REGISTR" +
                "OS_MANTENIMIENTOS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRegistrarMantenimiento.REGISTROS_MANTENIMIENTOSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRegistrarMantenimiento.REGISTROS_MANTENIMIENTOSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsRegistrarMantenimiento.REGISTROS_MANTENIMIENTOSDataTable dataTable = new dsRegistrarMantenimiento.REGISTROS_MANTENIMIENTOSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento.REGISTROS_MANTENIMIENTOSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsRegistrarMantenimiento dataSet) {
            return this.Adapter.Update(dataSet, "REGISTROS_MANTENIMIENTOS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_RMAN_CODIGO, global::System.Nullable<decimal> Original_TMAN_CODIGO, global::System.Nullable<decimal> Original_MAN_CODIGO, global::System.Nullable<decimal> Original_MAQ_CODIGO, global::System.Nullable<decimal> Original_DPMAN_CODIGO, global::System.Nullable<decimal> Original_E_CODIGO, global::System.Nullable<global::System.DateTime> Original_RMAN_FECHA_REALIZACION, global::System.Nullable<global::System.DateTime> Original_RMAN_FECHA, string Original_RMAN_OBSERVACION, global::System.Nullable<decimal> Original_CF_NUMERO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_RMAN_CODIGO));
            if ((Original_TMAN_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_TMAN_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_MAN_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_MAN_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_MAQ_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_MAQ_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_DPMAN_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_DPMAN_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_E_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_E_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_RMAN_FECHA_REALIZACION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_RMAN_FECHA_REALIZACION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_RMAN_FECHA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_RMAN_FECHA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_RMAN_OBSERVACION == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_RMAN_OBSERVACION));
            }
            if ((Original_CF_NUMERO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_CF_NUMERO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<decimal> TMAN_CODIGO, global::System.Nullable<decimal> MAN_CODIGO, global::System.Nullable<decimal> MAQ_CODIGO, global::System.Nullable<decimal> DPMAN_CODIGO, global::System.Nullable<decimal> E_CODIGO, global::System.Nullable<global::System.DateTime> RMAN_FECHA_REALIZACION, global::System.Nullable<global::System.DateTime> RMAN_FECHA, string RMAN_OBSERVACION, global::System.Nullable<decimal> CF_NUMERO) {
            if ((TMAN_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(TMAN_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MAN_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(MAN_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((MAQ_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(MAQ_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((DPMAN_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(DPMAN_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((E_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(E_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((RMAN_FECHA_REALIZACION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(RMAN_FECHA_REALIZACION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((RMAN_FECHA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(RMAN_FECHA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((RMAN_OBSERVACION == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(RMAN_OBSERVACION));
            }
            if ((CF_NUMERO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(CF_NUMERO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<decimal> TMAN_CODIGO, 
                    global::System.Nullable<decimal> MAN_CODIGO, 
                    global::System.Nullable<decimal> MAQ_CODIGO, 
                    global::System.Nullable<decimal> DPMAN_CODIGO, 
                    global::System.Nullable<decimal> E_CODIGO, 
                    global::System.Nullable<global::System.DateTime> RMAN_FECHA_REALIZACION, 
                    global::System.Nullable<global::System.DateTime> RMAN_FECHA, 
                    string RMAN_OBSERVACION, 
                    global::System.Nullable<decimal> CF_NUMERO, 
                    decimal Original_RMAN_CODIGO, 
                    global::System.Nullable<decimal> Original_TMAN_CODIGO, 
                    global::System.Nullable<decimal> Original_MAN_CODIGO, 
                    global::System.Nullable<decimal> Original_MAQ_CODIGO, 
                    global::System.Nullable<decimal> Original_DPMAN_CODIGO, 
                    global::System.Nullable<decimal> Original_E_CODIGO, 
                    global::System.Nullable<global::System.DateTime> Original_RMAN_FECHA_REALIZACION, 
                    global::System.Nullable<global::System.DateTime> Original_RMAN_FECHA, 
                    string Original_RMAN_OBSERVACION, 
                    global::System.Nullable<decimal> Original_CF_NUMERO, 
                    decimal RMAN_CODIGO) {
            if ((TMAN_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(TMAN_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MAN_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(MAN_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((MAQ_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(MAQ_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((DPMAN_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(DPMAN_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((E_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(E_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((RMAN_FECHA_REALIZACION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(RMAN_FECHA_REALIZACION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((RMAN_FECHA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(RMAN_FECHA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((RMAN_OBSERVACION == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(RMAN_OBSERVACION));
            }
            if ((CF_NUMERO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(CF_NUMERO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_RMAN_CODIGO));
            if ((Original_TMAN_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_TMAN_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_MAN_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_MAN_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_MAQ_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_MAQ_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_DPMAN_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_DPMAN_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_E_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_E_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_RMAN_FECHA_REALIZACION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_RMAN_FECHA_REALIZACION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_RMAN_FECHA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_RMAN_FECHA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_RMAN_OBSERVACION == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_RMAN_OBSERVACION));
            }
            if ((Original_CF_NUMERO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(Original_CF_NUMERO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(RMAN_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<decimal> TMAN_CODIGO, 
                    global::System.Nullable<decimal> MAN_CODIGO, 
                    global::System.Nullable<decimal> MAQ_CODIGO, 
                    global::System.Nullable<decimal> DPMAN_CODIGO, 
                    global::System.Nullable<decimal> E_CODIGO, 
                    global::System.Nullable<global::System.DateTime> RMAN_FECHA_REALIZACION, 
                    global::System.Nullable<global::System.DateTime> RMAN_FECHA, 
                    string RMAN_OBSERVACION, 
                    global::System.Nullable<decimal> CF_NUMERO, 
                    decimal Original_RMAN_CODIGO, 
                    global::System.Nullable<decimal> Original_TMAN_CODIGO, 
                    global::System.Nullable<decimal> Original_MAN_CODIGO, 
                    global::System.Nullable<decimal> Original_MAQ_CODIGO, 
                    global::System.Nullable<decimal> Original_DPMAN_CODIGO, 
                    global::System.Nullable<decimal> Original_E_CODIGO, 
                    global::System.Nullable<global::System.DateTime> Original_RMAN_FECHA_REALIZACION, 
                    global::System.Nullable<global::System.DateTime> Original_RMAN_FECHA, 
                    string Original_RMAN_OBSERVACION, 
                    global::System.Nullable<decimal> Original_CF_NUMERO) {
            return this.Update(TMAN_CODIGO, MAN_CODIGO, MAQ_CODIGO, DPMAN_CODIGO, E_CODIGO, RMAN_FECHA_REALIZACION, RMAN_FECHA, RMAN_OBSERVACION, CF_NUMERO, Original_RMAN_CODIGO, Original_TMAN_CODIGO, Original_MAN_CODIGO, Original_MAQ_CODIGO, Original_DPMAN_CODIGO, Original_E_CODIGO, Original_RMAN_FECHA_REALIZACION, Original_RMAN_FECHA, Original_RMAN_OBSERVACION, Original_CF_NUMERO, Original_RMAN_CODIGO);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private REPUESTOSTableAdapter _rEPUESTOSTableAdapter;
        
        private TIPOS_REPUESTOSTableAdapter _tIPOS_REPUESTOSTableAdapter;
        
        private REPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter _rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter;
        
        private TIPOS_MANTENIMIENTOSTableAdapter _tIPOS_MANTENIMIENTOSTableAdapter;
        
        private MANTENIMIENTOSTableAdapter _mANTENIMIENTOSTableAdapter;
        
        private MAQUINASTableAdapter _mAQUINASTableAdapter;
        
        private ESTADO_MAQUINASTableAdapter _eSTADO_MAQUINASTableAdapter;
        
        private FABRICANTE_MAQUINASTableAdapter _fABRICANTE_MAQUINASTableAdapter;
        
        private EMPLEADOSTableAdapter _eMPLEADOSTableAdapter;
        
        private DETALLE_PLANES_MANTENIMIENTOTableAdapter _dETALLE_PLANES_MANTENIMIENTOTableAdapter;
        
        private UNIDADES_MEDIDATableAdapter _uNIDADES_MEDIDATableAdapter;
        
        private CAUSAS_FALLOTableAdapter _cAUSAS_FALLOTableAdapter;
        
        private REGISTROS_MANTENIMIENTOSTableAdapter _rEGISTROS_MANTENIMIENTOSTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public REPUESTOSTableAdapter REPUESTOSTableAdapter {
            get {
                return this._rEPUESTOSTableAdapter;
            }
            set {
                this._rEPUESTOSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TIPOS_REPUESTOSTableAdapter TIPOS_REPUESTOSTableAdapter {
            get {
                return this._tIPOS_REPUESTOSTableAdapter;
            }
            set {
                this._tIPOS_REPUESTOSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public REPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter REPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter {
            get {
                return this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter;
            }
            set {
                this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TIPOS_MANTENIMIENTOSTableAdapter TIPOS_MANTENIMIENTOSTableAdapter {
            get {
                return this._tIPOS_MANTENIMIENTOSTableAdapter;
            }
            set {
                this._tIPOS_MANTENIMIENTOSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MANTENIMIENTOSTableAdapter MANTENIMIENTOSTableAdapter {
            get {
                return this._mANTENIMIENTOSTableAdapter;
            }
            set {
                this._mANTENIMIENTOSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MAQUINASTableAdapter MAQUINASTableAdapter {
            get {
                return this._mAQUINASTableAdapter;
            }
            set {
                this._mAQUINASTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ESTADO_MAQUINASTableAdapter ESTADO_MAQUINASTableAdapter {
            get {
                return this._eSTADO_MAQUINASTableAdapter;
            }
            set {
                this._eSTADO_MAQUINASTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public FABRICANTE_MAQUINASTableAdapter FABRICANTE_MAQUINASTableAdapter {
            get {
                return this._fABRICANTE_MAQUINASTableAdapter;
            }
            set {
                this._fABRICANTE_MAQUINASTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public EMPLEADOSTableAdapter EMPLEADOSTableAdapter {
            get {
                return this._eMPLEADOSTableAdapter;
            }
            set {
                this._eMPLEADOSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public DETALLE_PLANES_MANTENIMIENTOTableAdapter DETALLE_PLANES_MANTENIMIENTOTableAdapter {
            get {
                return this._dETALLE_PLANES_MANTENIMIENTOTableAdapter;
            }
            set {
                this._dETALLE_PLANES_MANTENIMIENTOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public UNIDADES_MEDIDATableAdapter UNIDADES_MEDIDATableAdapter {
            get {
                return this._uNIDADES_MEDIDATableAdapter;
            }
            set {
                this._uNIDADES_MEDIDATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CAUSAS_FALLOTableAdapter CAUSAS_FALLOTableAdapter {
            get {
                return this._cAUSAS_FALLOTableAdapter;
            }
            set {
                this._cAUSAS_FALLOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public REGISTROS_MANTENIMIENTOSTableAdapter REGISTROS_MANTENIMIENTOSTableAdapter {
            get {
                return this._rEGISTROS_MANTENIMIENTOSTableAdapter;
            }
            set {
                this._rEGISTROS_MANTENIMIENTOSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._rEPUESTOSTableAdapter != null) 
                            && (this._rEPUESTOSTableAdapter.Connection != null))) {
                    return this._rEPUESTOSTableAdapter.Connection;
                }
                if (((this._tIPOS_REPUESTOSTableAdapter != null) 
                            && (this._tIPOS_REPUESTOSTableAdapter.Connection != null))) {
                    return this._tIPOS_REPUESTOSTableAdapter.Connection;
                }
                if (((this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter != null) 
                            && (this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter.Connection != null))) {
                    return this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter.Connection;
                }
                if (((this._tIPOS_MANTENIMIENTOSTableAdapter != null) 
                            && (this._tIPOS_MANTENIMIENTOSTableAdapter.Connection != null))) {
                    return this._tIPOS_MANTENIMIENTOSTableAdapter.Connection;
                }
                if (((this._mANTENIMIENTOSTableAdapter != null) 
                            && (this._mANTENIMIENTOSTableAdapter.Connection != null))) {
                    return this._mANTENIMIENTOSTableAdapter.Connection;
                }
                if (((this._mAQUINASTableAdapter != null) 
                            && (this._mAQUINASTableAdapter.Connection != null))) {
                    return this._mAQUINASTableAdapter.Connection;
                }
                if (((this._eSTADO_MAQUINASTableAdapter != null) 
                            && (this._eSTADO_MAQUINASTableAdapter.Connection != null))) {
                    return this._eSTADO_MAQUINASTableAdapter.Connection;
                }
                if (((this._fABRICANTE_MAQUINASTableAdapter != null) 
                            && (this._fABRICANTE_MAQUINASTableAdapter.Connection != null))) {
                    return this._fABRICANTE_MAQUINASTableAdapter.Connection;
                }
                if (((this._eMPLEADOSTableAdapter != null) 
                            && (this._eMPLEADOSTableAdapter.Connection != null))) {
                    return this._eMPLEADOSTableAdapter.Connection;
                }
                if (((this._dETALLE_PLANES_MANTENIMIENTOTableAdapter != null) 
                            && (this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Connection != null))) {
                    return this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Connection;
                }
                if (((this._uNIDADES_MEDIDATableAdapter != null) 
                            && (this._uNIDADES_MEDIDATableAdapter.Connection != null))) {
                    return this._uNIDADES_MEDIDATableAdapter.Connection;
                }
                if (((this._cAUSAS_FALLOTableAdapter != null) 
                            && (this._cAUSAS_FALLOTableAdapter.Connection != null))) {
                    return this._cAUSAS_FALLOTableAdapter.Connection;
                }
                if (((this._rEGISTROS_MANTENIMIENTOSTableAdapter != null) 
                            && (this._rEGISTROS_MANTENIMIENTOSTableAdapter.Connection != null))) {
                    return this._rEGISTROS_MANTENIMIENTOSTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._rEPUESTOSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tIPOS_REPUESTOSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tIPOS_MANTENIMIENTOSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mANTENIMIENTOSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mAQUINASTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eSTADO_MAQUINASTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._fABRICANTE_MAQUINASTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eMPLEADOSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dETALLE_PLANES_MANTENIMIENTOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cAUSAS_FALLOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rEGISTROS_MANTENIMIENTOSTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(dsRegistrarMantenimiento dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._mANTENIMIENTOSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MANTENIMIENTOS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mANTENIMIENTOSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UNIDADES_MEDIDA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._uNIDADES_MEDIDATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._fABRICANTE_MAQUINASTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.FABRICANTE_MAQUINAS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fABRICANTE_MAQUINASTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eSTADO_MAQUINASTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ESTADO_MAQUINAS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eSTADO_MAQUINASTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mAQUINASTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MAQUINAS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mAQUINASTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eMPLEADOSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.EMPLEADOS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eMPLEADOSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dETALLE_PLANES_MANTENIMIENTOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DETALLE_PLANES_MANTENIMIENTO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tIPOS_MANTENIMIENTOSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TIPOS_MANTENIMIENTOS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tIPOS_MANTENIMIENTOSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tIPOS_REPUESTOSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TIPOS_REPUESTOS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tIPOS_REPUESTOSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cAUSAS_FALLOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CAUSAS_FALLO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cAUSAS_FALLOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rEGISTROS_MANTENIMIENTOSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.REGISTROS_MANTENIMIENTOS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rEGISTROS_MANTENIMIENTOSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rEPUESTOSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.REPUESTOS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rEPUESTOSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.REPUESTOS_REGISTRO_MANTENIMIENTO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(dsRegistrarMantenimiento dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._mANTENIMIENTOSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MANTENIMIENTOS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mANTENIMIENTOSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UNIDADES_MEDIDA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._uNIDADES_MEDIDATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._fABRICANTE_MAQUINASTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.FABRICANTE_MAQUINAS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fABRICANTE_MAQUINASTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eSTADO_MAQUINASTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ESTADO_MAQUINAS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eSTADO_MAQUINASTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mAQUINASTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MAQUINAS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mAQUINASTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eMPLEADOSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.EMPLEADOS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eMPLEADOSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dETALLE_PLANES_MANTENIMIENTOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DETALLE_PLANES_MANTENIMIENTO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tIPOS_MANTENIMIENTOSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TIPOS_MANTENIMIENTOS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tIPOS_MANTENIMIENTOSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tIPOS_REPUESTOSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TIPOS_REPUESTOS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tIPOS_REPUESTOSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cAUSAS_FALLOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CAUSAS_FALLO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cAUSAS_FALLOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rEGISTROS_MANTENIMIENTOSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.REGISTROS_MANTENIMIENTOS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rEGISTROS_MANTENIMIENTOSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rEPUESTOSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.REPUESTOS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rEPUESTOSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.REPUESTOS_REGISTRO_MANTENIMIENTO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(dsRegistrarMantenimiento dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.REPUESTOS_REGISTRO_MANTENIMIENTO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rEPUESTOSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.REPUESTOS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rEPUESTOSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rEGISTROS_MANTENIMIENTOSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.REGISTROS_MANTENIMIENTOS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rEGISTROS_MANTENIMIENTOSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cAUSAS_FALLOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CAUSAS_FALLO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cAUSAS_FALLOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tIPOS_REPUESTOSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TIPOS_REPUESTOS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tIPOS_REPUESTOSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tIPOS_MANTENIMIENTOSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TIPOS_MANTENIMIENTOS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tIPOS_MANTENIMIENTOSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dETALLE_PLANES_MANTENIMIENTOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DETALLE_PLANES_MANTENIMIENTO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eMPLEADOSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.EMPLEADOS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eMPLEADOSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mAQUINASTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MAQUINAS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mAQUINASTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eSTADO_MAQUINASTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ESTADO_MAQUINAS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eSTADO_MAQUINASTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._fABRICANTE_MAQUINASTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.FABRICANTE_MAQUINAS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fABRICANTE_MAQUINASTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UNIDADES_MEDIDA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._uNIDADES_MEDIDATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mANTENIMIENTOSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MANTENIMIENTOS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mANTENIMIENTOSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(dsRegistrarMantenimiento dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._rEPUESTOSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rEPUESTOSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tIPOS_REPUESTOSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tIPOS_REPUESTOSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tIPOS_MANTENIMIENTOSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tIPOS_MANTENIMIENTOSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mANTENIMIENTOSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mANTENIMIENTOSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mAQUINASTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mAQUINASTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._eSTADO_MAQUINASTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eSTADO_MAQUINASTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._fABRICANTE_MAQUINASTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fABRICANTE_MAQUINASTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._eMPLEADOSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eMPLEADOSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dETALLE_PLANES_MANTENIMIENTOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._uNIDADES_MEDIDATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._uNIDADES_MEDIDATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cAUSAS_FALLOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cAUSAS_FALLOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rEGISTROS_MANTENIMIENTOSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rEGISTROS_MANTENIMIENTOSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._rEPUESTOSTableAdapter != null)) {
                    revertConnections.Add(this._rEPUESTOSTableAdapter, this._rEPUESTOSTableAdapter.Connection);
                    this._rEPUESTOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rEPUESTOSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rEPUESTOSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rEPUESTOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rEPUESTOSTableAdapter.Adapter);
                    }
                }
                if ((this._tIPOS_REPUESTOSTableAdapter != null)) {
                    revertConnections.Add(this._tIPOS_REPUESTOSTableAdapter, this._tIPOS_REPUESTOSTableAdapter.Connection);
                    this._tIPOS_REPUESTOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tIPOS_REPUESTOSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tIPOS_REPUESTOSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tIPOS_REPUESTOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tIPOS_REPUESTOSTableAdapter.Adapter);
                    }
                }
                if ((this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter != null)) {
                    revertConnections.Add(this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter, this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter.Connection);
                    this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter.Adapter);
                    }
                }
                if ((this._tIPOS_MANTENIMIENTOSTableAdapter != null)) {
                    revertConnections.Add(this._tIPOS_MANTENIMIENTOSTableAdapter, this._tIPOS_MANTENIMIENTOSTableAdapter.Connection);
                    this._tIPOS_MANTENIMIENTOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tIPOS_MANTENIMIENTOSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tIPOS_MANTENIMIENTOSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tIPOS_MANTENIMIENTOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tIPOS_MANTENIMIENTOSTableAdapter.Adapter);
                    }
                }
                if ((this._mANTENIMIENTOSTableAdapter != null)) {
                    revertConnections.Add(this._mANTENIMIENTOSTableAdapter, this._mANTENIMIENTOSTableAdapter.Connection);
                    this._mANTENIMIENTOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mANTENIMIENTOSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mANTENIMIENTOSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mANTENIMIENTOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mANTENIMIENTOSTableAdapter.Adapter);
                    }
                }
                if ((this._mAQUINASTableAdapter != null)) {
                    revertConnections.Add(this._mAQUINASTableAdapter, this._mAQUINASTableAdapter.Connection);
                    this._mAQUINASTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mAQUINASTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mAQUINASTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mAQUINASTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mAQUINASTableAdapter.Adapter);
                    }
                }
                if ((this._eSTADO_MAQUINASTableAdapter != null)) {
                    revertConnections.Add(this._eSTADO_MAQUINASTableAdapter, this._eSTADO_MAQUINASTableAdapter.Connection);
                    this._eSTADO_MAQUINASTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eSTADO_MAQUINASTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eSTADO_MAQUINASTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eSTADO_MAQUINASTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eSTADO_MAQUINASTableAdapter.Adapter);
                    }
                }
                if ((this._fABRICANTE_MAQUINASTableAdapter != null)) {
                    revertConnections.Add(this._fABRICANTE_MAQUINASTableAdapter, this._fABRICANTE_MAQUINASTableAdapter.Connection);
                    this._fABRICANTE_MAQUINASTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._fABRICANTE_MAQUINASTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._fABRICANTE_MAQUINASTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fABRICANTE_MAQUINASTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fABRICANTE_MAQUINASTableAdapter.Adapter);
                    }
                }
                if ((this._eMPLEADOSTableAdapter != null)) {
                    revertConnections.Add(this._eMPLEADOSTableAdapter, this._eMPLEADOSTableAdapter.Connection);
                    this._eMPLEADOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eMPLEADOSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eMPLEADOSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eMPLEADOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eMPLEADOSTableAdapter.Adapter);
                    }
                }
                if ((this._dETALLE_PLANES_MANTENIMIENTOTableAdapter != null)) {
                    revertConnections.Add(this._dETALLE_PLANES_MANTENIMIENTOTableAdapter, this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Connection);
                    this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Adapter);
                    }
                }
                if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                    revertConnections.Add(this._uNIDADES_MEDIDATableAdapter, this._uNIDADES_MEDIDATableAdapter.Connection);
                    this._uNIDADES_MEDIDATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._uNIDADES_MEDIDATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._uNIDADES_MEDIDATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._uNIDADES_MEDIDATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._uNIDADES_MEDIDATableAdapter.Adapter);
                    }
                }
                if ((this._cAUSAS_FALLOTableAdapter != null)) {
                    revertConnections.Add(this._cAUSAS_FALLOTableAdapter, this._cAUSAS_FALLOTableAdapter.Connection);
                    this._cAUSAS_FALLOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cAUSAS_FALLOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cAUSAS_FALLOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cAUSAS_FALLOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cAUSAS_FALLOTableAdapter.Adapter);
                    }
                }
                if ((this._rEGISTROS_MANTENIMIENTOSTableAdapter != null)) {
                    revertConnections.Add(this._rEGISTROS_MANTENIMIENTOSTableAdapter, this._rEGISTROS_MANTENIMIENTOSTableAdapter.Connection);
                    this._rEGISTROS_MANTENIMIENTOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rEGISTROS_MANTENIMIENTOSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rEGISTROS_MANTENIMIENTOSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rEGISTROS_MANTENIMIENTOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rEGISTROS_MANTENIMIENTOSTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._rEPUESTOSTableAdapter != null)) {
                    this._rEPUESTOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rEPUESTOSTableAdapter]));
                    this._rEPUESTOSTableAdapter.Transaction = null;
                }
                if ((this._tIPOS_REPUESTOSTableAdapter != null)) {
                    this._tIPOS_REPUESTOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tIPOS_REPUESTOSTableAdapter]));
                    this._tIPOS_REPUESTOSTableAdapter.Transaction = null;
                }
                if ((this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter != null)) {
                    this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter]));
                    this._rEPUESTOS_REGISTRO_MANTENIMIENTOTableAdapter.Transaction = null;
                }
                if ((this._tIPOS_MANTENIMIENTOSTableAdapter != null)) {
                    this._tIPOS_MANTENIMIENTOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tIPOS_MANTENIMIENTOSTableAdapter]));
                    this._tIPOS_MANTENIMIENTOSTableAdapter.Transaction = null;
                }
                if ((this._mANTENIMIENTOSTableAdapter != null)) {
                    this._mANTENIMIENTOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mANTENIMIENTOSTableAdapter]));
                    this._mANTENIMIENTOSTableAdapter.Transaction = null;
                }
                if ((this._mAQUINASTableAdapter != null)) {
                    this._mAQUINASTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mAQUINASTableAdapter]));
                    this._mAQUINASTableAdapter.Transaction = null;
                }
                if ((this._eSTADO_MAQUINASTableAdapter != null)) {
                    this._eSTADO_MAQUINASTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eSTADO_MAQUINASTableAdapter]));
                    this._eSTADO_MAQUINASTableAdapter.Transaction = null;
                }
                if ((this._fABRICANTE_MAQUINASTableAdapter != null)) {
                    this._fABRICANTE_MAQUINASTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fABRICANTE_MAQUINASTableAdapter]));
                    this._fABRICANTE_MAQUINASTableAdapter.Transaction = null;
                }
                if ((this._eMPLEADOSTableAdapter != null)) {
                    this._eMPLEADOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eMPLEADOSTableAdapter]));
                    this._eMPLEADOSTableAdapter.Transaction = null;
                }
                if ((this._dETALLE_PLANES_MANTENIMIENTOTableAdapter != null)) {
                    this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dETALLE_PLANES_MANTENIMIENTOTableAdapter]));
                    this._dETALLE_PLANES_MANTENIMIENTOTableAdapter.Transaction = null;
                }
                if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                    this._uNIDADES_MEDIDATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._uNIDADES_MEDIDATableAdapter]));
                    this._uNIDADES_MEDIDATableAdapter.Transaction = null;
                }
                if ((this._cAUSAS_FALLOTableAdapter != null)) {
                    this._cAUSAS_FALLOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cAUSAS_FALLOTableAdapter]));
                    this._cAUSAS_FALLOTableAdapter.Transaction = null;
                }
                if ((this._rEGISTROS_MANTENIMIENTOSTableAdapter != null)) {
                    this._rEGISTROS_MANTENIMIENTOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rEGISTROS_MANTENIMIENTOSTableAdapter]));
                    this._rEGISTROS_MANTENIMIENTOSTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591