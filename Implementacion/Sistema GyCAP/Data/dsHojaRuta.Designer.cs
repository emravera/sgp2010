//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GyCAP.Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsHojaRuta")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsHojaRuta : global::System.Data.DataSet {
        
        private SECTORESDataTable tableSECTORES;
        
        private TURNOS_TRABAJODataTable tableTURNOS_TRABAJO;
        
        private TURNOSXCENTROTRABAJODataTable tableTURNOSXCENTROTRABAJO;
        
        private OPERACIONESDataTable tableOPERACIONES;
        
        private DETALLE_HOJARUTADataTable tableDETALLE_HOJARUTA;
        
        private HOJAS_RUTADataTable tableHOJAS_RUTA;
        
        private UBICACIONES_STOCKDataTable tableUBICACIONES_STOCK;
        
        private CONTENIDO_UBICACION_STOCKDataTable tableCONTENIDO_UBICACION_STOCK;
        
        private TIPOS_UBICACIONES_STOCKDataTable tableTIPOS_UBICACIONES_STOCK;
        
        private UNIDADES_MEDIDADataTable tableUNIDADES_MEDIDA;
        
        private TIPOS_UNIDADES_MEDIDADataTable tableTIPOS_UNIDADES_MEDIDA;
        
        private TIPOS_CENTRO_TRABAJODataTable tableTIPOS_CENTRO_TRABAJO;
        
        private CENTROS_TRABAJOSDataTable tableCENTROS_TRABAJOS;
        
        private global::System.Data.DataRelation relationTURNOS_TRABAJO_TURNOSXCENTROTRABAJO;
        
        private global::System.Data.DataRelation relationFK_DETALLE_HOJARUTA_OPERACIONES;
        
        private global::System.Data.DataRelation relationFK_DETALLE_HOJARUTA_HOJAS_RUTA;
        
        private global::System.Data.DataRelation relationFK_UBICACIONES_STOCK_UBICACION_STOCK;
        
        private global::System.Data.DataRelation relationFK_DETALLE_HOJARUTA_UBICACIONES_STOCK;
        
        private global::System.Data.DataRelation relationFK_DETALLE_HOJARUTA_UBICACIONES_STOCK1;
        
        private global::System.Data.DataRelation relationFK_HOJAS_RUTA_UBICACIONES_STOCK;
        
        private global::System.Data.DataRelation relationFK_UBICACIONES_STOCK_CONTENIDO_UBICACION_STOCK;
        
        private global::System.Data.DataRelation relationFK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK;
        
        private global::System.Data.DataRelation relationFK_UBICACIONES_STOCK_UBICACION_STOCK1;
        
        private global::System.Data.DataRelation relationunidadMedida_tipoUnidadMedida_fk;
        
        private global::System.Data.DataRelation relationFK_TURNOSXCENTROTRABAJO_CENTROS_TRABAJOS;
        
        private global::System.Data.DataRelation relationFK_DETALLE_HOJARUTA_CENTROS_TRABAJOS;
        
        private global::System.Data.DataRelation relationFK_CENTROS_TRABAJOS_SECTORES;
        
        private global::System.Data.DataRelation relationSECTORES_CENTROS_TRABAJOS;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsHojaRuta() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsHojaRuta(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SECTORES"] != null)) {
                    base.Tables.Add(new SECTORESDataTable(ds.Tables["SECTORES"]));
                }
                if ((ds.Tables["TURNOS_TRABAJO"] != null)) {
                    base.Tables.Add(new TURNOS_TRABAJODataTable(ds.Tables["TURNOS_TRABAJO"]));
                }
                if ((ds.Tables["TURNOSXCENTROTRABAJO"] != null)) {
                    base.Tables.Add(new TURNOSXCENTROTRABAJODataTable(ds.Tables["TURNOSXCENTROTRABAJO"]));
                }
                if ((ds.Tables["OPERACIONES"] != null)) {
                    base.Tables.Add(new OPERACIONESDataTable(ds.Tables["OPERACIONES"]));
                }
                if ((ds.Tables["DETALLE_HOJARUTA"] != null)) {
                    base.Tables.Add(new DETALLE_HOJARUTADataTable(ds.Tables["DETALLE_HOJARUTA"]));
                }
                if ((ds.Tables["HOJAS_RUTA"] != null)) {
                    base.Tables.Add(new HOJAS_RUTADataTable(ds.Tables["HOJAS_RUTA"]));
                }
                if ((ds.Tables["UBICACIONES_STOCK"] != null)) {
                    base.Tables.Add(new UBICACIONES_STOCKDataTable(ds.Tables["UBICACIONES_STOCK"]));
                }
                if ((ds.Tables["CONTENIDO_UBICACION_STOCK"] != null)) {
                    base.Tables.Add(new CONTENIDO_UBICACION_STOCKDataTable(ds.Tables["CONTENIDO_UBICACION_STOCK"]));
                }
                if ((ds.Tables["TIPOS_UBICACIONES_STOCK"] != null)) {
                    base.Tables.Add(new TIPOS_UBICACIONES_STOCKDataTable(ds.Tables["TIPOS_UBICACIONES_STOCK"]));
                }
                if ((ds.Tables["UNIDADES_MEDIDA"] != null)) {
                    base.Tables.Add(new UNIDADES_MEDIDADataTable(ds.Tables["UNIDADES_MEDIDA"]));
                }
                if ((ds.Tables["TIPOS_UNIDADES_MEDIDA"] != null)) {
                    base.Tables.Add(new TIPOS_UNIDADES_MEDIDADataTable(ds.Tables["TIPOS_UNIDADES_MEDIDA"]));
                }
                if ((ds.Tables["TIPOS_CENTRO_TRABAJO"] != null)) {
                    base.Tables.Add(new TIPOS_CENTRO_TRABAJODataTable(ds.Tables["TIPOS_CENTRO_TRABAJO"]));
                }
                if ((ds.Tables["CENTROS_TRABAJOS"] != null)) {
                    base.Tables.Add(new CENTROS_TRABAJOSDataTable(ds.Tables["CENTROS_TRABAJOS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SECTORESDataTable SECTORES {
            get {
                return this.tableSECTORES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TURNOS_TRABAJODataTable TURNOS_TRABAJO {
            get {
                return this.tableTURNOS_TRABAJO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TURNOSXCENTROTRABAJODataTable TURNOSXCENTROTRABAJO {
            get {
                return this.tableTURNOSXCENTROTRABAJO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OPERACIONESDataTable OPERACIONES {
            get {
                return this.tableOPERACIONES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DETALLE_HOJARUTADataTable DETALLE_HOJARUTA {
            get {
                return this.tableDETALLE_HOJARUTA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HOJAS_RUTADataTable HOJAS_RUTA {
            get {
                return this.tableHOJAS_RUTA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UBICACIONES_STOCKDataTable UBICACIONES_STOCK {
            get {
                return this.tableUBICACIONES_STOCK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CONTENIDO_UBICACION_STOCKDataTable CONTENIDO_UBICACION_STOCK {
            get {
                return this.tableCONTENIDO_UBICACION_STOCK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TIPOS_UBICACIONES_STOCKDataTable TIPOS_UBICACIONES_STOCK {
            get {
                return this.tableTIPOS_UBICACIONES_STOCK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UNIDADES_MEDIDADataTable UNIDADES_MEDIDA {
            get {
                return this.tableUNIDADES_MEDIDA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TIPOS_UNIDADES_MEDIDADataTable TIPOS_UNIDADES_MEDIDA {
            get {
                return this.tableTIPOS_UNIDADES_MEDIDA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TIPOS_CENTRO_TRABAJODataTable TIPOS_CENTRO_TRABAJO {
            get {
                return this.tableTIPOS_CENTRO_TRABAJO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CENTROS_TRABAJOSDataTable CENTROS_TRABAJOS {
            get {
                return this.tableCENTROS_TRABAJOS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsHojaRuta cln = ((dsHojaRuta)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SECTORES"] != null)) {
                    base.Tables.Add(new SECTORESDataTable(ds.Tables["SECTORES"]));
                }
                if ((ds.Tables["TURNOS_TRABAJO"] != null)) {
                    base.Tables.Add(new TURNOS_TRABAJODataTable(ds.Tables["TURNOS_TRABAJO"]));
                }
                if ((ds.Tables["TURNOSXCENTROTRABAJO"] != null)) {
                    base.Tables.Add(new TURNOSXCENTROTRABAJODataTable(ds.Tables["TURNOSXCENTROTRABAJO"]));
                }
                if ((ds.Tables["OPERACIONES"] != null)) {
                    base.Tables.Add(new OPERACIONESDataTable(ds.Tables["OPERACIONES"]));
                }
                if ((ds.Tables["DETALLE_HOJARUTA"] != null)) {
                    base.Tables.Add(new DETALLE_HOJARUTADataTable(ds.Tables["DETALLE_HOJARUTA"]));
                }
                if ((ds.Tables["HOJAS_RUTA"] != null)) {
                    base.Tables.Add(new HOJAS_RUTADataTable(ds.Tables["HOJAS_RUTA"]));
                }
                if ((ds.Tables["UBICACIONES_STOCK"] != null)) {
                    base.Tables.Add(new UBICACIONES_STOCKDataTable(ds.Tables["UBICACIONES_STOCK"]));
                }
                if ((ds.Tables["CONTENIDO_UBICACION_STOCK"] != null)) {
                    base.Tables.Add(new CONTENIDO_UBICACION_STOCKDataTable(ds.Tables["CONTENIDO_UBICACION_STOCK"]));
                }
                if ((ds.Tables["TIPOS_UBICACIONES_STOCK"] != null)) {
                    base.Tables.Add(new TIPOS_UBICACIONES_STOCKDataTable(ds.Tables["TIPOS_UBICACIONES_STOCK"]));
                }
                if ((ds.Tables["UNIDADES_MEDIDA"] != null)) {
                    base.Tables.Add(new UNIDADES_MEDIDADataTable(ds.Tables["UNIDADES_MEDIDA"]));
                }
                if ((ds.Tables["TIPOS_UNIDADES_MEDIDA"] != null)) {
                    base.Tables.Add(new TIPOS_UNIDADES_MEDIDADataTable(ds.Tables["TIPOS_UNIDADES_MEDIDA"]));
                }
                if ((ds.Tables["TIPOS_CENTRO_TRABAJO"] != null)) {
                    base.Tables.Add(new TIPOS_CENTRO_TRABAJODataTable(ds.Tables["TIPOS_CENTRO_TRABAJO"]));
                }
                if ((ds.Tables["CENTROS_TRABAJOS"] != null)) {
                    base.Tables.Add(new CENTROS_TRABAJOSDataTable(ds.Tables["CENTROS_TRABAJOS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSECTORES = ((SECTORESDataTable)(base.Tables["SECTORES"]));
            if ((initTable == true)) {
                if ((this.tableSECTORES != null)) {
                    this.tableSECTORES.InitVars();
                }
            }
            this.tableTURNOS_TRABAJO = ((TURNOS_TRABAJODataTable)(base.Tables["TURNOS_TRABAJO"]));
            if ((initTable == true)) {
                if ((this.tableTURNOS_TRABAJO != null)) {
                    this.tableTURNOS_TRABAJO.InitVars();
                }
            }
            this.tableTURNOSXCENTROTRABAJO = ((TURNOSXCENTROTRABAJODataTable)(base.Tables["TURNOSXCENTROTRABAJO"]));
            if ((initTable == true)) {
                if ((this.tableTURNOSXCENTROTRABAJO != null)) {
                    this.tableTURNOSXCENTROTRABAJO.InitVars();
                }
            }
            this.tableOPERACIONES = ((OPERACIONESDataTable)(base.Tables["OPERACIONES"]));
            if ((initTable == true)) {
                if ((this.tableOPERACIONES != null)) {
                    this.tableOPERACIONES.InitVars();
                }
            }
            this.tableDETALLE_HOJARUTA = ((DETALLE_HOJARUTADataTable)(base.Tables["DETALLE_HOJARUTA"]));
            if ((initTable == true)) {
                if ((this.tableDETALLE_HOJARUTA != null)) {
                    this.tableDETALLE_HOJARUTA.InitVars();
                }
            }
            this.tableHOJAS_RUTA = ((HOJAS_RUTADataTable)(base.Tables["HOJAS_RUTA"]));
            if ((initTable == true)) {
                if ((this.tableHOJAS_RUTA != null)) {
                    this.tableHOJAS_RUTA.InitVars();
                }
            }
            this.tableUBICACIONES_STOCK = ((UBICACIONES_STOCKDataTable)(base.Tables["UBICACIONES_STOCK"]));
            if ((initTable == true)) {
                if ((this.tableUBICACIONES_STOCK != null)) {
                    this.tableUBICACIONES_STOCK.InitVars();
                }
            }
            this.tableCONTENIDO_UBICACION_STOCK = ((CONTENIDO_UBICACION_STOCKDataTable)(base.Tables["CONTENIDO_UBICACION_STOCK"]));
            if ((initTable == true)) {
                if ((this.tableCONTENIDO_UBICACION_STOCK != null)) {
                    this.tableCONTENIDO_UBICACION_STOCK.InitVars();
                }
            }
            this.tableTIPOS_UBICACIONES_STOCK = ((TIPOS_UBICACIONES_STOCKDataTable)(base.Tables["TIPOS_UBICACIONES_STOCK"]));
            if ((initTable == true)) {
                if ((this.tableTIPOS_UBICACIONES_STOCK != null)) {
                    this.tableTIPOS_UBICACIONES_STOCK.InitVars();
                }
            }
            this.tableUNIDADES_MEDIDA = ((UNIDADES_MEDIDADataTable)(base.Tables["UNIDADES_MEDIDA"]));
            if ((initTable == true)) {
                if ((this.tableUNIDADES_MEDIDA != null)) {
                    this.tableUNIDADES_MEDIDA.InitVars();
                }
            }
            this.tableTIPOS_UNIDADES_MEDIDA = ((TIPOS_UNIDADES_MEDIDADataTable)(base.Tables["TIPOS_UNIDADES_MEDIDA"]));
            if ((initTable == true)) {
                if ((this.tableTIPOS_UNIDADES_MEDIDA != null)) {
                    this.tableTIPOS_UNIDADES_MEDIDA.InitVars();
                }
            }
            this.tableTIPOS_CENTRO_TRABAJO = ((TIPOS_CENTRO_TRABAJODataTable)(base.Tables["TIPOS_CENTRO_TRABAJO"]));
            if ((initTable == true)) {
                if ((this.tableTIPOS_CENTRO_TRABAJO != null)) {
                    this.tableTIPOS_CENTRO_TRABAJO.InitVars();
                }
            }
            this.tableCENTROS_TRABAJOS = ((CENTROS_TRABAJOSDataTable)(base.Tables["CENTROS_TRABAJOS"]));
            if ((initTable == true)) {
                if ((this.tableCENTROS_TRABAJOS != null)) {
                    this.tableCENTROS_TRABAJOS.InitVars();
                }
            }
            this.relationTURNOS_TRABAJO_TURNOSXCENTROTRABAJO = this.Relations["TURNOS_TRABAJO_TURNOSXCENTROTRABAJO"];
            this.relationFK_DETALLE_HOJARUTA_OPERACIONES = this.Relations["FK_DETALLE_HOJARUTA_OPERACIONES"];
            this.relationFK_DETALLE_HOJARUTA_HOJAS_RUTA = this.Relations["FK_DETALLE_HOJARUTA_HOJAS_RUTA"];
            this.relationFK_UBICACIONES_STOCK_UBICACION_STOCK = this.Relations["FK_UBICACIONES_STOCK_UBICACION_STOCK"];
            this.relationFK_DETALLE_HOJARUTA_UBICACIONES_STOCK = this.Relations["FK_DETALLE_HOJARUTA_UBICACIONES_STOCK"];
            this.relationFK_DETALLE_HOJARUTA_UBICACIONES_STOCK1 = this.Relations["FK_DETALLE_HOJARUTA_UBICACIONES_STOCK1"];
            this.relationFK_HOJAS_RUTA_UBICACIONES_STOCK = this.Relations["FK_HOJAS_RUTA_UBICACIONES_STOCK"];
            this.relationFK_UBICACIONES_STOCK_CONTENIDO_UBICACION_STOCK = this.Relations["FK_UBICACIONES_STOCK_CONTENIDO_UBICACION_STOCK"];
            this.relationFK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK = this.Relations["FK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK"];
            this.relationFK_UBICACIONES_STOCK_UBICACION_STOCK1 = this.Relations["FK_UBICACIONES_STOCK_UBICACION_STOCK1"];
            this.relationunidadMedida_tipoUnidadMedida_fk = this.Relations["unidadMedida_tipoUnidadMedida_fk"];
            this.relationFK_TURNOSXCENTROTRABAJO_CENTROS_TRABAJOS = this.Relations["FK_TURNOSXCENTROTRABAJO_CENTROS_TRABAJOS"];
            this.relationFK_DETALLE_HOJARUTA_CENTROS_TRABAJOS = this.Relations["FK_DETALLE_HOJARUTA_CENTROS_TRABAJOS"];
            this.relationFK_CENTROS_TRABAJOS_SECTORES = this.Relations["FK_CENTROS_TRABAJOS_SECTORES"];
            this.relationSECTORES_CENTROS_TRABAJOS = this.Relations["SECTORES_CENTROS_TRABAJOS"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsHojaRuta";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsHojaRuta.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSECTORES = new SECTORESDataTable();
            base.Tables.Add(this.tableSECTORES);
            this.tableTURNOS_TRABAJO = new TURNOS_TRABAJODataTable();
            base.Tables.Add(this.tableTURNOS_TRABAJO);
            this.tableTURNOSXCENTROTRABAJO = new TURNOSXCENTROTRABAJODataTable();
            base.Tables.Add(this.tableTURNOSXCENTROTRABAJO);
            this.tableOPERACIONES = new OPERACIONESDataTable();
            base.Tables.Add(this.tableOPERACIONES);
            this.tableDETALLE_HOJARUTA = new DETALLE_HOJARUTADataTable();
            base.Tables.Add(this.tableDETALLE_HOJARUTA);
            this.tableHOJAS_RUTA = new HOJAS_RUTADataTable();
            base.Tables.Add(this.tableHOJAS_RUTA);
            this.tableUBICACIONES_STOCK = new UBICACIONES_STOCKDataTable();
            base.Tables.Add(this.tableUBICACIONES_STOCK);
            this.tableCONTENIDO_UBICACION_STOCK = new CONTENIDO_UBICACION_STOCKDataTable();
            base.Tables.Add(this.tableCONTENIDO_UBICACION_STOCK);
            this.tableTIPOS_UBICACIONES_STOCK = new TIPOS_UBICACIONES_STOCKDataTable();
            base.Tables.Add(this.tableTIPOS_UBICACIONES_STOCK);
            this.tableUNIDADES_MEDIDA = new UNIDADES_MEDIDADataTable();
            base.Tables.Add(this.tableUNIDADES_MEDIDA);
            this.tableTIPOS_UNIDADES_MEDIDA = new TIPOS_UNIDADES_MEDIDADataTable();
            base.Tables.Add(this.tableTIPOS_UNIDADES_MEDIDA);
            this.tableTIPOS_CENTRO_TRABAJO = new TIPOS_CENTRO_TRABAJODataTable();
            base.Tables.Add(this.tableTIPOS_CENTRO_TRABAJO);
            this.tableCENTROS_TRABAJOS = new CENTROS_TRABAJOSDataTable();
            base.Tables.Add(this.tableCENTROS_TRABAJOS);
            this.relationTURNOS_TRABAJO_TURNOSXCENTROTRABAJO = new global::System.Data.DataRelation("TURNOS_TRABAJO_TURNOSXCENTROTRABAJO", new global::System.Data.DataColumn[] {
                        this.tableTURNOS_TRABAJO.TUR_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableTURNOSXCENTROTRABAJO.TUR_CODIGOColumn}, false);
            this.Relations.Add(this.relationTURNOS_TRABAJO_TURNOSXCENTROTRABAJO);
            this.relationFK_DETALLE_HOJARUTA_OPERACIONES = new global::System.Data.DataRelation("FK_DETALLE_HOJARUTA_OPERACIONES", new global::System.Data.DataColumn[] {
                        this.tableOPERACIONES.OPR_NUMEROColumn}, new global::System.Data.DataColumn[] {
                        this.tableDETALLE_HOJARUTA.OPR_NUMEROColumn}, false);
            this.Relations.Add(this.relationFK_DETALLE_HOJARUTA_OPERACIONES);
            this.relationFK_DETALLE_HOJARUTA_HOJAS_RUTA = new global::System.Data.DataRelation("FK_DETALLE_HOJARUTA_HOJAS_RUTA", new global::System.Data.DataColumn[] {
                        this.tableHOJAS_RUTA.HR_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableDETALLE_HOJARUTA.HR_CODIGOColumn}, false);
            this.Relations.Add(this.relationFK_DETALLE_HOJARUTA_HOJAS_RUTA);
            this.relationFK_UBICACIONES_STOCK_UBICACION_STOCK = new global::System.Data.DataRelation("FK_UBICACIONES_STOCK_UBICACION_STOCK", new global::System.Data.DataColumn[] {
                        this.tableUBICACIONES_STOCK.USTCK_NUMEROColumn}, new global::System.Data.DataColumn[] {
                        this.tableUBICACIONES_STOCK.USTCK_PADREColumn}, false);
            this.Relations.Add(this.relationFK_UBICACIONES_STOCK_UBICACION_STOCK);
            this.relationFK_DETALLE_HOJARUTA_UBICACIONES_STOCK = new global::System.Data.DataRelation("FK_DETALLE_HOJARUTA_UBICACIONES_STOCK", new global::System.Data.DataColumn[] {
                        this.tableUBICACIONES_STOCK.USTCK_NUMEROColumn}, new global::System.Data.DataColumn[] {
                        this.tableDETALLE_HOJARUTA.USTCK_ORIGENColumn}, false);
            this.Relations.Add(this.relationFK_DETALLE_HOJARUTA_UBICACIONES_STOCK);
            this.relationFK_DETALLE_HOJARUTA_UBICACIONES_STOCK1 = new global::System.Data.DataRelation("FK_DETALLE_HOJARUTA_UBICACIONES_STOCK1", new global::System.Data.DataColumn[] {
                        this.tableUBICACIONES_STOCK.USTCK_NUMEROColumn}, new global::System.Data.DataColumn[] {
                        this.tableDETALLE_HOJARUTA.USTCK_DESTINOColumn}, false);
            this.Relations.Add(this.relationFK_DETALLE_HOJARUTA_UBICACIONES_STOCK1);
            this.relationFK_HOJAS_RUTA_UBICACIONES_STOCK = new global::System.Data.DataRelation("FK_HOJAS_RUTA_UBICACIONES_STOCK", new global::System.Data.DataColumn[] {
                        this.tableUBICACIONES_STOCK.USTCK_NUMEROColumn}, new global::System.Data.DataColumn[] {
                        this.tableHOJAS_RUTA.USTCK_NUMEROColumn}, false);
            this.Relations.Add(this.relationFK_HOJAS_RUTA_UBICACIONES_STOCK);
            this.relationFK_UBICACIONES_STOCK_CONTENIDO_UBICACION_STOCK = new global::System.Data.DataRelation("FK_UBICACIONES_STOCK_CONTENIDO_UBICACION_STOCK", new global::System.Data.DataColumn[] {
                        this.tableCONTENIDO_UBICACION_STOCK.CON_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableUBICACIONES_STOCK.CON_CODIGOColumn}, false);
            this.Relations.Add(this.relationFK_UBICACIONES_STOCK_CONTENIDO_UBICACION_STOCK);
            this.relationFK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK = new global::System.Data.DataRelation("FK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK", new global::System.Data.DataColumn[] {
                        this.tableTIPOS_UBICACIONES_STOCK.TUS_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableUBICACIONES_STOCK.TUS_CODIGOColumn}, false);
            this.Relations.Add(this.relationFK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK);
            this.relationFK_UBICACIONES_STOCK_UBICACION_STOCK1 = new global::System.Data.DataRelation("FK_UBICACIONES_STOCK_UBICACION_STOCK1", new global::System.Data.DataColumn[] {
                        this.tableUNIDADES_MEDIDA.UMED_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableUBICACIONES_STOCK.UMED_CODIGOColumn}, false);
            this.Relations.Add(this.relationFK_UBICACIONES_STOCK_UBICACION_STOCK1);
            this.relationunidadMedida_tipoUnidadMedida_fk = new global::System.Data.DataRelation("unidadMedida_tipoUnidadMedida_fk", new global::System.Data.DataColumn[] {
                        this.tableTIPOS_UNIDADES_MEDIDA.TUMED_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableUNIDADES_MEDIDA.TUMED_CODIGOColumn}, false);
            this.Relations.Add(this.relationunidadMedida_tipoUnidadMedida_fk);
            this.relationFK_TURNOSXCENTROTRABAJO_CENTROS_TRABAJOS = new global::System.Data.DataRelation("FK_TURNOSXCENTROTRABAJO_CENTROS_TRABAJOS", new global::System.Data.DataColumn[] {
                        this.tableCENTROS_TRABAJOS.CTO_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableTURNOSXCENTROTRABAJO.CTO_CODIGOColumn}, false);
            this.Relations.Add(this.relationFK_TURNOSXCENTROTRABAJO_CENTROS_TRABAJOS);
            this.relationFK_DETALLE_HOJARUTA_CENTROS_TRABAJOS = new global::System.Data.DataRelation("FK_DETALLE_HOJARUTA_CENTROS_TRABAJOS", new global::System.Data.DataColumn[] {
                        this.tableCENTROS_TRABAJOS.CTO_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableDETALLE_HOJARUTA.CTO_CODIGOColumn}, false);
            this.Relations.Add(this.relationFK_DETALLE_HOJARUTA_CENTROS_TRABAJOS);
            this.relationFK_CENTROS_TRABAJOS_SECTORES = new global::System.Data.DataRelation("FK_CENTROS_TRABAJOS_SECTORES", new global::System.Data.DataColumn[] {
                        this.tableTIPOS_CENTRO_TRABAJO.TC_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCENTROS_TRABAJOS.CT_TIPOColumn}, false);
            this.Relations.Add(this.relationFK_CENTROS_TRABAJOS_SECTORES);
            this.relationSECTORES_CENTROS_TRABAJOS = new global::System.Data.DataRelation("SECTORES_CENTROS_TRABAJOS", new global::System.Data.DataColumn[] {
                        this.tableSECTORES.SEC_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCENTROS_TRABAJOS.SEC_CODIGOColumn}, false);
            this.Relations.Add(this.relationSECTORES_CENTROS_TRABAJOS);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSECTORES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTURNOS_TRABAJO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTURNOSXCENTROTRABAJO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOPERACIONES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDETALLE_HOJARUTA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHOJAS_RUTA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUBICACIONES_STOCK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCONTENIDO_UBICACION_STOCK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTIPOS_UBICACIONES_STOCK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUNIDADES_MEDIDA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTIPOS_UNIDADES_MEDIDA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTIPOS_CENTRO_TRABAJO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCENTROS_TRABAJOS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsHojaRuta ds = new dsHojaRuta();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SECTORESRowChangeEventHandler(object sender, SECTORESRowChangeEvent e);
        
        public delegate void TURNOS_TRABAJORowChangeEventHandler(object sender, TURNOS_TRABAJORowChangeEvent e);
        
        public delegate void TURNOSXCENTROTRABAJORowChangeEventHandler(object sender, TURNOSXCENTROTRABAJORowChangeEvent e);
        
        public delegate void OPERACIONESRowChangeEventHandler(object sender, OPERACIONESRowChangeEvent e);
        
        public delegate void DETALLE_HOJARUTARowChangeEventHandler(object sender, DETALLE_HOJARUTARowChangeEvent e);
        
        public delegate void HOJAS_RUTARowChangeEventHandler(object sender, HOJAS_RUTARowChangeEvent e);
        
        public delegate void UBICACIONES_STOCKRowChangeEventHandler(object sender, UBICACIONES_STOCKRowChangeEvent e);
        
        public delegate void CONTENIDO_UBICACION_STOCKRowChangeEventHandler(object sender, CONTENIDO_UBICACION_STOCKRowChangeEvent e);
        
        public delegate void TIPOS_UBICACIONES_STOCKRowChangeEventHandler(object sender, TIPOS_UBICACIONES_STOCKRowChangeEvent e);
        
        public delegate void UNIDADES_MEDIDARowChangeEventHandler(object sender, UNIDADES_MEDIDARowChangeEvent e);
        
        public delegate void TIPOS_UNIDADES_MEDIDARowChangeEventHandler(object sender, TIPOS_UNIDADES_MEDIDARowChangeEvent e);
        
        public delegate void TIPOS_CENTRO_TRABAJORowChangeEventHandler(object sender, TIPOS_CENTRO_TRABAJORowChangeEvent e);
        
        public delegate void CENTROS_TRABAJOSRowChangeEventHandler(object sender, CENTROS_TRABAJOSRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SECTORESDataTable : global::System.Data.TypedTableBase<SECTORESRow> {
            
            private global::System.Data.DataColumn columnSEC_CODIGO;
            
            private global::System.Data.DataColumn columnSEC_NOMBRE;
            
            private global::System.Data.DataColumn columnSEC_DESCRIPCION;
            
            private global::System.Data.DataColumn columnSEC_ABREVIATURA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SECTORESDataTable() {
                this.TableName = "SECTORES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SECTORESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SECTORESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEC_CODIGOColumn {
                get {
                    return this.columnSEC_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEC_NOMBREColumn {
                get {
                    return this.columnSEC_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEC_DESCRIPCIONColumn {
                get {
                    return this.columnSEC_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEC_ABREVIATURAColumn {
                get {
                    return this.columnSEC_ABREVIATURA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SECTORESRow this[int index] {
                get {
                    return ((SECTORESRow)(this.Rows[index]));
                }
            }
            
            public event SECTORESRowChangeEventHandler SECTORESRowChanging;
            
            public event SECTORESRowChangeEventHandler SECTORESRowChanged;
            
            public event SECTORESRowChangeEventHandler SECTORESRowDeleting;
            
            public event SECTORESRowChangeEventHandler SECTORESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSECTORESRow(SECTORESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SECTORESRow AddSECTORESRow(string SEC_NOMBRE, string SEC_DESCRIPCION, string SEC_ABREVIATURA) {
                SECTORESRow rowSECTORESRow = ((SECTORESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SEC_NOMBRE,
                        SEC_DESCRIPCION,
                        SEC_ABREVIATURA};
                rowSECTORESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSECTORESRow);
                return rowSECTORESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SECTORESRow FindBySEC_CODIGO(decimal SEC_CODIGO) {
                return ((SECTORESRow)(this.Rows.Find(new object[] {
                            SEC_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SECTORESDataTable cln = ((SECTORESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SECTORESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSEC_CODIGO = base.Columns["SEC_CODIGO"];
                this.columnSEC_NOMBRE = base.Columns["SEC_NOMBRE"];
                this.columnSEC_DESCRIPCION = base.Columns["SEC_DESCRIPCION"];
                this.columnSEC_ABREVIATURA = base.Columns["SEC_ABREVIATURA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSEC_CODIGO = new global::System.Data.DataColumn("SEC_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEC_CODIGO);
                this.columnSEC_NOMBRE = new global::System.Data.DataColumn("SEC_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEC_NOMBRE);
                this.columnSEC_DESCRIPCION = new global::System.Data.DataColumn("SEC_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEC_DESCRIPCION);
                this.columnSEC_ABREVIATURA = new global::System.Data.DataColumn("SEC_ABREVIATURA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEC_ABREVIATURA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSEC_CODIGO}, true));
                this.columnSEC_CODIGO.AutoIncrement = true;
                this.columnSEC_CODIGO.AutoIncrementSeed = -1;
                this.columnSEC_CODIGO.AutoIncrementStep = -1;
                this.columnSEC_CODIGO.AllowDBNull = false;
                this.columnSEC_CODIGO.Unique = true;
                this.columnSEC_NOMBRE.MaxLength = 80;
                this.columnSEC_DESCRIPCION.MaxLength = 200;
                this.columnSEC_ABREVIATURA.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SECTORESRow NewSECTORESRow() {
                return ((SECTORESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SECTORESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SECTORESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SECTORESRowChanged != null)) {
                    this.SECTORESRowChanged(this, new SECTORESRowChangeEvent(((SECTORESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SECTORESRowChanging != null)) {
                    this.SECTORESRowChanging(this, new SECTORESRowChangeEvent(((SECTORESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SECTORESRowDeleted != null)) {
                    this.SECTORESRowDeleted(this, new SECTORESRowChangeEvent(((SECTORESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SECTORESRowDeleting != null)) {
                    this.SECTORESRowDeleting(this, new SECTORESRowChangeEvent(((SECTORESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSECTORESRow(SECTORESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHojaRuta ds = new dsHojaRuta();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SECTORESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TURNOS_TRABAJODataTable : global::System.Data.TypedTableBase<TURNOS_TRABAJORow> {
            
            private global::System.Data.DataColumn columnTUR_CODIGO;
            
            private global::System.Data.DataColumn columnTUR_NOMBRE;
            
            private global::System.Data.DataColumn columnTUR_HORAINICIO;
            
            private global::System.Data.DataColumn columnTUR_HORAFIN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNOS_TRABAJODataTable() {
                this.TableName = "TURNOS_TRABAJO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TURNOS_TRABAJODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TURNOS_TRABAJODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUR_CODIGOColumn {
                get {
                    return this.columnTUR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUR_NOMBREColumn {
                get {
                    return this.columnTUR_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUR_HORAINICIOColumn {
                get {
                    return this.columnTUR_HORAINICIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUR_HORAFINColumn {
                get {
                    return this.columnTUR_HORAFIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNOS_TRABAJORow this[int index] {
                get {
                    return ((TURNOS_TRABAJORow)(this.Rows[index]));
                }
            }
            
            public event TURNOS_TRABAJORowChangeEventHandler TURNOS_TRABAJORowChanging;
            
            public event TURNOS_TRABAJORowChangeEventHandler TURNOS_TRABAJORowChanged;
            
            public event TURNOS_TRABAJORowChangeEventHandler TURNOS_TRABAJORowDeleting;
            
            public event TURNOS_TRABAJORowChangeEventHandler TURNOS_TRABAJORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTURNOS_TRABAJORow(TURNOS_TRABAJORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNOS_TRABAJORow AddTURNOS_TRABAJORow(string TUR_NOMBRE, decimal TUR_HORAINICIO, decimal TUR_HORAFIN) {
                TURNOS_TRABAJORow rowTURNOS_TRABAJORow = ((TURNOS_TRABAJORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TUR_NOMBRE,
                        TUR_HORAINICIO,
                        TUR_HORAFIN};
                rowTURNOS_TRABAJORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTURNOS_TRABAJORow);
                return rowTURNOS_TRABAJORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNOS_TRABAJORow FindByTUR_CODIGO(decimal TUR_CODIGO) {
                return ((TURNOS_TRABAJORow)(this.Rows.Find(new object[] {
                            TUR_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TURNOS_TRABAJODataTable cln = ((TURNOS_TRABAJODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TURNOS_TRABAJODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTUR_CODIGO = base.Columns["TUR_CODIGO"];
                this.columnTUR_NOMBRE = base.Columns["TUR_NOMBRE"];
                this.columnTUR_HORAINICIO = base.Columns["TUR_HORAINICIO"];
                this.columnTUR_HORAFIN = base.Columns["TUR_HORAFIN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTUR_CODIGO = new global::System.Data.DataColumn("TUR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUR_CODIGO);
                this.columnTUR_NOMBRE = new global::System.Data.DataColumn("TUR_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUR_NOMBRE);
                this.columnTUR_HORAINICIO = new global::System.Data.DataColumn("TUR_HORAINICIO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUR_HORAINICIO);
                this.columnTUR_HORAFIN = new global::System.Data.DataColumn("TUR_HORAFIN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUR_HORAFIN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTUR_CODIGO}, true));
                this.columnTUR_CODIGO.AutoIncrement = true;
                this.columnTUR_CODIGO.AutoIncrementSeed = -1;
                this.columnTUR_CODIGO.AutoIncrementStep = -1;
                this.columnTUR_CODIGO.AllowDBNull = false;
                this.columnTUR_CODIGO.ReadOnly = true;
                this.columnTUR_CODIGO.Unique = true;
                this.columnTUR_NOMBRE.AllowDBNull = false;
                this.columnTUR_NOMBRE.MaxLength = 80;
                this.columnTUR_HORAINICIO.AllowDBNull = false;
                this.columnTUR_HORAFIN.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNOS_TRABAJORow NewTURNOS_TRABAJORow() {
                return ((TURNOS_TRABAJORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TURNOS_TRABAJORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TURNOS_TRABAJORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TURNOS_TRABAJORowChanged != null)) {
                    this.TURNOS_TRABAJORowChanged(this, new TURNOS_TRABAJORowChangeEvent(((TURNOS_TRABAJORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TURNOS_TRABAJORowChanging != null)) {
                    this.TURNOS_TRABAJORowChanging(this, new TURNOS_TRABAJORowChangeEvent(((TURNOS_TRABAJORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TURNOS_TRABAJORowDeleted != null)) {
                    this.TURNOS_TRABAJORowDeleted(this, new TURNOS_TRABAJORowChangeEvent(((TURNOS_TRABAJORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TURNOS_TRABAJORowDeleting != null)) {
                    this.TURNOS_TRABAJORowDeleting(this, new TURNOS_TRABAJORowChangeEvent(((TURNOS_TRABAJORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTURNOS_TRABAJORow(TURNOS_TRABAJORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHojaRuta ds = new dsHojaRuta();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TURNOS_TRABAJODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TURNOSXCENTROTRABAJODataTable : global::System.Data.TypedTableBase<TURNOSXCENTROTRABAJORow> {
            
            private global::System.Data.DataColumn columnTXCT_CODIGO;
            
            private global::System.Data.DataColumn columnTUR_CODIGO;
            
            private global::System.Data.DataColumn columnCTO_CODIGO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNOSXCENTROTRABAJODataTable() {
                this.TableName = "TURNOSXCENTROTRABAJO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TURNOSXCENTROTRABAJODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TURNOSXCENTROTRABAJODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TXCT_CODIGOColumn {
                get {
                    return this.columnTXCT_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUR_CODIGOColumn {
                get {
                    return this.columnTUR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTO_CODIGOColumn {
                get {
                    return this.columnCTO_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNOSXCENTROTRABAJORow this[int index] {
                get {
                    return ((TURNOSXCENTROTRABAJORow)(this.Rows[index]));
                }
            }
            
            public event TURNOSXCENTROTRABAJORowChangeEventHandler TURNOSXCENTROTRABAJORowChanging;
            
            public event TURNOSXCENTROTRABAJORowChangeEventHandler TURNOSXCENTROTRABAJORowChanged;
            
            public event TURNOSXCENTROTRABAJORowChangeEventHandler TURNOSXCENTROTRABAJORowDeleting;
            
            public event TURNOSXCENTROTRABAJORowChangeEventHandler TURNOSXCENTROTRABAJORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTURNOSXCENTROTRABAJORow(TURNOSXCENTROTRABAJORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNOSXCENTROTRABAJORow AddTURNOSXCENTROTRABAJORow(TURNOS_TRABAJORow parentTURNOS_TRABAJORowByTURNOS_TRABAJO_TURNOSXCENTROTRABAJO, CENTROS_TRABAJOSRow parentCENTROS_TRABAJOSRowByFK_TURNOSXCENTROTRABAJO_CENTROS_TRABAJOS) {
                TURNOSXCENTROTRABAJORow rowTURNOSXCENTROTRABAJORow = ((TURNOSXCENTROTRABAJORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null};
                if ((parentTURNOS_TRABAJORowByTURNOS_TRABAJO_TURNOSXCENTROTRABAJO != null)) {
                    columnValuesArray[1] = parentTURNOS_TRABAJORowByTURNOS_TRABAJO_TURNOSXCENTROTRABAJO[0];
                }
                if ((parentCENTROS_TRABAJOSRowByFK_TURNOSXCENTROTRABAJO_CENTROS_TRABAJOS != null)) {
                    columnValuesArray[2] = parentCENTROS_TRABAJOSRowByFK_TURNOSXCENTROTRABAJO_CENTROS_TRABAJOS[0];
                }
                rowTURNOSXCENTROTRABAJORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTURNOSXCENTROTRABAJORow);
                return rowTURNOSXCENTROTRABAJORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNOSXCENTROTRABAJORow FindByTXCT_CODIGO(decimal TXCT_CODIGO) {
                return ((TURNOSXCENTROTRABAJORow)(this.Rows.Find(new object[] {
                            TXCT_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TURNOSXCENTROTRABAJODataTable cln = ((TURNOSXCENTROTRABAJODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TURNOSXCENTROTRABAJODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTXCT_CODIGO = base.Columns["TXCT_CODIGO"];
                this.columnTUR_CODIGO = base.Columns["TUR_CODIGO"];
                this.columnCTO_CODIGO = base.Columns["CTO_CODIGO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTXCT_CODIGO = new global::System.Data.DataColumn("TXCT_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXCT_CODIGO);
                this.columnTUR_CODIGO = new global::System.Data.DataColumn("TUR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUR_CODIGO);
                this.columnCTO_CODIGO = new global::System.Data.DataColumn("CTO_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTO_CODIGO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTXCT_CODIGO}, true));
                this.columnTXCT_CODIGO.AutoIncrement = true;
                this.columnTXCT_CODIGO.AutoIncrementSeed = -1;
                this.columnTXCT_CODIGO.AutoIncrementStep = -1;
                this.columnTXCT_CODIGO.AllowDBNull = false;
                this.columnTXCT_CODIGO.Unique = true;
                this.columnTUR_CODIGO.AllowDBNull = false;
                this.columnCTO_CODIGO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNOSXCENTROTRABAJORow NewTURNOSXCENTROTRABAJORow() {
                return ((TURNOSXCENTROTRABAJORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TURNOSXCENTROTRABAJORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TURNOSXCENTROTRABAJORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TURNOSXCENTROTRABAJORowChanged != null)) {
                    this.TURNOSXCENTROTRABAJORowChanged(this, new TURNOSXCENTROTRABAJORowChangeEvent(((TURNOSXCENTROTRABAJORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TURNOSXCENTROTRABAJORowChanging != null)) {
                    this.TURNOSXCENTROTRABAJORowChanging(this, new TURNOSXCENTROTRABAJORowChangeEvent(((TURNOSXCENTROTRABAJORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TURNOSXCENTROTRABAJORowDeleted != null)) {
                    this.TURNOSXCENTROTRABAJORowDeleted(this, new TURNOSXCENTROTRABAJORowChangeEvent(((TURNOSXCENTROTRABAJORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TURNOSXCENTROTRABAJORowDeleting != null)) {
                    this.TURNOSXCENTROTRABAJORowDeleting(this, new TURNOSXCENTROTRABAJORowChangeEvent(((TURNOSXCENTROTRABAJORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTURNOSXCENTROTRABAJORow(TURNOSXCENTROTRABAJORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHojaRuta ds = new dsHojaRuta();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TURNOSXCENTROTRABAJODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OPERACIONESDataTable : global::System.Data.TypedTableBase<OPERACIONESRow> {
            
            private global::System.Data.DataColumn columnOPR_NUMERO;
            
            private global::System.Data.DataColumn columnOPR_CODIGO;
            
            private global::System.Data.DataColumn columnOPR_NOMBRE;
            
            private global::System.Data.DataColumn columnOPR_DESCRIPCION;
            
            private global::System.Data.DataColumn columnOPR_HORASREQUERIDA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPERACIONESDataTable() {
                this.TableName = "OPERACIONES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OPERACIONESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OPERACIONESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPR_NUMEROColumn {
                get {
                    return this.columnOPR_NUMERO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPR_CODIGOColumn {
                get {
                    return this.columnOPR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPR_NOMBREColumn {
                get {
                    return this.columnOPR_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPR_DESCRIPCIONColumn {
                get {
                    return this.columnOPR_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPR_HORASREQUERIDAColumn {
                get {
                    return this.columnOPR_HORASREQUERIDA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPERACIONESRow this[int index] {
                get {
                    return ((OPERACIONESRow)(this.Rows[index]));
                }
            }
            
            public event OPERACIONESRowChangeEventHandler OPERACIONESRowChanging;
            
            public event OPERACIONESRowChangeEventHandler OPERACIONESRowChanged;
            
            public event OPERACIONESRowChangeEventHandler OPERACIONESRowDeleting;
            
            public event OPERACIONESRowChangeEventHandler OPERACIONESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOPERACIONESRow(OPERACIONESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPERACIONESRow AddOPERACIONESRow(string OPR_CODIGO, string OPR_NOMBRE, string OPR_DESCRIPCION, decimal OPR_HORASREQUERIDA) {
                OPERACIONESRow rowOPERACIONESRow = ((OPERACIONESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        OPR_CODIGO,
                        OPR_NOMBRE,
                        OPR_DESCRIPCION,
                        OPR_HORASREQUERIDA};
                rowOPERACIONESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOPERACIONESRow);
                return rowOPERACIONESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPERACIONESRow FindByOPR_NUMERO(decimal OPR_NUMERO) {
                return ((OPERACIONESRow)(this.Rows.Find(new object[] {
                            OPR_NUMERO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OPERACIONESDataTable cln = ((OPERACIONESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OPERACIONESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOPR_NUMERO = base.Columns["OPR_NUMERO"];
                this.columnOPR_CODIGO = base.Columns["OPR_CODIGO"];
                this.columnOPR_NOMBRE = base.Columns["OPR_NOMBRE"];
                this.columnOPR_DESCRIPCION = base.Columns["OPR_DESCRIPCION"];
                this.columnOPR_HORASREQUERIDA = base.Columns["OPR_HORASREQUERIDA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOPR_NUMERO = new global::System.Data.DataColumn("OPR_NUMERO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPR_NUMERO);
                this.columnOPR_CODIGO = new global::System.Data.DataColumn("OPR_CODIGO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPR_CODIGO);
                this.columnOPR_NOMBRE = new global::System.Data.DataColumn("OPR_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPR_NOMBRE);
                this.columnOPR_DESCRIPCION = new global::System.Data.DataColumn("OPR_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPR_DESCRIPCION);
                this.columnOPR_HORASREQUERIDA = new global::System.Data.DataColumn("OPR_HORASREQUERIDA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPR_HORASREQUERIDA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOPR_NUMERO}, true));
                this.columnOPR_NUMERO.AutoIncrement = true;
                this.columnOPR_NUMERO.AutoIncrementSeed = -1;
                this.columnOPR_NUMERO.AutoIncrementStep = -1;
                this.columnOPR_NUMERO.AllowDBNull = false;
                this.columnOPR_NUMERO.Unique = true;
                this.columnOPR_CODIGO.MaxLength = 80;
                this.columnOPR_NOMBRE.MaxLength = 80;
                this.columnOPR_DESCRIPCION.MaxLength = 300;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPERACIONESRow NewOPERACIONESRow() {
                return ((OPERACIONESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OPERACIONESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OPERACIONESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OPERACIONESRowChanged != null)) {
                    this.OPERACIONESRowChanged(this, new OPERACIONESRowChangeEvent(((OPERACIONESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OPERACIONESRowChanging != null)) {
                    this.OPERACIONESRowChanging(this, new OPERACIONESRowChangeEvent(((OPERACIONESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OPERACIONESRowDeleted != null)) {
                    this.OPERACIONESRowDeleted(this, new OPERACIONESRowChangeEvent(((OPERACIONESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OPERACIONESRowDeleting != null)) {
                    this.OPERACIONESRowDeleting(this, new OPERACIONESRowChangeEvent(((OPERACIONESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOPERACIONESRow(OPERACIONESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHojaRuta ds = new dsHojaRuta();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OPERACIONESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DETALLE_HOJARUTADataTable : global::System.Data.TypedTableBase<DETALLE_HOJARUTARow> {
            
            private global::System.Data.DataColumn columnDHR_CODIGO;
            
            private global::System.Data.DataColumn columnCTO_CODIGO;
            
            private global::System.Data.DataColumn columnHR_CODIGO;
            
            private global::System.Data.DataColumn columnDHR_SECUENCIA;
            
            private global::System.Data.DataColumn columnOPR_NUMERO;
            
            private global::System.Data.DataColumn columnUSTCK_ORIGEN;
            
            private global::System.Data.DataColumn columnUSTCK_DESTINO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_HOJARUTADataTable() {
                this.TableName = "DETALLE_HOJARUTA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DETALLE_HOJARUTADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DETALLE_HOJARUTADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DHR_CODIGOColumn {
                get {
                    return this.columnDHR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTO_CODIGOColumn {
                get {
                    return this.columnCTO_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HR_CODIGOColumn {
                get {
                    return this.columnHR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DHR_SECUENCIAColumn {
                get {
                    return this.columnDHR_SECUENCIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPR_NUMEROColumn {
                get {
                    return this.columnOPR_NUMERO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_ORIGENColumn {
                get {
                    return this.columnUSTCK_ORIGEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_DESTINOColumn {
                get {
                    return this.columnUSTCK_DESTINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_HOJARUTARow this[int index] {
                get {
                    return ((DETALLE_HOJARUTARow)(this.Rows[index]));
                }
            }
            
            public event DETALLE_HOJARUTARowChangeEventHandler DETALLE_HOJARUTARowChanging;
            
            public event DETALLE_HOJARUTARowChangeEventHandler DETALLE_HOJARUTARowChanged;
            
            public event DETALLE_HOJARUTARowChangeEventHandler DETALLE_HOJARUTARowDeleting;
            
            public event DETALLE_HOJARUTARowChangeEventHandler DETALLE_HOJARUTARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDETALLE_HOJARUTARow(DETALLE_HOJARUTARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_HOJARUTARow AddDETALLE_HOJARUTARow(CENTROS_TRABAJOSRow parentCENTROS_TRABAJOSRowByFK_DETALLE_HOJARUTA_CENTROS_TRABAJOS, HOJAS_RUTARow parentHOJAS_RUTARowByFK_DETALLE_HOJARUTA_HOJAS_RUTA, decimal DHR_SECUENCIA, OPERACIONESRow parentOPERACIONESRowByFK_DETALLE_HOJARUTA_OPERACIONES, UBICACIONES_STOCKRow parentUBICACIONES_STOCKRowByFK_DETALLE_HOJARUTA_UBICACIONES_STOCK, UBICACIONES_STOCKRow parentUBICACIONES_STOCKRowByFK_DETALLE_HOJARUTA_UBICACIONES_STOCK1) {
                DETALLE_HOJARUTARow rowDETALLE_HOJARUTARow = ((DETALLE_HOJARUTARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        DHR_SECUENCIA,
                        null,
                        null,
                        null};
                if ((parentCENTROS_TRABAJOSRowByFK_DETALLE_HOJARUTA_CENTROS_TRABAJOS != null)) {
                    columnValuesArray[1] = parentCENTROS_TRABAJOSRowByFK_DETALLE_HOJARUTA_CENTROS_TRABAJOS[0];
                }
                if ((parentHOJAS_RUTARowByFK_DETALLE_HOJARUTA_HOJAS_RUTA != null)) {
                    columnValuesArray[2] = parentHOJAS_RUTARowByFK_DETALLE_HOJARUTA_HOJAS_RUTA[0];
                }
                if ((parentOPERACIONESRowByFK_DETALLE_HOJARUTA_OPERACIONES != null)) {
                    columnValuesArray[4] = parentOPERACIONESRowByFK_DETALLE_HOJARUTA_OPERACIONES[0];
                }
                if ((parentUBICACIONES_STOCKRowByFK_DETALLE_HOJARUTA_UBICACIONES_STOCK != null)) {
                    columnValuesArray[5] = parentUBICACIONES_STOCKRowByFK_DETALLE_HOJARUTA_UBICACIONES_STOCK[0];
                }
                if ((parentUBICACIONES_STOCKRowByFK_DETALLE_HOJARUTA_UBICACIONES_STOCK1 != null)) {
                    columnValuesArray[6] = parentUBICACIONES_STOCKRowByFK_DETALLE_HOJARUTA_UBICACIONES_STOCK1[0];
                }
                rowDETALLE_HOJARUTARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDETALLE_HOJARUTARow);
                return rowDETALLE_HOJARUTARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_HOJARUTARow FindByDHR_CODIGO(decimal DHR_CODIGO) {
                return ((DETALLE_HOJARUTARow)(this.Rows.Find(new object[] {
                            DHR_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DETALLE_HOJARUTADataTable cln = ((DETALLE_HOJARUTADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DETALLE_HOJARUTADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDHR_CODIGO = base.Columns["DHR_CODIGO"];
                this.columnCTO_CODIGO = base.Columns["CTO_CODIGO"];
                this.columnHR_CODIGO = base.Columns["HR_CODIGO"];
                this.columnDHR_SECUENCIA = base.Columns["DHR_SECUENCIA"];
                this.columnOPR_NUMERO = base.Columns["OPR_NUMERO"];
                this.columnUSTCK_ORIGEN = base.Columns["USTCK_ORIGEN"];
                this.columnUSTCK_DESTINO = base.Columns["USTCK_DESTINO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDHR_CODIGO = new global::System.Data.DataColumn("DHR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDHR_CODIGO);
                this.columnCTO_CODIGO = new global::System.Data.DataColumn("CTO_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTO_CODIGO);
                this.columnHR_CODIGO = new global::System.Data.DataColumn("HR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHR_CODIGO);
                this.columnDHR_SECUENCIA = new global::System.Data.DataColumn("DHR_SECUENCIA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDHR_SECUENCIA);
                this.columnOPR_NUMERO = new global::System.Data.DataColumn("OPR_NUMERO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPR_NUMERO);
                this.columnUSTCK_ORIGEN = new global::System.Data.DataColumn("USTCK_ORIGEN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_ORIGEN);
                this.columnUSTCK_DESTINO = new global::System.Data.DataColumn("USTCK_DESTINO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_DESTINO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDHR_CODIGO}, true));
                this.columnDHR_CODIGO.AutoIncrement = true;
                this.columnDHR_CODIGO.AutoIncrementSeed = -1;
                this.columnDHR_CODIGO.AutoIncrementStep = -1;
                this.columnDHR_CODIGO.AllowDBNull = false;
                this.columnDHR_CODIGO.Unique = true;
                this.columnCTO_CODIGO.AllowDBNull = false;
                this.columnHR_CODIGO.AllowDBNull = false;
                this.columnDHR_SECUENCIA.AllowDBNull = false;
                this.columnOPR_NUMERO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_HOJARUTARow NewDETALLE_HOJARUTARow() {
                return ((DETALLE_HOJARUTARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DETALLE_HOJARUTARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DETALLE_HOJARUTARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DETALLE_HOJARUTARowChanged != null)) {
                    this.DETALLE_HOJARUTARowChanged(this, new DETALLE_HOJARUTARowChangeEvent(((DETALLE_HOJARUTARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DETALLE_HOJARUTARowChanging != null)) {
                    this.DETALLE_HOJARUTARowChanging(this, new DETALLE_HOJARUTARowChangeEvent(((DETALLE_HOJARUTARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DETALLE_HOJARUTARowDeleted != null)) {
                    this.DETALLE_HOJARUTARowDeleted(this, new DETALLE_HOJARUTARowChangeEvent(((DETALLE_HOJARUTARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DETALLE_HOJARUTARowDeleting != null)) {
                    this.DETALLE_HOJARUTARowDeleting(this, new DETALLE_HOJARUTARowChangeEvent(((DETALLE_HOJARUTARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDETALLE_HOJARUTARow(DETALLE_HOJARUTARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHojaRuta ds = new dsHojaRuta();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DETALLE_HOJARUTADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HOJAS_RUTADataTable : global::System.Data.TypedTableBase<HOJAS_RUTARow> {
            
            private global::System.Data.DataColumn columnHR_CODIGO;
            
            private global::System.Data.DataColumn columnHR_NOMBRE;
            
            private global::System.Data.DataColumn columnHR_DESCRIPCION;
            
            private global::System.Data.DataColumn columnHR_ACTIVO;
            
            private global::System.Data.DataColumn columnHR_FECHAALTA;
            
            private global::System.Data.DataColumn columnUSTCK_NUMERO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOJAS_RUTADataTable() {
                this.TableName = "HOJAS_RUTA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HOJAS_RUTADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HOJAS_RUTADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HR_CODIGOColumn {
                get {
                    return this.columnHR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HR_NOMBREColumn {
                get {
                    return this.columnHR_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HR_DESCRIPCIONColumn {
                get {
                    return this.columnHR_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HR_ACTIVOColumn {
                get {
                    return this.columnHR_ACTIVO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HR_FECHAALTAColumn {
                get {
                    return this.columnHR_FECHAALTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_NUMEROColumn {
                get {
                    return this.columnUSTCK_NUMERO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOJAS_RUTARow this[int index] {
                get {
                    return ((HOJAS_RUTARow)(this.Rows[index]));
                }
            }
            
            public event HOJAS_RUTARowChangeEventHandler HOJAS_RUTARowChanging;
            
            public event HOJAS_RUTARowChangeEventHandler HOJAS_RUTARowChanged;
            
            public event HOJAS_RUTARowChangeEventHandler HOJAS_RUTARowDeleting;
            
            public event HOJAS_RUTARowChangeEventHandler HOJAS_RUTARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHOJAS_RUTARow(HOJAS_RUTARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOJAS_RUTARow AddHOJAS_RUTARow(string HR_NOMBRE, string HR_DESCRIPCION, decimal HR_ACTIVO, System.DateTime HR_FECHAALTA, UBICACIONES_STOCKRow parentUBICACIONES_STOCKRowByFK_HOJAS_RUTA_UBICACIONES_STOCK) {
                HOJAS_RUTARow rowHOJAS_RUTARow = ((HOJAS_RUTARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        HR_NOMBRE,
                        HR_DESCRIPCION,
                        HR_ACTIVO,
                        HR_FECHAALTA,
                        null};
                if ((parentUBICACIONES_STOCKRowByFK_HOJAS_RUTA_UBICACIONES_STOCK != null)) {
                    columnValuesArray[5] = parentUBICACIONES_STOCKRowByFK_HOJAS_RUTA_UBICACIONES_STOCK[0];
                }
                rowHOJAS_RUTARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHOJAS_RUTARow);
                return rowHOJAS_RUTARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOJAS_RUTARow FindByHR_CODIGO(decimal HR_CODIGO) {
                return ((HOJAS_RUTARow)(this.Rows.Find(new object[] {
                            HR_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HOJAS_RUTADataTable cln = ((HOJAS_RUTADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HOJAS_RUTADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnHR_CODIGO = base.Columns["HR_CODIGO"];
                this.columnHR_NOMBRE = base.Columns["HR_NOMBRE"];
                this.columnHR_DESCRIPCION = base.Columns["HR_DESCRIPCION"];
                this.columnHR_ACTIVO = base.Columns["HR_ACTIVO"];
                this.columnHR_FECHAALTA = base.Columns["HR_FECHAALTA"];
                this.columnUSTCK_NUMERO = base.Columns["USTCK_NUMERO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnHR_CODIGO = new global::System.Data.DataColumn("HR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHR_CODIGO);
                this.columnHR_NOMBRE = new global::System.Data.DataColumn("HR_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHR_NOMBRE);
                this.columnHR_DESCRIPCION = new global::System.Data.DataColumn("HR_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHR_DESCRIPCION);
                this.columnHR_ACTIVO = new global::System.Data.DataColumn("HR_ACTIVO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHR_ACTIVO);
                this.columnHR_FECHAALTA = new global::System.Data.DataColumn("HR_FECHAALTA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHR_FECHAALTA);
                this.columnUSTCK_NUMERO = new global::System.Data.DataColumn("USTCK_NUMERO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_NUMERO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnHR_CODIGO}, true));
                this.columnHR_CODIGO.AutoIncrement = true;
                this.columnHR_CODIGO.AutoIncrementSeed = -1;
                this.columnHR_CODIGO.AutoIncrementStep = -1;
                this.columnHR_CODIGO.AllowDBNull = false;
                this.columnHR_CODIGO.Unique = true;
                this.columnHR_NOMBRE.MaxLength = 80;
                this.columnHR_DESCRIPCION.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOJAS_RUTARow NewHOJAS_RUTARow() {
                return ((HOJAS_RUTARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HOJAS_RUTARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HOJAS_RUTARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HOJAS_RUTARowChanged != null)) {
                    this.HOJAS_RUTARowChanged(this, new HOJAS_RUTARowChangeEvent(((HOJAS_RUTARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HOJAS_RUTARowChanging != null)) {
                    this.HOJAS_RUTARowChanging(this, new HOJAS_RUTARowChangeEvent(((HOJAS_RUTARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HOJAS_RUTARowDeleted != null)) {
                    this.HOJAS_RUTARowDeleted(this, new HOJAS_RUTARowChangeEvent(((HOJAS_RUTARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HOJAS_RUTARowDeleting != null)) {
                    this.HOJAS_RUTARowDeleting(this, new HOJAS_RUTARowChangeEvent(((HOJAS_RUTARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHOJAS_RUTARow(HOJAS_RUTARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHojaRuta ds = new dsHojaRuta();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HOJAS_RUTADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UBICACIONES_STOCKDataTable : global::System.Data.TypedTableBase<UBICACIONES_STOCKRow> {
            
            private global::System.Data.DataColumn columnUSTCK_NUMERO;
            
            private global::System.Data.DataColumn columnUSTCK_CODIGO;
            
            private global::System.Data.DataColumn columnUSTCK_NOMBRE;
            
            private global::System.Data.DataColumn columnUSTCK_DESCRIPCION;
            
            private global::System.Data.DataColumn columnUSTCK_UBICACIONFISICA;
            
            private global::System.Data.DataColumn columnUSTCK_CANTIDADREAL;
            
            private global::System.Data.DataColumn columnUMED_CODIGO;
            
            private global::System.Data.DataColumn columnUSTCK_PADRE;
            
            private global::System.Data.DataColumn columnUSTCK_ACTIVO;
            
            private global::System.Data.DataColumn columnTUS_CODIGO;
            
            private global::System.Data.DataColumn columnCON_CODIGO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKDataTable() {
                this.TableName = "UBICACIONES_STOCK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UBICACIONES_STOCKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UBICACIONES_STOCKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_NUMEROColumn {
                get {
                    return this.columnUSTCK_NUMERO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_CODIGOColumn {
                get {
                    return this.columnUSTCK_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_NOMBREColumn {
                get {
                    return this.columnUSTCK_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_DESCRIPCIONColumn {
                get {
                    return this.columnUSTCK_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_UBICACIONFISICAColumn {
                get {
                    return this.columnUSTCK_UBICACIONFISICA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_CANTIDADREALColumn {
                get {
                    return this.columnUSTCK_CANTIDADREAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_CODIGOColumn {
                get {
                    return this.columnUMED_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_PADREColumn {
                get {
                    return this.columnUSTCK_PADRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_ACTIVOColumn {
                get {
                    return this.columnUSTCK_ACTIVO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUS_CODIGOColumn {
                get {
                    return this.columnTUS_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CON_CODIGOColumn {
                get {
                    return this.columnCON_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow this[int index] {
                get {
                    return ((UBICACIONES_STOCKRow)(this.Rows[index]));
                }
            }
            
            public event UBICACIONES_STOCKRowChangeEventHandler UBICACIONES_STOCKRowChanging;
            
            public event UBICACIONES_STOCKRowChangeEventHandler UBICACIONES_STOCKRowChanged;
            
            public event UBICACIONES_STOCKRowChangeEventHandler UBICACIONES_STOCKRowDeleting;
            
            public event UBICACIONES_STOCKRowChangeEventHandler UBICACIONES_STOCKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUBICACIONES_STOCKRow(UBICACIONES_STOCKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow AddUBICACIONES_STOCKRow(string USTCK_CODIGO, string USTCK_NOMBRE, string USTCK_DESCRIPCION, string USTCK_UBICACIONFISICA, decimal USTCK_CANTIDADREAL, UNIDADES_MEDIDARow parentUNIDADES_MEDIDARowByFK_UBICACIONES_STOCK_UBICACION_STOCK1, UBICACIONES_STOCKRow parentUBICACIONES_STOCKRowByFK_UBICACIONES_STOCK_UBICACION_STOCK, decimal USTCK_ACTIVO, TIPOS_UBICACIONES_STOCKRow parentTIPOS_UBICACIONES_STOCKRowByFK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK, CONTENIDO_UBICACION_STOCKRow parentCONTENIDO_UBICACION_STOCKRowByFK_UBICACIONES_STOCK_CONTENIDO_UBICACION_STOCK) {
                UBICACIONES_STOCKRow rowUBICACIONES_STOCKRow = ((UBICACIONES_STOCKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        USTCK_CODIGO,
                        USTCK_NOMBRE,
                        USTCK_DESCRIPCION,
                        USTCK_UBICACIONFISICA,
                        USTCK_CANTIDADREAL,
                        null,
                        null,
                        USTCK_ACTIVO,
                        null,
                        null};
                if ((parentUNIDADES_MEDIDARowByFK_UBICACIONES_STOCK_UBICACION_STOCK1 != null)) {
                    columnValuesArray[6] = parentUNIDADES_MEDIDARowByFK_UBICACIONES_STOCK_UBICACION_STOCK1[0];
                }
                if ((parentUBICACIONES_STOCKRowByFK_UBICACIONES_STOCK_UBICACION_STOCK != null)) {
                    columnValuesArray[7] = parentUBICACIONES_STOCKRowByFK_UBICACIONES_STOCK_UBICACION_STOCK[0];
                }
                if ((parentTIPOS_UBICACIONES_STOCKRowByFK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK != null)) {
                    columnValuesArray[9] = parentTIPOS_UBICACIONES_STOCKRowByFK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK[0];
                }
                if ((parentCONTENIDO_UBICACION_STOCKRowByFK_UBICACIONES_STOCK_CONTENIDO_UBICACION_STOCK != null)) {
                    columnValuesArray[10] = parentCONTENIDO_UBICACION_STOCKRowByFK_UBICACIONES_STOCK_CONTENIDO_UBICACION_STOCK[0];
                }
                rowUBICACIONES_STOCKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUBICACIONES_STOCKRow);
                return rowUBICACIONES_STOCKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow FindByUSTCK_NUMERO(decimal USTCK_NUMERO) {
                return ((UBICACIONES_STOCKRow)(this.Rows.Find(new object[] {
                            USTCK_NUMERO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UBICACIONES_STOCKDataTable cln = ((UBICACIONES_STOCKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UBICACIONES_STOCKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUSTCK_NUMERO = base.Columns["USTCK_NUMERO"];
                this.columnUSTCK_CODIGO = base.Columns["USTCK_CODIGO"];
                this.columnUSTCK_NOMBRE = base.Columns["USTCK_NOMBRE"];
                this.columnUSTCK_DESCRIPCION = base.Columns["USTCK_DESCRIPCION"];
                this.columnUSTCK_UBICACIONFISICA = base.Columns["USTCK_UBICACIONFISICA"];
                this.columnUSTCK_CANTIDADREAL = base.Columns["USTCK_CANTIDADREAL"];
                this.columnUMED_CODIGO = base.Columns["UMED_CODIGO"];
                this.columnUSTCK_PADRE = base.Columns["USTCK_PADRE"];
                this.columnUSTCK_ACTIVO = base.Columns["USTCK_ACTIVO"];
                this.columnTUS_CODIGO = base.Columns["TUS_CODIGO"];
                this.columnCON_CODIGO = base.Columns["CON_CODIGO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUSTCK_NUMERO = new global::System.Data.DataColumn("USTCK_NUMERO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_NUMERO);
                this.columnUSTCK_CODIGO = new global::System.Data.DataColumn("USTCK_CODIGO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_CODIGO);
                this.columnUSTCK_NOMBRE = new global::System.Data.DataColumn("USTCK_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_NOMBRE);
                this.columnUSTCK_DESCRIPCION = new global::System.Data.DataColumn("USTCK_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_DESCRIPCION);
                this.columnUSTCK_UBICACIONFISICA = new global::System.Data.DataColumn("USTCK_UBICACIONFISICA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_UBICACIONFISICA);
                this.columnUSTCK_CANTIDADREAL = new global::System.Data.DataColumn("USTCK_CANTIDADREAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_CANTIDADREAL);
                this.columnUMED_CODIGO = new global::System.Data.DataColumn("UMED_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_CODIGO);
                this.columnUSTCK_PADRE = new global::System.Data.DataColumn("USTCK_PADRE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_PADRE);
                this.columnUSTCK_ACTIVO = new global::System.Data.DataColumn("USTCK_ACTIVO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_ACTIVO);
                this.columnTUS_CODIGO = new global::System.Data.DataColumn("TUS_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUS_CODIGO);
                this.columnCON_CODIGO = new global::System.Data.DataColumn("CON_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCON_CODIGO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUSTCK_NUMERO}, true));
                this.columnUSTCK_NUMERO.AutoIncrement = true;
                this.columnUSTCK_NUMERO.AutoIncrementSeed = -1;
                this.columnUSTCK_NUMERO.AutoIncrementStep = -1;
                this.columnUSTCK_NUMERO.AllowDBNull = false;
                this.columnUSTCK_NUMERO.Unique = true;
                this.columnUSTCK_CODIGO.MaxLength = 80;
                this.columnUSTCK_NOMBRE.MaxLength = 80;
                this.columnUSTCK_DESCRIPCION.MaxLength = 200;
                this.columnUSTCK_UBICACIONFISICA.MaxLength = 200;
                this.columnUSTCK_CANTIDADREAL.AllowDBNull = false;
                this.columnUMED_CODIGO.AllowDBNull = false;
                this.columnUSTCK_ACTIVO.AllowDBNull = false;
                this.columnTUS_CODIGO.AllowDBNull = false;
                this.columnCON_CODIGO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow NewUBICACIONES_STOCKRow() {
                return ((UBICACIONES_STOCKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UBICACIONES_STOCKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UBICACIONES_STOCKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UBICACIONES_STOCKRowChanged != null)) {
                    this.UBICACIONES_STOCKRowChanged(this, new UBICACIONES_STOCKRowChangeEvent(((UBICACIONES_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UBICACIONES_STOCKRowChanging != null)) {
                    this.UBICACIONES_STOCKRowChanging(this, new UBICACIONES_STOCKRowChangeEvent(((UBICACIONES_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UBICACIONES_STOCKRowDeleted != null)) {
                    this.UBICACIONES_STOCKRowDeleted(this, new UBICACIONES_STOCKRowChangeEvent(((UBICACIONES_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UBICACIONES_STOCKRowDeleting != null)) {
                    this.UBICACIONES_STOCKRowDeleting(this, new UBICACIONES_STOCKRowChangeEvent(((UBICACIONES_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUBICACIONES_STOCKRow(UBICACIONES_STOCKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHojaRuta ds = new dsHojaRuta();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UBICACIONES_STOCKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CONTENIDO_UBICACION_STOCKDataTable : global::System.Data.TypedTableBase<CONTENIDO_UBICACION_STOCKRow> {
            
            private global::System.Data.DataColumn columnCON_CODIGO;
            
            private global::System.Data.DataColumn columnCON_NOMBRE;
            
            private global::System.Data.DataColumn columnCON_DESCRIPCION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONTENIDO_UBICACION_STOCKDataTable() {
                this.TableName = "CONTENIDO_UBICACION_STOCK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CONTENIDO_UBICACION_STOCKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CONTENIDO_UBICACION_STOCKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CON_CODIGOColumn {
                get {
                    return this.columnCON_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CON_NOMBREColumn {
                get {
                    return this.columnCON_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CON_DESCRIPCIONColumn {
                get {
                    return this.columnCON_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONTENIDO_UBICACION_STOCKRow this[int index] {
                get {
                    return ((CONTENIDO_UBICACION_STOCKRow)(this.Rows[index]));
                }
            }
            
            public event CONTENIDO_UBICACION_STOCKRowChangeEventHandler CONTENIDO_UBICACION_STOCKRowChanging;
            
            public event CONTENIDO_UBICACION_STOCKRowChangeEventHandler CONTENIDO_UBICACION_STOCKRowChanged;
            
            public event CONTENIDO_UBICACION_STOCKRowChangeEventHandler CONTENIDO_UBICACION_STOCKRowDeleting;
            
            public event CONTENIDO_UBICACION_STOCKRowChangeEventHandler CONTENIDO_UBICACION_STOCKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCONTENIDO_UBICACION_STOCKRow(CONTENIDO_UBICACION_STOCKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONTENIDO_UBICACION_STOCKRow AddCONTENIDO_UBICACION_STOCKRow(string CON_NOMBRE, string CON_DESCRIPCION) {
                CONTENIDO_UBICACION_STOCKRow rowCONTENIDO_UBICACION_STOCKRow = ((CONTENIDO_UBICACION_STOCKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CON_NOMBRE,
                        CON_DESCRIPCION};
                rowCONTENIDO_UBICACION_STOCKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCONTENIDO_UBICACION_STOCKRow);
                return rowCONTENIDO_UBICACION_STOCKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONTENIDO_UBICACION_STOCKRow FindByCON_CODIGO(decimal CON_CODIGO) {
                return ((CONTENIDO_UBICACION_STOCKRow)(this.Rows.Find(new object[] {
                            CON_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CONTENIDO_UBICACION_STOCKDataTable cln = ((CONTENIDO_UBICACION_STOCKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CONTENIDO_UBICACION_STOCKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCON_CODIGO = base.Columns["CON_CODIGO"];
                this.columnCON_NOMBRE = base.Columns["CON_NOMBRE"];
                this.columnCON_DESCRIPCION = base.Columns["CON_DESCRIPCION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCON_CODIGO = new global::System.Data.DataColumn("CON_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCON_CODIGO);
                this.columnCON_NOMBRE = new global::System.Data.DataColumn("CON_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCON_NOMBRE);
                this.columnCON_DESCRIPCION = new global::System.Data.DataColumn("CON_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCON_DESCRIPCION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCON_CODIGO}, true));
                this.columnCON_CODIGO.AutoIncrement = true;
                this.columnCON_CODIGO.AutoIncrementSeed = -1;
                this.columnCON_CODIGO.AutoIncrementStep = -1;
                this.columnCON_CODIGO.AllowDBNull = false;
                this.columnCON_CODIGO.Unique = true;
                this.columnCON_NOMBRE.MaxLength = 80;
                this.columnCON_DESCRIPCION.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONTENIDO_UBICACION_STOCKRow NewCONTENIDO_UBICACION_STOCKRow() {
                return ((CONTENIDO_UBICACION_STOCKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CONTENIDO_UBICACION_STOCKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CONTENIDO_UBICACION_STOCKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CONTENIDO_UBICACION_STOCKRowChanged != null)) {
                    this.CONTENIDO_UBICACION_STOCKRowChanged(this, new CONTENIDO_UBICACION_STOCKRowChangeEvent(((CONTENIDO_UBICACION_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CONTENIDO_UBICACION_STOCKRowChanging != null)) {
                    this.CONTENIDO_UBICACION_STOCKRowChanging(this, new CONTENIDO_UBICACION_STOCKRowChangeEvent(((CONTENIDO_UBICACION_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CONTENIDO_UBICACION_STOCKRowDeleted != null)) {
                    this.CONTENIDO_UBICACION_STOCKRowDeleted(this, new CONTENIDO_UBICACION_STOCKRowChangeEvent(((CONTENIDO_UBICACION_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CONTENIDO_UBICACION_STOCKRowDeleting != null)) {
                    this.CONTENIDO_UBICACION_STOCKRowDeleting(this, new CONTENIDO_UBICACION_STOCKRowChangeEvent(((CONTENIDO_UBICACION_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCONTENIDO_UBICACION_STOCKRow(CONTENIDO_UBICACION_STOCKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHojaRuta ds = new dsHojaRuta();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CONTENIDO_UBICACION_STOCKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TIPOS_UBICACIONES_STOCKDataTable : global::System.Data.TypedTableBase<TIPOS_UBICACIONES_STOCKRow> {
            
            private global::System.Data.DataColumn columnTUS_CODIGO;
            
            private global::System.Data.DataColumn columnTUS_NOMBRE;
            
            private global::System.Data.DataColumn columnTUS_DESCRIPCION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UBICACIONES_STOCKDataTable() {
                this.TableName = "TIPOS_UBICACIONES_STOCK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TIPOS_UBICACIONES_STOCKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TIPOS_UBICACIONES_STOCKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUS_CODIGOColumn {
                get {
                    return this.columnTUS_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUS_NOMBREColumn {
                get {
                    return this.columnTUS_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUS_DESCRIPCIONColumn {
                get {
                    return this.columnTUS_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UBICACIONES_STOCKRow this[int index] {
                get {
                    return ((TIPOS_UBICACIONES_STOCKRow)(this.Rows[index]));
                }
            }
            
            public event TIPOS_UBICACIONES_STOCKRowChangeEventHandler TIPOS_UBICACIONES_STOCKRowChanging;
            
            public event TIPOS_UBICACIONES_STOCKRowChangeEventHandler TIPOS_UBICACIONES_STOCKRowChanged;
            
            public event TIPOS_UBICACIONES_STOCKRowChangeEventHandler TIPOS_UBICACIONES_STOCKRowDeleting;
            
            public event TIPOS_UBICACIONES_STOCKRowChangeEventHandler TIPOS_UBICACIONES_STOCKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTIPOS_UBICACIONES_STOCKRow(TIPOS_UBICACIONES_STOCKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UBICACIONES_STOCKRow AddTIPOS_UBICACIONES_STOCKRow(string TUS_NOMBRE, string TUS_DESCRIPCION) {
                TIPOS_UBICACIONES_STOCKRow rowTIPOS_UBICACIONES_STOCKRow = ((TIPOS_UBICACIONES_STOCKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TUS_NOMBRE,
                        TUS_DESCRIPCION};
                rowTIPOS_UBICACIONES_STOCKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTIPOS_UBICACIONES_STOCKRow);
                return rowTIPOS_UBICACIONES_STOCKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UBICACIONES_STOCKRow FindByTUS_CODIGO(decimal TUS_CODIGO) {
                return ((TIPOS_UBICACIONES_STOCKRow)(this.Rows.Find(new object[] {
                            TUS_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TIPOS_UBICACIONES_STOCKDataTable cln = ((TIPOS_UBICACIONES_STOCKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TIPOS_UBICACIONES_STOCKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTUS_CODIGO = base.Columns["TUS_CODIGO"];
                this.columnTUS_NOMBRE = base.Columns["TUS_NOMBRE"];
                this.columnTUS_DESCRIPCION = base.Columns["TUS_DESCRIPCION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTUS_CODIGO = new global::System.Data.DataColumn("TUS_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUS_CODIGO);
                this.columnTUS_NOMBRE = new global::System.Data.DataColumn("TUS_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUS_NOMBRE);
                this.columnTUS_DESCRIPCION = new global::System.Data.DataColumn("TUS_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUS_DESCRIPCION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTUS_CODIGO}, true));
                this.columnTUS_CODIGO.AutoIncrement = true;
                this.columnTUS_CODIGO.AutoIncrementSeed = -1;
                this.columnTUS_CODIGO.AutoIncrementStep = -1;
                this.columnTUS_CODIGO.AllowDBNull = false;
                this.columnTUS_CODIGO.Unique = true;
                this.columnTUS_NOMBRE.MaxLength = 80;
                this.columnTUS_DESCRIPCION.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UBICACIONES_STOCKRow NewTIPOS_UBICACIONES_STOCKRow() {
                return ((TIPOS_UBICACIONES_STOCKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TIPOS_UBICACIONES_STOCKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TIPOS_UBICACIONES_STOCKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TIPOS_UBICACIONES_STOCKRowChanged != null)) {
                    this.TIPOS_UBICACIONES_STOCKRowChanged(this, new TIPOS_UBICACIONES_STOCKRowChangeEvent(((TIPOS_UBICACIONES_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TIPOS_UBICACIONES_STOCKRowChanging != null)) {
                    this.TIPOS_UBICACIONES_STOCKRowChanging(this, new TIPOS_UBICACIONES_STOCKRowChangeEvent(((TIPOS_UBICACIONES_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TIPOS_UBICACIONES_STOCKRowDeleted != null)) {
                    this.TIPOS_UBICACIONES_STOCKRowDeleted(this, new TIPOS_UBICACIONES_STOCKRowChangeEvent(((TIPOS_UBICACIONES_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TIPOS_UBICACIONES_STOCKRowDeleting != null)) {
                    this.TIPOS_UBICACIONES_STOCKRowDeleting(this, new TIPOS_UBICACIONES_STOCKRowChangeEvent(((TIPOS_UBICACIONES_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTIPOS_UBICACIONES_STOCKRow(TIPOS_UBICACIONES_STOCKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHojaRuta ds = new dsHojaRuta();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TIPOS_UBICACIONES_STOCKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UNIDADES_MEDIDADataTable : global::System.Data.TypedTableBase<UNIDADES_MEDIDARow> {
            
            private global::System.Data.DataColumn columnUMED_CODIGO;
            
            private global::System.Data.DataColumn columnTUMED_CODIGO;
            
            private global::System.Data.DataColumn columnUMED_NOMBRE;
            
            private global::System.Data.DataColumn columnUMED_ABREVIATURA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDADataTable() {
                this.TableName = "UNIDADES_MEDIDA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UNIDADES_MEDIDADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UNIDADES_MEDIDADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_CODIGOColumn {
                get {
                    return this.columnUMED_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUMED_CODIGOColumn {
                get {
                    return this.columnTUMED_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_NOMBREColumn {
                get {
                    return this.columnUMED_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_ABREVIATURAColumn {
                get {
                    return this.columnUMED_ABREVIATURA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow this[int index] {
                get {
                    return ((UNIDADES_MEDIDARow)(this.Rows[index]));
                }
            }
            
            public event UNIDADES_MEDIDARowChangeEventHandler UNIDADES_MEDIDARowChanging;
            
            public event UNIDADES_MEDIDARowChangeEventHandler UNIDADES_MEDIDARowChanged;
            
            public event UNIDADES_MEDIDARowChangeEventHandler UNIDADES_MEDIDARowDeleting;
            
            public event UNIDADES_MEDIDARowChangeEventHandler UNIDADES_MEDIDARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUNIDADES_MEDIDARow(UNIDADES_MEDIDARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow AddUNIDADES_MEDIDARow(TIPOS_UNIDADES_MEDIDARow parentTIPOS_UNIDADES_MEDIDARowByunidadMedida_tipoUnidadMedida_fk, string UMED_NOMBRE, string UMED_ABREVIATURA) {
                UNIDADES_MEDIDARow rowUNIDADES_MEDIDARow = ((UNIDADES_MEDIDARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        UMED_NOMBRE,
                        UMED_ABREVIATURA};
                if ((parentTIPOS_UNIDADES_MEDIDARowByunidadMedida_tipoUnidadMedida_fk != null)) {
                    columnValuesArray[1] = parentTIPOS_UNIDADES_MEDIDARowByunidadMedida_tipoUnidadMedida_fk[0];
                }
                rowUNIDADES_MEDIDARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUNIDADES_MEDIDARow);
                return rowUNIDADES_MEDIDARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow FindByUMED_CODIGO(decimal UMED_CODIGO) {
                return ((UNIDADES_MEDIDARow)(this.Rows.Find(new object[] {
                            UMED_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UNIDADES_MEDIDADataTable cln = ((UNIDADES_MEDIDADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UNIDADES_MEDIDADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUMED_CODIGO = base.Columns["UMED_CODIGO"];
                this.columnTUMED_CODIGO = base.Columns["TUMED_CODIGO"];
                this.columnUMED_NOMBRE = base.Columns["UMED_NOMBRE"];
                this.columnUMED_ABREVIATURA = base.Columns["UMED_ABREVIATURA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUMED_CODIGO = new global::System.Data.DataColumn("UMED_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_CODIGO);
                this.columnTUMED_CODIGO = new global::System.Data.DataColumn("TUMED_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUMED_CODIGO);
                this.columnUMED_NOMBRE = new global::System.Data.DataColumn("UMED_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_NOMBRE);
                this.columnUMED_ABREVIATURA = new global::System.Data.DataColumn("UMED_ABREVIATURA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_ABREVIATURA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUMED_CODIGO}, true));
                this.columnUMED_CODIGO.AutoIncrement = true;
                this.columnUMED_CODIGO.AutoIncrementSeed = -1;
                this.columnUMED_CODIGO.AutoIncrementStep = -1;
                this.columnUMED_CODIGO.AllowDBNull = false;
                this.columnUMED_CODIGO.Unique = true;
                this.columnUMED_NOMBRE.MaxLength = 80;
                this.columnUMED_ABREVIATURA.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow NewUNIDADES_MEDIDARow() {
                return ((UNIDADES_MEDIDARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UNIDADES_MEDIDARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UNIDADES_MEDIDARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UNIDADES_MEDIDARowChanged != null)) {
                    this.UNIDADES_MEDIDARowChanged(this, new UNIDADES_MEDIDARowChangeEvent(((UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UNIDADES_MEDIDARowChanging != null)) {
                    this.UNIDADES_MEDIDARowChanging(this, new UNIDADES_MEDIDARowChangeEvent(((UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UNIDADES_MEDIDARowDeleted != null)) {
                    this.UNIDADES_MEDIDARowDeleted(this, new UNIDADES_MEDIDARowChangeEvent(((UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UNIDADES_MEDIDARowDeleting != null)) {
                    this.UNIDADES_MEDIDARowDeleting(this, new UNIDADES_MEDIDARowChangeEvent(((UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUNIDADES_MEDIDARow(UNIDADES_MEDIDARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHojaRuta ds = new dsHojaRuta();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UNIDADES_MEDIDADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TIPOS_UNIDADES_MEDIDADataTable : global::System.Data.TypedTableBase<TIPOS_UNIDADES_MEDIDARow> {
            
            private global::System.Data.DataColumn columnTUMED_CODIGO;
            
            private global::System.Data.DataColumn columnTUMED_NOMBRE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UNIDADES_MEDIDADataTable() {
                this.TableName = "TIPOS_UNIDADES_MEDIDA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TIPOS_UNIDADES_MEDIDADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TIPOS_UNIDADES_MEDIDADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUMED_CODIGOColumn {
                get {
                    return this.columnTUMED_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUMED_NOMBREColumn {
                get {
                    return this.columnTUMED_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UNIDADES_MEDIDARow this[int index] {
                get {
                    return ((TIPOS_UNIDADES_MEDIDARow)(this.Rows[index]));
                }
            }
            
            public event TIPOS_UNIDADES_MEDIDARowChangeEventHandler TIPOS_UNIDADES_MEDIDARowChanging;
            
            public event TIPOS_UNIDADES_MEDIDARowChangeEventHandler TIPOS_UNIDADES_MEDIDARowChanged;
            
            public event TIPOS_UNIDADES_MEDIDARowChangeEventHandler TIPOS_UNIDADES_MEDIDARowDeleting;
            
            public event TIPOS_UNIDADES_MEDIDARowChangeEventHandler TIPOS_UNIDADES_MEDIDARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTIPOS_UNIDADES_MEDIDARow(TIPOS_UNIDADES_MEDIDARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UNIDADES_MEDIDARow AddTIPOS_UNIDADES_MEDIDARow(string TUMED_NOMBRE) {
                TIPOS_UNIDADES_MEDIDARow rowTIPOS_UNIDADES_MEDIDARow = ((TIPOS_UNIDADES_MEDIDARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TUMED_NOMBRE};
                rowTIPOS_UNIDADES_MEDIDARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTIPOS_UNIDADES_MEDIDARow);
                return rowTIPOS_UNIDADES_MEDIDARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UNIDADES_MEDIDARow FindByTUMED_CODIGO(decimal TUMED_CODIGO) {
                return ((TIPOS_UNIDADES_MEDIDARow)(this.Rows.Find(new object[] {
                            TUMED_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TIPOS_UNIDADES_MEDIDADataTable cln = ((TIPOS_UNIDADES_MEDIDADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TIPOS_UNIDADES_MEDIDADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTUMED_CODIGO = base.Columns["TUMED_CODIGO"];
                this.columnTUMED_NOMBRE = base.Columns["TUMED_NOMBRE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTUMED_CODIGO = new global::System.Data.DataColumn("TUMED_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUMED_CODIGO);
                this.columnTUMED_NOMBRE = new global::System.Data.DataColumn("TUMED_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUMED_NOMBRE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTUMED_CODIGO}, true));
                this.columnTUMED_CODIGO.AutoIncrement = true;
                this.columnTUMED_CODIGO.AutoIncrementSeed = -1;
                this.columnTUMED_CODIGO.AutoIncrementStep = -1;
                this.columnTUMED_CODIGO.AllowDBNull = false;
                this.columnTUMED_CODIGO.Unique = true;
                this.columnTUMED_NOMBRE.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UNIDADES_MEDIDARow NewTIPOS_UNIDADES_MEDIDARow() {
                return ((TIPOS_UNIDADES_MEDIDARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TIPOS_UNIDADES_MEDIDARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TIPOS_UNIDADES_MEDIDARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TIPOS_UNIDADES_MEDIDARowChanged != null)) {
                    this.TIPOS_UNIDADES_MEDIDARowChanged(this, new TIPOS_UNIDADES_MEDIDARowChangeEvent(((TIPOS_UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TIPOS_UNIDADES_MEDIDARowChanging != null)) {
                    this.TIPOS_UNIDADES_MEDIDARowChanging(this, new TIPOS_UNIDADES_MEDIDARowChangeEvent(((TIPOS_UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TIPOS_UNIDADES_MEDIDARowDeleted != null)) {
                    this.TIPOS_UNIDADES_MEDIDARowDeleted(this, new TIPOS_UNIDADES_MEDIDARowChangeEvent(((TIPOS_UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TIPOS_UNIDADES_MEDIDARowDeleting != null)) {
                    this.TIPOS_UNIDADES_MEDIDARowDeleting(this, new TIPOS_UNIDADES_MEDIDARowChangeEvent(((TIPOS_UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTIPOS_UNIDADES_MEDIDARow(TIPOS_UNIDADES_MEDIDARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHojaRuta ds = new dsHojaRuta();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TIPOS_UNIDADES_MEDIDADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TIPOS_CENTRO_TRABAJODataTable : global::System.Data.TypedTableBase<TIPOS_CENTRO_TRABAJORow> {
            
            private global::System.Data.DataColumn columnTC_CODIGO;
            
            private global::System.Data.DataColumn columnTC_NOMBRE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_CENTRO_TRABAJODataTable() {
                this.TableName = "TIPOS_CENTRO_TRABAJO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TIPOS_CENTRO_TRABAJODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TIPOS_CENTRO_TRABAJODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TC_CODIGOColumn {
                get {
                    return this.columnTC_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TC_NOMBREColumn {
                get {
                    return this.columnTC_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_CENTRO_TRABAJORow this[int index] {
                get {
                    return ((TIPOS_CENTRO_TRABAJORow)(this.Rows[index]));
                }
            }
            
            public event TIPOS_CENTRO_TRABAJORowChangeEventHandler TIPOS_CENTRO_TRABAJORowChanging;
            
            public event TIPOS_CENTRO_TRABAJORowChangeEventHandler TIPOS_CENTRO_TRABAJORowChanged;
            
            public event TIPOS_CENTRO_TRABAJORowChangeEventHandler TIPOS_CENTRO_TRABAJORowDeleting;
            
            public event TIPOS_CENTRO_TRABAJORowChangeEventHandler TIPOS_CENTRO_TRABAJORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTIPOS_CENTRO_TRABAJORow(TIPOS_CENTRO_TRABAJORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_CENTRO_TRABAJORow AddTIPOS_CENTRO_TRABAJORow(string TC_NOMBRE) {
                TIPOS_CENTRO_TRABAJORow rowTIPOS_CENTRO_TRABAJORow = ((TIPOS_CENTRO_TRABAJORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TC_NOMBRE};
                rowTIPOS_CENTRO_TRABAJORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTIPOS_CENTRO_TRABAJORow);
                return rowTIPOS_CENTRO_TRABAJORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_CENTRO_TRABAJORow FindByTC_CODIGO(decimal TC_CODIGO) {
                return ((TIPOS_CENTRO_TRABAJORow)(this.Rows.Find(new object[] {
                            TC_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TIPOS_CENTRO_TRABAJODataTable cln = ((TIPOS_CENTRO_TRABAJODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TIPOS_CENTRO_TRABAJODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTC_CODIGO = base.Columns["TC_CODIGO"];
                this.columnTC_NOMBRE = base.Columns["TC_NOMBRE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTC_CODIGO = new global::System.Data.DataColumn("TC_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTC_CODIGO);
                this.columnTC_NOMBRE = new global::System.Data.DataColumn("TC_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTC_NOMBRE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTC_CODIGO}, true));
                this.columnTC_CODIGO.AutoIncrement = true;
                this.columnTC_CODIGO.AutoIncrementSeed = -1;
                this.columnTC_CODIGO.AutoIncrementStep = -1;
                this.columnTC_CODIGO.AllowDBNull = false;
                this.columnTC_CODIGO.ReadOnly = true;
                this.columnTC_CODIGO.Unique = true;
                this.columnTC_NOMBRE.AllowDBNull = false;
                this.columnTC_NOMBRE.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_CENTRO_TRABAJORow NewTIPOS_CENTRO_TRABAJORow() {
                return ((TIPOS_CENTRO_TRABAJORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TIPOS_CENTRO_TRABAJORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TIPOS_CENTRO_TRABAJORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TIPOS_CENTRO_TRABAJORowChanged != null)) {
                    this.TIPOS_CENTRO_TRABAJORowChanged(this, new TIPOS_CENTRO_TRABAJORowChangeEvent(((TIPOS_CENTRO_TRABAJORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TIPOS_CENTRO_TRABAJORowChanging != null)) {
                    this.TIPOS_CENTRO_TRABAJORowChanging(this, new TIPOS_CENTRO_TRABAJORowChangeEvent(((TIPOS_CENTRO_TRABAJORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TIPOS_CENTRO_TRABAJORowDeleted != null)) {
                    this.TIPOS_CENTRO_TRABAJORowDeleted(this, new TIPOS_CENTRO_TRABAJORowChangeEvent(((TIPOS_CENTRO_TRABAJORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TIPOS_CENTRO_TRABAJORowDeleting != null)) {
                    this.TIPOS_CENTRO_TRABAJORowDeleting(this, new TIPOS_CENTRO_TRABAJORowChangeEvent(((TIPOS_CENTRO_TRABAJORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTIPOS_CENTRO_TRABAJORow(TIPOS_CENTRO_TRABAJORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHojaRuta ds = new dsHojaRuta();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TIPOS_CENTRO_TRABAJODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CENTROS_TRABAJOSDataTable : global::System.Data.TypedTableBase<CENTROS_TRABAJOSRow> {
            
            private global::System.Data.DataColumn columnCTO_CODIGO;
            
            private global::System.Data.DataColumn columnCTO_NOMBRE;
            
            private global::System.Data.DataColumn columnSEC_CODIGO;
            
            private global::System.Data.DataColumn columnCT_TIPO;
            
            private global::System.Data.DataColumn columnCTO_HORASTRABAJONORMAL;
            
            private global::System.Data.DataColumn columnCTO_HORASTRABAJOEXTENDIDO;
            
            private global::System.Data.DataColumn columnCTO_ACTIVO;
            
            private global::System.Data.DataColumn columnCTO_DESCRIPCION;
            
            private global::System.Data.DataColumn columnCTO_CAPACIDADCICLO;
            
            private global::System.Data.DataColumn columnCTO_HORASCICLO;
            
            private global::System.Data.DataColumn columnCTO_TIEMPOANTES;
            
            private global::System.Data.DataColumn columnCTO_TIEMPODESPUES;
            
            private global::System.Data.DataColumn columnCTO_EFICIENCIA;
            
            private global::System.Data.DataColumn columnCTO_COSTOHORA;
            
            private global::System.Data.DataColumn columnCTO_COSTOCICLO;
            
            private global::System.Data.DataColumn columnCTO_CAPACIDADUNIDADHORA;
            
            private global::System.Data.DataColumn columnCTO_EFICIENCIAINICIAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CENTROS_TRABAJOSDataTable() {
                this.TableName = "CENTROS_TRABAJOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CENTROS_TRABAJOSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CENTROS_TRABAJOSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTO_CODIGOColumn {
                get {
                    return this.columnCTO_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTO_NOMBREColumn {
                get {
                    return this.columnCTO_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEC_CODIGOColumn {
                get {
                    return this.columnSEC_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CT_TIPOColumn {
                get {
                    return this.columnCT_TIPO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTO_HORASTRABAJONORMALColumn {
                get {
                    return this.columnCTO_HORASTRABAJONORMAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTO_HORASTRABAJOEXTENDIDOColumn {
                get {
                    return this.columnCTO_HORASTRABAJOEXTENDIDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTO_ACTIVOColumn {
                get {
                    return this.columnCTO_ACTIVO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTO_DESCRIPCIONColumn {
                get {
                    return this.columnCTO_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTO_CAPACIDADCICLOColumn {
                get {
                    return this.columnCTO_CAPACIDADCICLO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTO_HORASCICLOColumn {
                get {
                    return this.columnCTO_HORASCICLO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTO_TIEMPOANTESColumn {
                get {
                    return this.columnCTO_TIEMPOANTES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTO_TIEMPODESPUESColumn {
                get {
                    return this.columnCTO_TIEMPODESPUES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTO_EFICIENCIAColumn {
                get {
                    return this.columnCTO_EFICIENCIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTO_COSTOHORAColumn {
                get {
                    return this.columnCTO_COSTOHORA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTO_COSTOCICLOColumn {
                get {
                    return this.columnCTO_COSTOCICLO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTO_CAPACIDADUNIDADHORAColumn {
                get {
                    return this.columnCTO_CAPACIDADUNIDADHORA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTO_EFICIENCIAINICIALColumn {
                get {
                    return this.columnCTO_EFICIENCIAINICIAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CENTROS_TRABAJOSRow this[int index] {
                get {
                    return ((CENTROS_TRABAJOSRow)(this.Rows[index]));
                }
            }
            
            public event CENTROS_TRABAJOSRowChangeEventHandler CENTROS_TRABAJOSRowChanging;
            
            public event CENTROS_TRABAJOSRowChangeEventHandler CENTROS_TRABAJOSRowChanged;
            
            public event CENTROS_TRABAJOSRowChangeEventHandler CENTROS_TRABAJOSRowDeleting;
            
            public event CENTROS_TRABAJOSRowChangeEventHandler CENTROS_TRABAJOSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCENTROS_TRABAJOSRow(CENTROS_TRABAJOSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CENTROS_TRABAJOSRow AddCENTROS_TRABAJOSRow(
                        string CTO_NOMBRE, 
                        SECTORESRow parentSECTORESRowBySECTORES_CENTROS_TRABAJOS, 
                        TIPOS_CENTRO_TRABAJORow parentTIPOS_CENTRO_TRABAJORowByFK_CENTROS_TRABAJOS_SECTORES, 
                        decimal CTO_HORASTRABAJONORMAL, 
                        decimal CTO_HORASTRABAJOEXTENDIDO, 
                        decimal CTO_ACTIVO, 
                        string CTO_DESCRIPCION, 
                        decimal CTO_CAPACIDADCICLO, 
                        decimal CTO_HORASCICLO, 
                        decimal CTO_TIEMPOANTES, 
                        decimal CTO_TIEMPODESPUES, 
                        decimal CTO_EFICIENCIA, 
                        decimal CTO_COSTOHORA, 
                        decimal CTO_COSTOCICLO, 
                        decimal CTO_CAPACIDADUNIDADHORA, 
                        decimal CTO_EFICIENCIAINICIAL) {
                CENTROS_TRABAJOSRow rowCENTROS_TRABAJOSRow = ((CENTROS_TRABAJOSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CTO_NOMBRE,
                        null,
                        null,
                        CTO_HORASTRABAJONORMAL,
                        CTO_HORASTRABAJOEXTENDIDO,
                        CTO_ACTIVO,
                        CTO_DESCRIPCION,
                        CTO_CAPACIDADCICLO,
                        CTO_HORASCICLO,
                        CTO_TIEMPOANTES,
                        CTO_TIEMPODESPUES,
                        CTO_EFICIENCIA,
                        CTO_COSTOHORA,
                        CTO_COSTOCICLO,
                        CTO_CAPACIDADUNIDADHORA,
                        CTO_EFICIENCIAINICIAL};
                if ((parentSECTORESRowBySECTORES_CENTROS_TRABAJOS != null)) {
                    columnValuesArray[2] = parentSECTORESRowBySECTORES_CENTROS_TRABAJOS[0];
                }
                if ((parentTIPOS_CENTRO_TRABAJORowByFK_CENTROS_TRABAJOS_SECTORES != null)) {
                    columnValuesArray[3] = parentTIPOS_CENTRO_TRABAJORowByFK_CENTROS_TRABAJOS_SECTORES[0];
                }
                rowCENTROS_TRABAJOSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCENTROS_TRABAJOSRow);
                return rowCENTROS_TRABAJOSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CENTROS_TRABAJOSRow FindByCTO_CODIGO(decimal CTO_CODIGO) {
                return ((CENTROS_TRABAJOSRow)(this.Rows.Find(new object[] {
                            CTO_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CENTROS_TRABAJOSDataTable cln = ((CENTROS_TRABAJOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CENTROS_TRABAJOSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCTO_CODIGO = base.Columns["CTO_CODIGO"];
                this.columnCTO_NOMBRE = base.Columns["CTO_NOMBRE"];
                this.columnSEC_CODIGO = base.Columns["SEC_CODIGO"];
                this.columnCT_TIPO = base.Columns["CT_TIPO"];
                this.columnCTO_HORASTRABAJONORMAL = base.Columns["CTO_HORASTRABAJONORMAL"];
                this.columnCTO_HORASTRABAJOEXTENDIDO = base.Columns["CTO_HORASTRABAJOEXTENDIDO"];
                this.columnCTO_ACTIVO = base.Columns["CTO_ACTIVO"];
                this.columnCTO_DESCRIPCION = base.Columns["CTO_DESCRIPCION"];
                this.columnCTO_CAPACIDADCICLO = base.Columns["CTO_CAPACIDADCICLO"];
                this.columnCTO_HORASCICLO = base.Columns["CTO_HORASCICLO"];
                this.columnCTO_TIEMPOANTES = base.Columns["CTO_TIEMPOANTES"];
                this.columnCTO_TIEMPODESPUES = base.Columns["CTO_TIEMPODESPUES"];
                this.columnCTO_EFICIENCIA = base.Columns["CTO_EFICIENCIA"];
                this.columnCTO_COSTOHORA = base.Columns["CTO_COSTOHORA"];
                this.columnCTO_COSTOCICLO = base.Columns["CTO_COSTOCICLO"];
                this.columnCTO_CAPACIDADUNIDADHORA = base.Columns["CTO_CAPACIDADUNIDADHORA"];
                this.columnCTO_EFICIENCIAINICIAL = base.Columns["CTO_EFICIENCIAINICIAL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCTO_CODIGO = new global::System.Data.DataColumn("CTO_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTO_CODIGO);
                this.columnCTO_NOMBRE = new global::System.Data.DataColumn("CTO_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTO_NOMBRE);
                this.columnSEC_CODIGO = new global::System.Data.DataColumn("SEC_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEC_CODIGO);
                this.columnCT_TIPO = new global::System.Data.DataColumn("CT_TIPO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCT_TIPO);
                this.columnCTO_HORASTRABAJONORMAL = new global::System.Data.DataColumn("CTO_HORASTRABAJONORMAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTO_HORASTRABAJONORMAL);
                this.columnCTO_HORASTRABAJOEXTENDIDO = new global::System.Data.DataColumn("CTO_HORASTRABAJOEXTENDIDO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTO_HORASTRABAJOEXTENDIDO);
                this.columnCTO_ACTIVO = new global::System.Data.DataColumn("CTO_ACTIVO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTO_ACTIVO);
                this.columnCTO_DESCRIPCION = new global::System.Data.DataColumn("CTO_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTO_DESCRIPCION);
                this.columnCTO_CAPACIDADCICLO = new global::System.Data.DataColumn("CTO_CAPACIDADCICLO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTO_CAPACIDADCICLO);
                this.columnCTO_HORASCICLO = new global::System.Data.DataColumn("CTO_HORASCICLO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTO_HORASCICLO);
                this.columnCTO_TIEMPOANTES = new global::System.Data.DataColumn("CTO_TIEMPOANTES", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTO_TIEMPOANTES);
                this.columnCTO_TIEMPODESPUES = new global::System.Data.DataColumn("CTO_TIEMPODESPUES", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTO_TIEMPODESPUES);
                this.columnCTO_EFICIENCIA = new global::System.Data.DataColumn("CTO_EFICIENCIA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTO_EFICIENCIA);
                this.columnCTO_COSTOHORA = new global::System.Data.DataColumn("CTO_COSTOHORA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTO_COSTOHORA);
                this.columnCTO_COSTOCICLO = new global::System.Data.DataColumn("CTO_COSTOCICLO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTO_COSTOCICLO);
                this.columnCTO_CAPACIDADUNIDADHORA = new global::System.Data.DataColumn("CTO_CAPACIDADUNIDADHORA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTO_CAPACIDADUNIDADHORA);
                this.columnCTO_EFICIENCIAINICIAL = new global::System.Data.DataColumn("CTO_EFICIENCIAINICIAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTO_EFICIENCIAINICIAL);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCTO_CODIGO}, true));
                this.columnCTO_CODIGO.AutoIncrement = true;
                this.columnCTO_CODIGO.AutoIncrementSeed = -1;
                this.columnCTO_CODIGO.AutoIncrementStep = -1;
                this.columnCTO_CODIGO.AllowDBNull = false;
                this.columnCTO_CODIGO.Unique = true;
                this.columnCTO_NOMBRE.MaxLength = 80;
                this.columnCT_TIPO.AllowDBNull = false;
                this.columnCTO_DESCRIPCION.MaxLength = 200;
                this.columnCTO_EFICIENCIAINICIAL.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CENTROS_TRABAJOSRow NewCENTROS_TRABAJOSRow() {
                return ((CENTROS_TRABAJOSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CENTROS_TRABAJOSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CENTROS_TRABAJOSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CENTROS_TRABAJOSRowChanged != null)) {
                    this.CENTROS_TRABAJOSRowChanged(this, new CENTROS_TRABAJOSRowChangeEvent(((CENTROS_TRABAJOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CENTROS_TRABAJOSRowChanging != null)) {
                    this.CENTROS_TRABAJOSRowChanging(this, new CENTROS_TRABAJOSRowChangeEvent(((CENTROS_TRABAJOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CENTROS_TRABAJOSRowDeleted != null)) {
                    this.CENTROS_TRABAJOSRowDeleted(this, new CENTROS_TRABAJOSRowChangeEvent(((CENTROS_TRABAJOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CENTROS_TRABAJOSRowDeleting != null)) {
                    this.CENTROS_TRABAJOSRowDeleting(this, new CENTROS_TRABAJOSRowChangeEvent(((CENTROS_TRABAJOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCENTROS_TRABAJOSRow(CENTROS_TRABAJOSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsHojaRuta ds = new dsHojaRuta();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CENTROS_TRABAJOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SECTORESRow : global::System.Data.DataRow {
            
            private SECTORESDataTable tableSECTORES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SECTORESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSECTORES = ((SECTORESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SEC_CODIGO {
                get {
                    return ((decimal)(this[this.tableSECTORES.SEC_CODIGOColumn]));
                }
                set {
                    this[this.tableSECTORES.SEC_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEC_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableSECTORES.SEC_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEC_NOMBRE\' in table \'SECTORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSECTORES.SEC_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEC_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableSECTORES.SEC_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEC_DESCRIPCION\' in table \'SECTORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSECTORES.SEC_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEC_ABREVIATURA {
                get {
                    try {
                        return ((string)(this[this.tableSECTORES.SEC_ABREVIATURAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEC_ABREVIATURA\' in table \'SECTORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSECTORES.SEC_ABREVIATURAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEC_NOMBRENull() {
                return this.IsNull(this.tableSECTORES.SEC_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEC_NOMBRENull() {
                this[this.tableSECTORES.SEC_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEC_DESCRIPCIONNull() {
                return this.IsNull(this.tableSECTORES.SEC_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEC_DESCRIPCIONNull() {
                this[this.tableSECTORES.SEC_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEC_ABREVIATURANull() {
                return this.IsNull(this.tableSECTORES.SEC_ABREVIATURAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEC_ABREVIATURANull() {
                this[this.tableSECTORES.SEC_ABREVIATURAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CENTROS_TRABAJOSRow[] GetCENTROS_TRABAJOSRows() {
                if ((this.Table.ChildRelations["SECTORES_CENTROS_TRABAJOS"] == null)) {
                    return new CENTROS_TRABAJOSRow[0];
                }
                else {
                    return ((CENTROS_TRABAJOSRow[])(base.GetChildRows(this.Table.ChildRelations["SECTORES_CENTROS_TRABAJOS"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TURNOS_TRABAJORow : global::System.Data.DataRow {
            
            private TURNOS_TRABAJODataTable tableTURNOS_TRABAJO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TURNOS_TRABAJORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTURNOS_TRABAJO = ((TURNOS_TRABAJODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TUR_CODIGO {
                get {
                    return ((decimal)(this[this.tableTURNOS_TRABAJO.TUR_CODIGOColumn]));
                }
                set {
                    this[this.tableTURNOS_TRABAJO.TUR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TUR_NOMBRE {
                get {
                    return ((string)(this[this.tableTURNOS_TRABAJO.TUR_NOMBREColumn]));
                }
                set {
                    this[this.tableTURNOS_TRABAJO.TUR_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TUR_HORAINICIO {
                get {
                    return ((decimal)(this[this.tableTURNOS_TRABAJO.TUR_HORAINICIOColumn]));
                }
                set {
                    this[this.tableTURNOS_TRABAJO.TUR_HORAINICIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TUR_HORAFIN {
                get {
                    return ((decimal)(this[this.tableTURNOS_TRABAJO.TUR_HORAFINColumn]));
                }
                set {
                    this[this.tableTURNOS_TRABAJO.TUR_HORAFINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNOSXCENTROTRABAJORow[] GetTURNOSXCENTROTRABAJORows() {
                if ((this.Table.ChildRelations["TURNOS_TRABAJO_TURNOSXCENTROTRABAJO"] == null)) {
                    return new TURNOSXCENTROTRABAJORow[0];
                }
                else {
                    return ((TURNOSXCENTROTRABAJORow[])(base.GetChildRows(this.Table.ChildRelations["TURNOS_TRABAJO_TURNOSXCENTROTRABAJO"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TURNOSXCENTROTRABAJORow : global::System.Data.DataRow {
            
            private TURNOSXCENTROTRABAJODataTable tableTURNOSXCENTROTRABAJO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TURNOSXCENTROTRABAJORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTURNOSXCENTROTRABAJO = ((TURNOSXCENTROTRABAJODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TXCT_CODIGO {
                get {
                    return ((decimal)(this[this.tableTURNOSXCENTROTRABAJO.TXCT_CODIGOColumn]));
                }
                set {
                    this[this.tableTURNOSXCENTROTRABAJO.TXCT_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TUR_CODIGO {
                get {
                    return ((decimal)(this[this.tableTURNOSXCENTROTRABAJO.TUR_CODIGOColumn]));
                }
                set {
                    this[this.tableTURNOSXCENTROTRABAJO.TUR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CTO_CODIGO {
                get {
                    return ((decimal)(this[this.tableTURNOSXCENTROTRABAJO.CTO_CODIGOColumn]));
                }
                set {
                    this[this.tableTURNOSXCENTROTRABAJO.CTO_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNOS_TRABAJORow TURNOS_TRABAJORow {
                get {
                    return ((TURNOS_TRABAJORow)(this.GetParentRow(this.Table.ParentRelations["TURNOS_TRABAJO_TURNOSXCENTROTRABAJO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["TURNOS_TRABAJO_TURNOSXCENTROTRABAJO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CENTROS_TRABAJOSRow CENTROS_TRABAJOSRow {
                get {
                    return ((CENTROS_TRABAJOSRow)(this.GetParentRow(this.Table.ParentRelations["FK_TURNOSXCENTROTRABAJO_CENTROS_TRABAJOS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TURNOSXCENTROTRABAJO_CENTROS_TRABAJOS"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OPERACIONESRow : global::System.Data.DataRow {
            
            private OPERACIONESDataTable tableOPERACIONES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OPERACIONESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOPERACIONES = ((OPERACIONESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OPR_NUMERO {
                get {
                    return ((decimal)(this[this.tableOPERACIONES.OPR_NUMEROColumn]));
                }
                set {
                    this[this.tableOPERACIONES.OPR_NUMEROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OPR_CODIGO {
                get {
                    try {
                        return ((string)(this[this.tableOPERACIONES.OPR_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPR_CODIGO\' in table \'OPERACIONES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOPERACIONES.OPR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OPR_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableOPERACIONES.OPR_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPR_NOMBRE\' in table \'OPERACIONES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOPERACIONES.OPR_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OPR_DESCRIPCION {
                get {
                    if (this.IsOPR_DESCRIPCIONNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOPERACIONES.OPR_DESCRIPCIONColumn]));
                    }
                }
                set {
                    this[this.tableOPERACIONES.OPR_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OPR_HORASREQUERIDA {
                get {
                    try {
                        return ((decimal)(this[this.tableOPERACIONES.OPR_HORASREQUERIDAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPR_HORASREQUERIDA\' in table \'OPERACIONES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOPERACIONES.OPR_HORASREQUERIDAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPR_CODIGONull() {
                return this.IsNull(this.tableOPERACIONES.OPR_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPR_CODIGONull() {
                this[this.tableOPERACIONES.OPR_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPR_NOMBRENull() {
                return this.IsNull(this.tableOPERACIONES.OPR_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPR_NOMBRENull() {
                this[this.tableOPERACIONES.OPR_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPR_DESCRIPCIONNull() {
                return this.IsNull(this.tableOPERACIONES.OPR_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPR_DESCRIPCIONNull() {
                this[this.tableOPERACIONES.OPR_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPR_HORASREQUERIDANull() {
                return this.IsNull(this.tableOPERACIONES.OPR_HORASREQUERIDAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPR_HORASREQUERIDANull() {
                this[this.tableOPERACIONES.OPR_HORASREQUERIDAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_HOJARUTARow[] GetDETALLE_HOJARUTARows() {
                if ((this.Table.ChildRelations["FK_DETALLE_HOJARUTA_OPERACIONES"] == null)) {
                    return new DETALLE_HOJARUTARow[0];
                }
                else {
                    return ((DETALLE_HOJARUTARow[])(base.GetChildRows(this.Table.ChildRelations["FK_DETALLE_HOJARUTA_OPERACIONES"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DETALLE_HOJARUTARow : global::System.Data.DataRow {
            
            private DETALLE_HOJARUTADataTable tableDETALLE_HOJARUTA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DETALLE_HOJARUTARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDETALLE_HOJARUTA = ((DETALLE_HOJARUTADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DHR_CODIGO {
                get {
                    return ((decimal)(this[this.tableDETALLE_HOJARUTA.DHR_CODIGOColumn]));
                }
                set {
                    this[this.tableDETALLE_HOJARUTA.DHR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CTO_CODIGO {
                get {
                    return ((decimal)(this[this.tableDETALLE_HOJARUTA.CTO_CODIGOColumn]));
                }
                set {
                    this[this.tableDETALLE_HOJARUTA.CTO_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HR_CODIGO {
                get {
                    return ((decimal)(this[this.tableDETALLE_HOJARUTA.HR_CODIGOColumn]));
                }
                set {
                    this[this.tableDETALLE_HOJARUTA.HR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DHR_SECUENCIA {
                get {
                    return ((decimal)(this[this.tableDETALLE_HOJARUTA.DHR_SECUENCIAColumn]));
                }
                set {
                    this[this.tableDETALLE_HOJARUTA.DHR_SECUENCIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OPR_NUMERO {
                get {
                    return ((decimal)(this[this.tableDETALLE_HOJARUTA.OPR_NUMEROColumn]));
                }
                set {
                    this[this.tableDETALLE_HOJARUTA.OPR_NUMEROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USTCK_ORIGEN {
                get {
                    try {
                        return ((decimal)(this[this.tableDETALLE_HOJARUTA.USTCK_ORIGENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USTCK_ORIGEN\' in table \'DETALLE_HOJARUTA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE_HOJARUTA.USTCK_ORIGENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USTCK_DESTINO {
                get {
                    try {
                        return ((decimal)(this[this.tableDETALLE_HOJARUTA.USTCK_DESTINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USTCK_DESTINO\' in table \'DETALLE_HOJARUTA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE_HOJARUTA.USTCK_DESTINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPERACIONESRow OPERACIONESRow {
                get {
                    return ((OPERACIONESRow)(this.GetParentRow(this.Table.ParentRelations["FK_DETALLE_HOJARUTA_OPERACIONES"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DETALLE_HOJARUTA_OPERACIONES"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOJAS_RUTARow HOJAS_RUTARow {
                get {
                    return ((HOJAS_RUTARow)(this.GetParentRow(this.Table.ParentRelations["FK_DETALLE_HOJARUTA_HOJAS_RUTA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DETALLE_HOJARUTA_HOJAS_RUTA"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow UBICACIONES_STOCKRowByFK_DETALLE_HOJARUTA_UBICACIONES_STOCK {
                get {
                    return ((UBICACIONES_STOCKRow)(this.GetParentRow(this.Table.ParentRelations["FK_DETALLE_HOJARUTA_UBICACIONES_STOCK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DETALLE_HOJARUTA_UBICACIONES_STOCK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow UBICACIONES_STOCKRowByFK_DETALLE_HOJARUTA_UBICACIONES_STOCK1 {
                get {
                    return ((UBICACIONES_STOCKRow)(this.GetParentRow(this.Table.ParentRelations["FK_DETALLE_HOJARUTA_UBICACIONES_STOCK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DETALLE_HOJARUTA_UBICACIONES_STOCK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CENTROS_TRABAJOSRow CENTROS_TRABAJOSRow {
                get {
                    return ((CENTROS_TRABAJOSRow)(this.GetParentRow(this.Table.ParentRelations["FK_DETALLE_HOJARUTA_CENTROS_TRABAJOS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DETALLE_HOJARUTA_CENTROS_TRABAJOS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSTCK_ORIGENNull() {
                return this.IsNull(this.tableDETALLE_HOJARUTA.USTCK_ORIGENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSTCK_ORIGENNull() {
                this[this.tableDETALLE_HOJARUTA.USTCK_ORIGENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSTCK_DESTINONull() {
                return this.IsNull(this.tableDETALLE_HOJARUTA.USTCK_DESTINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSTCK_DESTINONull() {
                this[this.tableDETALLE_HOJARUTA.USTCK_DESTINOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HOJAS_RUTARow : global::System.Data.DataRow {
            
            private HOJAS_RUTADataTable tableHOJAS_RUTA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HOJAS_RUTARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHOJAS_RUTA = ((HOJAS_RUTADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HR_CODIGO {
                get {
                    return ((decimal)(this[this.tableHOJAS_RUTA.HR_CODIGOColumn]));
                }
                set {
                    this[this.tableHOJAS_RUTA.HR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HR_NOMBRE {
                get {
                    if (this.IsHR_NOMBRENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableHOJAS_RUTA.HR_NOMBREColumn]));
                    }
                }
                set {
                    this[this.tableHOJAS_RUTA.HR_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HR_DESCRIPCION {
                get {
                    if (this.IsHR_DESCRIPCIONNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableHOJAS_RUTA.HR_DESCRIPCIONColumn]));
                    }
                }
                set {
                    this[this.tableHOJAS_RUTA.HR_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HR_ACTIVO {
                get {
                    try {
                        return ((decimal)(this[this.tableHOJAS_RUTA.HR_ACTIVOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HR_ACTIVO\' in table \'HOJAS_RUTA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHOJAS_RUTA.HR_ACTIVOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HR_FECHAALTA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHOJAS_RUTA.HR_FECHAALTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HR_FECHAALTA\' in table \'HOJAS_RUTA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHOJAS_RUTA.HR_FECHAALTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USTCK_NUMERO {
                get {
                    try {
                        return ((decimal)(this[this.tableHOJAS_RUTA.USTCK_NUMEROColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USTCK_NUMERO\' in table \'HOJAS_RUTA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHOJAS_RUTA.USTCK_NUMEROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow UBICACIONES_STOCKRow {
                get {
                    return ((UBICACIONES_STOCKRow)(this.GetParentRow(this.Table.ParentRelations["FK_HOJAS_RUTA_UBICACIONES_STOCK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_HOJAS_RUTA_UBICACIONES_STOCK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHR_NOMBRENull() {
                return this.IsNull(this.tableHOJAS_RUTA.HR_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHR_NOMBRENull() {
                this[this.tableHOJAS_RUTA.HR_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHR_DESCRIPCIONNull() {
                return this.IsNull(this.tableHOJAS_RUTA.HR_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHR_DESCRIPCIONNull() {
                this[this.tableHOJAS_RUTA.HR_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHR_ACTIVONull() {
                return this.IsNull(this.tableHOJAS_RUTA.HR_ACTIVOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHR_ACTIVONull() {
                this[this.tableHOJAS_RUTA.HR_ACTIVOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHR_FECHAALTANull() {
                return this.IsNull(this.tableHOJAS_RUTA.HR_FECHAALTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHR_FECHAALTANull() {
                this[this.tableHOJAS_RUTA.HR_FECHAALTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSTCK_NUMERONull() {
                return this.IsNull(this.tableHOJAS_RUTA.USTCK_NUMEROColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSTCK_NUMERONull() {
                this[this.tableHOJAS_RUTA.USTCK_NUMEROColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_HOJARUTARow[] GetDETALLE_HOJARUTARows() {
                if ((this.Table.ChildRelations["FK_DETALLE_HOJARUTA_HOJAS_RUTA"] == null)) {
                    return new DETALLE_HOJARUTARow[0];
                }
                else {
                    return ((DETALLE_HOJARUTARow[])(base.GetChildRows(this.Table.ChildRelations["FK_DETALLE_HOJARUTA_HOJAS_RUTA"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UBICACIONES_STOCKRow : global::System.Data.DataRow {
            
            private UBICACIONES_STOCKDataTable tableUBICACIONES_STOCK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UBICACIONES_STOCKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUBICACIONES_STOCK = ((UBICACIONES_STOCKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USTCK_NUMERO {
                get {
                    return ((decimal)(this[this.tableUBICACIONES_STOCK.USTCK_NUMEROColumn]));
                }
                set {
                    this[this.tableUBICACIONES_STOCK.USTCK_NUMEROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USTCK_CODIGO {
                get {
                    if (this.IsUSTCK_CODIGONull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableUBICACIONES_STOCK.USTCK_CODIGOColumn]));
                    }
                }
                set {
                    this[this.tableUBICACIONES_STOCK.USTCK_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USTCK_NOMBRE {
                get {
                    if (this.IsUSTCK_NOMBRENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableUBICACIONES_STOCK.USTCK_NOMBREColumn]));
                    }
                }
                set {
                    this[this.tableUBICACIONES_STOCK.USTCK_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USTCK_DESCRIPCION {
                get {
                    if (this.IsUSTCK_DESCRIPCIONNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableUBICACIONES_STOCK.USTCK_DESCRIPCIONColumn]));
                    }
                }
                set {
                    this[this.tableUBICACIONES_STOCK.USTCK_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USTCK_UBICACIONFISICA {
                get {
                    try {
                        return ((string)(this[this.tableUBICACIONES_STOCK.USTCK_UBICACIONFISICAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USTCK_UBICACIONFISICA\' in table \'UBICACIONES_STOCK\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableUBICACIONES_STOCK.USTCK_UBICACIONFISICAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USTCK_CANTIDADREAL {
                get {
                    return ((decimal)(this[this.tableUBICACIONES_STOCK.USTCK_CANTIDADREALColumn]));
                }
                set {
                    this[this.tableUBICACIONES_STOCK.USTCK_CANTIDADREALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UMED_CODIGO {
                get {
                    return ((decimal)(this[this.tableUBICACIONES_STOCK.UMED_CODIGOColumn]));
                }
                set {
                    this[this.tableUBICACIONES_STOCK.UMED_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USTCK_PADRE {
                get {
                    try {
                        return ((decimal)(this[this.tableUBICACIONES_STOCK.USTCK_PADREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USTCK_PADRE\' in table \'UBICACIONES_STOCK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUBICACIONES_STOCK.USTCK_PADREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USTCK_ACTIVO {
                get {
                    return ((decimal)(this[this.tableUBICACIONES_STOCK.USTCK_ACTIVOColumn]));
                }
                set {
                    this[this.tableUBICACIONES_STOCK.USTCK_ACTIVOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TUS_CODIGO {
                get {
                    return ((decimal)(this[this.tableUBICACIONES_STOCK.TUS_CODIGOColumn]));
                }
                set {
                    this[this.tableUBICACIONES_STOCK.TUS_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CON_CODIGO {
                get {
                    return ((decimal)(this[this.tableUBICACIONES_STOCK.CON_CODIGOColumn]));
                }
                set {
                    this[this.tableUBICACIONES_STOCK.CON_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow UBICACIONES_STOCKRowParent {
                get {
                    return ((UBICACIONES_STOCKRow)(this.GetParentRow(this.Table.ParentRelations["FK_UBICACIONES_STOCK_UBICACION_STOCK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_UBICACIONES_STOCK_UBICACION_STOCK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONTENIDO_UBICACION_STOCKRow CONTENIDO_UBICACION_STOCKRow {
                get {
                    return ((CONTENIDO_UBICACION_STOCKRow)(this.GetParentRow(this.Table.ParentRelations["FK_UBICACIONES_STOCK_CONTENIDO_UBICACION_STOCK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_UBICACIONES_STOCK_CONTENIDO_UBICACION_STOCK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UBICACIONES_STOCKRow TIPOS_UBICACIONES_STOCKRow {
                get {
                    return ((TIPOS_UBICACIONES_STOCKRow)(this.GetParentRow(this.Table.ParentRelations["FK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow UNIDADES_MEDIDARow {
                get {
                    return ((UNIDADES_MEDIDARow)(this.GetParentRow(this.Table.ParentRelations["FK_UBICACIONES_STOCK_UBICACION_STOCK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_UBICACIONES_STOCK_UBICACION_STOCK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSTCK_CODIGONull() {
                return this.IsNull(this.tableUBICACIONES_STOCK.USTCK_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSTCK_CODIGONull() {
                this[this.tableUBICACIONES_STOCK.USTCK_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSTCK_NOMBRENull() {
                return this.IsNull(this.tableUBICACIONES_STOCK.USTCK_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSTCK_NOMBRENull() {
                this[this.tableUBICACIONES_STOCK.USTCK_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSTCK_DESCRIPCIONNull() {
                return this.IsNull(this.tableUBICACIONES_STOCK.USTCK_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSTCK_DESCRIPCIONNull() {
                this[this.tableUBICACIONES_STOCK.USTCK_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSTCK_UBICACIONFISICANull() {
                return this.IsNull(this.tableUBICACIONES_STOCK.USTCK_UBICACIONFISICAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSTCK_UBICACIONFISICANull() {
                this[this.tableUBICACIONES_STOCK.USTCK_UBICACIONFISICAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSTCK_PADRENull() {
                return this.IsNull(this.tableUBICACIONES_STOCK.USTCK_PADREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSTCK_PADRENull() {
                this[this.tableUBICACIONES_STOCK.USTCK_PADREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow[] GetUBICACIONES_STOCKRows() {
                if ((this.Table.ChildRelations["FK_UBICACIONES_STOCK_UBICACION_STOCK"] == null)) {
                    return new UBICACIONES_STOCKRow[0];
                }
                else {
                    return ((UBICACIONES_STOCKRow[])(base.GetChildRows(this.Table.ChildRelations["FK_UBICACIONES_STOCK_UBICACION_STOCK"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_HOJARUTARow[] GetDETALLE_HOJARUTARowsByFK_DETALLE_HOJARUTA_UBICACIONES_STOCK() {
                if ((this.Table.ChildRelations["FK_DETALLE_HOJARUTA_UBICACIONES_STOCK"] == null)) {
                    return new DETALLE_HOJARUTARow[0];
                }
                else {
                    return ((DETALLE_HOJARUTARow[])(base.GetChildRows(this.Table.ChildRelations["FK_DETALLE_HOJARUTA_UBICACIONES_STOCK"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_HOJARUTARow[] GetDETALLE_HOJARUTARowsByFK_DETALLE_HOJARUTA_UBICACIONES_STOCK1() {
                if ((this.Table.ChildRelations["FK_DETALLE_HOJARUTA_UBICACIONES_STOCK1"] == null)) {
                    return new DETALLE_HOJARUTARow[0];
                }
                else {
                    return ((DETALLE_HOJARUTARow[])(base.GetChildRows(this.Table.ChildRelations["FK_DETALLE_HOJARUTA_UBICACIONES_STOCK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOJAS_RUTARow[] GetHOJAS_RUTARows() {
                if ((this.Table.ChildRelations["FK_HOJAS_RUTA_UBICACIONES_STOCK"] == null)) {
                    return new HOJAS_RUTARow[0];
                }
                else {
                    return ((HOJAS_RUTARow[])(base.GetChildRows(this.Table.ChildRelations["FK_HOJAS_RUTA_UBICACIONES_STOCK"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CONTENIDO_UBICACION_STOCKRow : global::System.Data.DataRow {
            
            private CONTENIDO_UBICACION_STOCKDataTable tableCONTENIDO_UBICACION_STOCK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CONTENIDO_UBICACION_STOCKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCONTENIDO_UBICACION_STOCK = ((CONTENIDO_UBICACION_STOCKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CON_CODIGO {
                get {
                    return ((decimal)(this[this.tableCONTENIDO_UBICACION_STOCK.CON_CODIGOColumn]));
                }
                set {
                    this[this.tableCONTENIDO_UBICACION_STOCK.CON_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CON_NOMBRE {
                get {
                    if (this.IsCON_NOMBRENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCONTENIDO_UBICACION_STOCK.CON_NOMBREColumn]));
                    }
                }
                set {
                    this[this.tableCONTENIDO_UBICACION_STOCK.CON_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CON_DESCRIPCION {
                get {
                    if (this.IsCON_DESCRIPCIONNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCONTENIDO_UBICACION_STOCK.CON_DESCRIPCIONColumn]));
                    }
                }
                set {
                    this[this.tableCONTENIDO_UBICACION_STOCK.CON_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCON_NOMBRENull() {
                return this.IsNull(this.tableCONTENIDO_UBICACION_STOCK.CON_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCON_NOMBRENull() {
                this[this.tableCONTENIDO_UBICACION_STOCK.CON_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCON_DESCRIPCIONNull() {
                return this.IsNull(this.tableCONTENIDO_UBICACION_STOCK.CON_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCON_DESCRIPCIONNull() {
                this[this.tableCONTENIDO_UBICACION_STOCK.CON_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow[] GetUBICACIONES_STOCKRows() {
                if ((this.Table.ChildRelations["FK_UBICACIONES_STOCK_CONTENIDO_UBICACION_STOCK"] == null)) {
                    return new UBICACIONES_STOCKRow[0];
                }
                else {
                    return ((UBICACIONES_STOCKRow[])(base.GetChildRows(this.Table.ChildRelations["FK_UBICACIONES_STOCK_CONTENIDO_UBICACION_STOCK"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TIPOS_UBICACIONES_STOCKRow : global::System.Data.DataRow {
            
            private TIPOS_UBICACIONES_STOCKDataTable tableTIPOS_UBICACIONES_STOCK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TIPOS_UBICACIONES_STOCKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTIPOS_UBICACIONES_STOCK = ((TIPOS_UBICACIONES_STOCKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TUS_CODIGO {
                get {
                    return ((decimal)(this[this.tableTIPOS_UBICACIONES_STOCK.TUS_CODIGOColumn]));
                }
                set {
                    this[this.tableTIPOS_UBICACIONES_STOCK.TUS_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TUS_NOMBRE {
                get {
                    if (this.IsTUS_NOMBRENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTIPOS_UBICACIONES_STOCK.TUS_NOMBREColumn]));
                    }
                }
                set {
                    this[this.tableTIPOS_UBICACIONES_STOCK.TUS_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TUS_DESCRIPCION {
                get {
                    if (this.IsTUS_DESCRIPCIONNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTIPOS_UBICACIONES_STOCK.TUS_DESCRIPCIONColumn]));
                    }
                }
                set {
                    this[this.tableTIPOS_UBICACIONES_STOCK.TUS_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTUS_NOMBRENull() {
                return this.IsNull(this.tableTIPOS_UBICACIONES_STOCK.TUS_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTUS_NOMBRENull() {
                this[this.tableTIPOS_UBICACIONES_STOCK.TUS_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTUS_DESCRIPCIONNull() {
                return this.IsNull(this.tableTIPOS_UBICACIONES_STOCK.TUS_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTUS_DESCRIPCIONNull() {
                this[this.tableTIPOS_UBICACIONES_STOCK.TUS_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow[] GetUBICACIONES_STOCKRows() {
                if ((this.Table.ChildRelations["FK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK"] == null)) {
                    return new UBICACIONES_STOCKRow[0];
                }
                else {
                    return ((UBICACIONES_STOCKRow[])(base.GetChildRows(this.Table.ChildRelations["FK_UBICACIONES_STOCK_TIPOS_UBICACIONES_STOCK"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UNIDADES_MEDIDARow : global::System.Data.DataRow {
            
            private UNIDADES_MEDIDADataTable tableUNIDADES_MEDIDA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UNIDADES_MEDIDARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUNIDADES_MEDIDA = ((UNIDADES_MEDIDADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UMED_CODIGO {
                get {
                    return ((decimal)(this[this.tableUNIDADES_MEDIDA.UMED_CODIGOColumn]));
                }
                set {
                    this[this.tableUNIDADES_MEDIDA.UMED_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TUMED_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableUNIDADES_MEDIDA.TUMED_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TUMED_CODIGO\' in table \'UNIDADES_MEDIDA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUNIDADES_MEDIDA.TUMED_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UMED_NOMBRE {
                get {
                    if (this.IsUMED_NOMBRENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableUNIDADES_MEDIDA.UMED_NOMBREColumn]));
                    }
                }
                set {
                    this[this.tableUNIDADES_MEDIDA.UMED_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UMED_ABREVIATURA {
                get {
                    if (this.IsUMED_ABREVIATURANull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableUNIDADES_MEDIDA.UMED_ABREVIATURAColumn]));
                    }
                }
                set {
                    this[this.tableUNIDADES_MEDIDA.UMED_ABREVIATURAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UNIDADES_MEDIDARow TIPOS_UNIDADES_MEDIDARow {
                get {
                    return ((TIPOS_UNIDADES_MEDIDARow)(this.GetParentRow(this.Table.ParentRelations["unidadMedida_tipoUnidadMedida_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["unidadMedida_tipoUnidadMedida_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTUMED_CODIGONull() {
                return this.IsNull(this.tableUNIDADES_MEDIDA.TUMED_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTUMED_CODIGONull() {
                this[this.tableUNIDADES_MEDIDA.TUMED_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUMED_NOMBRENull() {
                return this.IsNull(this.tableUNIDADES_MEDIDA.UMED_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUMED_NOMBRENull() {
                this[this.tableUNIDADES_MEDIDA.UMED_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUMED_ABREVIATURANull() {
                return this.IsNull(this.tableUNIDADES_MEDIDA.UMED_ABREVIATURAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUMED_ABREVIATURANull() {
                this[this.tableUNIDADES_MEDIDA.UMED_ABREVIATURAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow[] GetUBICACIONES_STOCKRows() {
                if ((this.Table.ChildRelations["FK_UBICACIONES_STOCK_UBICACION_STOCK1"] == null)) {
                    return new UBICACIONES_STOCKRow[0];
                }
                else {
                    return ((UBICACIONES_STOCKRow[])(base.GetChildRows(this.Table.ChildRelations["FK_UBICACIONES_STOCK_UBICACION_STOCK1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TIPOS_UNIDADES_MEDIDARow : global::System.Data.DataRow {
            
            private TIPOS_UNIDADES_MEDIDADataTable tableTIPOS_UNIDADES_MEDIDA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TIPOS_UNIDADES_MEDIDARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTIPOS_UNIDADES_MEDIDA = ((TIPOS_UNIDADES_MEDIDADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TUMED_CODIGO {
                get {
                    return ((decimal)(this[this.tableTIPOS_UNIDADES_MEDIDA.TUMED_CODIGOColumn]));
                }
                set {
                    this[this.tableTIPOS_UNIDADES_MEDIDA.TUMED_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TUMED_NOMBRE {
                get {
                    if (this.IsTUMED_NOMBRENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableTIPOS_UNIDADES_MEDIDA.TUMED_NOMBREColumn]));
                    }
                }
                set {
                    this[this.tableTIPOS_UNIDADES_MEDIDA.TUMED_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTUMED_NOMBRENull() {
                return this.IsNull(this.tableTIPOS_UNIDADES_MEDIDA.TUMED_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTUMED_NOMBRENull() {
                this[this.tableTIPOS_UNIDADES_MEDIDA.TUMED_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow[] GetUNIDADES_MEDIDARows() {
                if ((this.Table.ChildRelations["unidadMedida_tipoUnidadMedida_fk"] == null)) {
                    return new UNIDADES_MEDIDARow[0];
                }
                else {
                    return ((UNIDADES_MEDIDARow[])(base.GetChildRows(this.Table.ChildRelations["unidadMedida_tipoUnidadMedida_fk"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TIPOS_CENTRO_TRABAJORow : global::System.Data.DataRow {
            
            private TIPOS_CENTRO_TRABAJODataTable tableTIPOS_CENTRO_TRABAJO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TIPOS_CENTRO_TRABAJORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTIPOS_CENTRO_TRABAJO = ((TIPOS_CENTRO_TRABAJODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TC_CODIGO {
                get {
                    return ((decimal)(this[this.tableTIPOS_CENTRO_TRABAJO.TC_CODIGOColumn]));
                }
                set {
                    this[this.tableTIPOS_CENTRO_TRABAJO.TC_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TC_NOMBRE {
                get {
                    return ((string)(this[this.tableTIPOS_CENTRO_TRABAJO.TC_NOMBREColumn]));
                }
                set {
                    this[this.tableTIPOS_CENTRO_TRABAJO.TC_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CENTROS_TRABAJOSRow[] GetCENTROS_TRABAJOSRows() {
                if ((this.Table.ChildRelations["FK_CENTROS_TRABAJOS_SECTORES"] == null)) {
                    return new CENTROS_TRABAJOSRow[0];
                }
                else {
                    return ((CENTROS_TRABAJOSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CENTROS_TRABAJOS_SECTORES"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CENTROS_TRABAJOSRow : global::System.Data.DataRow {
            
            private CENTROS_TRABAJOSDataTable tableCENTROS_TRABAJOS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CENTROS_TRABAJOSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCENTROS_TRABAJOS = ((CENTROS_TRABAJOSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CTO_CODIGO {
                get {
                    return ((decimal)(this[this.tableCENTROS_TRABAJOS.CTO_CODIGOColumn]));
                }
                set {
                    this[this.tableCENTROS_TRABAJOS.CTO_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CTO_NOMBRE {
                get {
                    if (this.IsCTO_NOMBRENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCENTROS_TRABAJOS.CTO_NOMBREColumn]));
                    }
                }
                set {
                    this[this.tableCENTROS_TRABAJOS.CTO_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SEC_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableCENTROS_TRABAJOS.SEC_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEC_CODIGO\' in table \'CENTROS_TRABAJOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCENTROS_TRABAJOS.SEC_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CT_TIPO {
                get {
                    return ((decimal)(this[this.tableCENTROS_TRABAJOS.CT_TIPOColumn]));
                }
                set {
                    this[this.tableCENTROS_TRABAJOS.CT_TIPOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CTO_HORASTRABAJONORMAL {
                get {
                    try {
                        return ((decimal)(this[this.tableCENTROS_TRABAJOS.CTO_HORASTRABAJONORMALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTO_HORASTRABAJONORMAL\' in table \'CENTROS_TRABAJOS\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCENTROS_TRABAJOS.CTO_HORASTRABAJONORMALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CTO_HORASTRABAJOEXTENDIDO {
                get {
                    try {
                        return ((decimal)(this[this.tableCENTROS_TRABAJOS.CTO_HORASTRABAJOEXTENDIDOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTO_HORASTRABAJOEXTENDIDO\' in table \'CENTROS_TRABAJOS\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCENTROS_TRABAJOS.CTO_HORASTRABAJOEXTENDIDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CTO_ACTIVO {
                get {
                    try {
                        return ((decimal)(this[this.tableCENTROS_TRABAJOS.CTO_ACTIVOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTO_ACTIVO\' in table \'CENTROS_TRABAJOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCENTROS_TRABAJOS.CTO_ACTIVOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CTO_DESCRIPCION {
                get {
                    if (this.IsCTO_DESCRIPCIONNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCENTROS_TRABAJOS.CTO_DESCRIPCIONColumn]));
                    }
                }
                set {
                    this[this.tableCENTROS_TRABAJOS.CTO_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CTO_CAPACIDADCICLO {
                get {
                    try {
                        return ((decimal)(this[this.tableCENTROS_TRABAJOS.CTO_CAPACIDADCICLOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTO_CAPACIDADCICLO\' in table \'CENTROS_TRABAJOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCENTROS_TRABAJOS.CTO_CAPACIDADCICLOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CTO_HORASCICLO {
                get {
                    try {
                        return ((decimal)(this[this.tableCENTROS_TRABAJOS.CTO_HORASCICLOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTO_HORASCICLO\' in table \'CENTROS_TRABAJOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCENTROS_TRABAJOS.CTO_HORASCICLOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CTO_TIEMPOANTES {
                get {
                    try {
                        return ((decimal)(this[this.tableCENTROS_TRABAJOS.CTO_TIEMPOANTESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTO_TIEMPOANTES\' in table \'CENTROS_TRABAJOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCENTROS_TRABAJOS.CTO_TIEMPOANTESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CTO_TIEMPODESPUES {
                get {
                    try {
                        return ((decimal)(this[this.tableCENTROS_TRABAJOS.CTO_TIEMPODESPUESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTO_TIEMPODESPUES\' in table \'CENTROS_TRABAJOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCENTROS_TRABAJOS.CTO_TIEMPODESPUESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CTO_EFICIENCIA {
                get {
                    try {
                        return ((decimal)(this[this.tableCENTROS_TRABAJOS.CTO_EFICIENCIAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTO_EFICIENCIA\' in table \'CENTROS_TRABAJOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCENTROS_TRABAJOS.CTO_EFICIENCIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CTO_COSTOHORA {
                get {
                    try {
                        return ((decimal)(this[this.tableCENTROS_TRABAJOS.CTO_COSTOHORAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTO_COSTOHORA\' in table \'CENTROS_TRABAJOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCENTROS_TRABAJOS.CTO_COSTOHORAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CTO_COSTOCICLO {
                get {
                    try {
                        return ((decimal)(this[this.tableCENTROS_TRABAJOS.CTO_COSTOCICLOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTO_COSTOCICLO\' in table \'CENTROS_TRABAJOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCENTROS_TRABAJOS.CTO_COSTOCICLOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CTO_CAPACIDADUNIDADHORA {
                get {
                    try {
                        return ((decimal)(this[this.tableCENTROS_TRABAJOS.CTO_CAPACIDADUNIDADHORAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTO_CAPACIDADUNIDADHORA\' in table \'CENTROS_TRABAJOS\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCENTROS_TRABAJOS.CTO_CAPACIDADUNIDADHORAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CTO_EFICIENCIAINICIAL {
                get {
                    return ((decimal)(this[this.tableCENTROS_TRABAJOS.CTO_EFICIENCIAINICIALColumn]));
                }
                set {
                    this[this.tableCENTROS_TRABAJOS.CTO_EFICIENCIAINICIALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_CENTRO_TRABAJORow TIPOS_CENTRO_TRABAJORow {
                get {
                    return ((TIPOS_CENTRO_TRABAJORow)(this.GetParentRow(this.Table.ParentRelations["FK_CENTROS_TRABAJOS_SECTORES"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CENTROS_TRABAJOS_SECTORES"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SECTORESRow SECTORESRow {
                get {
                    return ((SECTORESRow)(this.GetParentRow(this.Table.ParentRelations["SECTORES_CENTROS_TRABAJOS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SECTORES_CENTROS_TRABAJOS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTO_NOMBRENull() {
                return this.IsNull(this.tableCENTROS_TRABAJOS.CTO_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTO_NOMBRENull() {
                this[this.tableCENTROS_TRABAJOS.CTO_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEC_CODIGONull() {
                return this.IsNull(this.tableCENTROS_TRABAJOS.SEC_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEC_CODIGONull() {
                this[this.tableCENTROS_TRABAJOS.SEC_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTO_HORASTRABAJONORMALNull() {
                return this.IsNull(this.tableCENTROS_TRABAJOS.CTO_HORASTRABAJONORMALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTO_HORASTRABAJONORMALNull() {
                this[this.tableCENTROS_TRABAJOS.CTO_HORASTRABAJONORMALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTO_HORASTRABAJOEXTENDIDONull() {
                return this.IsNull(this.tableCENTROS_TRABAJOS.CTO_HORASTRABAJOEXTENDIDOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTO_HORASTRABAJOEXTENDIDONull() {
                this[this.tableCENTROS_TRABAJOS.CTO_HORASTRABAJOEXTENDIDOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTO_ACTIVONull() {
                return this.IsNull(this.tableCENTROS_TRABAJOS.CTO_ACTIVOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTO_ACTIVONull() {
                this[this.tableCENTROS_TRABAJOS.CTO_ACTIVOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTO_DESCRIPCIONNull() {
                return this.IsNull(this.tableCENTROS_TRABAJOS.CTO_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTO_DESCRIPCIONNull() {
                this[this.tableCENTROS_TRABAJOS.CTO_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTO_CAPACIDADCICLONull() {
                return this.IsNull(this.tableCENTROS_TRABAJOS.CTO_CAPACIDADCICLOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTO_CAPACIDADCICLONull() {
                this[this.tableCENTROS_TRABAJOS.CTO_CAPACIDADCICLOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTO_HORASCICLONull() {
                return this.IsNull(this.tableCENTROS_TRABAJOS.CTO_HORASCICLOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTO_HORASCICLONull() {
                this[this.tableCENTROS_TRABAJOS.CTO_HORASCICLOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTO_TIEMPOANTESNull() {
                return this.IsNull(this.tableCENTROS_TRABAJOS.CTO_TIEMPOANTESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTO_TIEMPOANTESNull() {
                this[this.tableCENTROS_TRABAJOS.CTO_TIEMPOANTESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTO_TIEMPODESPUESNull() {
                return this.IsNull(this.tableCENTROS_TRABAJOS.CTO_TIEMPODESPUESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTO_TIEMPODESPUESNull() {
                this[this.tableCENTROS_TRABAJOS.CTO_TIEMPODESPUESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTO_EFICIENCIANull() {
                return this.IsNull(this.tableCENTROS_TRABAJOS.CTO_EFICIENCIAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTO_EFICIENCIANull() {
                this[this.tableCENTROS_TRABAJOS.CTO_EFICIENCIAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTO_COSTOHORANull() {
                return this.IsNull(this.tableCENTROS_TRABAJOS.CTO_COSTOHORAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTO_COSTOHORANull() {
                this[this.tableCENTROS_TRABAJOS.CTO_COSTOHORAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTO_COSTOCICLONull() {
                return this.IsNull(this.tableCENTROS_TRABAJOS.CTO_COSTOCICLOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTO_COSTOCICLONull() {
                this[this.tableCENTROS_TRABAJOS.CTO_COSTOCICLOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTO_CAPACIDADUNIDADHORANull() {
                return this.IsNull(this.tableCENTROS_TRABAJOS.CTO_CAPACIDADUNIDADHORAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTO_CAPACIDADUNIDADHORANull() {
                this[this.tableCENTROS_TRABAJOS.CTO_CAPACIDADUNIDADHORAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNOSXCENTROTRABAJORow[] GetTURNOSXCENTROTRABAJORows() {
                if ((this.Table.ChildRelations["FK_TURNOSXCENTROTRABAJO_CENTROS_TRABAJOS"] == null)) {
                    return new TURNOSXCENTROTRABAJORow[0];
                }
                else {
                    return ((TURNOSXCENTROTRABAJORow[])(base.GetChildRows(this.Table.ChildRelations["FK_TURNOSXCENTROTRABAJO_CENTROS_TRABAJOS"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_HOJARUTARow[] GetDETALLE_HOJARUTARows() {
                if ((this.Table.ChildRelations["FK_DETALLE_HOJARUTA_CENTROS_TRABAJOS"] == null)) {
                    return new DETALLE_HOJARUTARow[0];
                }
                else {
                    return ((DETALLE_HOJARUTARow[])(base.GetChildRows(this.Table.ChildRelations["FK_DETALLE_HOJARUTA_CENTROS_TRABAJOS"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SECTORESRowChangeEvent : global::System.EventArgs {
            
            private SECTORESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SECTORESRowChangeEvent(SECTORESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SECTORESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TURNOS_TRABAJORowChangeEvent : global::System.EventArgs {
            
            private TURNOS_TRABAJORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNOS_TRABAJORowChangeEvent(TURNOS_TRABAJORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNOS_TRABAJORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TURNOSXCENTROTRABAJORowChangeEvent : global::System.EventArgs {
            
            private TURNOSXCENTROTRABAJORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNOSXCENTROTRABAJORowChangeEvent(TURNOSXCENTROTRABAJORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TURNOSXCENTROTRABAJORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OPERACIONESRowChangeEvent : global::System.EventArgs {
            
            private OPERACIONESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPERACIONESRowChangeEvent(OPERACIONESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPERACIONESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DETALLE_HOJARUTARowChangeEvent : global::System.EventArgs {
            
            private DETALLE_HOJARUTARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_HOJARUTARowChangeEvent(DETALLE_HOJARUTARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_HOJARUTARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HOJAS_RUTARowChangeEvent : global::System.EventArgs {
            
            private HOJAS_RUTARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOJAS_RUTARowChangeEvent(HOJAS_RUTARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOJAS_RUTARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UBICACIONES_STOCKRowChangeEvent : global::System.EventArgs {
            
            private UBICACIONES_STOCKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRowChangeEvent(UBICACIONES_STOCKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UBICACIONES_STOCKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CONTENIDO_UBICACION_STOCKRowChangeEvent : global::System.EventArgs {
            
            private CONTENIDO_UBICACION_STOCKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONTENIDO_UBICACION_STOCKRowChangeEvent(CONTENIDO_UBICACION_STOCKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONTENIDO_UBICACION_STOCKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TIPOS_UBICACIONES_STOCKRowChangeEvent : global::System.EventArgs {
            
            private TIPOS_UBICACIONES_STOCKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UBICACIONES_STOCKRowChangeEvent(TIPOS_UBICACIONES_STOCKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UBICACIONES_STOCKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UNIDADES_MEDIDARowChangeEvent : global::System.EventArgs {
            
            private UNIDADES_MEDIDARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARowChangeEvent(UNIDADES_MEDIDARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TIPOS_UNIDADES_MEDIDARowChangeEvent : global::System.EventArgs {
            
            private TIPOS_UNIDADES_MEDIDARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UNIDADES_MEDIDARowChangeEvent(TIPOS_UNIDADES_MEDIDARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_UNIDADES_MEDIDARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TIPOS_CENTRO_TRABAJORowChangeEvent : global::System.EventArgs {
            
            private TIPOS_CENTRO_TRABAJORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_CENTRO_TRABAJORowChangeEvent(TIPOS_CENTRO_TRABAJORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPOS_CENTRO_TRABAJORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CENTROS_TRABAJOSRowChangeEvent : global::System.EventArgs {
            
            private CENTROS_TRABAJOSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CENTROS_TRABAJOSRowChangeEvent(CENTROS_TRABAJOSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CENTROS_TRABAJOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GyCAP.Data.dsHojaRutaTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SECTORESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SECTORESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SECTORES";
            tableMapping.ColumnMappings.Add("SEC_CODIGO", "SEC_CODIGO");
            tableMapping.ColumnMappings.Add("SEC_NOMBRE", "SEC_NOMBRE");
            tableMapping.ColumnMappings.Add("SEC_DESCRIPCION", "SEC_DESCRIPCION");
            tableMapping.ColumnMappings.Add("SEC_ABREVIATURA", "SEC_ABREVIATURA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SECTORES] WHERE (([SEC_CODIGO] = @Original_SEC_CODIGO) AND ((@IsNull_SEC_NOMBRE = 1 AND [SEC_NOMBRE] IS NULL) OR ([SEC_NOMBRE] = @Original_SEC_NOMBRE)) AND ((@IsNull_SEC_DESCRIPCION = 1 AND [SEC_DESCRIPCION] IS NULL) OR ([SEC_DESCRIPCION] = @Original_SEC_DESCRIPCION)) AND ((@IsNull_SEC_ABREVIATURA = 1 AND [SEC_ABREVIATURA] IS NULL) OR ([SEC_ABREVIATURA] = @Original_SEC_ABREVIATURA)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEC_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEC_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEC_ABREVIATURA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_ABREVIATURA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_ABREVIATURA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SECTORES] ([SEC_NOMBRE], [SEC_DESCRIPCION], [SEC_ABREVIATURA]) VALUES (@SEC_NOMBRE, @SEC_DESCRIPCION, @SEC_ABREVIATURA);
SELECT SEC_CODIGO, SEC_NOMBRE, SEC_DESCRIPCION, SEC_ABREVIATURA FROM SECTORES WHERE (SEC_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_ABREVIATURA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[SECTORES] SET [SEC_NOMBRE] = @SEC_NOMBRE, [SEC_DESCRIPCION] = @SEC_DESCRIPCION, [SEC_ABREVIATURA] = @SEC_ABREVIATURA WHERE (([SEC_CODIGO] = @Original_SEC_CODIGO) AND ((@IsNull_SEC_NOMBRE = 1 AND [SEC_NOMBRE] IS NULL) OR ([SEC_NOMBRE] = @Original_SEC_NOMBRE)) AND ((@IsNull_SEC_DESCRIPCION = 1 AND [SEC_DESCRIPCION] IS NULL) OR ([SEC_DESCRIPCION] = @Original_SEC_DESCRIPCION)) AND ((@IsNull_SEC_ABREVIATURA = 1 AND [SEC_ABREVIATURA] IS NULL) OR ([SEC_ABREVIATURA] = @Original_SEC_ABREVIATURA)));
SELECT SEC_CODIGO, SEC_NOMBRE, SEC_DESCRIPCION, SEC_ABREVIATURA FROM SECTORES WHERE (SEC_CODIGO = @SEC_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_ABREVIATURA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEC_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEC_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEC_ABREVIATURA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_ABREVIATURA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_ABREVIATURA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SEC_CODIGO, SEC_NOMBRE, SEC_DESCRIPCION, SEC_ABREVIATURA FROM dbo.SECTORES" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsHojaRuta.SECTORESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsHojaRuta.SECTORESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsHojaRuta.SECTORESDataTable dataTable = new dsHojaRuta.SECTORESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta.SECTORESDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta dataSet) {
            return this.Adapter.Update(dataSet, "SECTORES");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_SEC_CODIGO, string Original_SEC_NOMBRE, string Original_SEC_DESCRIPCION, string Original_SEC_ABREVIATURA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_SEC_CODIGO));
            if ((Original_SEC_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SEC_NOMBRE));
            }
            if ((Original_SEC_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SEC_DESCRIPCION));
            }
            if ((Original_SEC_ABREVIATURA == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_SEC_ABREVIATURA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SEC_NOMBRE, string SEC_DESCRIPCION, string SEC_ABREVIATURA) {
            if ((SEC_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SEC_NOMBRE));
            }
            if ((SEC_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SEC_DESCRIPCION));
            }
            if ((SEC_ABREVIATURA == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SEC_ABREVIATURA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SEC_NOMBRE, string SEC_DESCRIPCION, string SEC_ABREVIATURA, decimal Original_SEC_CODIGO, string Original_SEC_NOMBRE, string Original_SEC_DESCRIPCION, string Original_SEC_ABREVIATURA, decimal SEC_CODIGO) {
            if ((SEC_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SEC_NOMBRE));
            }
            if ((SEC_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SEC_DESCRIPCION));
            }
            if ((SEC_ABREVIATURA == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SEC_ABREVIATURA));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_SEC_CODIGO));
            if ((Original_SEC_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_SEC_NOMBRE));
            }
            if ((Original_SEC_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_SEC_DESCRIPCION));
            }
            if ((Original_SEC_ABREVIATURA == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_SEC_ABREVIATURA));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(SEC_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SEC_NOMBRE, string SEC_DESCRIPCION, string SEC_ABREVIATURA, decimal Original_SEC_CODIGO, string Original_SEC_NOMBRE, string Original_SEC_DESCRIPCION, string Original_SEC_ABREVIATURA) {
            return this.Update(SEC_NOMBRE, SEC_DESCRIPCION, SEC_ABREVIATURA, Original_SEC_CODIGO, Original_SEC_NOMBRE, Original_SEC_DESCRIPCION, Original_SEC_ABREVIATURA, Original_SEC_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TURNOS_TRABAJOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TURNOS_TRABAJOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TURNOS_TRABAJO";
            tableMapping.ColumnMappings.Add("TUR_CODIGO", "TUR_CODIGO");
            tableMapping.ColumnMappings.Add("TUR_NOMBRE", "TUR_NOMBRE");
            tableMapping.ColumnMappings.Add("TUR_HORAINICIO", "TUR_HORAINICIO");
            tableMapping.ColumnMappings.Add("TUR_HORAFIN", "TUR_HORAFIN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TURNOS_TRABAJO] WHERE (([TUR_CODIGO] = @Original_TUR_CODIGO) A" +
                "ND ([TUR_NOMBRE] = @Original_TUR_NOMBRE) AND ([TUR_HORAINICIO] = @Original_TUR_H" +
                "ORAINICIO) AND ([TUR_HORAFIN] = @Original_TUR_HORAFIN))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUR_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUR_HORAINICIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "TUR_HORAINICIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUR_HORAFIN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "TUR_HORAFIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TURNOS_TRABAJO] ([TUR_NOMBRE], [TUR_HORAINICIO], [TUR_HORAFIN]" +
                ") VALUES (@TUR_NOMBRE, @TUR_HORAINICIO, @TUR_HORAFIN);\r\nSELECT TUR_CODIGO, TUR_N" +
                "OMBRE, TUR_HORAINICIO, TUR_HORAFIN FROM TURNOS_TRABAJO WHERE (TUR_CODIGO = SCOPE" +
                "_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUR_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUR_HORAINICIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "TUR_HORAINICIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUR_HORAFIN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "TUR_HORAFIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TURNOS_TRABAJO] SET [TUR_NOMBRE] = @TUR_NOMBRE, [TUR_HORAINICIO] = @TUR_HORAINICIO, [TUR_HORAFIN] = @TUR_HORAFIN WHERE (([TUR_CODIGO] = @Original_TUR_CODIGO) AND ([TUR_NOMBRE] = @Original_TUR_NOMBRE) AND ([TUR_HORAINICIO] = @Original_TUR_HORAINICIO) AND ([TUR_HORAFIN] = @Original_TUR_HORAFIN));
SELECT TUR_CODIGO, TUR_NOMBRE, TUR_HORAINICIO, TUR_HORAFIN FROM TURNOS_TRABAJO WHERE (TUR_CODIGO = @TUR_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUR_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUR_HORAINICIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "TUR_HORAINICIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUR_HORAFIN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "TUR_HORAFIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUR_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUR_HORAINICIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "TUR_HORAINICIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUR_HORAFIN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "TUR_HORAFIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUR_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "TUR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TUR_CODIGO, TUR_NOMBRE, TUR_HORAINICIO, TUR_HORAFIN FROM dbo.TURNOS_TRABAJ" +
                "O";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsHojaRuta.TURNOS_TRABAJODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsHojaRuta.TURNOS_TRABAJODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsHojaRuta.TURNOS_TRABAJODataTable dataTable = new dsHojaRuta.TURNOS_TRABAJODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta.TURNOS_TRABAJODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta dataSet) {
            return this.Adapter.Update(dataSet, "TURNOS_TRABAJO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_TUR_CODIGO, string Original_TUR_NOMBRE, decimal Original_TUR_HORAINICIO, decimal Original_TUR_HORAFIN) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_TUR_CODIGO));
            if ((Original_TUR_NOMBRE == null)) {
                throw new global::System.ArgumentNullException("Original_TUR_NOMBRE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TUR_NOMBRE));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_TUR_HORAINICIO));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_TUR_HORAFIN));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TUR_NOMBRE, decimal TUR_HORAINICIO, decimal TUR_HORAFIN) {
            if ((TUR_NOMBRE == null)) {
                throw new global::System.ArgumentNullException("TUR_NOMBRE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TUR_NOMBRE));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(TUR_HORAINICIO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(TUR_HORAFIN));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TUR_NOMBRE, decimal TUR_HORAINICIO, decimal TUR_HORAFIN, decimal Original_TUR_CODIGO, string Original_TUR_NOMBRE, decimal Original_TUR_HORAINICIO, decimal Original_TUR_HORAFIN, decimal TUR_CODIGO) {
            if ((TUR_NOMBRE == null)) {
                throw new global::System.ArgumentNullException("TUR_NOMBRE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TUR_NOMBRE));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(TUR_HORAINICIO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(TUR_HORAFIN));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_TUR_CODIGO));
            if ((Original_TUR_NOMBRE == null)) {
                throw new global::System.ArgumentNullException("Original_TUR_NOMBRE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_TUR_NOMBRE));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_TUR_HORAINICIO));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_TUR_HORAFIN));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(TUR_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TUR_NOMBRE, decimal TUR_HORAINICIO, decimal TUR_HORAFIN, decimal Original_TUR_CODIGO, string Original_TUR_NOMBRE, decimal Original_TUR_HORAINICIO, decimal Original_TUR_HORAFIN) {
            return this.Update(TUR_NOMBRE, TUR_HORAINICIO, TUR_HORAFIN, Original_TUR_CODIGO, Original_TUR_NOMBRE, Original_TUR_HORAINICIO, Original_TUR_HORAFIN, Original_TUR_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TURNOSXCENTROTRABAJOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TURNOSXCENTROTRABAJOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TURNOSXCENTROTRABAJO";
            tableMapping.ColumnMappings.Add("TXCT_CODIGO", "TXCT_CODIGO");
            tableMapping.ColumnMappings.Add("TUR_CODIGO", "TUR_CODIGO");
            tableMapping.ColumnMappings.Add("CTO_CODIGO", "CTO_CODIGO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TURNOSXCENTROTRABAJO] WHERE (([TXCT_CODIGO] = @Original_TXCT_C" +
                "ODIGO) AND ([TUR_CODIGO] = @Original_TUR_CODIGO) AND ([CTO_CODIGO] = @Original_C" +
                "TO_CODIGO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TXCT_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TXCT_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CTO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TURNOSXCENTROTRABAJO] ([TUR_CODIGO], [CTO_CODIGO]) VALUES (@TU" +
                "R_CODIGO, @CTO_CODIGO);\r\nSELECT TXCT_CODIGO, TUR_CODIGO, CTO_CODIGO FROM TURNOSX" +
                "CENTROTRABAJO WHERE (TXCT_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CTO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TURNOSXCENTROTRABAJO] SET [TUR_CODIGO] = @TUR_CODIGO, [CTO_CODIGO] = @CTO_CODIGO WHERE (([TXCT_CODIGO] = @Original_TXCT_CODIGO) AND ([TUR_CODIGO] = @Original_TUR_CODIGO) AND ([CTO_CODIGO] = @Original_CTO_CODIGO));
SELECT TXCT_CODIGO, TUR_CODIGO, CTO_CODIGO FROM TURNOSXCENTROTRABAJO WHERE (TXCT_CODIGO = @TXCT_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CTO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TXCT_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TXCT_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CTO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TXCT_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "TXCT_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TXCT_CODIGO, TUR_CODIGO, CTO_CODIGO FROM dbo.TURNOSXCENTROTRABAJO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsHojaRuta.TURNOSXCENTROTRABAJODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsHojaRuta.TURNOSXCENTROTRABAJODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsHojaRuta.TURNOSXCENTROTRABAJODataTable dataTable = new dsHojaRuta.TURNOSXCENTROTRABAJODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta.TURNOSXCENTROTRABAJODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta dataSet) {
            return this.Adapter.Update(dataSet, "TURNOSXCENTROTRABAJO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_TXCT_CODIGO, decimal Original_TUR_CODIGO, decimal Original_CTO_CODIGO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_TXCT_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_TUR_CODIGO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_CTO_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal TUR_CODIGO, decimal CTO_CODIGO) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(TUR_CODIGO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(CTO_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal TUR_CODIGO, decimal CTO_CODIGO, decimal Original_TXCT_CODIGO, decimal Original_TUR_CODIGO, decimal Original_CTO_CODIGO, decimal TXCT_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(TUR_CODIGO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(CTO_CODIGO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_TXCT_CODIGO));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_TUR_CODIGO));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_CTO_CODIGO));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(TXCT_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal TUR_CODIGO, decimal CTO_CODIGO, decimal Original_TXCT_CODIGO, decimal Original_TUR_CODIGO, decimal Original_CTO_CODIGO) {
            return this.Update(TUR_CODIGO, CTO_CODIGO, Original_TXCT_CODIGO, Original_TUR_CODIGO, Original_CTO_CODIGO, Original_TXCT_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OPERACIONESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OPERACIONESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OPERACIONES";
            tableMapping.ColumnMappings.Add("OPR_NUMERO", "OPR_NUMERO");
            tableMapping.ColumnMappings.Add("OPR_CODIGO", "OPR_CODIGO");
            tableMapping.ColumnMappings.Add("OPR_NOMBRE", "OPR_NOMBRE");
            tableMapping.ColumnMappings.Add("OPR_DESCRIPCION", "OPR_DESCRIPCION");
            tableMapping.ColumnMappings.Add("OPR_HORASREQUERIDA", "OPR_HORASREQUERIDA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[OPERACIONES] WHERE (([OPR_NUMERO] = @Original_OPR_NUMERO) AND ((@IsNull_OPR_CODIGO = 1 AND [OPR_CODIGO] IS NULL) OR ([OPR_CODIGO] = @Original_OPR_CODIGO)) AND ((@IsNull_OPR_NOMBRE = 1 AND [OPR_NOMBRE] IS NULL) OR ([OPR_NOMBRE] = @Original_OPR_NOMBRE)) AND ((@IsNull_OPR_DESCRIPCION = 1 AND [OPR_DESCRIPCION] IS NULL) OR ([OPR_DESCRIPCION] = @Original_OPR_DESCRIPCION)) AND ((@IsNull_OPR_HORASREQUERIDA = 1 AND [OPR_HORASREQUERIDA] IS NULL) OR ([OPR_HORASREQUERIDA] = @Original_OPR_HORASREQUERIDA)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPR_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "OPR_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPR_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPR_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPR_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPR_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPR_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPR_HORASREQUERIDA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_HORASREQUERIDA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPR_HORASREQUERIDA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "OPR_HORASREQUERIDA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[OPERACIONES] ([OPR_CODIGO], [OPR_NOMBRE], [OPR_DESCRIPCION], [OPR_HORASREQUERIDA]) VALUES (@OPR_CODIGO, @OPR_NOMBRE, @OPR_DESCRIPCION, @OPR_HORASREQUERIDA);
SELECT OPR_NUMERO, OPR_CODIGO, OPR_NOMBRE, OPR_DESCRIPCION, OPR_HORASREQUERIDA FROM OPERACIONES WHERE (OPR_NUMERO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPR_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPR_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPR_HORASREQUERIDA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "OPR_HORASREQUERIDA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[OPERACIONES] SET [OPR_CODIGO] = @OPR_CODIGO, [OPR_NOMBRE] = @OPR_NOMBRE, [OPR_DESCRIPCION] = @OPR_DESCRIPCION, [OPR_HORASREQUERIDA] = @OPR_HORASREQUERIDA WHERE (([OPR_NUMERO] = @Original_OPR_NUMERO) AND ((@IsNull_OPR_CODIGO = 1 AND [OPR_CODIGO] IS NULL) OR ([OPR_CODIGO] = @Original_OPR_CODIGO)) AND ((@IsNull_OPR_NOMBRE = 1 AND [OPR_NOMBRE] IS NULL) OR ([OPR_NOMBRE] = @Original_OPR_NOMBRE)) AND ((@IsNull_OPR_DESCRIPCION = 1 AND [OPR_DESCRIPCION] IS NULL) OR ([OPR_DESCRIPCION] = @Original_OPR_DESCRIPCION)) AND ((@IsNull_OPR_HORASREQUERIDA = 1 AND [OPR_HORASREQUERIDA] IS NULL) OR ([OPR_HORASREQUERIDA] = @Original_OPR_HORASREQUERIDA)));
SELECT OPR_NUMERO, OPR_CODIGO, OPR_NOMBRE, OPR_DESCRIPCION, OPR_HORASREQUERIDA FROM OPERACIONES WHERE (OPR_NUMERO = @OPR_NUMERO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPR_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPR_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPR_HORASREQUERIDA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "OPR_HORASREQUERIDA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPR_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "OPR_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPR_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPR_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPR_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPR_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPR_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPR_HORASREQUERIDA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPR_HORASREQUERIDA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPR_HORASREQUERIDA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "OPR_HORASREQUERIDA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPR_NUMERO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "OPR_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT OPR_NUMERO, OPR_CODIGO, OPR_NOMBRE, OPR_DESCRIPCION, OPR_HORASREQUERIDA FR" +
                "OM dbo.OPERACIONES";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsHojaRuta.OPERACIONESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsHojaRuta.OPERACIONESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsHojaRuta.OPERACIONESDataTable dataTable = new dsHojaRuta.OPERACIONESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta.OPERACIONESDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta dataSet) {
            return this.Adapter.Update(dataSet, "OPERACIONES");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_OPR_NUMERO, string Original_OPR_CODIGO, string Original_OPR_NOMBRE, string Original_OPR_DESCRIPCION, global::System.Nullable<decimal> Original_OPR_HORASREQUERIDA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_OPR_NUMERO));
            if ((Original_OPR_CODIGO == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_OPR_CODIGO));
            }
            if ((Original_OPR_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_OPR_NOMBRE));
            }
            if ((Original_OPR_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_OPR_DESCRIPCION));
            }
            if ((Original_OPR_HORASREQUERIDA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_OPR_HORASREQUERIDA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string OPR_CODIGO, string OPR_NOMBRE, string OPR_DESCRIPCION, global::System.Nullable<decimal> OPR_HORASREQUERIDA) {
            if ((OPR_CODIGO == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OPR_CODIGO));
            }
            if ((OPR_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(OPR_NOMBRE));
            }
            if ((OPR_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(OPR_DESCRIPCION));
            }
            if ((OPR_HORASREQUERIDA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(OPR_HORASREQUERIDA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string OPR_CODIGO, string OPR_NOMBRE, string OPR_DESCRIPCION, global::System.Nullable<decimal> OPR_HORASREQUERIDA, decimal Original_OPR_NUMERO, string Original_OPR_CODIGO, string Original_OPR_NOMBRE, string Original_OPR_DESCRIPCION, global::System.Nullable<decimal> Original_OPR_HORASREQUERIDA, decimal OPR_NUMERO) {
            if ((OPR_CODIGO == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OPR_CODIGO));
            }
            if ((OPR_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(OPR_NOMBRE));
            }
            if ((OPR_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(OPR_DESCRIPCION));
            }
            if ((OPR_HORASREQUERIDA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(OPR_HORASREQUERIDA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_OPR_NUMERO));
            if ((Original_OPR_CODIGO == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_OPR_CODIGO));
            }
            if ((Original_OPR_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_OPR_NOMBRE));
            }
            if ((Original_OPR_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_OPR_DESCRIPCION));
            }
            if ((Original_OPR_HORASREQUERIDA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_OPR_HORASREQUERIDA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(OPR_NUMERO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string OPR_CODIGO, string OPR_NOMBRE, string OPR_DESCRIPCION, global::System.Nullable<decimal> OPR_HORASREQUERIDA, decimal Original_OPR_NUMERO, string Original_OPR_CODIGO, string Original_OPR_NOMBRE, string Original_OPR_DESCRIPCION, global::System.Nullable<decimal> Original_OPR_HORASREQUERIDA) {
            return this.Update(OPR_CODIGO, OPR_NOMBRE, OPR_DESCRIPCION, OPR_HORASREQUERIDA, Original_OPR_NUMERO, Original_OPR_CODIGO, Original_OPR_NOMBRE, Original_OPR_DESCRIPCION, Original_OPR_HORASREQUERIDA, Original_OPR_NUMERO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DETALLE_HOJARUTATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DETALLE_HOJARUTATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DETALLE_HOJARUTA";
            tableMapping.ColumnMappings.Add("DHR_CODIGO", "DHR_CODIGO");
            tableMapping.ColumnMappings.Add("CTO_CODIGO", "CTO_CODIGO");
            tableMapping.ColumnMappings.Add("HR_CODIGO", "HR_CODIGO");
            tableMapping.ColumnMappings.Add("DHR_SECUENCIA", "DHR_SECUENCIA");
            tableMapping.ColumnMappings.Add("OPR_NUMERO", "OPR_NUMERO");
            tableMapping.ColumnMappings.Add("USTCK_ORIGEN", "USTCK_ORIGEN");
            tableMapping.ColumnMappings.Add("USTCK_DESTINO", "USTCK_DESTINO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[DETALLE_HOJARUTA] WHERE (([DHR_CODIGO] = @Original_DHR_CODIGO) AND ([CTO_CODIGO] = @Original_CTO_CODIGO) AND ([HR_CODIGO] = @Original_HR_CODIGO) AND ([DHR_SECUENCIA] = @Original_DHR_SECUENCIA) AND ([OPR_NUMERO] = @Original_OPR_NUMERO) AND ((@IsNull_USTCK_ORIGEN = 1 AND [USTCK_ORIGEN] IS NULL) OR ([USTCK_ORIGEN] = @Original_USTCK_ORIGEN)) AND ((@IsNull_USTCK_DESTINO = 1 AND [USTCK_DESTINO] IS NULL) OR ([USTCK_DESTINO] = @Original_USTCK_DESTINO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DHR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DHR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CTO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DHR_SECUENCIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 0, "DHR_SECUENCIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPR_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "OPR_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_ORIGEN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_ORIGEN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_ORIGEN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_ORIGEN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_DESTINO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_DESTINO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_DESTINO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_DESTINO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[DETALLE_HOJARUTA] ([CTO_CODIGO], [HR_CODIGO], [DHR_SECUENCIA], [OPR_NUMERO], [USTCK_ORIGEN], [USTCK_DESTINO]) VALUES (@CTO_CODIGO, @HR_CODIGO, @DHR_SECUENCIA, @OPR_NUMERO, @USTCK_ORIGEN, @USTCK_DESTINO);
SELECT DHR_CODIGO, CTO_CODIGO, HR_CODIGO, DHR_SECUENCIA, OPR_NUMERO, USTCK_ORIGEN, USTCK_DESTINO FROM DETALLE_HOJARUTA WHERE (DHR_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CTO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DHR_SECUENCIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 0, "DHR_SECUENCIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPR_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "OPR_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_ORIGEN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_ORIGEN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_DESTINO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_DESTINO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[DETALLE_HOJARUTA] SET [CTO_CODIGO] = @CTO_CODIGO, [HR_CODIGO] = @HR_CODIGO, [DHR_SECUENCIA] = @DHR_SECUENCIA, [OPR_NUMERO] = @OPR_NUMERO, [USTCK_ORIGEN] = @USTCK_ORIGEN, [USTCK_DESTINO] = @USTCK_DESTINO WHERE (([DHR_CODIGO] = @Original_DHR_CODIGO) AND ([CTO_CODIGO] = @Original_CTO_CODIGO) AND ([HR_CODIGO] = @Original_HR_CODIGO) AND ([DHR_SECUENCIA] = @Original_DHR_SECUENCIA) AND ([OPR_NUMERO] = @Original_OPR_NUMERO) AND ((@IsNull_USTCK_ORIGEN = 1 AND [USTCK_ORIGEN] IS NULL) OR ([USTCK_ORIGEN] = @Original_USTCK_ORIGEN)) AND ((@IsNull_USTCK_DESTINO = 1 AND [USTCK_DESTINO] IS NULL) OR ([USTCK_DESTINO] = @Original_USTCK_DESTINO)));
SELECT DHR_CODIGO, CTO_CODIGO, HR_CODIGO, DHR_SECUENCIA, OPR_NUMERO, USTCK_ORIGEN, USTCK_DESTINO FROM DETALLE_HOJARUTA WHERE (DHR_CODIGO = @DHR_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CTO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DHR_SECUENCIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 0, "DHR_SECUENCIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPR_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "OPR_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_ORIGEN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_ORIGEN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_DESTINO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_DESTINO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DHR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DHR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CTO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DHR_SECUENCIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 0, "DHR_SECUENCIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPR_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "OPR_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_ORIGEN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_ORIGEN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_ORIGEN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_ORIGEN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_DESTINO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_DESTINO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_DESTINO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_DESTINO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DHR_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "DHR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DHR_CODIGO, CTO_CODIGO, HR_CODIGO, DHR_SECUENCIA, OPR_NUMERO, USTCK_ORIGEN" +
                ", USTCK_DESTINO FROM dbo.DETALLE_HOJARUTA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsHojaRuta.DETALLE_HOJARUTADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsHojaRuta.DETALLE_HOJARUTADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsHojaRuta.DETALLE_HOJARUTADataTable dataTable = new dsHojaRuta.DETALLE_HOJARUTADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta.DETALLE_HOJARUTADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta dataSet) {
            return this.Adapter.Update(dataSet, "DETALLE_HOJARUTA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_DHR_CODIGO, decimal Original_CTO_CODIGO, decimal Original_HR_CODIGO, decimal Original_DHR_SECUENCIA, decimal Original_OPR_NUMERO, global::System.Nullable<decimal> Original_USTCK_ORIGEN, global::System.Nullable<decimal> Original_USTCK_DESTINO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_DHR_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_CTO_CODIGO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_HR_CODIGO));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_DHR_SECUENCIA));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_OPR_NUMERO));
            if ((Original_USTCK_ORIGEN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_USTCK_ORIGEN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_USTCK_DESTINO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_USTCK_DESTINO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal CTO_CODIGO, decimal HR_CODIGO, decimal DHR_SECUENCIA, decimal OPR_NUMERO, global::System.Nullable<decimal> USTCK_ORIGEN, global::System.Nullable<decimal> USTCK_DESTINO) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(CTO_CODIGO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(HR_CODIGO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(DHR_SECUENCIA));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(OPR_NUMERO));
            if ((USTCK_ORIGEN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(USTCK_ORIGEN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((USTCK_DESTINO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(USTCK_DESTINO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal CTO_CODIGO, decimal HR_CODIGO, decimal DHR_SECUENCIA, decimal OPR_NUMERO, global::System.Nullable<decimal> USTCK_ORIGEN, global::System.Nullable<decimal> USTCK_DESTINO, decimal Original_DHR_CODIGO, decimal Original_CTO_CODIGO, decimal Original_HR_CODIGO, decimal Original_DHR_SECUENCIA, decimal Original_OPR_NUMERO, global::System.Nullable<decimal> Original_USTCK_ORIGEN, global::System.Nullable<decimal> Original_USTCK_DESTINO, decimal DHR_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(CTO_CODIGO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(HR_CODIGO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(DHR_SECUENCIA));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(OPR_NUMERO));
            if ((USTCK_ORIGEN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(USTCK_ORIGEN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((USTCK_DESTINO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(USTCK_DESTINO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_DHR_CODIGO));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_CTO_CODIGO));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_HR_CODIGO));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_DHR_SECUENCIA));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_OPR_NUMERO));
            if ((Original_USTCK_ORIGEN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_USTCK_ORIGEN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_USTCK_DESTINO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_USTCK_DESTINO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(DHR_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal CTO_CODIGO, decimal HR_CODIGO, decimal DHR_SECUENCIA, decimal OPR_NUMERO, global::System.Nullable<decimal> USTCK_ORIGEN, global::System.Nullable<decimal> USTCK_DESTINO, decimal Original_DHR_CODIGO, decimal Original_CTO_CODIGO, decimal Original_HR_CODIGO, decimal Original_DHR_SECUENCIA, decimal Original_OPR_NUMERO, global::System.Nullable<decimal> Original_USTCK_ORIGEN, global::System.Nullable<decimal> Original_USTCK_DESTINO) {
            return this.Update(CTO_CODIGO, HR_CODIGO, DHR_SECUENCIA, OPR_NUMERO, USTCK_ORIGEN, USTCK_DESTINO, Original_DHR_CODIGO, Original_CTO_CODIGO, Original_HR_CODIGO, Original_DHR_SECUENCIA, Original_OPR_NUMERO, Original_USTCK_ORIGEN, Original_USTCK_DESTINO, Original_DHR_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HOJAS_RUTATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HOJAS_RUTATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HOJAS_RUTA";
            tableMapping.ColumnMappings.Add("HR_CODIGO", "HR_CODIGO");
            tableMapping.ColumnMappings.Add("HR_NOMBRE", "HR_NOMBRE");
            tableMapping.ColumnMappings.Add("HR_DESCRIPCION", "HR_DESCRIPCION");
            tableMapping.ColumnMappings.Add("HR_ACTIVO", "HR_ACTIVO");
            tableMapping.ColumnMappings.Add("HR_FECHAALTA", "HR_FECHAALTA");
            tableMapping.ColumnMappings.Add("USTCK_NUMERO", "USTCK_NUMERO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[HOJAS_RUTA] WHERE (([HR_CODIGO] = @Original_HR_CODIGO) AND ((@IsNull_HR_NOMBRE = 1 AND [HR_NOMBRE] IS NULL) OR ([HR_NOMBRE] = @Original_HR_NOMBRE)) AND ((@IsNull_HR_DESCRIPCION = 1 AND [HR_DESCRIPCION] IS NULL) OR ([HR_DESCRIPCION] = @Original_HR_DESCRIPCION)) AND ((@IsNull_HR_ACTIVO = 1 AND [HR_ACTIVO] IS NULL) OR ([HR_ACTIVO] = @Original_HR_ACTIVO)) AND ((@IsNull_HR_FECHAALTA = 1 AND [HR_FECHAALTA] IS NULL) OR ([HR_FECHAALTA] = @Original_HR_FECHAALTA)) AND ((@IsNull_USTCK_NUMERO = 1 AND [USTCK_NUMERO] IS NULL) OR ([USTCK_NUMERO] = @Original_USTCK_NUMERO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HR_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HR_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HR_ACTIVO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_ACTIVO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "HR_ACTIVO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HR_FECHAALTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_FECHAALTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_FECHAALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_FECHAALTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_NUMERO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_NUMERO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[HOJAS_RUTA] ([HR_NOMBRE], [HR_DESCRIPCION], [HR_ACTIVO], [HR_FECHAALTA], [USTCK_NUMERO]) VALUES (@HR_NOMBRE, @HR_DESCRIPCION, @HR_ACTIVO, @HR_FECHAALTA, @USTCK_NUMERO);
SELECT HR_CODIGO, HR_NOMBRE, HR_DESCRIPCION, HR_ACTIVO, HR_FECHAALTA, USTCK_NUMERO FROM HOJAS_RUTA WHERE (HR_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "HR_ACTIVO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_FECHAALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_FECHAALTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[HOJAS_RUTA] SET [HR_NOMBRE] = @HR_NOMBRE, [HR_DESCRIPCION] = @HR_DESCRIPCION, [HR_ACTIVO] = @HR_ACTIVO, [HR_FECHAALTA] = @HR_FECHAALTA, [USTCK_NUMERO] = @USTCK_NUMERO WHERE (([HR_CODIGO] = @Original_HR_CODIGO) AND ((@IsNull_HR_NOMBRE = 1 AND [HR_NOMBRE] IS NULL) OR ([HR_NOMBRE] = @Original_HR_NOMBRE)) AND ((@IsNull_HR_DESCRIPCION = 1 AND [HR_DESCRIPCION] IS NULL) OR ([HR_DESCRIPCION] = @Original_HR_DESCRIPCION)) AND ((@IsNull_HR_ACTIVO = 1 AND [HR_ACTIVO] IS NULL) OR ([HR_ACTIVO] = @Original_HR_ACTIVO)) AND ((@IsNull_HR_FECHAALTA = 1 AND [HR_FECHAALTA] IS NULL) OR ([HR_FECHAALTA] = @Original_HR_FECHAALTA)) AND ((@IsNull_USTCK_NUMERO = 1 AND [USTCK_NUMERO] IS NULL) OR ([USTCK_NUMERO] = @Original_USTCK_NUMERO)));
SELECT HR_CODIGO, HR_NOMBRE, HR_DESCRIPCION, HR_ACTIVO, HR_FECHAALTA, USTCK_NUMERO FROM HOJAS_RUTA WHERE (HR_CODIGO = @HR_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "HR_ACTIVO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_FECHAALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_FECHAALTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HR_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HR_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HR_ACTIVO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_ACTIVO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "HR_ACTIVO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HR_FECHAALTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_FECHAALTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HR_FECHAALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HR_FECHAALTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_NUMERO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_NUMERO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HR_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "HR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT HR_CODIGO, HR_NOMBRE, HR_DESCRIPCION, HR_ACTIVO, HR_FECHAALTA, USTCK_NUMER" +
                "O FROM dbo.HOJAS_RUTA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsHojaRuta.HOJAS_RUTADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsHojaRuta.HOJAS_RUTADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsHojaRuta.HOJAS_RUTADataTable dataTable = new dsHojaRuta.HOJAS_RUTADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta.HOJAS_RUTADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta dataSet) {
            return this.Adapter.Update(dataSet, "HOJAS_RUTA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_HR_CODIGO, string Original_HR_NOMBRE, string Original_HR_DESCRIPCION, global::System.Nullable<decimal> Original_HR_ACTIVO, global::System.Nullable<global::System.DateTime> Original_HR_FECHAALTA, global::System.Nullable<decimal> Original_USTCK_NUMERO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_HR_CODIGO));
            if ((Original_HR_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_HR_NOMBRE));
            }
            if ((Original_HR_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_HR_DESCRIPCION));
            }
            if ((Original_HR_ACTIVO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_HR_ACTIVO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_HR_FECHAALTA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_HR_FECHAALTA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_USTCK_NUMERO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_USTCK_NUMERO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string HR_NOMBRE, string HR_DESCRIPCION, global::System.Nullable<decimal> HR_ACTIVO, global::System.Nullable<global::System.DateTime> HR_FECHAALTA, global::System.Nullable<decimal> USTCK_NUMERO) {
            if ((HR_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(HR_NOMBRE));
            }
            if ((HR_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(HR_DESCRIPCION));
            }
            if ((HR_ACTIVO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(HR_ACTIVO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((HR_FECHAALTA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(HR_FECHAALTA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((USTCK_NUMERO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(USTCK_NUMERO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string HR_NOMBRE, string HR_DESCRIPCION, global::System.Nullable<decimal> HR_ACTIVO, global::System.Nullable<global::System.DateTime> HR_FECHAALTA, global::System.Nullable<decimal> USTCK_NUMERO, decimal Original_HR_CODIGO, string Original_HR_NOMBRE, string Original_HR_DESCRIPCION, global::System.Nullable<decimal> Original_HR_ACTIVO, global::System.Nullable<global::System.DateTime> Original_HR_FECHAALTA, global::System.Nullable<decimal> Original_USTCK_NUMERO, decimal HR_CODIGO) {
            if ((HR_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(HR_NOMBRE));
            }
            if ((HR_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(HR_DESCRIPCION));
            }
            if ((HR_ACTIVO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(HR_ACTIVO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((HR_FECHAALTA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(HR_FECHAALTA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((USTCK_NUMERO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(USTCK_NUMERO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_HR_CODIGO));
            if ((Original_HR_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_HR_NOMBRE));
            }
            if ((Original_HR_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_HR_DESCRIPCION));
            }
            if ((Original_HR_ACTIVO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_HR_ACTIVO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_HR_FECHAALTA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_HR_FECHAALTA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_USTCK_NUMERO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_USTCK_NUMERO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(HR_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string HR_NOMBRE, string HR_DESCRIPCION, global::System.Nullable<decimal> HR_ACTIVO, global::System.Nullable<global::System.DateTime> HR_FECHAALTA, global::System.Nullable<decimal> USTCK_NUMERO, decimal Original_HR_CODIGO, string Original_HR_NOMBRE, string Original_HR_DESCRIPCION, global::System.Nullable<decimal> Original_HR_ACTIVO, global::System.Nullable<global::System.DateTime> Original_HR_FECHAALTA, global::System.Nullable<decimal> Original_USTCK_NUMERO) {
            return this.Update(HR_NOMBRE, HR_DESCRIPCION, HR_ACTIVO, HR_FECHAALTA, USTCK_NUMERO, Original_HR_CODIGO, Original_HR_NOMBRE, Original_HR_DESCRIPCION, Original_HR_ACTIVO, Original_HR_FECHAALTA, Original_USTCK_NUMERO, Original_HR_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UBICACIONES_STOCKTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UBICACIONES_STOCKTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UBICACIONES_STOCK";
            tableMapping.ColumnMappings.Add("USTCK_NUMERO", "USTCK_NUMERO");
            tableMapping.ColumnMappings.Add("USTCK_CODIGO", "USTCK_CODIGO");
            tableMapping.ColumnMappings.Add("USTCK_NOMBRE", "USTCK_NOMBRE");
            tableMapping.ColumnMappings.Add("USTCK_DESCRIPCION", "USTCK_DESCRIPCION");
            tableMapping.ColumnMappings.Add("USTCK_UBICACIONFISICA", "USTCK_UBICACIONFISICA");
            tableMapping.ColumnMappings.Add("USTCK_CANTIDADREAL", "USTCK_CANTIDADREAL");
            tableMapping.ColumnMappings.Add("UMED_CODIGO", "UMED_CODIGO");
            tableMapping.ColumnMappings.Add("USTCK_PADRE", "USTCK_PADRE");
            tableMapping.ColumnMappings.Add("USTCK_ACTIVO", "USTCK_ACTIVO");
            tableMapping.ColumnMappings.Add("TUS_CODIGO", "TUS_CODIGO");
            tableMapping.ColumnMappings.Add("CON_CODIGO", "CON_CODIGO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [UBICACIONES_STOCK] WHERE (([USTCK_NUMERO] = @Original_USTCK_NUMERO) AND ((@IsNull_USTCK_CODIGO = 1 AND [USTCK_CODIGO] IS NULL) OR ([USTCK_CODIGO] = @Original_USTCK_CODIGO)) AND ((@IsNull_USTCK_NOMBRE = 1 AND [USTCK_NOMBRE] IS NULL) OR ([USTCK_NOMBRE] = @Original_USTCK_NOMBRE)) AND ((@IsNull_USTCK_DESCRIPCION = 1 AND [USTCK_DESCRIPCION] IS NULL) OR ([USTCK_DESCRIPCION] = @Original_USTCK_DESCRIPCION)) AND ((@IsNull_USTCK_UBICACIONFISICA = 1 AND [USTCK_UBICACIONFISICA] IS NULL) OR ([USTCK_UBICACIONFISICA] = @Original_USTCK_UBICACIONFISICA)) AND ([USTCK_CANTIDADREAL] = @Original_USTCK_CANTIDADREAL) AND ([UMED_CODIGO] = @Original_UMED_CODIGO) AND ((@IsNull_USTCK_PADRE = 1 AND [USTCK_PADRE] IS NULL) OR ([USTCK_PADRE] = @Original_USTCK_PADRE)) AND ([USTCK_ACTIVO] = @Original_USTCK_ACTIVO) AND ([TUS_CODIGO] = @Original_TUS_CODIGO) AND ([CON_CODIGO] = @Original_CON_CODIGO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_UBICACIONFISICA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_UBICACIONFISICA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_UBICACIONFISICA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_UBICACIONFISICA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_CANTIDADREAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "USTCK_CANTIDADREAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_PADRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_PADRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_PADRE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_PADRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "USTCK_ACTIVO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUS_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUS_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CON_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CON_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [UBICACIONES_STOCK] ([USTCK_CODIGO], [USTCK_NOMBRE], [USTCK_DESCRIPCION], [USTCK_UBICACIONFISICA], [USTCK_CANTIDADREAL], [UMED_CODIGO], [USTCK_PADRE], [USTCK_ACTIVO], [TUS_CODIGO], [CON_CODIGO]) VALUES (@USTCK_CODIGO, @USTCK_NOMBRE, @USTCK_DESCRIPCION, @USTCK_UBICACIONFISICA, @USTCK_CANTIDADREAL, @UMED_CODIGO, @USTCK_PADRE, @USTCK_ACTIVO, @TUS_CODIGO, @CON_CODIGO);
SELECT USTCK_NUMERO, USTCK_CODIGO, USTCK_NOMBRE, USTCK_DESCRIPCION, USTCK_UBICACIONFISICA, USTCK_CANTIDADREAL, UMED_CODIGO, USTCK_PADRE, USTCK_ACTIVO, TUS_CODIGO, CON_CODIGO FROM UBICACIONES_STOCK WHERE (USTCK_NUMERO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_UBICACIONFISICA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_UBICACIONFISICA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_CANTIDADREAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "USTCK_CANTIDADREAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_PADRE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_PADRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "USTCK_ACTIVO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUS_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUS_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CON_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CON_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [UBICACIONES_STOCK] SET [USTCK_CODIGO] = @USTCK_CODIGO, [USTCK_NOMBRE] = @USTCK_NOMBRE, [USTCK_DESCRIPCION] = @USTCK_DESCRIPCION, [USTCK_UBICACIONFISICA] = @USTCK_UBICACIONFISICA, [USTCK_CANTIDADREAL] = @USTCK_CANTIDADREAL, [UMED_CODIGO] = @UMED_CODIGO, [USTCK_PADRE] = @USTCK_PADRE, [USTCK_ACTIVO] = @USTCK_ACTIVO, [TUS_CODIGO] = @TUS_CODIGO, [CON_CODIGO] = @CON_CODIGO WHERE (([USTCK_NUMERO] = @Original_USTCK_NUMERO) AND ((@IsNull_USTCK_CODIGO = 1 AND [USTCK_CODIGO] IS NULL) OR ([USTCK_CODIGO] = @Original_USTCK_CODIGO)) AND ((@IsNull_USTCK_NOMBRE = 1 AND [USTCK_NOMBRE] IS NULL) OR ([USTCK_NOMBRE] = @Original_USTCK_NOMBRE)) AND ((@IsNull_USTCK_DESCRIPCION = 1 AND [USTCK_DESCRIPCION] IS NULL) OR ([USTCK_DESCRIPCION] = @Original_USTCK_DESCRIPCION)) AND ((@IsNull_USTCK_UBICACIONFISICA = 1 AND [USTCK_UBICACIONFISICA] IS NULL) OR ([USTCK_UBICACIONFISICA] = @Original_USTCK_UBICACIONFISICA)) AND ([USTCK_CANTIDADREAL] = @Original_USTCK_CANTIDADREAL) AND ([UMED_CODIGO] = @Original_UMED_CODIGO) AND ((@IsNull_USTCK_PADRE = 1 AND [USTCK_PADRE] IS NULL) OR ([USTCK_PADRE] = @Original_USTCK_PADRE)) AND ([USTCK_ACTIVO] = @Original_USTCK_ACTIVO) AND ([TUS_CODIGO] = @Original_TUS_CODIGO) AND ([CON_CODIGO] = @Original_CON_CODIGO));
SELECT USTCK_NUMERO, USTCK_CODIGO, USTCK_NOMBRE, USTCK_DESCRIPCION, USTCK_UBICACIONFISICA, USTCK_CANTIDADREAL, UMED_CODIGO, USTCK_PADRE, USTCK_ACTIVO, TUS_CODIGO, CON_CODIGO FROM UBICACIONES_STOCK WHERE (USTCK_NUMERO = @USTCK_NUMERO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_UBICACIONFISICA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_UBICACIONFISICA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_CANTIDADREAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "USTCK_CANTIDADREAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_PADRE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_PADRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "USTCK_ACTIVO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUS_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUS_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CON_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CON_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_CODIGO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_UBICACIONFISICA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_UBICACIONFISICA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_UBICACIONFISICA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_UBICACIONFISICA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_CANTIDADREAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "USTCK_CANTIDADREAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_PADRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_PADRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_PADRE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_PADRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "USTCK_ACTIVO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUS_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUS_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CON_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CON_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_NUMERO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT USTCK_NUMERO, USTCK_CODIGO, USTCK_NOMBRE, USTCK_DESCRIPCION, USTCK_UBICACI" +
                "ONFISICA, USTCK_CANTIDADREAL, UMED_CODIGO, USTCK_PADRE, USTCK_ACTIVO, TUS_CODIGO" +
                ", CON_CODIGO FROM UBICACIONES_STOCK";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsHojaRuta.UBICACIONES_STOCKDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsHojaRuta.UBICACIONES_STOCKDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsHojaRuta.UBICACIONES_STOCKDataTable dataTable = new dsHojaRuta.UBICACIONES_STOCKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta.UBICACIONES_STOCKDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta dataSet) {
            return this.Adapter.Update(dataSet, "UBICACIONES_STOCK");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_USTCK_NUMERO, string Original_USTCK_CODIGO, string Original_USTCK_NOMBRE, string Original_USTCK_DESCRIPCION, string Original_USTCK_UBICACIONFISICA, decimal Original_USTCK_CANTIDADREAL, decimal Original_UMED_CODIGO, global::System.Nullable<decimal> Original_USTCK_PADRE, decimal Original_USTCK_ACTIVO, decimal Original_TUS_CODIGO, decimal Original_CON_CODIGO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_USTCK_NUMERO));
            if ((Original_USTCK_CODIGO == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_USTCK_CODIGO));
            }
            if ((Original_USTCK_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_USTCK_NOMBRE));
            }
            if ((Original_USTCK_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_USTCK_DESCRIPCION));
            }
            if ((Original_USTCK_UBICACIONFISICA == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_USTCK_UBICACIONFISICA));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_USTCK_CANTIDADREAL));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_UMED_CODIGO));
            if ((Original_USTCK_PADRE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_USTCK_PADRE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_USTCK_ACTIVO));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_TUS_CODIGO));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_CON_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string USTCK_CODIGO, string USTCK_NOMBRE, string USTCK_DESCRIPCION, string USTCK_UBICACIONFISICA, decimal USTCK_CANTIDADREAL, decimal UMED_CODIGO, global::System.Nullable<decimal> USTCK_PADRE, decimal USTCK_ACTIVO, decimal TUS_CODIGO, decimal CON_CODIGO) {
            if ((USTCK_CODIGO == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(USTCK_CODIGO));
            }
            if ((USTCK_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(USTCK_NOMBRE));
            }
            if ((USTCK_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(USTCK_DESCRIPCION));
            }
            if ((USTCK_UBICACIONFISICA == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(USTCK_UBICACIONFISICA));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(USTCK_CANTIDADREAL));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(UMED_CODIGO));
            if ((USTCK_PADRE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(USTCK_PADRE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(USTCK_ACTIVO));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(TUS_CODIGO));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(CON_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string USTCK_CODIGO, 
                    string USTCK_NOMBRE, 
                    string USTCK_DESCRIPCION, 
                    string USTCK_UBICACIONFISICA, 
                    decimal USTCK_CANTIDADREAL, 
                    decimal UMED_CODIGO, 
                    global::System.Nullable<decimal> USTCK_PADRE, 
                    decimal USTCK_ACTIVO, 
                    decimal TUS_CODIGO, 
                    decimal CON_CODIGO, 
                    decimal Original_USTCK_NUMERO, 
                    string Original_USTCK_CODIGO, 
                    string Original_USTCK_NOMBRE, 
                    string Original_USTCK_DESCRIPCION, 
                    string Original_USTCK_UBICACIONFISICA, 
                    decimal Original_USTCK_CANTIDADREAL, 
                    decimal Original_UMED_CODIGO, 
                    global::System.Nullable<decimal> Original_USTCK_PADRE, 
                    decimal Original_USTCK_ACTIVO, 
                    decimal Original_TUS_CODIGO, 
                    decimal Original_CON_CODIGO, 
                    decimal USTCK_NUMERO) {
            if ((USTCK_CODIGO == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(USTCK_CODIGO));
            }
            if ((USTCK_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(USTCK_NOMBRE));
            }
            if ((USTCK_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(USTCK_DESCRIPCION));
            }
            if ((USTCK_UBICACIONFISICA == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(USTCK_UBICACIONFISICA));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(USTCK_CANTIDADREAL));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(UMED_CODIGO));
            if ((USTCK_PADRE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(USTCK_PADRE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(USTCK_ACTIVO));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(TUS_CODIGO));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(CON_CODIGO));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_USTCK_NUMERO));
            if ((Original_USTCK_CODIGO == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_USTCK_CODIGO));
            }
            if ((Original_USTCK_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_USTCK_NOMBRE));
            }
            if ((Original_USTCK_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_USTCK_DESCRIPCION));
            }
            if ((Original_USTCK_UBICACIONFISICA == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_USTCK_UBICACIONFISICA));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_USTCK_CANTIDADREAL));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_UMED_CODIGO));
            if ((Original_USTCK_PADRE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(Original_USTCK_PADRE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_USTCK_ACTIVO));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_TUS_CODIGO));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(Original_CON_CODIGO));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(USTCK_NUMERO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string USTCK_CODIGO, 
                    string USTCK_NOMBRE, 
                    string USTCK_DESCRIPCION, 
                    string USTCK_UBICACIONFISICA, 
                    decimal USTCK_CANTIDADREAL, 
                    decimal UMED_CODIGO, 
                    global::System.Nullable<decimal> USTCK_PADRE, 
                    decimal USTCK_ACTIVO, 
                    decimal TUS_CODIGO, 
                    decimal CON_CODIGO, 
                    decimal Original_USTCK_NUMERO, 
                    string Original_USTCK_CODIGO, 
                    string Original_USTCK_NOMBRE, 
                    string Original_USTCK_DESCRIPCION, 
                    string Original_USTCK_UBICACIONFISICA, 
                    decimal Original_USTCK_CANTIDADREAL, 
                    decimal Original_UMED_CODIGO, 
                    global::System.Nullable<decimal> Original_USTCK_PADRE, 
                    decimal Original_USTCK_ACTIVO, 
                    decimal Original_TUS_CODIGO, 
                    decimal Original_CON_CODIGO) {
            return this.Update(USTCK_CODIGO, USTCK_NOMBRE, USTCK_DESCRIPCION, USTCK_UBICACIONFISICA, USTCK_CANTIDADREAL, UMED_CODIGO, USTCK_PADRE, USTCK_ACTIVO, TUS_CODIGO, CON_CODIGO, Original_USTCK_NUMERO, Original_USTCK_CODIGO, Original_USTCK_NOMBRE, Original_USTCK_DESCRIPCION, Original_USTCK_UBICACIONFISICA, Original_USTCK_CANTIDADREAL, Original_UMED_CODIGO, Original_USTCK_PADRE, Original_USTCK_ACTIVO, Original_TUS_CODIGO, Original_CON_CODIGO, Original_USTCK_NUMERO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CONTENIDO_UBICACION_STOCKTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CONTENIDO_UBICACION_STOCKTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CONTENIDO_UBICACION_STOCK";
            tableMapping.ColumnMappings.Add("CON_CODIGO", "CON_CODIGO");
            tableMapping.ColumnMappings.Add("CON_NOMBRE", "CON_NOMBRE");
            tableMapping.ColumnMappings.Add("CON_DESCRIPCION", "CON_DESCRIPCION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CONTENIDO_UBICACION_STOCK] WHERE (([CON_CODIGO] = @Original_CON_CODIGO) AND ((@IsNull_CON_NOMBRE = 1 AND [CON_NOMBRE] IS NULL) OR ([CON_NOMBRE] = @Original_CON_NOMBRE)) AND ((@IsNull_CON_DESCRIPCION = 1 AND [CON_DESCRIPCION] IS NULL) OR ([CON_DESCRIPCION] = @Original_CON_DESCRIPCION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CON_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CON_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CON_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CON_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CON_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CON_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CON_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CON_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CON_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CON_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CONTENIDO_UBICACION_STOCK] ([CON_NOMBRE], [CON_DESCRIPCION]) V" +
                "ALUES (@CON_NOMBRE, @CON_DESCRIPCION);\r\nSELECT CON_CODIGO, CON_NOMBRE, CON_DESCR" +
                "IPCION FROM CONTENIDO_UBICACION_STOCK WHERE (CON_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CON_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CON_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CON_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CON_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CONTENIDO_UBICACION_STOCK] SET [CON_NOMBRE] = @CON_NOMBRE, [CON_DESCRIPCION] = @CON_DESCRIPCION WHERE (([CON_CODIGO] = @Original_CON_CODIGO) AND ((@IsNull_CON_NOMBRE = 1 AND [CON_NOMBRE] IS NULL) OR ([CON_NOMBRE] = @Original_CON_NOMBRE)) AND ((@IsNull_CON_DESCRIPCION = 1 AND [CON_DESCRIPCION] IS NULL) OR ([CON_DESCRIPCION] = @Original_CON_DESCRIPCION)));
SELECT CON_CODIGO, CON_NOMBRE, CON_DESCRIPCION FROM CONTENIDO_UBICACION_STOCK WHERE (CON_CODIGO = @CON_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CON_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CON_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CON_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CON_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CON_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CON_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CON_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CON_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CON_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CON_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CON_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CON_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CON_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CON_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CON_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "CON_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CON_CODIGO, CON_NOMBRE, CON_DESCRIPCION FROM dbo.CONTENIDO_UBICACION_STOCK" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsHojaRuta.CONTENIDO_UBICACION_STOCKDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsHojaRuta.CONTENIDO_UBICACION_STOCKDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsHojaRuta.CONTENIDO_UBICACION_STOCKDataTable dataTable = new dsHojaRuta.CONTENIDO_UBICACION_STOCKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta.CONTENIDO_UBICACION_STOCKDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta dataSet) {
            return this.Adapter.Update(dataSet, "CONTENIDO_UBICACION_STOCK");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_CON_CODIGO, string Original_CON_NOMBRE, string Original_CON_DESCRIPCION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_CON_CODIGO));
            if ((Original_CON_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CON_NOMBRE));
            }
            if ((Original_CON_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CON_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CON_NOMBRE, string CON_DESCRIPCION) {
            if ((CON_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CON_NOMBRE));
            }
            if ((CON_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CON_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CON_NOMBRE, string CON_DESCRIPCION, decimal Original_CON_CODIGO, string Original_CON_NOMBRE, string Original_CON_DESCRIPCION, decimal CON_CODIGO) {
            if ((CON_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CON_NOMBRE));
            }
            if ((CON_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CON_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_CON_CODIGO));
            if ((Original_CON_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_CON_NOMBRE));
            }
            if ((Original_CON_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_CON_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(CON_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CON_NOMBRE, string CON_DESCRIPCION, decimal Original_CON_CODIGO, string Original_CON_NOMBRE, string Original_CON_DESCRIPCION) {
            return this.Update(CON_NOMBRE, CON_DESCRIPCION, Original_CON_CODIGO, Original_CON_NOMBRE, Original_CON_DESCRIPCION, Original_CON_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TIPOS_UBICACIONES_STOCKTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TIPOS_UBICACIONES_STOCKTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TIPOS_UBICACIONES_STOCK";
            tableMapping.ColumnMappings.Add("TUS_CODIGO", "TUS_CODIGO");
            tableMapping.ColumnMappings.Add("TUS_NOMBRE", "TUS_NOMBRE");
            tableMapping.ColumnMappings.Add("TUS_DESCRIPCION", "TUS_DESCRIPCION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TIPOS_UBICACIONES_STOCK] WHERE (([TUS_CODIGO] = @Original_TUS_CODIGO) AND ((@IsNull_TUS_NOMBRE = 1 AND [TUS_NOMBRE] IS NULL) OR ([TUS_NOMBRE] = @Original_TUS_NOMBRE)) AND ((@IsNull_TUS_DESCRIPCION = 1 AND [TUS_DESCRIPCION] IS NULL) OR ([TUS_DESCRIPCION] = @Original_TUS_DESCRIPCION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUS_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUS_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUS_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUS_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUS_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUS_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TIPOS_UBICACIONES_STOCK] ([TUS_NOMBRE], [TUS_DESCRIPCION]) VAL" +
                "UES (@TUS_NOMBRE, @TUS_DESCRIPCION);\r\nSELECT TUS_CODIGO, TUS_NOMBRE, TUS_DESCRIP" +
                "CION FROM TIPOS_UBICACIONES_STOCK WHERE (TUS_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUS_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUS_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TIPOS_UBICACIONES_STOCK] SET [TUS_NOMBRE] = @TUS_NOMBRE, [TUS_DESCRIPCION] = @TUS_DESCRIPCION WHERE (([TUS_CODIGO] = @Original_TUS_CODIGO) AND ((@IsNull_TUS_NOMBRE = 1 AND [TUS_NOMBRE] IS NULL) OR ([TUS_NOMBRE] = @Original_TUS_NOMBRE)) AND ((@IsNull_TUS_DESCRIPCION = 1 AND [TUS_DESCRIPCION] IS NULL) OR ([TUS_DESCRIPCION] = @Original_TUS_DESCRIPCION)));
SELECT TUS_CODIGO, TUS_NOMBRE, TUS_DESCRIPCION FROM TIPOS_UBICACIONES_STOCK WHERE (TUS_CODIGO = @TUS_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUS_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUS_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUS_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUS_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUS_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUS_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUS_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUS_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUS_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUS_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "TUS_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TUS_CODIGO, TUS_NOMBRE, TUS_DESCRIPCION FROM dbo.TIPOS_UBICACIONES_STOCK";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsHojaRuta.TIPOS_UBICACIONES_STOCKDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsHojaRuta.TIPOS_UBICACIONES_STOCKDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsHojaRuta.TIPOS_UBICACIONES_STOCKDataTable dataTable = new dsHojaRuta.TIPOS_UBICACIONES_STOCKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta.TIPOS_UBICACIONES_STOCKDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta dataSet) {
            return this.Adapter.Update(dataSet, "TIPOS_UBICACIONES_STOCK");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_TUS_CODIGO, string Original_TUS_NOMBRE, string Original_TUS_DESCRIPCION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_TUS_CODIGO));
            if ((Original_TUS_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TUS_NOMBRE));
            }
            if ((Original_TUS_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TUS_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TUS_NOMBRE, string TUS_DESCRIPCION) {
            if ((TUS_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TUS_NOMBRE));
            }
            if ((TUS_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TUS_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TUS_NOMBRE, string TUS_DESCRIPCION, decimal Original_TUS_CODIGO, string Original_TUS_NOMBRE, string Original_TUS_DESCRIPCION, decimal TUS_CODIGO) {
            if ((TUS_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TUS_NOMBRE));
            }
            if ((TUS_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TUS_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_TUS_CODIGO));
            if ((Original_TUS_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_TUS_NOMBRE));
            }
            if ((Original_TUS_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_TUS_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(TUS_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TUS_NOMBRE, string TUS_DESCRIPCION, decimal Original_TUS_CODIGO, string Original_TUS_NOMBRE, string Original_TUS_DESCRIPCION) {
            return this.Update(TUS_NOMBRE, TUS_DESCRIPCION, Original_TUS_CODIGO, Original_TUS_NOMBRE, Original_TUS_DESCRIPCION, Original_TUS_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UNIDADES_MEDIDATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UNIDADES_MEDIDATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UNIDADES_MEDIDA";
            tableMapping.ColumnMappings.Add("UMED_CODIGO", "UMED_CODIGO");
            tableMapping.ColumnMappings.Add("TUMED_CODIGO", "TUMED_CODIGO");
            tableMapping.ColumnMappings.Add("UMED_NOMBRE", "UMED_NOMBRE");
            tableMapping.ColumnMappings.Add("UMED_ABREVIATURA", "UMED_ABREVIATURA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[UNIDADES_MEDIDA] WHERE (([UMED_CODIGO] = @Original_UMED_CODIGO) AND ((@IsNull_TUMED_CODIGO = 1 AND [TUMED_CODIGO] IS NULL) OR ([TUMED_CODIGO] = @Original_TUMED_CODIGO)) AND ((@IsNull_UMED_NOMBRE = 1 AND [UMED_NOMBRE] IS NULL) OR ([UMED_NOMBRE] = @Original_UMED_NOMBRE)) AND ((@IsNull_UMED_ABREVIATURA = 1 AND [UMED_ABREVIATURA] IS NULL) OR ([UMED_ABREVIATURA] = @Original_UMED_ABREVIATURA)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUMED_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_ABREVIATURA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[UNIDADES_MEDIDA] ([TUMED_CODIGO], [UMED_NOMBRE], [UMED_ABREVIATURA]) VALUES (@TUMED_CODIGO, @UMED_NOMBRE, @UMED_ABREVIATURA);
SELECT UMED_CODIGO, TUMED_CODIGO, UMED_NOMBRE, UMED_ABREVIATURA FROM UNIDADES_MEDIDA WHERE (UMED_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[UNIDADES_MEDIDA] SET [TUMED_CODIGO] = @TUMED_CODIGO, [UMED_NOMBRE] = @UMED_NOMBRE, [UMED_ABREVIATURA] = @UMED_ABREVIATURA WHERE (([UMED_CODIGO] = @Original_UMED_CODIGO) AND ((@IsNull_TUMED_CODIGO = 1 AND [TUMED_CODIGO] IS NULL) OR ([TUMED_CODIGO] = @Original_TUMED_CODIGO)) AND ((@IsNull_UMED_NOMBRE = 1 AND [UMED_NOMBRE] IS NULL) OR ([UMED_NOMBRE] = @Original_UMED_NOMBRE)) AND ((@IsNull_UMED_ABREVIATURA = 1 AND [UMED_ABREVIATURA] IS NULL) OR ([UMED_ABREVIATURA] = @Original_UMED_ABREVIATURA)));
SELECT UMED_CODIGO, TUMED_CODIGO, UMED_NOMBRE, UMED_ABREVIATURA FROM UNIDADES_MEDIDA WHERE (UMED_CODIGO = @UMED_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUMED_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_ABREVIATURA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT UMED_CODIGO, TUMED_CODIGO, UMED_NOMBRE, UMED_ABREVIATURA FROM dbo.UNIDADES" +
                "_MEDIDA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsHojaRuta.UNIDADES_MEDIDADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsHojaRuta.UNIDADES_MEDIDADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsHojaRuta.UNIDADES_MEDIDADataTable dataTable = new dsHojaRuta.UNIDADES_MEDIDADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta.UNIDADES_MEDIDADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta dataSet) {
            return this.Adapter.Update(dataSet, "UNIDADES_MEDIDA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_UMED_CODIGO, global::System.Nullable<decimal> Original_TUMED_CODIGO, string Original_UMED_NOMBRE, string Original_UMED_ABREVIATURA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_UMED_CODIGO));
            if ((Original_TUMED_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_TUMED_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_UMED_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_UMED_NOMBRE));
            }
            if ((Original_UMED_ABREVIATURA == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_UMED_ABREVIATURA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<decimal> TUMED_CODIGO, string UMED_NOMBRE, string UMED_ABREVIATURA) {
            if ((TUMED_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(TUMED_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((UMED_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(UMED_NOMBRE));
            }
            if ((UMED_ABREVIATURA == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(UMED_ABREVIATURA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> TUMED_CODIGO, string UMED_NOMBRE, string UMED_ABREVIATURA, decimal Original_UMED_CODIGO, global::System.Nullable<decimal> Original_TUMED_CODIGO, string Original_UMED_NOMBRE, string Original_UMED_ABREVIATURA, decimal UMED_CODIGO) {
            if ((TUMED_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(TUMED_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((UMED_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(UMED_NOMBRE));
            }
            if ((UMED_ABREVIATURA == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(UMED_ABREVIATURA));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_UMED_CODIGO));
            if ((Original_TUMED_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_TUMED_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_UMED_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_UMED_NOMBRE));
            }
            if ((Original_UMED_ABREVIATURA == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_UMED_ABREVIATURA));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(UMED_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> TUMED_CODIGO, string UMED_NOMBRE, string UMED_ABREVIATURA, decimal Original_UMED_CODIGO, global::System.Nullable<decimal> Original_TUMED_CODIGO, string Original_UMED_NOMBRE, string Original_UMED_ABREVIATURA) {
            return this.Update(TUMED_CODIGO, UMED_NOMBRE, UMED_ABREVIATURA, Original_UMED_CODIGO, Original_TUMED_CODIGO, Original_UMED_NOMBRE, Original_UMED_ABREVIATURA, Original_UMED_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TIPOS_UNIDADES_MEDIDATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TIPOS_UNIDADES_MEDIDATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TIPOS_UNIDADES_MEDIDA";
            tableMapping.ColumnMappings.Add("TUMED_CODIGO", "TUMED_CODIGO");
            tableMapping.ColumnMappings.Add("TUMED_NOMBRE", "TUMED_NOMBRE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TIPOS_UNIDADES_MEDIDA] WHERE (([TUMED_CODIGO] = @Original_TUME" +
                "D_CODIGO) AND ((@IsNull_TUMED_NOMBRE = 1 AND [TUMED_NOMBRE] IS NULL) OR ([TUMED_" +
                "NOMBRE] = @Original_TUMED_NOMBRE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUMED_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TIPOS_UNIDADES_MEDIDA] ([TUMED_NOMBRE]) VALUES (@TUMED_NOMBRE)" +
                ";\r\nSELECT TUMED_CODIGO, TUMED_NOMBRE FROM TIPOS_UNIDADES_MEDIDA WHERE (TUMED_COD" +
                "IGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TIPOS_UNIDADES_MEDIDA] SET [TUMED_NOMBRE] = @TUMED_NOMBRE WHERE (([TUMED_CODIGO] = @Original_TUMED_CODIGO) AND ((@IsNull_TUMED_NOMBRE = 1 AND [TUMED_NOMBRE] IS NULL) OR ([TUMED_NOMBRE] = @Original_TUMED_NOMBRE)));
SELECT TUMED_CODIGO, TUMED_NOMBRE FROM TIPOS_UNIDADES_MEDIDA WHERE (TUMED_CODIGO = @TUMED_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUMED_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TUMED_CODIGO, TUMED_NOMBRE FROM dbo.TIPOS_UNIDADES_MEDIDA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsHojaRuta.TIPOS_UNIDADES_MEDIDADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsHojaRuta.TIPOS_UNIDADES_MEDIDADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsHojaRuta.TIPOS_UNIDADES_MEDIDADataTable dataTable = new dsHojaRuta.TIPOS_UNIDADES_MEDIDADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta.TIPOS_UNIDADES_MEDIDADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta dataSet) {
            return this.Adapter.Update(dataSet, "TIPOS_UNIDADES_MEDIDA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_TUMED_CODIGO, string Original_TUMED_NOMBRE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_TUMED_CODIGO));
            if ((Original_TUMED_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TUMED_NOMBRE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TUMED_NOMBRE) {
            if ((TUMED_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TUMED_NOMBRE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TUMED_NOMBRE, decimal Original_TUMED_CODIGO, string Original_TUMED_NOMBRE, decimal TUMED_CODIGO) {
            if ((TUMED_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TUMED_NOMBRE));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Original_TUMED_CODIGO));
            if ((Original_TUMED_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_TUMED_NOMBRE));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(TUMED_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TUMED_NOMBRE, decimal Original_TUMED_CODIGO, string Original_TUMED_NOMBRE) {
            return this.Update(TUMED_NOMBRE, Original_TUMED_CODIGO, Original_TUMED_NOMBRE, Original_TUMED_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TIPOS_CENTRO_TRABAJOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TIPOS_CENTRO_TRABAJOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TIPOS_CENTRO_TRABAJO";
            tableMapping.ColumnMappings.Add("TC_CODIGO", "TC_CODIGO");
            tableMapping.ColumnMappings.Add("TC_NOMBRE", "TC_NOMBRE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TIPOS_CENTRO_TRABAJO] WHERE (([TC_CODIGO] = @Original_TC_CODIG" +
                "O) AND ([TC_NOMBRE] = @Original_TC_NOMBRE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "TC_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TC_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TC_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TIPOS_CENTRO_TRABAJO] ([TC_NOMBRE]) VALUES (@TC_NOMBRE);\r\nSELE" +
                "CT TC_CODIGO, TC_NOMBRE FROM TIPOS_CENTRO_TRABAJO WHERE (TC_CODIGO = SCOPE_IDENT" +
                "ITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TC_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TC_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TIPOS_CENTRO_TRABAJO] SET [TC_NOMBRE] = @TC_NOMBRE WHERE (([TC_CODI" +
                "GO] = @Original_TC_CODIGO) AND ([TC_NOMBRE] = @Original_TC_NOMBRE));\r\nSELECT TC_" +
                "CODIGO, TC_NOMBRE FROM TIPOS_CENTRO_TRABAJO WHERE (TC_CODIGO = @TC_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TC_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TC_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "TC_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TC_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TC_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TC_CODIGO", global::System.Data.SqlDbType.Decimal, 5, global::System.Data.ParameterDirection.Input, 1, 0, "TC_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TC_CODIGO, TC_NOMBRE FROM dbo.TIPOS_CENTRO_TRABAJO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsHojaRuta.TIPOS_CENTRO_TRABAJODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsHojaRuta.TIPOS_CENTRO_TRABAJODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsHojaRuta.TIPOS_CENTRO_TRABAJODataTable dataTable = new dsHojaRuta.TIPOS_CENTRO_TRABAJODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta.TIPOS_CENTRO_TRABAJODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta dataSet) {
            return this.Adapter.Update(dataSet, "TIPOS_CENTRO_TRABAJO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_TC_CODIGO, string Original_TC_NOMBRE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_TC_CODIGO));
            if ((Original_TC_NOMBRE == null)) {
                throw new global::System.ArgumentNullException("Original_TC_NOMBRE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TC_NOMBRE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TC_NOMBRE) {
            if ((TC_NOMBRE == null)) {
                throw new global::System.ArgumentNullException("TC_NOMBRE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TC_NOMBRE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TC_NOMBRE, decimal Original_TC_CODIGO, string Original_TC_NOMBRE, decimal TC_CODIGO) {
            if ((TC_NOMBRE == null)) {
                throw new global::System.ArgumentNullException("TC_NOMBRE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TC_NOMBRE));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Original_TC_CODIGO));
            if ((Original_TC_NOMBRE == null)) {
                throw new global::System.ArgumentNullException("Original_TC_NOMBRE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_TC_NOMBRE));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(TC_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TC_NOMBRE, decimal Original_TC_CODIGO, string Original_TC_NOMBRE) {
            return this.Update(TC_NOMBRE, Original_TC_CODIGO, Original_TC_NOMBRE, Original_TC_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CENTROS_TRABAJOSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CENTROS_TRABAJOSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CENTROS_TRABAJOS";
            tableMapping.ColumnMappings.Add("CTO_CODIGO", "CTO_CODIGO");
            tableMapping.ColumnMappings.Add("CTO_NOMBRE", "CTO_NOMBRE");
            tableMapping.ColumnMappings.Add("SEC_CODIGO", "SEC_CODIGO");
            tableMapping.ColumnMappings.Add("CT_TIPO", "CT_TIPO");
            tableMapping.ColumnMappings.Add("CTO_HORASTRABAJONORMAL", "CTO_HORASTRABAJONORMAL");
            tableMapping.ColumnMappings.Add("CTO_HORASTRABAJOEXTENDIDO", "CTO_HORASTRABAJOEXTENDIDO");
            tableMapping.ColumnMappings.Add("CTO_ACTIVO", "CTO_ACTIVO");
            tableMapping.ColumnMappings.Add("CTO_DESCRIPCION", "CTO_DESCRIPCION");
            tableMapping.ColumnMappings.Add("CTO_CAPACIDADCICLO", "CTO_CAPACIDADCICLO");
            tableMapping.ColumnMappings.Add("CTO_HORASCICLO", "CTO_HORASCICLO");
            tableMapping.ColumnMappings.Add("CTO_TIEMPOANTES", "CTO_TIEMPOANTES");
            tableMapping.ColumnMappings.Add("CTO_TIEMPODESPUES", "CTO_TIEMPODESPUES");
            tableMapping.ColumnMappings.Add("CTO_EFICIENCIA", "CTO_EFICIENCIA");
            tableMapping.ColumnMappings.Add("CTO_COSTOHORA", "CTO_COSTOHORA");
            tableMapping.ColumnMappings.Add("CTO_COSTOCICLO", "CTO_COSTOCICLO");
            tableMapping.ColumnMappings.Add("CTO_CAPACIDADUNIDADHORA", "CTO_CAPACIDADUNIDADHORA");
            tableMapping.ColumnMappings.Add("CTO_EFICIENCIAINICIAL", "CTO_EFICIENCIAINICIAL");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CENTROS_TRABAJOS] WHERE (([CTO_CODIGO] = @Original_CTO_CODIGO)" +
                " AND ((@IsNull_CTO_NOMBRE = 1 AND [CTO_NOMBRE] IS NULL) OR ([CTO_NOMBRE] = @Orig" +
                "inal_CTO_NOMBRE)) AND ((@IsNull_SEC_CODIGO = 1 AND [SEC_CODIGO] IS NULL) OR ([SE" +
                "C_CODIGO] = @Original_SEC_CODIGO)) AND ([CT_TIPO] = @Original_CT_TIPO) AND ((@Is" +
                "Null_CTO_HORASTRABAJONORMAL = 1 AND [CTO_HORASTRABAJONORMAL] IS NULL) OR ([CTO_H" +
                "ORASTRABAJONORMAL] = @Original_CTO_HORASTRABAJONORMAL)) AND ((@IsNull_CTO_HORAST" +
                "RABAJOEXTENDIDO = 1 AND [CTO_HORASTRABAJOEXTENDIDO] IS NULL) OR ([CTO_HORASTRABA" +
                "JOEXTENDIDO] = @Original_CTO_HORASTRABAJOEXTENDIDO)) AND ((@IsNull_CTO_ACTIVO = " +
                "1 AND [CTO_ACTIVO] IS NULL) OR ([CTO_ACTIVO] = @Original_CTO_ACTIVO)) AND ((@IsN" +
                "ull_CTO_DESCRIPCION = 1 AND [CTO_DESCRIPCION] IS NULL) OR ([CTO_DESCRIPCION] = @" +
                "Original_CTO_DESCRIPCION)) AND ((@IsNull_CTO_CAPACIDADCICLO = 1 AND [CTO_CAPACID" +
                "ADCICLO] IS NULL) OR ([CTO_CAPACIDADCICLO] = @Original_CTO_CAPACIDADCICLO)) AND " +
                "((@IsNull_CTO_HORASCICLO = 1 AND [CTO_HORASCICLO] IS NULL) OR ([CTO_HORASCICLO] " +
                "= @Original_CTO_HORASCICLO)) AND ((@IsNull_CTO_TIEMPOANTES = 1 AND [CTO_TIEMPOAN" +
                "TES] IS NULL) OR ([CTO_TIEMPOANTES] = @Original_CTO_TIEMPOANTES)) AND ((@IsNull_" +
                "CTO_TIEMPODESPUES = 1 AND [CTO_TIEMPODESPUES] IS NULL) OR ([CTO_TIEMPODESPUES] =" +
                " @Original_CTO_TIEMPODESPUES)) AND ((@IsNull_CTO_EFICIENCIA = 1 AND [CTO_EFICIEN" +
                "CIA] IS NULL) OR ([CTO_EFICIENCIA] = @Original_CTO_EFICIENCIA)) AND ((@IsNull_CT" +
                "O_COSTOHORA = 1 AND [CTO_COSTOHORA] IS NULL) OR ([CTO_COSTOHORA] = @Original_CTO" +
                "_COSTOHORA)) AND ((@IsNull_CTO_COSTOCICLO = 1 AND [CTO_COSTOCICLO] IS NULL) OR (" +
                "[CTO_COSTOCICLO] = @Original_CTO_COSTOCICLO)) AND ((@IsNull_CTO_CAPACIDADUNIDADH" +
                "ORA = 1 AND [CTO_CAPACIDADUNIDADHORA] IS NULL) OR ([CTO_CAPACIDADUNIDADHORA] = @" +
                "Original_CTO_CAPACIDADUNIDADHORA)) AND ([CTO_EFICIENCIAINICIAL] = @Original_CTO_" +
                "EFICIENCIAINICIAL))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CTO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEC_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CT_TIPO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "CT_TIPO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_HORASTRABAJONORMAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_HORASTRABAJONORMAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_HORASTRABAJONORMAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_HORASTRABAJONORMAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_HORASTRABAJOEXTENDIDO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_HORASTRABAJOEXTENDIDO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_HORASTRABAJOEXTENDIDO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_HORASTRABAJOEXTENDIDO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_ACTIVO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_ACTIVO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "CTO_ACTIVO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_CAPACIDADCICLO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_CAPACIDADCICLO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_CAPACIDADCICLO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_CAPACIDADCICLO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_HORASCICLO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_HORASCICLO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_HORASCICLO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "CTO_HORASCICLO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_TIEMPOANTES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_TIEMPOANTES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_TIEMPOANTES", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "CTO_TIEMPOANTES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_TIEMPODESPUES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_TIEMPODESPUES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_TIEMPODESPUES", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "CTO_TIEMPODESPUES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_EFICIENCIA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_EFICIENCIA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_EFICIENCIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 2, "CTO_EFICIENCIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_COSTOHORA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_COSTOHORA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_COSTOHORA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_COSTOHORA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_COSTOCICLO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_COSTOCICLO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_COSTOCICLO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_COSTOCICLO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_CAPACIDADUNIDADHORA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_CAPACIDADUNIDADHORA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_CAPACIDADUNIDADHORA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_CAPACIDADUNIDADHORA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_EFICIENCIAINICIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 2, "CTO_EFICIENCIAINICIAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CENTROS_TRABAJOS] ([CTO_NOMBRE], [SEC_CODIGO], [CT_TIPO], [CTO_HORASTRABAJONORMAL], [CTO_HORASTRABAJOEXTENDIDO], [CTO_ACTIVO], [CTO_DESCRIPCION], [CTO_CAPACIDADCICLO], [CTO_HORASCICLO], [CTO_TIEMPOANTES], [CTO_TIEMPODESPUES], [CTO_EFICIENCIA], [CTO_COSTOHORA], [CTO_COSTOCICLO], [CTO_CAPACIDADUNIDADHORA], [CTO_EFICIENCIAINICIAL]) VALUES (@CTO_NOMBRE, @SEC_CODIGO, @CT_TIPO, @CTO_HORASTRABAJONORMAL, @CTO_HORASTRABAJOEXTENDIDO, @CTO_ACTIVO, @CTO_DESCRIPCION, @CTO_CAPACIDADCICLO, @CTO_HORASCICLO, @CTO_TIEMPOANTES, @CTO_TIEMPODESPUES, @CTO_EFICIENCIA, @CTO_COSTOHORA, @CTO_COSTOCICLO, @CTO_CAPACIDADUNIDADHORA, @CTO_EFICIENCIAINICIAL);
SELECT CTO_CODIGO, CTO_NOMBRE, SEC_CODIGO, CT_TIPO, CTO_HORASTRABAJONORMAL, CTO_HORASTRABAJOEXTENDIDO, CTO_ACTIVO, CTO_DESCRIPCION, CTO_CAPACIDADCICLO, CTO_HORASCICLO, CTO_TIEMPOANTES, CTO_TIEMPODESPUES, CTO_EFICIENCIA, CTO_COSTOHORA, CTO_COSTOCICLO, CTO_CAPACIDADUNIDADHORA, CTO_EFICIENCIAINICIAL FROM CENTROS_TRABAJOS WHERE (CTO_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CT_TIPO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "CT_TIPO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_HORASTRABAJONORMAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_HORASTRABAJONORMAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_HORASTRABAJOEXTENDIDO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_HORASTRABAJOEXTENDIDO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "CTO_ACTIVO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_CAPACIDADCICLO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_CAPACIDADCICLO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_HORASCICLO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "CTO_HORASCICLO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_TIEMPOANTES", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "CTO_TIEMPOANTES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_TIEMPODESPUES", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "CTO_TIEMPODESPUES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_EFICIENCIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 2, "CTO_EFICIENCIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_COSTOHORA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_COSTOHORA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_COSTOCICLO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_COSTOCICLO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_CAPACIDADUNIDADHORA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_CAPACIDADUNIDADHORA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_EFICIENCIAINICIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 2, "CTO_EFICIENCIAINICIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[CENTROS_TRABAJOS] SET [CTO_NOMBRE] = @CTO_NOMBRE, [SEC_CODIGO] = @S" +
                "EC_CODIGO, [CT_TIPO] = @CT_TIPO, [CTO_HORASTRABAJONORMAL] = @CTO_HORASTRABAJONOR" +
                "MAL, [CTO_HORASTRABAJOEXTENDIDO] = @CTO_HORASTRABAJOEXTENDIDO, [CTO_ACTIVO] = @C" +
                "TO_ACTIVO, [CTO_DESCRIPCION] = @CTO_DESCRIPCION, [CTO_CAPACIDADCICLO] = @CTO_CAP" +
                "ACIDADCICLO, [CTO_HORASCICLO] = @CTO_HORASCICLO, [CTO_TIEMPOANTES] = @CTO_TIEMPO" +
                "ANTES, [CTO_TIEMPODESPUES] = @CTO_TIEMPODESPUES, [CTO_EFICIENCIA] = @CTO_EFICIEN" +
                "CIA, [CTO_COSTOHORA] = @CTO_COSTOHORA, [CTO_COSTOCICLO] = @CTO_COSTOCICLO, [CTO_" +
                "CAPACIDADUNIDADHORA] = @CTO_CAPACIDADUNIDADHORA, [CTO_EFICIENCIAINICIAL] = @CTO_" +
                "EFICIENCIAINICIAL WHERE (([CTO_CODIGO] = @Original_CTO_CODIGO) AND ((@IsNull_CTO" +
                "_NOMBRE = 1 AND [CTO_NOMBRE] IS NULL) OR ([CTO_NOMBRE] = @Original_CTO_NOMBRE)) " +
                "AND ((@IsNull_SEC_CODIGO = 1 AND [SEC_CODIGO] IS NULL) OR ([SEC_CODIGO] = @Origi" +
                "nal_SEC_CODIGO)) AND ([CT_TIPO] = @Original_CT_TIPO) AND ((@IsNull_CTO_HORASTRAB" +
                "AJONORMAL = 1 AND [CTO_HORASTRABAJONORMAL] IS NULL) OR ([CTO_HORASTRABAJONORMAL]" +
                " = @Original_CTO_HORASTRABAJONORMAL)) AND ((@IsNull_CTO_HORASTRABAJOEXTENDIDO = " +
                "1 AND [CTO_HORASTRABAJOEXTENDIDO] IS NULL) OR ([CTO_HORASTRABAJOEXTENDIDO] = @Or" +
                "iginal_CTO_HORASTRABAJOEXTENDIDO)) AND ((@IsNull_CTO_ACTIVO = 1 AND [CTO_ACTIVO]" +
                " IS NULL) OR ([CTO_ACTIVO] = @Original_CTO_ACTIVO)) AND ((@IsNull_CTO_DESCRIPCIO" +
                "N = 1 AND [CTO_DESCRIPCION] IS NULL) OR ([CTO_DESCRIPCION] = @Original_CTO_DESCR" +
                "IPCION)) AND ((@IsNull_CTO_CAPACIDADCICLO = 1 AND [CTO_CAPACIDADCICLO] IS NULL) " +
                "OR ([CTO_CAPACIDADCICLO] = @Original_CTO_CAPACIDADCICLO)) AND ((@IsNull_CTO_HORA" +
                "SCICLO = 1 AND [CTO_HORASCICLO] IS NULL) OR ([CTO_HORASCICLO] = @Original_CTO_HO" +
                "RASCICLO)) AND ((@IsNull_CTO_TIEMPOANTES = 1 AND [CTO_TIEMPOANTES] IS NULL) OR (" +
                "[CTO_TIEMPOANTES] = @Original_CTO_TIEMPOANTES)) AND ((@IsNull_CTO_TIEMPODESPUES " +
                "= 1 AND [CTO_TIEMPODESPUES] IS NULL) OR ([CTO_TIEMPODESPUES] = @Original_CTO_TIE" +
                "MPODESPUES)) AND ((@IsNull_CTO_EFICIENCIA = 1 AND [CTO_EFICIENCIA] IS NULL) OR (" +
                "[CTO_EFICIENCIA] = @Original_CTO_EFICIENCIA)) AND ((@IsNull_CTO_COSTOHORA = 1 AN" +
                "D [CTO_COSTOHORA] IS NULL) OR ([CTO_COSTOHORA] = @Original_CTO_COSTOHORA)) AND (" +
                "(@IsNull_CTO_COSTOCICLO = 1 AND [CTO_COSTOCICLO] IS NULL) OR ([CTO_COSTOCICLO] =" +
                " @Original_CTO_COSTOCICLO)) AND ((@IsNull_CTO_CAPACIDADUNIDADHORA = 1 AND [CTO_C" +
                "APACIDADUNIDADHORA] IS NULL) OR ([CTO_CAPACIDADUNIDADHORA] = @Original_CTO_CAPAC" +
                "IDADUNIDADHORA)) AND ([CTO_EFICIENCIAINICIAL] = @Original_CTO_EFICIENCIAINICIAL)" +
                ");\r\nSELECT CTO_CODIGO, CTO_NOMBRE, SEC_CODIGO, CT_TIPO, CTO_HORASTRABAJONORMAL, " +
                "CTO_HORASTRABAJOEXTENDIDO, CTO_ACTIVO, CTO_DESCRIPCION, CTO_CAPACIDADCICLO, CTO_" +
                "HORASCICLO, CTO_TIEMPOANTES, CTO_TIEMPODESPUES, CTO_EFICIENCIA, CTO_COSTOHORA, C" +
                "TO_COSTOCICLO, CTO_CAPACIDADUNIDADHORA, CTO_EFICIENCIAINICIAL FROM CENTROS_TRABA" +
                "JOS WHERE (CTO_CODIGO = @CTO_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CT_TIPO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "CT_TIPO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_HORASTRABAJONORMAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_HORASTRABAJONORMAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_HORASTRABAJOEXTENDIDO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_HORASTRABAJOEXTENDIDO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "CTO_ACTIVO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_CAPACIDADCICLO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_CAPACIDADCICLO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_HORASCICLO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "CTO_HORASCICLO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_TIEMPOANTES", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "CTO_TIEMPOANTES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_TIEMPODESPUES", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "CTO_TIEMPODESPUES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_EFICIENCIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 2, "CTO_EFICIENCIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_COSTOHORA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_COSTOHORA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_COSTOCICLO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_COSTOCICLO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_CAPACIDADUNIDADHORA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_CAPACIDADUNIDADHORA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_EFICIENCIAINICIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 2, "CTO_EFICIENCIAINICIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CTO_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEC_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CT_TIPO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "CT_TIPO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_HORASTRABAJONORMAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_HORASTRABAJONORMAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_HORASTRABAJONORMAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_HORASTRABAJONORMAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_HORASTRABAJOEXTENDIDO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_HORASTRABAJOEXTENDIDO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_HORASTRABAJOEXTENDIDO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_HORASTRABAJOEXTENDIDO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_ACTIVO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_ACTIVO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "CTO_ACTIVO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_CAPACIDADCICLO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_CAPACIDADCICLO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_CAPACIDADCICLO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_CAPACIDADCICLO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_HORASCICLO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_HORASCICLO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_HORASCICLO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "CTO_HORASCICLO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_TIEMPOANTES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_TIEMPOANTES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_TIEMPOANTES", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "CTO_TIEMPOANTES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_TIEMPODESPUES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_TIEMPODESPUES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_TIEMPODESPUES", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "CTO_TIEMPODESPUES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_EFICIENCIA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_EFICIENCIA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_EFICIENCIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 2, "CTO_EFICIENCIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_COSTOHORA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_COSTOHORA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_COSTOHORA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_COSTOHORA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_COSTOCICLO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_COSTOCICLO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_COSTOCICLO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_COSTOCICLO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CTO_CAPACIDADUNIDADHORA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CTO_CAPACIDADUNIDADHORA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_CAPACIDADUNIDADHORA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 2, "CTO_CAPACIDADUNIDADHORA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CTO_EFICIENCIAINICIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 2, "CTO_EFICIENCIAINICIAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CTO_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "CTO_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT CTO_CODIGO, CTO_NOMBRE, SEC_CODIGO, CT_TIPO, CTO_HORASTRABAJONORMAL, CTO_HORASTRABAJOEXTENDIDO, CTO_ACTIVO, CTO_DESCRIPCION, CTO_CAPACIDADCICLO, CTO_HORASCICLO, CTO_TIEMPOANTES, CTO_TIEMPODESPUES, CTO_EFICIENCIA, CTO_COSTOHORA, CTO_COSTOCICLO, CTO_CAPACIDADUNIDADHORA, CTO_EFICIENCIAINICIAL FROM dbo.CENTROS_TRABAJOS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsHojaRuta.CENTROS_TRABAJOSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsHojaRuta.CENTROS_TRABAJOSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsHojaRuta.CENTROS_TRABAJOSDataTable dataTable = new dsHojaRuta.CENTROS_TRABAJOSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta.CENTROS_TRABAJOSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsHojaRuta dataSet) {
            return this.Adapter.Update(dataSet, "CENTROS_TRABAJOS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    decimal Original_CTO_CODIGO, 
                    string Original_CTO_NOMBRE, 
                    global::System.Nullable<decimal> Original_SEC_CODIGO, 
                    decimal Original_CT_TIPO, 
                    global::System.Nullable<decimal> Original_CTO_HORASTRABAJONORMAL, 
                    global::System.Nullable<decimal> Original_CTO_HORASTRABAJOEXTENDIDO, 
                    global::System.Nullable<decimal> Original_CTO_ACTIVO, 
                    string Original_CTO_DESCRIPCION, 
                    global::System.Nullable<decimal> Original_CTO_CAPACIDADCICLO, 
                    global::System.Nullable<decimal> Original_CTO_HORASCICLO, 
                    global::System.Nullable<decimal> Original_CTO_TIEMPOANTES, 
                    global::System.Nullable<decimal> Original_CTO_TIEMPODESPUES, 
                    global::System.Nullable<decimal> Original_CTO_EFICIENCIA, 
                    global::System.Nullable<decimal> Original_CTO_COSTOHORA, 
                    global::System.Nullable<decimal> Original_CTO_COSTOCICLO, 
                    global::System.Nullable<decimal> Original_CTO_CAPACIDADUNIDADHORA, 
                    decimal Original_CTO_EFICIENCIAINICIAL) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_CTO_CODIGO));
            if ((Original_CTO_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CTO_NOMBRE));
            }
            if ((Original_SEC_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_SEC_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_CT_TIPO));
            if ((Original_CTO_HORASTRABAJONORMAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_CTO_HORASTRABAJONORMAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_HORASTRABAJOEXTENDIDO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_CTO_HORASTRABAJOEXTENDIDO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_ACTIVO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_CTO_ACTIVO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_CTO_DESCRIPCION));
            }
            if ((Original_CTO_CAPACIDADCICLO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_CTO_CAPACIDADCICLO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_HORASCICLO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((decimal)(Original_CTO_HORASCICLO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_TIEMPOANTES.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((decimal)(Original_CTO_TIEMPOANTES.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_TIEMPODESPUES.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((decimal)(Original_CTO_TIEMPODESPUES.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_EFICIENCIA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_CTO_EFICIENCIA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_COSTOHORA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((decimal)(Original_CTO_COSTOHORA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_COSTOCICLO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((decimal)(Original_CTO_COSTOCICLO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_CAPACIDADUNIDADHORA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((decimal)(Original_CTO_CAPACIDADUNIDADHORA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[30].Value = ((decimal)(Original_CTO_EFICIENCIAINICIAL));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string CTO_NOMBRE, 
                    global::System.Nullable<decimal> SEC_CODIGO, 
                    decimal CT_TIPO, 
                    global::System.Nullable<decimal> CTO_HORASTRABAJONORMAL, 
                    global::System.Nullable<decimal> CTO_HORASTRABAJOEXTENDIDO, 
                    global::System.Nullable<decimal> CTO_ACTIVO, 
                    string CTO_DESCRIPCION, 
                    global::System.Nullable<decimal> CTO_CAPACIDADCICLO, 
                    global::System.Nullable<decimal> CTO_HORASCICLO, 
                    global::System.Nullable<decimal> CTO_TIEMPOANTES, 
                    global::System.Nullable<decimal> CTO_TIEMPODESPUES, 
                    global::System.Nullable<decimal> CTO_EFICIENCIA, 
                    global::System.Nullable<decimal> CTO_COSTOHORA, 
                    global::System.Nullable<decimal> CTO_COSTOCICLO, 
                    global::System.Nullable<decimal> CTO_CAPACIDADUNIDADHORA, 
                    decimal CTO_EFICIENCIAINICIAL) {
            if ((CTO_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CTO_NOMBRE));
            }
            if ((SEC_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(SEC_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(CT_TIPO));
            if ((CTO_HORASTRABAJONORMAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(CTO_HORASTRABAJONORMAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((CTO_HORASTRABAJOEXTENDIDO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(CTO_HORASTRABAJOEXTENDIDO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((CTO_ACTIVO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(CTO_ACTIVO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((CTO_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CTO_DESCRIPCION));
            }
            if ((CTO_CAPACIDADCICLO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(CTO_CAPACIDADCICLO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CTO_HORASCICLO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(CTO_HORASCICLO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CTO_TIEMPOANTES.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(CTO_TIEMPOANTES.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((CTO_TIEMPODESPUES.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(CTO_TIEMPODESPUES.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((CTO_EFICIENCIA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(CTO_EFICIENCIA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((CTO_COSTOHORA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(CTO_COSTOHORA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((CTO_COSTOCICLO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(CTO_COSTOCICLO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((CTO_CAPACIDADUNIDADHORA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(CTO_CAPACIDADUNIDADHORA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(CTO_EFICIENCIAINICIAL));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CTO_NOMBRE, 
                    global::System.Nullable<decimal> SEC_CODIGO, 
                    decimal CT_TIPO, 
                    global::System.Nullable<decimal> CTO_HORASTRABAJONORMAL, 
                    global::System.Nullable<decimal> CTO_HORASTRABAJOEXTENDIDO, 
                    global::System.Nullable<decimal> CTO_ACTIVO, 
                    string CTO_DESCRIPCION, 
                    global::System.Nullable<decimal> CTO_CAPACIDADCICLO, 
                    global::System.Nullable<decimal> CTO_HORASCICLO, 
                    global::System.Nullable<decimal> CTO_TIEMPOANTES, 
                    global::System.Nullable<decimal> CTO_TIEMPODESPUES, 
                    global::System.Nullable<decimal> CTO_EFICIENCIA, 
                    global::System.Nullable<decimal> CTO_COSTOHORA, 
                    global::System.Nullable<decimal> CTO_COSTOCICLO, 
                    global::System.Nullable<decimal> CTO_CAPACIDADUNIDADHORA, 
                    decimal CTO_EFICIENCIAINICIAL, 
                    decimal Original_CTO_CODIGO, 
                    string Original_CTO_NOMBRE, 
                    global::System.Nullable<decimal> Original_SEC_CODIGO, 
                    decimal Original_CT_TIPO, 
                    global::System.Nullable<decimal> Original_CTO_HORASTRABAJONORMAL, 
                    global::System.Nullable<decimal> Original_CTO_HORASTRABAJOEXTENDIDO, 
                    global::System.Nullable<decimal> Original_CTO_ACTIVO, 
                    string Original_CTO_DESCRIPCION, 
                    global::System.Nullable<decimal> Original_CTO_CAPACIDADCICLO, 
                    global::System.Nullable<decimal> Original_CTO_HORASCICLO, 
                    global::System.Nullable<decimal> Original_CTO_TIEMPOANTES, 
                    global::System.Nullable<decimal> Original_CTO_TIEMPODESPUES, 
                    global::System.Nullable<decimal> Original_CTO_EFICIENCIA, 
                    global::System.Nullable<decimal> Original_CTO_COSTOHORA, 
                    global::System.Nullable<decimal> Original_CTO_COSTOCICLO, 
                    global::System.Nullable<decimal> Original_CTO_CAPACIDADUNIDADHORA, 
                    decimal Original_CTO_EFICIENCIAINICIAL, 
                    decimal CTO_CODIGO) {
            if ((CTO_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CTO_NOMBRE));
            }
            if ((SEC_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(SEC_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(CT_TIPO));
            if ((CTO_HORASTRABAJONORMAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(CTO_HORASTRABAJONORMAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((CTO_HORASTRABAJOEXTENDIDO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(CTO_HORASTRABAJOEXTENDIDO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((CTO_ACTIVO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(CTO_ACTIVO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((CTO_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CTO_DESCRIPCION));
            }
            if ((CTO_CAPACIDADCICLO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(CTO_CAPACIDADCICLO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CTO_HORASCICLO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(CTO_HORASCICLO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CTO_TIEMPOANTES.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(CTO_TIEMPOANTES.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((CTO_TIEMPODESPUES.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(CTO_TIEMPODESPUES.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((CTO_EFICIENCIA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(CTO_EFICIENCIA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((CTO_COSTOHORA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(CTO_COSTOHORA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((CTO_COSTOCICLO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(CTO_COSTOCICLO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((CTO_CAPACIDADUNIDADHORA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(CTO_CAPACIDADUNIDADHORA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(CTO_EFICIENCIAINICIAL));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_CTO_CODIGO));
            if ((Original_CTO_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_CTO_NOMBRE));
            }
            if ((Original_SEC_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_SEC_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_CT_TIPO));
            if ((Original_CTO_HORASTRABAJONORMAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_CTO_HORASTRABAJONORMAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_HORASTRABAJOEXTENDIDO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(Original_CTO_HORASTRABAJOEXTENDIDO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_ACTIVO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(Original_CTO_ACTIVO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_CTO_DESCRIPCION));
            }
            if ((Original_CTO_CAPACIDADCICLO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Original_CTO_CAPACIDADCICLO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_HORASCICLO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Original_CTO_HORASCICLO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_TIEMPOANTES.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(Original_CTO_TIEMPOANTES.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_TIEMPODESPUES.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(Original_CTO_TIEMPODESPUES.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_EFICIENCIA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(Original_CTO_EFICIENCIA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_COSTOHORA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(Original_CTO_COSTOHORA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_COSTOCICLO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(Original_CTO_COSTOCICLO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_CTO_CAPACIDADUNIDADHORA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(Original_CTO_CAPACIDADUNIDADHORA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(Original_CTO_EFICIENCIAINICIAL));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(CTO_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CTO_NOMBRE, 
                    global::System.Nullable<decimal> SEC_CODIGO, 
                    decimal CT_TIPO, 
                    global::System.Nullable<decimal> CTO_HORASTRABAJONORMAL, 
                    global::System.Nullable<decimal> CTO_HORASTRABAJOEXTENDIDO, 
                    global::System.Nullable<decimal> CTO_ACTIVO, 
                    string CTO_DESCRIPCION, 
                    global::System.Nullable<decimal> CTO_CAPACIDADCICLO, 
                    global::System.Nullable<decimal> CTO_HORASCICLO, 
                    global::System.Nullable<decimal> CTO_TIEMPOANTES, 
                    global::System.Nullable<decimal> CTO_TIEMPODESPUES, 
                    global::System.Nullable<decimal> CTO_EFICIENCIA, 
                    global::System.Nullable<decimal> CTO_COSTOHORA, 
                    global::System.Nullable<decimal> CTO_COSTOCICLO, 
                    global::System.Nullable<decimal> CTO_CAPACIDADUNIDADHORA, 
                    decimal CTO_EFICIENCIAINICIAL, 
                    decimal Original_CTO_CODIGO, 
                    string Original_CTO_NOMBRE, 
                    global::System.Nullable<decimal> Original_SEC_CODIGO, 
                    decimal Original_CT_TIPO, 
                    global::System.Nullable<decimal> Original_CTO_HORASTRABAJONORMAL, 
                    global::System.Nullable<decimal> Original_CTO_HORASTRABAJOEXTENDIDO, 
                    global::System.Nullable<decimal> Original_CTO_ACTIVO, 
                    string Original_CTO_DESCRIPCION, 
                    global::System.Nullable<decimal> Original_CTO_CAPACIDADCICLO, 
                    global::System.Nullable<decimal> Original_CTO_HORASCICLO, 
                    global::System.Nullable<decimal> Original_CTO_TIEMPOANTES, 
                    global::System.Nullable<decimal> Original_CTO_TIEMPODESPUES, 
                    global::System.Nullable<decimal> Original_CTO_EFICIENCIA, 
                    global::System.Nullable<decimal> Original_CTO_COSTOHORA, 
                    global::System.Nullable<decimal> Original_CTO_COSTOCICLO, 
                    global::System.Nullable<decimal> Original_CTO_CAPACIDADUNIDADHORA, 
                    decimal Original_CTO_EFICIENCIAINICIAL) {
            return this.Update(CTO_NOMBRE, SEC_CODIGO, CT_TIPO, CTO_HORASTRABAJONORMAL, CTO_HORASTRABAJOEXTENDIDO, CTO_ACTIVO, CTO_DESCRIPCION, CTO_CAPACIDADCICLO, CTO_HORASCICLO, CTO_TIEMPOANTES, CTO_TIEMPODESPUES, CTO_EFICIENCIA, CTO_COSTOHORA, CTO_COSTOCICLO, CTO_CAPACIDADUNIDADHORA, CTO_EFICIENCIAINICIAL, Original_CTO_CODIGO, Original_CTO_NOMBRE, Original_SEC_CODIGO, Original_CT_TIPO, Original_CTO_HORASTRABAJONORMAL, Original_CTO_HORASTRABAJOEXTENDIDO, Original_CTO_ACTIVO, Original_CTO_DESCRIPCION, Original_CTO_CAPACIDADCICLO, Original_CTO_HORASCICLO, Original_CTO_TIEMPOANTES, Original_CTO_TIEMPODESPUES, Original_CTO_EFICIENCIA, Original_CTO_COSTOHORA, Original_CTO_COSTOCICLO, Original_CTO_CAPACIDADUNIDADHORA, Original_CTO_EFICIENCIAINICIAL, Original_CTO_CODIGO);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private SECTORESTableAdapter _sECTORESTableAdapter;
        
        private TURNOS_TRABAJOTableAdapter _tURNOS_TRABAJOTableAdapter;
        
        private TURNOSXCENTROTRABAJOTableAdapter _tURNOSXCENTROTRABAJOTableAdapter;
        
        private OPERACIONESTableAdapter _oPERACIONESTableAdapter;
        
        private DETALLE_HOJARUTATableAdapter _dETALLE_HOJARUTATableAdapter;
        
        private HOJAS_RUTATableAdapter _hOJAS_RUTATableAdapter;
        
        private UBICACIONES_STOCKTableAdapter _uBICACIONES_STOCKTableAdapter;
        
        private CONTENIDO_UBICACION_STOCKTableAdapter _cONTENIDO_UBICACION_STOCKTableAdapter;
        
        private TIPOS_UBICACIONES_STOCKTableAdapter _tIPOS_UBICACIONES_STOCKTableAdapter;
        
        private UNIDADES_MEDIDATableAdapter _uNIDADES_MEDIDATableAdapter;
        
        private TIPOS_UNIDADES_MEDIDATableAdapter _tIPOS_UNIDADES_MEDIDATableAdapter;
        
        private TIPOS_CENTRO_TRABAJOTableAdapter _tIPOS_CENTRO_TRABAJOTableAdapter;
        
        private CENTROS_TRABAJOSTableAdapter _cENTROS_TRABAJOSTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public SECTORESTableAdapter SECTORESTableAdapter {
            get {
                return this._sECTORESTableAdapter;
            }
            set {
                this._sECTORESTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TURNOS_TRABAJOTableAdapter TURNOS_TRABAJOTableAdapter {
            get {
                return this._tURNOS_TRABAJOTableAdapter;
            }
            set {
                this._tURNOS_TRABAJOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TURNOSXCENTROTRABAJOTableAdapter TURNOSXCENTROTRABAJOTableAdapter {
            get {
                return this._tURNOSXCENTROTRABAJOTableAdapter;
            }
            set {
                this._tURNOSXCENTROTRABAJOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public OPERACIONESTableAdapter OPERACIONESTableAdapter {
            get {
                return this._oPERACIONESTableAdapter;
            }
            set {
                this._oPERACIONESTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public DETALLE_HOJARUTATableAdapter DETALLE_HOJARUTATableAdapter {
            get {
                return this._dETALLE_HOJARUTATableAdapter;
            }
            set {
                this._dETALLE_HOJARUTATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public HOJAS_RUTATableAdapter HOJAS_RUTATableAdapter {
            get {
                return this._hOJAS_RUTATableAdapter;
            }
            set {
                this._hOJAS_RUTATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public UBICACIONES_STOCKTableAdapter UBICACIONES_STOCKTableAdapter {
            get {
                return this._uBICACIONES_STOCKTableAdapter;
            }
            set {
                this._uBICACIONES_STOCKTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CONTENIDO_UBICACION_STOCKTableAdapter CONTENIDO_UBICACION_STOCKTableAdapter {
            get {
                return this._cONTENIDO_UBICACION_STOCKTableAdapter;
            }
            set {
                this._cONTENIDO_UBICACION_STOCKTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TIPOS_UBICACIONES_STOCKTableAdapter TIPOS_UBICACIONES_STOCKTableAdapter {
            get {
                return this._tIPOS_UBICACIONES_STOCKTableAdapter;
            }
            set {
                this._tIPOS_UBICACIONES_STOCKTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public UNIDADES_MEDIDATableAdapter UNIDADES_MEDIDATableAdapter {
            get {
                return this._uNIDADES_MEDIDATableAdapter;
            }
            set {
                this._uNIDADES_MEDIDATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TIPOS_UNIDADES_MEDIDATableAdapter TIPOS_UNIDADES_MEDIDATableAdapter {
            get {
                return this._tIPOS_UNIDADES_MEDIDATableAdapter;
            }
            set {
                this._tIPOS_UNIDADES_MEDIDATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TIPOS_CENTRO_TRABAJOTableAdapter TIPOS_CENTRO_TRABAJOTableAdapter {
            get {
                return this._tIPOS_CENTRO_TRABAJOTableAdapter;
            }
            set {
                this._tIPOS_CENTRO_TRABAJOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CENTROS_TRABAJOSTableAdapter CENTROS_TRABAJOSTableAdapter {
            get {
                return this._cENTROS_TRABAJOSTableAdapter;
            }
            set {
                this._cENTROS_TRABAJOSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._sECTORESTableAdapter != null) 
                            && (this._sECTORESTableAdapter.Connection != null))) {
                    return this._sECTORESTableAdapter.Connection;
                }
                if (((this._tURNOS_TRABAJOTableAdapter != null) 
                            && (this._tURNOS_TRABAJOTableAdapter.Connection != null))) {
                    return this._tURNOS_TRABAJOTableAdapter.Connection;
                }
                if (((this._tURNOSXCENTROTRABAJOTableAdapter != null) 
                            && (this._tURNOSXCENTROTRABAJOTableAdapter.Connection != null))) {
                    return this._tURNOSXCENTROTRABAJOTableAdapter.Connection;
                }
                if (((this._oPERACIONESTableAdapter != null) 
                            && (this._oPERACIONESTableAdapter.Connection != null))) {
                    return this._oPERACIONESTableAdapter.Connection;
                }
                if (((this._dETALLE_HOJARUTATableAdapter != null) 
                            && (this._dETALLE_HOJARUTATableAdapter.Connection != null))) {
                    return this._dETALLE_HOJARUTATableAdapter.Connection;
                }
                if (((this._hOJAS_RUTATableAdapter != null) 
                            && (this._hOJAS_RUTATableAdapter.Connection != null))) {
                    return this._hOJAS_RUTATableAdapter.Connection;
                }
                if (((this._uBICACIONES_STOCKTableAdapter != null) 
                            && (this._uBICACIONES_STOCKTableAdapter.Connection != null))) {
                    return this._uBICACIONES_STOCKTableAdapter.Connection;
                }
                if (((this._cONTENIDO_UBICACION_STOCKTableAdapter != null) 
                            && (this._cONTENIDO_UBICACION_STOCKTableAdapter.Connection != null))) {
                    return this._cONTENIDO_UBICACION_STOCKTableAdapter.Connection;
                }
                if (((this._tIPOS_UBICACIONES_STOCKTableAdapter != null) 
                            && (this._tIPOS_UBICACIONES_STOCKTableAdapter.Connection != null))) {
                    return this._tIPOS_UBICACIONES_STOCKTableAdapter.Connection;
                }
                if (((this._uNIDADES_MEDIDATableAdapter != null) 
                            && (this._uNIDADES_MEDIDATableAdapter.Connection != null))) {
                    return this._uNIDADES_MEDIDATableAdapter.Connection;
                }
                if (((this._tIPOS_UNIDADES_MEDIDATableAdapter != null) 
                            && (this._tIPOS_UNIDADES_MEDIDATableAdapter.Connection != null))) {
                    return this._tIPOS_UNIDADES_MEDIDATableAdapter.Connection;
                }
                if (((this._tIPOS_CENTRO_TRABAJOTableAdapter != null) 
                            && (this._tIPOS_CENTRO_TRABAJOTableAdapter.Connection != null))) {
                    return this._tIPOS_CENTRO_TRABAJOTableAdapter.Connection;
                }
                if (((this._cENTROS_TRABAJOSTableAdapter != null) 
                            && (this._cENTROS_TRABAJOSTableAdapter.Connection != null))) {
                    return this._cENTROS_TRABAJOSTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._sECTORESTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tURNOS_TRABAJOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tURNOSXCENTROTRABAJOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._oPERACIONESTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dETALLE_HOJARUTATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hOJAS_RUTATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._uBICACIONES_STOCKTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cONTENIDO_UBICACION_STOCKTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tIPOS_UBICACIONES_STOCKTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tIPOS_UNIDADES_MEDIDATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tIPOS_CENTRO_TRABAJOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cENTROS_TRABAJOSTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(dsHojaRuta dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tIPOS_UNIDADES_MEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TIPOS_UNIDADES_MEDIDA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tIPOS_UNIDADES_MEDIDATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tIPOS_UBICACIONES_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TIPOS_UBICACIONES_STOCK.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tIPOS_UBICACIONES_STOCKTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cONTENIDO_UBICACION_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CONTENIDO_UBICACION_STOCK.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cONTENIDO_UBICACION_STOCKTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UNIDADES_MEDIDA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._uNIDADES_MEDIDATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._uBICACIONES_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UBICACIONES_STOCK.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    this.SortSelfReferenceRows(updatedRows, dataSet.Relations["FK_UBICACIONES_STOCK_UBICACION_STOCK"], false);
                    result = (result + this._uBICACIONES_STOCKTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tIPOS_CENTRO_TRABAJOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TIPOS_CENTRO_TRABAJO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tIPOS_CENTRO_TRABAJOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sECTORESTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SECTORES.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sECTORESTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cENTROS_TRABAJOSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CENTROS_TRABAJOS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cENTROS_TRABAJOSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tURNOS_TRABAJOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TURNOS_TRABAJO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tURNOS_TRABAJOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hOJAS_RUTATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HOJAS_RUTA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hOJAS_RUTATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._oPERACIONESTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.OPERACIONES.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._oPERACIONESTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tURNOSXCENTROTRABAJOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TURNOSXCENTROTRABAJO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tURNOSXCENTROTRABAJOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dETALLE_HOJARUTATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DETALLE_HOJARUTA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dETALLE_HOJARUTATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(dsHojaRuta dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tIPOS_UNIDADES_MEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TIPOS_UNIDADES_MEDIDA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tIPOS_UNIDADES_MEDIDATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tIPOS_UBICACIONES_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TIPOS_UBICACIONES_STOCK.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tIPOS_UBICACIONES_STOCKTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cONTENIDO_UBICACION_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CONTENIDO_UBICACION_STOCK.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cONTENIDO_UBICACION_STOCKTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UNIDADES_MEDIDA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._uNIDADES_MEDIDATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._uBICACIONES_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UBICACIONES_STOCK.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    this.SortSelfReferenceRows(addedRows, dataSet.Relations["FK_UBICACIONES_STOCK_UBICACION_STOCK"], false);
                    result = (result + this._uBICACIONES_STOCKTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tIPOS_CENTRO_TRABAJOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TIPOS_CENTRO_TRABAJO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tIPOS_CENTRO_TRABAJOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sECTORESTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SECTORES.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sECTORESTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cENTROS_TRABAJOSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CENTROS_TRABAJOS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cENTROS_TRABAJOSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tURNOS_TRABAJOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TURNOS_TRABAJO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tURNOS_TRABAJOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hOJAS_RUTATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HOJAS_RUTA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hOJAS_RUTATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._oPERACIONESTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.OPERACIONES.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._oPERACIONESTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tURNOSXCENTROTRABAJOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TURNOSXCENTROTRABAJO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tURNOSXCENTROTRABAJOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dETALLE_HOJARUTATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DETALLE_HOJARUTA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dETALLE_HOJARUTATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(dsHojaRuta dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._dETALLE_HOJARUTATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DETALLE_HOJARUTA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dETALLE_HOJARUTATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tURNOSXCENTROTRABAJOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TURNOSXCENTROTRABAJO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tURNOSXCENTROTRABAJOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._oPERACIONESTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.OPERACIONES.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._oPERACIONESTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hOJAS_RUTATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HOJAS_RUTA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hOJAS_RUTATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tURNOS_TRABAJOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TURNOS_TRABAJO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tURNOS_TRABAJOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cENTROS_TRABAJOSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CENTROS_TRABAJOS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cENTROS_TRABAJOSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sECTORESTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SECTORES.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sECTORESTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tIPOS_CENTRO_TRABAJOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TIPOS_CENTRO_TRABAJO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tIPOS_CENTRO_TRABAJOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._uBICACIONES_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UBICACIONES_STOCK.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    this.SortSelfReferenceRows(deletedRows, dataSet.Relations["FK_UBICACIONES_STOCK_UBICACION_STOCK"], true);
                    result = (result + this._uBICACIONES_STOCKTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UNIDADES_MEDIDA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._uNIDADES_MEDIDATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cONTENIDO_UBICACION_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CONTENIDO_UBICACION_STOCK.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cONTENIDO_UBICACION_STOCKTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tIPOS_UBICACIONES_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TIPOS_UBICACIONES_STOCK.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tIPOS_UBICACIONES_STOCKTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tIPOS_UNIDADES_MEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TIPOS_UNIDADES_MEDIDA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tIPOS_UNIDADES_MEDIDATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(dsHojaRuta dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._sECTORESTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sECTORESTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tURNOS_TRABAJOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tURNOS_TRABAJOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tURNOSXCENTROTRABAJOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tURNOSXCENTROTRABAJOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._oPERACIONESTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._oPERACIONESTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dETALLE_HOJARUTATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dETALLE_HOJARUTATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._hOJAS_RUTATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hOJAS_RUTATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._uBICACIONES_STOCKTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._uBICACIONES_STOCKTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cONTENIDO_UBICACION_STOCKTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cONTENIDO_UBICACION_STOCKTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tIPOS_UBICACIONES_STOCKTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tIPOS_UBICACIONES_STOCKTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._uNIDADES_MEDIDATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._uNIDADES_MEDIDATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tIPOS_UNIDADES_MEDIDATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tIPOS_UNIDADES_MEDIDATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tIPOS_CENTRO_TRABAJOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tIPOS_CENTRO_TRABAJOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cENTROS_TRABAJOSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cENTROS_TRABAJOSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._sECTORESTableAdapter != null)) {
                    revertConnections.Add(this._sECTORESTableAdapter, this._sECTORESTableAdapter.Connection);
                    this._sECTORESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sECTORESTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sECTORESTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sECTORESTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sECTORESTableAdapter.Adapter);
                    }
                }
                if ((this._tURNOS_TRABAJOTableAdapter != null)) {
                    revertConnections.Add(this._tURNOS_TRABAJOTableAdapter, this._tURNOS_TRABAJOTableAdapter.Connection);
                    this._tURNOS_TRABAJOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tURNOS_TRABAJOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tURNOS_TRABAJOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tURNOS_TRABAJOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tURNOS_TRABAJOTableAdapter.Adapter);
                    }
                }
                if ((this._tURNOSXCENTROTRABAJOTableAdapter != null)) {
                    revertConnections.Add(this._tURNOSXCENTROTRABAJOTableAdapter, this._tURNOSXCENTROTRABAJOTableAdapter.Connection);
                    this._tURNOSXCENTROTRABAJOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tURNOSXCENTROTRABAJOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tURNOSXCENTROTRABAJOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tURNOSXCENTROTRABAJOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tURNOSXCENTROTRABAJOTableAdapter.Adapter);
                    }
                }
                if ((this._oPERACIONESTableAdapter != null)) {
                    revertConnections.Add(this._oPERACIONESTableAdapter, this._oPERACIONESTableAdapter.Connection);
                    this._oPERACIONESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._oPERACIONESTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._oPERACIONESTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._oPERACIONESTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._oPERACIONESTableAdapter.Adapter);
                    }
                }
                if ((this._dETALLE_HOJARUTATableAdapter != null)) {
                    revertConnections.Add(this._dETALLE_HOJARUTATableAdapter, this._dETALLE_HOJARUTATableAdapter.Connection);
                    this._dETALLE_HOJARUTATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dETALLE_HOJARUTATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dETALLE_HOJARUTATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dETALLE_HOJARUTATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dETALLE_HOJARUTATableAdapter.Adapter);
                    }
                }
                if ((this._hOJAS_RUTATableAdapter != null)) {
                    revertConnections.Add(this._hOJAS_RUTATableAdapter, this._hOJAS_RUTATableAdapter.Connection);
                    this._hOJAS_RUTATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._hOJAS_RUTATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._hOJAS_RUTATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hOJAS_RUTATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hOJAS_RUTATableAdapter.Adapter);
                    }
                }
                if ((this._uBICACIONES_STOCKTableAdapter != null)) {
                    revertConnections.Add(this._uBICACIONES_STOCKTableAdapter, this._uBICACIONES_STOCKTableAdapter.Connection);
                    this._uBICACIONES_STOCKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._uBICACIONES_STOCKTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._uBICACIONES_STOCKTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._uBICACIONES_STOCKTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._uBICACIONES_STOCKTableAdapter.Adapter);
                    }
                }
                if ((this._cONTENIDO_UBICACION_STOCKTableAdapter != null)) {
                    revertConnections.Add(this._cONTENIDO_UBICACION_STOCKTableAdapter, this._cONTENIDO_UBICACION_STOCKTableAdapter.Connection);
                    this._cONTENIDO_UBICACION_STOCKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cONTENIDO_UBICACION_STOCKTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cONTENIDO_UBICACION_STOCKTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cONTENIDO_UBICACION_STOCKTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cONTENIDO_UBICACION_STOCKTableAdapter.Adapter);
                    }
                }
                if ((this._tIPOS_UBICACIONES_STOCKTableAdapter != null)) {
                    revertConnections.Add(this._tIPOS_UBICACIONES_STOCKTableAdapter, this._tIPOS_UBICACIONES_STOCKTableAdapter.Connection);
                    this._tIPOS_UBICACIONES_STOCKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tIPOS_UBICACIONES_STOCKTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tIPOS_UBICACIONES_STOCKTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tIPOS_UBICACIONES_STOCKTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tIPOS_UBICACIONES_STOCKTableAdapter.Adapter);
                    }
                }
                if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                    revertConnections.Add(this._uNIDADES_MEDIDATableAdapter, this._uNIDADES_MEDIDATableAdapter.Connection);
                    this._uNIDADES_MEDIDATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._uNIDADES_MEDIDATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._uNIDADES_MEDIDATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._uNIDADES_MEDIDATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._uNIDADES_MEDIDATableAdapter.Adapter);
                    }
                }
                if ((this._tIPOS_UNIDADES_MEDIDATableAdapter != null)) {
                    revertConnections.Add(this._tIPOS_UNIDADES_MEDIDATableAdapter, this._tIPOS_UNIDADES_MEDIDATableAdapter.Connection);
                    this._tIPOS_UNIDADES_MEDIDATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tIPOS_UNIDADES_MEDIDATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tIPOS_UNIDADES_MEDIDATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tIPOS_UNIDADES_MEDIDATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tIPOS_UNIDADES_MEDIDATableAdapter.Adapter);
                    }
                }
                if ((this._tIPOS_CENTRO_TRABAJOTableAdapter != null)) {
                    revertConnections.Add(this._tIPOS_CENTRO_TRABAJOTableAdapter, this._tIPOS_CENTRO_TRABAJOTableAdapter.Connection);
                    this._tIPOS_CENTRO_TRABAJOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tIPOS_CENTRO_TRABAJOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tIPOS_CENTRO_TRABAJOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tIPOS_CENTRO_TRABAJOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tIPOS_CENTRO_TRABAJOTableAdapter.Adapter);
                    }
                }
                if ((this._cENTROS_TRABAJOSTableAdapter != null)) {
                    revertConnections.Add(this._cENTROS_TRABAJOSTableAdapter, this._cENTROS_TRABAJOSTableAdapter.Connection);
                    this._cENTROS_TRABAJOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cENTROS_TRABAJOSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cENTROS_TRABAJOSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cENTROS_TRABAJOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cENTROS_TRABAJOSTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._sECTORESTableAdapter != null)) {
                    this._sECTORESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sECTORESTableAdapter]));
                    this._sECTORESTableAdapter.Transaction = null;
                }
                if ((this._tURNOS_TRABAJOTableAdapter != null)) {
                    this._tURNOS_TRABAJOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tURNOS_TRABAJOTableAdapter]));
                    this._tURNOS_TRABAJOTableAdapter.Transaction = null;
                }
                if ((this._tURNOSXCENTROTRABAJOTableAdapter != null)) {
                    this._tURNOSXCENTROTRABAJOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tURNOSXCENTROTRABAJOTableAdapter]));
                    this._tURNOSXCENTROTRABAJOTableAdapter.Transaction = null;
                }
                if ((this._oPERACIONESTableAdapter != null)) {
                    this._oPERACIONESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._oPERACIONESTableAdapter]));
                    this._oPERACIONESTableAdapter.Transaction = null;
                }
                if ((this._dETALLE_HOJARUTATableAdapter != null)) {
                    this._dETALLE_HOJARUTATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dETALLE_HOJARUTATableAdapter]));
                    this._dETALLE_HOJARUTATableAdapter.Transaction = null;
                }
                if ((this._hOJAS_RUTATableAdapter != null)) {
                    this._hOJAS_RUTATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._hOJAS_RUTATableAdapter]));
                    this._hOJAS_RUTATableAdapter.Transaction = null;
                }
                if ((this._uBICACIONES_STOCKTableAdapter != null)) {
                    this._uBICACIONES_STOCKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._uBICACIONES_STOCKTableAdapter]));
                    this._uBICACIONES_STOCKTableAdapter.Transaction = null;
                }
                if ((this._cONTENIDO_UBICACION_STOCKTableAdapter != null)) {
                    this._cONTENIDO_UBICACION_STOCKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cONTENIDO_UBICACION_STOCKTableAdapter]));
                    this._cONTENIDO_UBICACION_STOCKTableAdapter.Transaction = null;
                }
                if ((this._tIPOS_UBICACIONES_STOCKTableAdapter != null)) {
                    this._tIPOS_UBICACIONES_STOCKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tIPOS_UBICACIONES_STOCKTableAdapter]));
                    this._tIPOS_UBICACIONES_STOCKTableAdapter.Transaction = null;
                }
                if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                    this._uNIDADES_MEDIDATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._uNIDADES_MEDIDATableAdapter]));
                    this._uNIDADES_MEDIDATableAdapter.Transaction = null;
                }
                if ((this._tIPOS_UNIDADES_MEDIDATableAdapter != null)) {
                    this._tIPOS_UNIDADES_MEDIDATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tIPOS_UNIDADES_MEDIDATableAdapter]));
                    this._tIPOS_UNIDADES_MEDIDATableAdapter.Transaction = null;
                }
                if ((this._tIPOS_CENTRO_TRABAJOTableAdapter != null)) {
                    this._tIPOS_CENTRO_TRABAJOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tIPOS_CENTRO_TRABAJOTableAdapter]));
                    this._tIPOS_CENTRO_TRABAJOTableAdapter.Transaction = null;
                }
                if ((this._cENTROS_TRABAJOSTableAdapter != null)) {
                    this._cENTROS_TRABAJOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cENTROS_TRABAJOSTableAdapter]));
                    this._cENTROS_TRABAJOSTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591