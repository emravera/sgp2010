//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.3620
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GyCAP.Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsInventarioABC")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsInventarioABC : global::System.Data.DataSet {
        
        private COCINASDataTable tableCOCINAS;
        
        private PLANES_ANUALESDataTable tablePLANES_ANUALES;
        
        private MATERIAS_PRIMASDataTable tableMATERIAS_PRIMAS;
        
        private MODELOS_PRODUCIDOSDataTable tableMODELOS_PRODUCIDOS;
        
        private MATERIAS_PRIMAS_ABCDataTable tableMATERIAS_PRIMAS_ABC;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsInventarioABC() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsInventarioABC(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["COCINAS"] != null)) {
                    base.Tables.Add(new COCINASDataTable(ds.Tables["COCINAS"]));
                }
                if ((ds.Tables["PLANES_ANUALES"] != null)) {
                    base.Tables.Add(new PLANES_ANUALESDataTable(ds.Tables["PLANES_ANUALES"]));
                }
                if ((ds.Tables["MATERIAS_PRIMAS"] != null)) {
                    base.Tables.Add(new MATERIAS_PRIMASDataTable(ds.Tables["MATERIAS_PRIMAS"]));
                }
                if ((ds.Tables["MODELOS_PRODUCIDOS"] != null)) {
                    base.Tables.Add(new MODELOS_PRODUCIDOSDataTable(ds.Tables["MODELOS_PRODUCIDOS"]));
                }
                if ((ds.Tables["MATERIAS_PRIMAS_ABC"] != null)) {
                    base.Tables.Add(new MATERIAS_PRIMAS_ABCDataTable(ds.Tables["MATERIAS_PRIMAS_ABC"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public COCINASDataTable COCINAS {
            get {
                return this.tableCOCINAS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PLANES_ANUALESDataTable PLANES_ANUALES {
            get {
                return this.tablePLANES_ANUALES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MATERIAS_PRIMASDataTable MATERIAS_PRIMAS {
            get {
                return this.tableMATERIAS_PRIMAS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MODELOS_PRODUCIDOSDataTable MODELOS_PRODUCIDOS {
            get {
                return this.tableMODELOS_PRODUCIDOS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MATERIAS_PRIMAS_ABCDataTable MATERIAS_PRIMAS_ABC {
            get {
                return this.tableMATERIAS_PRIMAS_ABC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsInventarioABC cln = ((dsInventarioABC)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["COCINAS"] != null)) {
                    base.Tables.Add(new COCINASDataTable(ds.Tables["COCINAS"]));
                }
                if ((ds.Tables["PLANES_ANUALES"] != null)) {
                    base.Tables.Add(new PLANES_ANUALESDataTable(ds.Tables["PLANES_ANUALES"]));
                }
                if ((ds.Tables["MATERIAS_PRIMAS"] != null)) {
                    base.Tables.Add(new MATERIAS_PRIMASDataTable(ds.Tables["MATERIAS_PRIMAS"]));
                }
                if ((ds.Tables["MODELOS_PRODUCIDOS"] != null)) {
                    base.Tables.Add(new MODELOS_PRODUCIDOSDataTable(ds.Tables["MODELOS_PRODUCIDOS"]));
                }
                if ((ds.Tables["MATERIAS_PRIMAS_ABC"] != null)) {
                    base.Tables.Add(new MATERIAS_PRIMAS_ABCDataTable(ds.Tables["MATERIAS_PRIMAS_ABC"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCOCINAS = ((COCINASDataTable)(base.Tables["COCINAS"]));
            if ((initTable == true)) {
                if ((this.tableCOCINAS != null)) {
                    this.tableCOCINAS.InitVars();
                }
            }
            this.tablePLANES_ANUALES = ((PLANES_ANUALESDataTable)(base.Tables["PLANES_ANUALES"]));
            if ((initTable == true)) {
                if ((this.tablePLANES_ANUALES != null)) {
                    this.tablePLANES_ANUALES.InitVars();
                }
            }
            this.tableMATERIAS_PRIMAS = ((MATERIAS_PRIMASDataTable)(base.Tables["MATERIAS_PRIMAS"]));
            if ((initTable == true)) {
                if ((this.tableMATERIAS_PRIMAS != null)) {
                    this.tableMATERIAS_PRIMAS.InitVars();
                }
            }
            this.tableMODELOS_PRODUCIDOS = ((MODELOS_PRODUCIDOSDataTable)(base.Tables["MODELOS_PRODUCIDOS"]));
            if ((initTable == true)) {
                if ((this.tableMODELOS_PRODUCIDOS != null)) {
                    this.tableMODELOS_PRODUCIDOS.InitVars();
                }
            }
            this.tableMATERIAS_PRIMAS_ABC = ((MATERIAS_PRIMAS_ABCDataTable)(base.Tables["MATERIAS_PRIMAS_ABC"]));
            if ((initTable == true)) {
                if ((this.tableMATERIAS_PRIMAS_ABC != null)) {
                    this.tableMATERIAS_PRIMAS_ABC.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsInventarioABC";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsInventarioABC.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCOCINAS = new COCINASDataTable();
            base.Tables.Add(this.tableCOCINAS);
            this.tablePLANES_ANUALES = new PLANES_ANUALESDataTable();
            base.Tables.Add(this.tablePLANES_ANUALES);
            this.tableMATERIAS_PRIMAS = new MATERIAS_PRIMASDataTable();
            base.Tables.Add(this.tableMATERIAS_PRIMAS);
            this.tableMODELOS_PRODUCIDOS = new MODELOS_PRODUCIDOSDataTable();
            base.Tables.Add(this.tableMODELOS_PRODUCIDOS);
            this.tableMATERIAS_PRIMAS_ABC = new MATERIAS_PRIMAS_ABCDataTable();
            base.Tables.Add(this.tableMATERIAS_PRIMAS_ABC);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCOCINAS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePLANES_ANUALES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMATERIAS_PRIMAS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMODELOS_PRODUCIDOS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMATERIAS_PRIMAS_ABC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsInventarioABC ds = new dsInventarioABC();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void COCINASRowChangeEventHandler(object sender, COCINASRowChangeEvent e);
        
        public delegate void PLANES_ANUALESRowChangeEventHandler(object sender, PLANES_ANUALESRowChangeEvent e);
        
        public delegate void MATERIAS_PRIMASRowChangeEventHandler(object sender, MATERIAS_PRIMASRowChangeEvent e);
        
        public delegate void MODELOS_PRODUCIDOSRowChangeEventHandler(object sender, MODELOS_PRODUCIDOSRowChangeEvent e);
        
        public delegate void MATERIAS_PRIMAS_ABCRowChangeEventHandler(object sender, MATERIAS_PRIMAS_ABCRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class COCINASDataTable : global::System.Data.TypedTableBase<COCINASRow> {
            
            private global::System.Data.DataColumn columnCOC_CODIGO;
            
            private global::System.Data.DataColumn columnCOL_CODIGO;
            
            private global::System.Data.DataColumn columnMOD_CODIGO;
            
            private global::System.Data.DataColumn columnMCA_CODIGO;
            
            private global::System.Data.DataColumn columnTE_CODIGO;
            
            private global::System.Data.DataColumn columnDESIG_CODIGO;
            
            private global::System.Data.DataColumn columnCOC_CODIGO_PRODUCTO;
            
            private global::System.Data.DataColumn columnCOC_ACTIVO;
            
            private global::System.Data.DataColumn columnCOC_HAS_IMAGE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COCINASDataTable() {
                this.TableName = "COCINAS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal COCINASDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected COCINASDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COC_CODIGOColumn {
                get {
                    return this.columnCOC_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COL_CODIGOColumn {
                get {
                    return this.columnCOL_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOD_CODIGOColumn {
                get {
                    return this.columnMOD_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MCA_CODIGOColumn {
                get {
                    return this.columnMCA_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TE_CODIGOColumn {
                get {
                    return this.columnTE_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESIG_CODIGOColumn {
                get {
                    return this.columnDESIG_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COC_CODIGO_PRODUCTOColumn {
                get {
                    return this.columnCOC_CODIGO_PRODUCTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COC_ACTIVOColumn {
                get {
                    return this.columnCOC_ACTIVO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COC_HAS_IMAGEColumn {
                get {
                    return this.columnCOC_HAS_IMAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COCINASRow this[int index] {
                get {
                    return ((COCINASRow)(this.Rows[index]));
                }
            }
            
            public event COCINASRowChangeEventHandler COCINASRowChanging;
            
            public event COCINASRowChangeEventHandler COCINASRowChanged;
            
            public event COCINASRowChangeEventHandler COCINASRowDeleting;
            
            public event COCINASRowChangeEventHandler COCINASRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCOCINASRow(COCINASRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COCINASRow AddCOCINASRow(decimal COL_CODIGO, decimal MOD_CODIGO, decimal MCA_CODIGO, decimal TE_CODIGO, decimal DESIG_CODIGO, string COC_CODIGO_PRODUCTO, decimal COC_ACTIVO, decimal COC_HAS_IMAGE) {
                COCINASRow rowCOCINASRow = ((COCINASRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        COL_CODIGO,
                        MOD_CODIGO,
                        MCA_CODIGO,
                        TE_CODIGO,
                        DESIG_CODIGO,
                        COC_CODIGO_PRODUCTO,
                        COC_ACTIVO,
                        COC_HAS_IMAGE};
                rowCOCINASRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCOCINASRow);
                return rowCOCINASRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COCINASRow FindByCOC_CODIGO(decimal COC_CODIGO) {
                return ((COCINASRow)(this.Rows.Find(new object[] {
                            COC_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                COCINASDataTable cln = ((COCINASDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new COCINASDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCOC_CODIGO = base.Columns["COC_CODIGO"];
                this.columnCOL_CODIGO = base.Columns["COL_CODIGO"];
                this.columnMOD_CODIGO = base.Columns["MOD_CODIGO"];
                this.columnMCA_CODIGO = base.Columns["MCA_CODIGO"];
                this.columnTE_CODIGO = base.Columns["TE_CODIGO"];
                this.columnDESIG_CODIGO = base.Columns["DESIG_CODIGO"];
                this.columnCOC_CODIGO_PRODUCTO = base.Columns["COC_CODIGO_PRODUCTO"];
                this.columnCOC_ACTIVO = base.Columns["COC_ACTIVO"];
                this.columnCOC_HAS_IMAGE = base.Columns["COC_HAS_IMAGE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCOC_CODIGO = new global::System.Data.DataColumn("COC_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOC_CODIGO);
                this.columnCOL_CODIGO = new global::System.Data.DataColumn("COL_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOL_CODIGO);
                this.columnMOD_CODIGO = new global::System.Data.DataColumn("MOD_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOD_CODIGO);
                this.columnMCA_CODIGO = new global::System.Data.DataColumn("MCA_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMCA_CODIGO);
                this.columnTE_CODIGO = new global::System.Data.DataColumn("TE_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTE_CODIGO);
                this.columnDESIG_CODIGO = new global::System.Data.DataColumn("DESIG_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESIG_CODIGO);
                this.columnCOC_CODIGO_PRODUCTO = new global::System.Data.DataColumn("COC_CODIGO_PRODUCTO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOC_CODIGO_PRODUCTO);
                this.columnCOC_ACTIVO = new global::System.Data.DataColumn("COC_ACTIVO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOC_ACTIVO);
                this.columnCOC_HAS_IMAGE = new global::System.Data.DataColumn("COC_HAS_IMAGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOC_HAS_IMAGE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCOC_CODIGO}, true));
                this.columnCOC_CODIGO.AutoIncrement = true;
                this.columnCOC_CODIGO.AutoIncrementSeed = -1;
                this.columnCOC_CODIGO.AutoIncrementStep = -1;
                this.columnCOC_CODIGO.AllowDBNull = false;
                this.columnCOC_CODIGO.ReadOnly = true;
                this.columnCOC_CODIGO.Unique = true;
                this.columnCOL_CODIGO.AllowDBNull = false;
                this.columnMOD_CODIGO.AllowDBNull = false;
                this.columnMCA_CODIGO.AllowDBNull = false;
                this.columnTE_CODIGO.AllowDBNull = false;
                this.columnDESIG_CODIGO.AllowDBNull = false;
                this.columnCOC_CODIGO_PRODUCTO.AllowDBNull = false;
                this.columnCOC_CODIGO_PRODUCTO.MaxLength = 80;
                this.columnCOC_ACTIVO.AllowDBNull = false;
                this.columnCOC_HAS_IMAGE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COCINASRow NewCOCINASRow() {
                return ((COCINASRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new COCINASRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(COCINASRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.COCINASRowChanged != null)) {
                    this.COCINASRowChanged(this, new COCINASRowChangeEvent(((COCINASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.COCINASRowChanging != null)) {
                    this.COCINASRowChanging(this, new COCINASRowChangeEvent(((COCINASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.COCINASRowDeleted != null)) {
                    this.COCINASRowDeleted(this, new COCINASRowChangeEvent(((COCINASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.COCINASRowDeleting != null)) {
                    this.COCINASRowDeleting(this, new COCINASRowChangeEvent(((COCINASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCOCINASRow(COCINASRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsInventarioABC ds = new dsInventarioABC();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "COCINASDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PLANES_ANUALESDataTable : global::System.Data.TypedTableBase<PLANES_ANUALESRow> {
            
            private global::System.Data.DataColumn columnPAN_CODIGO;
            
            private global::System.Data.DataColumn columnPAN_ANIO;
            
            private global::System.Data.DataColumn columnDEMAN_CODIGO;
            
            private global::System.Data.DataColumn columnPAN_FECHACREACION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_ANUALESDataTable() {
                this.TableName = "PLANES_ANUALES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PLANES_ANUALESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PLANES_ANUALESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAN_CODIGOColumn {
                get {
                    return this.columnPAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAN_ANIOColumn {
                get {
                    return this.columnPAN_ANIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEMAN_CODIGOColumn {
                get {
                    return this.columnDEMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAN_FECHACREACIONColumn {
                get {
                    return this.columnPAN_FECHACREACION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_ANUALESRow this[int index] {
                get {
                    return ((PLANES_ANUALESRow)(this.Rows[index]));
                }
            }
            
            public event PLANES_ANUALESRowChangeEventHandler PLANES_ANUALESRowChanging;
            
            public event PLANES_ANUALESRowChangeEventHandler PLANES_ANUALESRowChanged;
            
            public event PLANES_ANUALESRowChangeEventHandler PLANES_ANUALESRowDeleting;
            
            public event PLANES_ANUALESRowChangeEventHandler PLANES_ANUALESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPLANES_ANUALESRow(PLANES_ANUALESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_ANUALESRow AddPLANES_ANUALESRow(decimal PAN_ANIO, decimal DEMAN_CODIGO, System.DateTime PAN_FECHACREACION) {
                PLANES_ANUALESRow rowPLANES_ANUALESRow = ((PLANES_ANUALESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PAN_ANIO,
                        DEMAN_CODIGO,
                        PAN_FECHACREACION};
                rowPLANES_ANUALESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPLANES_ANUALESRow);
                return rowPLANES_ANUALESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_ANUALESRow FindByPAN_CODIGO(decimal PAN_CODIGO) {
                return ((PLANES_ANUALESRow)(this.Rows.Find(new object[] {
                            PAN_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PLANES_ANUALESDataTable cln = ((PLANES_ANUALESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PLANES_ANUALESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPAN_CODIGO = base.Columns["PAN_CODIGO"];
                this.columnPAN_ANIO = base.Columns["PAN_ANIO"];
                this.columnDEMAN_CODIGO = base.Columns["DEMAN_CODIGO"];
                this.columnPAN_FECHACREACION = base.Columns["PAN_FECHACREACION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPAN_CODIGO = new global::System.Data.DataColumn("PAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAN_CODIGO);
                this.columnPAN_ANIO = new global::System.Data.DataColumn("PAN_ANIO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAN_ANIO);
                this.columnDEMAN_CODIGO = new global::System.Data.DataColumn("DEMAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEMAN_CODIGO);
                this.columnPAN_FECHACREACION = new global::System.Data.DataColumn("PAN_FECHACREACION", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAN_FECHACREACION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPAN_CODIGO}, true));
                this.columnPAN_CODIGO.AutoIncrement = true;
                this.columnPAN_CODIGO.AutoIncrementSeed = -1;
                this.columnPAN_CODIGO.AutoIncrementStep = -1;
                this.columnPAN_CODIGO.AllowDBNull = false;
                this.columnPAN_CODIGO.ReadOnly = true;
                this.columnPAN_CODIGO.Unique = true;
                this.columnPAN_ANIO.AllowDBNull = false;
                this.columnDEMAN_CODIGO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_ANUALESRow NewPLANES_ANUALESRow() {
                return ((PLANES_ANUALESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PLANES_ANUALESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PLANES_ANUALESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PLANES_ANUALESRowChanged != null)) {
                    this.PLANES_ANUALESRowChanged(this, new PLANES_ANUALESRowChangeEvent(((PLANES_ANUALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PLANES_ANUALESRowChanging != null)) {
                    this.PLANES_ANUALESRowChanging(this, new PLANES_ANUALESRowChangeEvent(((PLANES_ANUALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PLANES_ANUALESRowDeleted != null)) {
                    this.PLANES_ANUALESRowDeleted(this, new PLANES_ANUALESRowChangeEvent(((PLANES_ANUALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PLANES_ANUALESRowDeleting != null)) {
                    this.PLANES_ANUALESRowDeleting(this, new PLANES_ANUALESRowChangeEvent(((PLANES_ANUALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePLANES_ANUALESRow(PLANES_ANUALESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsInventarioABC ds = new dsInventarioABC();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PLANES_ANUALESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MATERIAS_PRIMASDataTable : global::System.Data.TypedTableBase<MATERIAS_PRIMASRow> {
            
            private global::System.Data.DataColumn columnMP_CODIGO;
            
            private global::System.Data.DataColumn columnUMED_CODIGO;
            
            private global::System.Data.DataColumn columnMP_NOMBRE;
            
            private global::System.Data.DataColumn columnMP_DESCRIPCION;
            
            private global::System.Data.DataColumn columnMP_COSTO;
            
            private global::System.Data.DataColumn columnUSTCK_NUMERO;
            
            private global::System.Data.DataColumn columnMP_ESPRINCIPAL;
            
            private global::System.Data.DataColumn columnMP_CANTIDAD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASDataTable() {
                this.TableName = "MATERIAS_PRIMAS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MATERIAS_PRIMASDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MATERIAS_PRIMASDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_CODIGOColumn {
                get {
                    return this.columnMP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_CODIGOColumn {
                get {
                    return this.columnUMED_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_NOMBREColumn {
                get {
                    return this.columnMP_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_DESCRIPCIONColumn {
                get {
                    return this.columnMP_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_COSTOColumn {
                get {
                    return this.columnMP_COSTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USTCK_NUMEROColumn {
                get {
                    return this.columnUSTCK_NUMERO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_ESPRINCIPALColumn {
                get {
                    return this.columnMP_ESPRINCIPAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_CANTIDADColumn {
                get {
                    return this.columnMP_CANTIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow this[int index] {
                get {
                    return ((MATERIAS_PRIMASRow)(this.Rows[index]));
                }
            }
            
            public event MATERIAS_PRIMASRowChangeEventHandler MATERIAS_PRIMASRowChanging;
            
            public event MATERIAS_PRIMASRowChangeEventHandler MATERIAS_PRIMASRowChanged;
            
            public event MATERIAS_PRIMASRowChangeEventHandler MATERIAS_PRIMASRowDeleting;
            
            public event MATERIAS_PRIMASRowChangeEventHandler MATERIAS_PRIMASRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMATERIAS_PRIMASRow(MATERIAS_PRIMASRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow AddMATERIAS_PRIMASRow(decimal UMED_CODIGO, string MP_NOMBRE, string MP_DESCRIPCION, decimal MP_COSTO, decimal USTCK_NUMERO, decimal MP_ESPRINCIPAL, decimal MP_CANTIDAD) {
                MATERIAS_PRIMASRow rowMATERIAS_PRIMASRow = ((MATERIAS_PRIMASRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        UMED_CODIGO,
                        MP_NOMBRE,
                        MP_DESCRIPCION,
                        MP_COSTO,
                        USTCK_NUMERO,
                        MP_ESPRINCIPAL,
                        MP_CANTIDAD};
                rowMATERIAS_PRIMASRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMATERIAS_PRIMASRow);
                return rowMATERIAS_PRIMASRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow FindByMP_CODIGO(decimal MP_CODIGO) {
                return ((MATERIAS_PRIMASRow)(this.Rows.Find(new object[] {
                            MP_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MATERIAS_PRIMASDataTable cln = ((MATERIAS_PRIMASDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MATERIAS_PRIMASDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMP_CODIGO = base.Columns["MP_CODIGO"];
                this.columnUMED_CODIGO = base.Columns["UMED_CODIGO"];
                this.columnMP_NOMBRE = base.Columns["MP_NOMBRE"];
                this.columnMP_DESCRIPCION = base.Columns["MP_DESCRIPCION"];
                this.columnMP_COSTO = base.Columns["MP_COSTO"];
                this.columnUSTCK_NUMERO = base.Columns["USTCK_NUMERO"];
                this.columnMP_ESPRINCIPAL = base.Columns["MP_ESPRINCIPAL"];
                this.columnMP_CANTIDAD = base.Columns["MP_CANTIDAD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMP_CODIGO = new global::System.Data.DataColumn("MP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_CODIGO);
                this.columnUMED_CODIGO = new global::System.Data.DataColumn("UMED_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_CODIGO);
                this.columnMP_NOMBRE = new global::System.Data.DataColumn("MP_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_NOMBRE);
                this.columnMP_DESCRIPCION = new global::System.Data.DataColumn("MP_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_DESCRIPCION);
                this.columnMP_COSTO = new global::System.Data.DataColumn("MP_COSTO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_COSTO);
                this.columnUSTCK_NUMERO = new global::System.Data.DataColumn("USTCK_NUMERO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSTCK_NUMERO);
                this.columnMP_ESPRINCIPAL = new global::System.Data.DataColumn("MP_ESPRINCIPAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_ESPRINCIPAL);
                this.columnMP_CANTIDAD = new global::System.Data.DataColumn("MP_CANTIDAD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_CANTIDAD);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMP_CODIGO}, true));
                this.columnMP_CODIGO.AutoIncrement = true;
                this.columnMP_CODIGO.AutoIncrementSeed = -1;
                this.columnMP_CODIGO.AutoIncrementStep = -1;
                this.columnMP_CODIGO.AllowDBNull = false;
                this.columnMP_CODIGO.ReadOnly = true;
                this.columnMP_CODIGO.Unique = true;
                this.columnUMED_CODIGO.AllowDBNull = false;
                this.columnMP_NOMBRE.AllowDBNull = false;
                this.columnMP_NOMBRE.MaxLength = 80;
                this.columnMP_DESCRIPCION.MaxLength = 200;
                this.columnMP_COSTO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow NewMATERIAS_PRIMASRow() {
                return ((MATERIAS_PRIMASRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MATERIAS_PRIMASRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MATERIAS_PRIMASRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MATERIAS_PRIMASRowChanged != null)) {
                    this.MATERIAS_PRIMASRowChanged(this, new MATERIAS_PRIMASRowChangeEvent(((MATERIAS_PRIMASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MATERIAS_PRIMASRowChanging != null)) {
                    this.MATERIAS_PRIMASRowChanging(this, new MATERIAS_PRIMASRowChangeEvent(((MATERIAS_PRIMASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MATERIAS_PRIMASRowDeleted != null)) {
                    this.MATERIAS_PRIMASRowDeleted(this, new MATERIAS_PRIMASRowChangeEvent(((MATERIAS_PRIMASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MATERIAS_PRIMASRowDeleting != null)) {
                    this.MATERIAS_PRIMASRowDeleting(this, new MATERIAS_PRIMASRowChangeEvent(((MATERIAS_PRIMASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMATERIAS_PRIMASRow(MATERIAS_PRIMASRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsInventarioABC ds = new dsInventarioABC();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MATERIAS_PRIMASDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MODELOS_PRODUCIDOSDataTable : global::System.Data.TypedTableBase<MODELOS_PRODUCIDOSRow> {
            
            private global::System.Data.DataColumn columnCODIGO_MODELO_PRODUCIDO;
            
            private global::System.Data.DataColumn columnCODIGO_MODELO;
            
            private global::System.Data.DataColumn columnMODELO_PORCENTAJE;
            
            private global::System.Data.DataColumn columnMODELO_CANTIDAD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MODELOS_PRODUCIDOSDataTable() {
                this.TableName = "MODELOS_PRODUCIDOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MODELOS_PRODUCIDOSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MODELOS_PRODUCIDOSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODIGO_MODELO_PRODUCIDOColumn {
                get {
                    return this.columnCODIGO_MODELO_PRODUCIDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODIGO_MODELOColumn {
                get {
                    return this.columnCODIGO_MODELO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODELO_PORCENTAJEColumn {
                get {
                    return this.columnMODELO_PORCENTAJE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODELO_CANTIDADColumn {
                get {
                    return this.columnMODELO_CANTIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MODELOS_PRODUCIDOSRow this[int index] {
                get {
                    return ((MODELOS_PRODUCIDOSRow)(this.Rows[index]));
                }
            }
            
            public event MODELOS_PRODUCIDOSRowChangeEventHandler MODELOS_PRODUCIDOSRowChanging;
            
            public event MODELOS_PRODUCIDOSRowChangeEventHandler MODELOS_PRODUCIDOSRowChanged;
            
            public event MODELOS_PRODUCIDOSRowChangeEventHandler MODELOS_PRODUCIDOSRowDeleting;
            
            public event MODELOS_PRODUCIDOSRowChangeEventHandler MODELOS_PRODUCIDOSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMODELOS_PRODUCIDOSRow(MODELOS_PRODUCIDOSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MODELOS_PRODUCIDOSRow AddMODELOS_PRODUCIDOSRow(decimal CODIGO_MODELO_PRODUCIDO, decimal CODIGO_MODELO, decimal MODELO_PORCENTAJE, decimal MODELO_CANTIDAD) {
                MODELOS_PRODUCIDOSRow rowMODELOS_PRODUCIDOSRow = ((MODELOS_PRODUCIDOSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CODIGO_MODELO_PRODUCIDO,
                        CODIGO_MODELO,
                        MODELO_PORCENTAJE,
                        MODELO_CANTIDAD};
                rowMODELOS_PRODUCIDOSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMODELOS_PRODUCIDOSRow);
                return rowMODELOS_PRODUCIDOSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MODELOS_PRODUCIDOSRow FindByCODIGO_MODELO(decimal CODIGO_MODELO) {
                return ((MODELOS_PRODUCIDOSRow)(this.Rows.Find(new object[] {
                            CODIGO_MODELO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MODELOS_PRODUCIDOSDataTable cln = ((MODELOS_PRODUCIDOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MODELOS_PRODUCIDOSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCODIGO_MODELO_PRODUCIDO = base.Columns["CODIGO_MODELO_PRODUCIDO"];
                this.columnCODIGO_MODELO = base.Columns["CODIGO_MODELO"];
                this.columnMODELO_PORCENTAJE = base.Columns["MODELO_PORCENTAJE"];
                this.columnMODELO_CANTIDAD = base.Columns["MODELO_CANTIDAD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCODIGO_MODELO_PRODUCIDO = new global::System.Data.DataColumn("CODIGO_MODELO_PRODUCIDO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODIGO_MODELO_PRODUCIDO);
                this.columnCODIGO_MODELO = new global::System.Data.DataColumn("CODIGO_MODELO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODIGO_MODELO);
                this.columnMODELO_PORCENTAJE = new global::System.Data.DataColumn("MODELO_PORCENTAJE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODELO_PORCENTAJE);
                this.columnMODELO_CANTIDAD = new global::System.Data.DataColumn("MODELO_CANTIDAD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODELO_CANTIDAD);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCODIGO_MODELO}, true));
                this.columnCODIGO_MODELO.AllowDBNull = false;
                this.columnCODIGO_MODELO.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MODELOS_PRODUCIDOSRow NewMODELOS_PRODUCIDOSRow() {
                return ((MODELOS_PRODUCIDOSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MODELOS_PRODUCIDOSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MODELOS_PRODUCIDOSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MODELOS_PRODUCIDOSRowChanged != null)) {
                    this.MODELOS_PRODUCIDOSRowChanged(this, new MODELOS_PRODUCIDOSRowChangeEvent(((MODELOS_PRODUCIDOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MODELOS_PRODUCIDOSRowChanging != null)) {
                    this.MODELOS_PRODUCIDOSRowChanging(this, new MODELOS_PRODUCIDOSRowChangeEvent(((MODELOS_PRODUCIDOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MODELOS_PRODUCIDOSRowDeleted != null)) {
                    this.MODELOS_PRODUCIDOSRowDeleted(this, new MODELOS_PRODUCIDOSRowChangeEvent(((MODELOS_PRODUCIDOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MODELOS_PRODUCIDOSRowDeleting != null)) {
                    this.MODELOS_PRODUCIDOSRowDeleting(this, new MODELOS_PRODUCIDOSRowChangeEvent(((MODELOS_PRODUCIDOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMODELOS_PRODUCIDOSRow(MODELOS_PRODUCIDOSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsInventarioABC ds = new dsInventarioABC();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MODELOS_PRODUCIDOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MATERIAS_PRIMAS_ABCDataTable : global::System.Data.TypedTableBase<MATERIAS_PRIMAS_ABCRow> {
            
            private global::System.Data.DataColumn columnCODIGO_MATERIA_PRIMA_ABC;
            
            private global::System.Data.DataColumn columnCODIGO_MATERIA_PRIMA;
            
            private global::System.Data.DataColumn columnCANTIDAD_ANUAL;
            
            private global::System.Data.DataColumn columnPORCENTAJE_INVERSION;
            
            private global::System.Data.DataColumn columnCATEGORIA_ABC;
            
            private global::System.Data.DataColumn columnPRECIO_UNIDAD;
            
            private global::System.Data.DataColumn columnCANTIDAD_INVERSION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMAS_ABCDataTable() {
                this.TableName = "MATERIAS_PRIMAS_ABC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MATERIAS_PRIMAS_ABCDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MATERIAS_PRIMAS_ABCDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODIGO_MATERIA_PRIMA_ABCColumn {
                get {
                    return this.columnCODIGO_MATERIA_PRIMA_ABC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODIGO_MATERIA_PRIMAColumn {
                get {
                    return this.columnCODIGO_MATERIA_PRIMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CANTIDAD_ANUALColumn {
                get {
                    return this.columnCANTIDAD_ANUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PORCENTAJE_INVERSIONColumn {
                get {
                    return this.columnPORCENTAJE_INVERSION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CATEGORIA_ABCColumn {
                get {
                    return this.columnCATEGORIA_ABC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRECIO_UNIDADColumn {
                get {
                    return this.columnPRECIO_UNIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CANTIDAD_INVERSIONColumn {
                get {
                    return this.columnCANTIDAD_INVERSION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMAS_ABCRow this[int index] {
                get {
                    return ((MATERIAS_PRIMAS_ABCRow)(this.Rows[index]));
                }
            }
            
            public event MATERIAS_PRIMAS_ABCRowChangeEventHandler MATERIAS_PRIMAS_ABCRowChanging;
            
            public event MATERIAS_PRIMAS_ABCRowChangeEventHandler MATERIAS_PRIMAS_ABCRowChanged;
            
            public event MATERIAS_PRIMAS_ABCRowChangeEventHandler MATERIAS_PRIMAS_ABCRowDeleting;
            
            public event MATERIAS_PRIMAS_ABCRowChangeEventHandler MATERIAS_PRIMAS_ABCRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMATERIAS_PRIMAS_ABCRow(MATERIAS_PRIMAS_ABCRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMAS_ABCRow AddMATERIAS_PRIMAS_ABCRow(decimal CODIGO_MATERIA_PRIMA_ABC, decimal CODIGO_MATERIA_PRIMA, decimal CANTIDAD_ANUAL, decimal PORCENTAJE_INVERSION, string CATEGORIA_ABC, decimal PRECIO_UNIDAD, decimal CANTIDAD_INVERSION) {
                MATERIAS_PRIMAS_ABCRow rowMATERIAS_PRIMAS_ABCRow = ((MATERIAS_PRIMAS_ABCRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CODIGO_MATERIA_PRIMA_ABC,
                        CODIGO_MATERIA_PRIMA,
                        CANTIDAD_ANUAL,
                        PORCENTAJE_INVERSION,
                        CATEGORIA_ABC,
                        PRECIO_UNIDAD,
                        CANTIDAD_INVERSION};
                rowMATERIAS_PRIMAS_ABCRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMATERIAS_PRIMAS_ABCRow);
                return rowMATERIAS_PRIMAS_ABCRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMAS_ABCRow FindByCODIGO_MATERIA_PRIMA_ABC(decimal CODIGO_MATERIA_PRIMA_ABC) {
                return ((MATERIAS_PRIMAS_ABCRow)(this.Rows.Find(new object[] {
                            CODIGO_MATERIA_PRIMA_ABC})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MATERIAS_PRIMAS_ABCDataTable cln = ((MATERIAS_PRIMAS_ABCDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MATERIAS_PRIMAS_ABCDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCODIGO_MATERIA_PRIMA_ABC = base.Columns["CODIGO_MATERIA_PRIMA_ABC"];
                this.columnCODIGO_MATERIA_PRIMA = base.Columns["CODIGO_MATERIA_PRIMA"];
                this.columnCANTIDAD_ANUAL = base.Columns["CANTIDAD_ANUAL"];
                this.columnPORCENTAJE_INVERSION = base.Columns["PORCENTAJE_INVERSION"];
                this.columnCATEGORIA_ABC = base.Columns["CATEGORIA_ABC"];
                this.columnPRECIO_UNIDAD = base.Columns["PRECIO_UNIDAD"];
                this.columnCANTIDAD_INVERSION = base.Columns["CANTIDAD_INVERSION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCODIGO_MATERIA_PRIMA_ABC = new global::System.Data.DataColumn("CODIGO_MATERIA_PRIMA_ABC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODIGO_MATERIA_PRIMA_ABC);
                this.columnCODIGO_MATERIA_PRIMA = new global::System.Data.DataColumn("CODIGO_MATERIA_PRIMA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODIGO_MATERIA_PRIMA);
                this.columnCANTIDAD_ANUAL = new global::System.Data.DataColumn("CANTIDAD_ANUAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCANTIDAD_ANUAL);
                this.columnPORCENTAJE_INVERSION = new global::System.Data.DataColumn("PORCENTAJE_INVERSION", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORCENTAJE_INVERSION);
                this.columnCATEGORIA_ABC = new global::System.Data.DataColumn("CATEGORIA_ABC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCATEGORIA_ABC);
                this.columnPRECIO_UNIDAD = new global::System.Data.DataColumn("PRECIO_UNIDAD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRECIO_UNIDAD);
                this.columnCANTIDAD_INVERSION = new global::System.Data.DataColumn("CANTIDAD_INVERSION", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCANTIDAD_INVERSION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCODIGO_MATERIA_PRIMA_ABC}, true));
                this.columnCODIGO_MATERIA_PRIMA_ABC.AllowDBNull = false;
                this.columnCODIGO_MATERIA_PRIMA_ABC.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMAS_ABCRow NewMATERIAS_PRIMAS_ABCRow() {
                return ((MATERIAS_PRIMAS_ABCRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MATERIAS_PRIMAS_ABCRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MATERIAS_PRIMAS_ABCRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MATERIAS_PRIMAS_ABCRowChanged != null)) {
                    this.MATERIAS_PRIMAS_ABCRowChanged(this, new MATERIAS_PRIMAS_ABCRowChangeEvent(((MATERIAS_PRIMAS_ABCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MATERIAS_PRIMAS_ABCRowChanging != null)) {
                    this.MATERIAS_PRIMAS_ABCRowChanging(this, new MATERIAS_PRIMAS_ABCRowChangeEvent(((MATERIAS_PRIMAS_ABCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MATERIAS_PRIMAS_ABCRowDeleted != null)) {
                    this.MATERIAS_PRIMAS_ABCRowDeleted(this, new MATERIAS_PRIMAS_ABCRowChangeEvent(((MATERIAS_PRIMAS_ABCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MATERIAS_PRIMAS_ABCRowDeleting != null)) {
                    this.MATERIAS_PRIMAS_ABCRowDeleting(this, new MATERIAS_PRIMAS_ABCRowChangeEvent(((MATERIAS_PRIMAS_ABCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMATERIAS_PRIMAS_ABCRow(MATERIAS_PRIMAS_ABCRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsInventarioABC ds = new dsInventarioABC();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MATERIAS_PRIMAS_ABCDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class COCINASRow : global::System.Data.DataRow {
            
            private COCINASDataTable tableCOCINAS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal COCINASRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCOCINAS = ((COCINASDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal COC_CODIGO {
                get {
                    return ((decimal)(this[this.tableCOCINAS.COC_CODIGOColumn]));
                }
                set {
                    this[this.tableCOCINAS.COC_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal COL_CODIGO {
                get {
                    return ((decimal)(this[this.tableCOCINAS.COL_CODIGOColumn]));
                }
                set {
                    this[this.tableCOCINAS.COL_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MOD_CODIGO {
                get {
                    return ((decimal)(this[this.tableCOCINAS.MOD_CODIGOColumn]));
                }
                set {
                    this[this.tableCOCINAS.MOD_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MCA_CODIGO {
                get {
                    return ((decimal)(this[this.tableCOCINAS.MCA_CODIGOColumn]));
                }
                set {
                    this[this.tableCOCINAS.MCA_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TE_CODIGO {
                get {
                    return ((decimal)(this[this.tableCOCINAS.TE_CODIGOColumn]));
                }
                set {
                    this[this.tableCOCINAS.TE_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DESIG_CODIGO {
                get {
                    return ((decimal)(this[this.tableCOCINAS.DESIG_CODIGOColumn]));
                }
                set {
                    this[this.tableCOCINAS.DESIG_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COC_CODIGO_PRODUCTO {
                get {
                    return ((string)(this[this.tableCOCINAS.COC_CODIGO_PRODUCTOColumn]));
                }
                set {
                    this[this.tableCOCINAS.COC_CODIGO_PRODUCTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal COC_ACTIVO {
                get {
                    return ((decimal)(this[this.tableCOCINAS.COC_ACTIVOColumn]));
                }
                set {
                    this[this.tableCOCINAS.COC_ACTIVOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal COC_HAS_IMAGE {
                get {
                    return ((decimal)(this[this.tableCOCINAS.COC_HAS_IMAGEColumn]));
                }
                set {
                    this[this.tableCOCINAS.COC_HAS_IMAGEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PLANES_ANUALESRow : global::System.Data.DataRow {
            
            private PLANES_ANUALESDataTable tablePLANES_ANUALES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PLANES_ANUALESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePLANES_ANUALES = ((PLANES_ANUALESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PAN_CODIGO {
                get {
                    return ((decimal)(this[this.tablePLANES_ANUALES.PAN_CODIGOColumn]));
                }
                set {
                    this[this.tablePLANES_ANUALES.PAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PAN_ANIO {
                get {
                    return ((decimal)(this[this.tablePLANES_ANUALES.PAN_ANIOColumn]));
                }
                set {
                    this[this.tablePLANES_ANUALES.PAN_ANIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DEMAN_CODIGO {
                get {
                    return ((decimal)(this[this.tablePLANES_ANUALES.DEMAN_CODIGOColumn]));
                }
                set {
                    this[this.tablePLANES_ANUALES.DEMAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PAN_FECHACREACION {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePLANES_ANUALES.PAN_FECHACREACIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PAN_FECHACREACION\' de la tabla \'PLANES_ANUALES\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePLANES_ANUALES.PAN_FECHACREACIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAN_FECHACREACIONNull() {
                return this.IsNull(this.tablePLANES_ANUALES.PAN_FECHACREACIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAN_FECHACREACIONNull() {
                this[this.tablePLANES_ANUALES.PAN_FECHACREACIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MATERIAS_PRIMASRow : global::System.Data.DataRow {
            
            private MATERIAS_PRIMASDataTable tableMATERIAS_PRIMAS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MATERIAS_PRIMASRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMATERIAS_PRIMAS = ((MATERIAS_PRIMASDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MP_CODIGO {
                get {
                    return ((decimal)(this[this.tableMATERIAS_PRIMAS.MP_CODIGOColumn]));
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.MP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UMED_CODIGO {
                get {
                    return ((decimal)(this[this.tableMATERIAS_PRIMAS.UMED_CODIGOColumn]));
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.UMED_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MP_NOMBRE {
                get {
                    return ((string)(this[this.tableMATERIAS_PRIMAS.MP_NOMBREColumn]));
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.MP_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MP_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableMATERIAS_PRIMAS.MP_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MP_DESCRIPCION\' de la tabla \'MATERIAS_PRIMAS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.MP_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MP_COSTO {
                get {
                    return ((decimal)(this[this.tableMATERIAS_PRIMAS.MP_COSTOColumn]));
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.MP_COSTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal USTCK_NUMERO {
                get {
                    try {
                        return ((decimal)(this[this.tableMATERIAS_PRIMAS.USTCK_NUMEROColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'USTCK_NUMERO\' de la tabla \'MATERIAS_PRIMAS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.USTCK_NUMEROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MP_ESPRINCIPAL {
                get {
                    try {
                        return ((decimal)(this[this.tableMATERIAS_PRIMAS.MP_ESPRINCIPALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MP_ESPRINCIPAL\' de la tabla \'MATERIAS_PRIMAS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.MP_ESPRINCIPALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MP_CANTIDAD {
                get {
                    try {
                        return ((decimal)(this[this.tableMATERIAS_PRIMAS.MP_CANTIDADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MP_CANTIDAD\' de la tabla \'MATERIAS_PRIMAS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.MP_CANTIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMP_DESCRIPCIONNull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS.MP_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMP_DESCRIPCIONNull() {
                this[this.tableMATERIAS_PRIMAS.MP_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSTCK_NUMERONull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS.USTCK_NUMEROColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSTCK_NUMERONull() {
                this[this.tableMATERIAS_PRIMAS.USTCK_NUMEROColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMP_ESPRINCIPALNull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS.MP_ESPRINCIPALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMP_ESPRINCIPALNull() {
                this[this.tableMATERIAS_PRIMAS.MP_ESPRINCIPALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMP_CANTIDADNull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS.MP_CANTIDADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMP_CANTIDADNull() {
                this[this.tableMATERIAS_PRIMAS.MP_CANTIDADColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MODELOS_PRODUCIDOSRow : global::System.Data.DataRow {
            
            private MODELOS_PRODUCIDOSDataTable tableMODELOS_PRODUCIDOS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MODELOS_PRODUCIDOSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMODELOS_PRODUCIDOS = ((MODELOS_PRODUCIDOSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CODIGO_MODELO_PRODUCIDO {
                get {
                    try {
                        return ((decimal)(this[this.tableMODELOS_PRODUCIDOS.CODIGO_MODELO_PRODUCIDOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CODIGO_MODELO_PRODUCIDO\' de la tabla \'MODELOS_PRODUCIDOS\'" +
                                " es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMODELOS_PRODUCIDOS.CODIGO_MODELO_PRODUCIDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CODIGO_MODELO {
                get {
                    return ((decimal)(this[this.tableMODELOS_PRODUCIDOS.CODIGO_MODELOColumn]));
                }
                set {
                    this[this.tableMODELOS_PRODUCIDOS.CODIGO_MODELOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MODELO_PORCENTAJE {
                get {
                    try {
                        return ((decimal)(this[this.tableMODELOS_PRODUCIDOS.MODELO_PORCENTAJEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MODELO_PORCENTAJE\' de la tabla \'MODELOS_PRODUCIDOS\' es DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableMODELOS_PRODUCIDOS.MODELO_PORCENTAJEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MODELO_CANTIDAD {
                get {
                    try {
                        return ((decimal)(this[this.tableMODELOS_PRODUCIDOS.MODELO_CANTIDADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MODELO_CANTIDAD\' de la tabla \'MODELOS_PRODUCIDOS\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableMODELOS_PRODUCIDOS.MODELO_CANTIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODIGO_MODELO_PRODUCIDONull() {
                return this.IsNull(this.tableMODELOS_PRODUCIDOS.CODIGO_MODELO_PRODUCIDOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODIGO_MODELO_PRODUCIDONull() {
                this[this.tableMODELOS_PRODUCIDOS.CODIGO_MODELO_PRODUCIDOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODELO_PORCENTAJENull() {
                return this.IsNull(this.tableMODELOS_PRODUCIDOS.MODELO_PORCENTAJEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODELO_PORCENTAJENull() {
                this[this.tableMODELOS_PRODUCIDOS.MODELO_PORCENTAJEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODELO_CANTIDADNull() {
                return this.IsNull(this.tableMODELOS_PRODUCIDOS.MODELO_CANTIDADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODELO_CANTIDADNull() {
                this[this.tableMODELOS_PRODUCIDOS.MODELO_CANTIDADColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MATERIAS_PRIMAS_ABCRow : global::System.Data.DataRow {
            
            private MATERIAS_PRIMAS_ABCDataTable tableMATERIAS_PRIMAS_ABC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MATERIAS_PRIMAS_ABCRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMATERIAS_PRIMAS_ABC = ((MATERIAS_PRIMAS_ABCDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CODIGO_MATERIA_PRIMA_ABC {
                get {
                    return ((decimal)(this[this.tableMATERIAS_PRIMAS_ABC.CODIGO_MATERIA_PRIMA_ABCColumn]));
                }
                set {
                    this[this.tableMATERIAS_PRIMAS_ABC.CODIGO_MATERIA_PRIMA_ABCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CODIGO_MATERIA_PRIMA {
                get {
                    try {
                        return ((decimal)(this[this.tableMATERIAS_PRIMAS_ABC.CODIGO_MATERIA_PRIMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CODIGO_MATERIA_PRIMA\' de la tabla \'MATERIAS_PRIMAS_ABC\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS_ABC.CODIGO_MATERIA_PRIMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CANTIDAD_ANUAL {
                get {
                    try {
                        return ((decimal)(this[this.tableMATERIAS_PRIMAS_ABC.CANTIDAD_ANUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CANTIDAD_ANUAL\' de la tabla \'MATERIAS_PRIMAS_ABC\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS_ABC.CANTIDAD_ANUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PORCENTAJE_INVERSION {
                get {
                    try {
                        return ((decimal)(this[this.tableMATERIAS_PRIMAS_ABC.PORCENTAJE_INVERSIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PORCENTAJE_INVERSION\' de la tabla \'MATERIAS_PRIMAS_ABC\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS_ABC.PORCENTAJE_INVERSIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CATEGORIA_ABC {
                get {
                    try {
                        return ((string)(this[this.tableMATERIAS_PRIMAS_ABC.CATEGORIA_ABCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CATEGORIA_ABC\' de la tabla \'MATERIAS_PRIMAS_ABC\' es DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS_ABC.CATEGORIA_ABCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PRECIO_UNIDAD {
                get {
                    try {
                        return ((decimal)(this[this.tableMATERIAS_PRIMAS_ABC.PRECIO_UNIDADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PRECIO_UNIDAD\' de la tabla \'MATERIAS_PRIMAS_ABC\' es DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS_ABC.PRECIO_UNIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CANTIDAD_INVERSION {
                get {
                    try {
                        return ((decimal)(this[this.tableMATERIAS_PRIMAS_ABC.CANTIDAD_INVERSIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CANTIDAD_INVERSION\' de la tabla \'MATERIAS_PRIMAS_ABC\' es " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS_ABC.CANTIDAD_INVERSIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODIGO_MATERIA_PRIMANull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS_ABC.CODIGO_MATERIA_PRIMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODIGO_MATERIA_PRIMANull() {
                this[this.tableMATERIAS_PRIMAS_ABC.CODIGO_MATERIA_PRIMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCANTIDAD_ANUALNull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS_ABC.CANTIDAD_ANUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCANTIDAD_ANUALNull() {
                this[this.tableMATERIAS_PRIMAS_ABC.CANTIDAD_ANUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPORCENTAJE_INVERSIONNull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS_ABC.PORCENTAJE_INVERSIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPORCENTAJE_INVERSIONNull() {
                this[this.tableMATERIAS_PRIMAS_ABC.PORCENTAJE_INVERSIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCATEGORIA_ABCNull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS_ABC.CATEGORIA_ABCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCATEGORIA_ABCNull() {
                this[this.tableMATERIAS_PRIMAS_ABC.CATEGORIA_ABCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRECIO_UNIDADNull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS_ABC.PRECIO_UNIDADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRECIO_UNIDADNull() {
                this[this.tableMATERIAS_PRIMAS_ABC.PRECIO_UNIDADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCANTIDAD_INVERSIONNull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS_ABC.CANTIDAD_INVERSIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCANTIDAD_INVERSIONNull() {
                this[this.tableMATERIAS_PRIMAS_ABC.CANTIDAD_INVERSIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class COCINASRowChangeEvent : global::System.EventArgs {
            
            private COCINASRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COCINASRowChangeEvent(COCINASRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COCINASRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PLANES_ANUALESRowChangeEvent : global::System.EventArgs {
            
            private PLANES_ANUALESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_ANUALESRowChangeEvent(PLANES_ANUALESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_ANUALESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MATERIAS_PRIMASRowChangeEvent : global::System.EventArgs {
            
            private MATERIAS_PRIMASRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRowChangeEvent(MATERIAS_PRIMASRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MODELOS_PRODUCIDOSRowChangeEvent : global::System.EventArgs {
            
            private MODELOS_PRODUCIDOSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MODELOS_PRODUCIDOSRowChangeEvent(MODELOS_PRODUCIDOSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MODELOS_PRODUCIDOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MATERIAS_PRIMAS_ABCRowChangeEvent : global::System.EventArgs {
            
            private MATERIAS_PRIMAS_ABCRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMAS_ABCRowChangeEvent(MATERIAS_PRIMAS_ABCRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMAS_ABCRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GyCAP.Data.dsInventarioABCTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class COCINASTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public COCINASTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "COCINAS";
            tableMapping.ColumnMappings.Add("COC_CODIGO", "COC_CODIGO");
            tableMapping.ColumnMappings.Add("COL_CODIGO", "COL_CODIGO");
            tableMapping.ColumnMappings.Add("MOD_CODIGO", "MOD_CODIGO");
            tableMapping.ColumnMappings.Add("MCA_CODIGO", "MCA_CODIGO");
            tableMapping.ColumnMappings.Add("TE_CODIGO", "TE_CODIGO");
            tableMapping.ColumnMappings.Add("DESIG_CODIGO", "DESIG_CODIGO");
            tableMapping.ColumnMappings.Add("COC_CODIGO_PRODUCTO", "COC_CODIGO_PRODUCTO");
            tableMapping.ColumnMappings.Add("COC_ACTIVO", "COC_ACTIVO");
            tableMapping.ColumnMappings.Add("COC_HAS_IMAGE", "COC_HAS_IMAGE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[COCINAS] WHERE (([COC_CODIGO] = @Original_COC_CODIGO) AND ([COL_CODIGO] = @Original_COL_CODIGO) AND ([MOD_CODIGO] = @Original_MOD_CODIGO) AND ([MCA_CODIGO] = @Original_MCA_CODIGO) AND ([TE_CODIGO] = @Original_TE_CODIGO) AND ([DESIG_CODIGO] = @Original_DESIG_CODIGO) AND ([COC_CODIGO_PRODUCTO] = @Original_COC_CODIGO_PRODUCTO) AND ([COC_ACTIVO] = @Original_COC_ACTIVO) AND ([COC_HAS_IMAGE] = @Original_COC_HAS_IMAGE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "COC_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COL_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 0, "COL_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MOD_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MOD_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MCA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MCA_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESIG_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DESIG_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COC_CODIGO_PRODUCTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COC_CODIGO_PRODUCTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COC_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "COC_ACTIVO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COC_HAS_IMAGE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "COC_HAS_IMAGE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[COCINAS] ([COL_CODIGO], [MOD_CODIGO], [MCA_CODIGO], [TE_CODIGO], [DESIG_CODIGO], [COC_CODIGO_PRODUCTO], [COC_ACTIVO], [COC_HAS_IMAGE]) VALUES (@COL_CODIGO, @MOD_CODIGO, @MCA_CODIGO, @TE_CODIGO, @DESIG_CODIGO, @COC_CODIGO_PRODUCTO, @COC_ACTIVO, @COC_HAS_IMAGE);
SELECT COC_CODIGO, COL_CODIGO, MOD_CODIGO, MCA_CODIGO, TE_CODIGO, DESIG_CODIGO, COC_CODIGO_PRODUCTO, COC_ACTIVO, COC_HAS_IMAGE FROM COCINAS WHERE (COC_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COL_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 0, "COL_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MOD_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MOD_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MCA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MCA_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TE_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESIG_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DESIG_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COC_CODIGO_PRODUCTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COC_CODIGO_PRODUCTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COC_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "COC_ACTIVO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COC_HAS_IMAGE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "COC_HAS_IMAGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[COCINAS] SET [COL_CODIGO] = @COL_CODIGO, [MOD_CODIGO] = @MOD_CODIGO, [MCA_CODIGO] = @MCA_CODIGO, [TE_CODIGO] = @TE_CODIGO, [DESIG_CODIGO] = @DESIG_CODIGO, [COC_CODIGO_PRODUCTO] = @COC_CODIGO_PRODUCTO, [COC_ACTIVO] = @COC_ACTIVO, [COC_HAS_IMAGE] = @COC_HAS_IMAGE WHERE (([COC_CODIGO] = @Original_COC_CODIGO) AND ([COL_CODIGO] = @Original_COL_CODIGO) AND ([MOD_CODIGO] = @Original_MOD_CODIGO) AND ([MCA_CODIGO] = @Original_MCA_CODIGO) AND ([TE_CODIGO] = @Original_TE_CODIGO) AND ([DESIG_CODIGO] = @Original_DESIG_CODIGO) AND ([COC_CODIGO_PRODUCTO] = @Original_COC_CODIGO_PRODUCTO) AND ([COC_ACTIVO] = @Original_COC_ACTIVO) AND ([COC_HAS_IMAGE] = @Original_COC_HAS_IMAGE));
SELECT COC_CODIGO, COL_CODIGO, MOD_CODIGO, MCA_CODIGO, TE_CODIGO, DESIG_CODIGO, COC_CODIGO_PRODUCTO, COC_ACTIVO, COC_HAS_IMAGE FROM COCINAS WHERE (COC_CODIGO = @COC_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COL_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 0, "COL_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MOD_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MOD_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MCA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MCA_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TE_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESIG_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DESIG_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COC_CODIGO_PRODUCTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COC_CODIGO_PRODUCTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COC_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "COC_ACTIVO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COC_HAS_IMAGE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "COC_HAS_IMAGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "COC_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COL_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 0, "COL_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MOD_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MOD_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MCA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MCA_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESIG_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DESIG_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COC_CODIGO_PRODUCTO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COC_CODIGO_PRODUCTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COC_ACTIVO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "COC_ACTIVO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COC_HAS_IMAGE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "COC_HAS_IMAGE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COC_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "COC_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT COC_CODIGO, COL_CODIGO, MOD_CODIGO, MCA_CODIGO, TE_CODIGO, DESIG_CODIGO, C" +
                "OC_CODIGO_PRODUCTO, COC_ACTIVO, COC_HAS_IMAGE FROM dbo.COCINAS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsInventarioABC.COCINASDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsInventarioABC.COCINASDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsInventarioABC.COCINASDataTable dataTable = new dsInventarioABC.COCINASDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsInventarioABC.COCINASDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsInventarioABC dataSet) {
            return this.Adapter.Update(dataSet, "COCINAS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_COC_CODIGO, decimal Original_COL_CODIGO, decimal Original_MOD_CODIGO, decimal Original_MCA_CODIGO, decimal Original_TE_CODIGO, decimal Original_DESIG_CODIGO, string Original_COC_CODIGO_PRODUCTO, decimal Original_COC_ACTIVO, decimal Original_COC_HAS_IMAGE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_COC_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_COL_CODIGO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_MOD_CODIGO));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_MCA_CODIGO));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_TE_CODIGO));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_DESIG_CODIGO));
            if ((Original_COC_CODIGO_PRODUCTO == null)) {
                throw new global::System.ArgumentNullException("Original_COC_CODIGO_PRODUCTO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_COC_CODIGO_PRODUCTO));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_COC_ACTIVO));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_COC_HAS_IMAGE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal COL_CODIGO, decimal MOD_CODIGO, decimal MCA_CODIGO, decimal TE_CODIGO, decimal DESIG_CODIGO, string COC_CODIGO_PRODUCTO, decimal COC_ACTIVO, decimal COC_HAS_IMAGE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(COL_CODIGO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(MOD_CODIGO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(MCA_CODIGO));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(TE_CODIGO));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(DESIG_CODIGO));
            if ((COC_CODIGO_PRODUCTO == null)) {
                throw new global::System.ArgumentNullException("COC_CODIGO_PRODUCTO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(COC_CODIGO_PRODUCTO));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(COC_ACTIVO));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(COC_HAS_IMAGE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal COL_CODIGO, 
                    decimal MOD_CODIGO, 
                    decimal MCA_CODIGO, 
                    decimal TE_CODIGO, 
                    decimal DESIG_CODIGO, 
                    string COC_CODIGO_PRODUCTO, 
                    decimal COC_ACTIVO, 
                    decimal COC_HAS_IMAGE, 
                    decimal Original_COC_CODIGO, 
                    decimal Original_COL_CODIGO, 
                    decimal Original_MOD_CODIGO, 
                    decimal Original_MCA_CODIGO, 
                    decimal Original_TE_CODIGO, 
                    decimal Original_DESIG_CODIGO, 
                    string Original_COC_CODIGO_PRODUCTO, 
                    decimal Original_COC_ACTIVO, 
                    decimal Original_COC_HAS_IMAGE, 
                    decimal COC_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(COL_CODIGO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(MOD_CODIGO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(MCA_CODIGO));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(TE_CODIGO));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(DESIG_CODIGO));
            if ((COC_CODIGO_PRODUCTO == null)) {
                throw new global::System.ArgumentNullException("COC_CODIGO_PRODUCTO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(COC_CODIGO_PRODUCTO));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(COC_ACTIVO));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(COC_HAS_IMAGE));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_COC_CODIGO));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_COL_CODIGO));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_MOD_CODIGO));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_MCA_CODIGO));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_TE_CODIGO));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_DESIG_CODIGO));
            if ((Original_COC_CODIGO_PRODUCTO == null)) {
                throw new global::System.ArgumentNullException("Original_COC_CODIGO_PRODUCTO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_COC_CODIGO_PRODUCTO));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_COC_ACTIVO));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_COC_HAS_IMAGE));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(COC_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal COL_CODIGO, 
                    decimal MOD_CODIGO, 
                    decimal MCA_CODIGO, 
                    decimal TE_CODIGO, 
                    decimal DESIG_CODIGO, 
                    string COC_CODIGO_PRODUCTO, 
                    decimal COC_ACTIVO, 
                    decimal COC_HAS_IMAGE, 
                    decimal Original_COC_CODIGO, 
                    decimal Original_COL_CODIGO, 
                    decimal Original_MOD_CODIGO, 
                    decimal Original_MCA_CODIGO, 
                    decimal Original_TE_CODIGO, 
                    decimal Original_DESIG_CODIGO, 
                    string Original_COC_CODIGO_PRODUCTO, 
                    decimal Original_COC_ACTIVO, 
                    decimal Original_COC_HAS_IMAGE) {
            return this.Update(COL_CODIGO, MOD_CODIGO, MCA_CODIGO, TE_CODIGO, DESIG_CODIGO, COC_CODIGO_PRODUCTO, COC_ACTIVO, COC_HAS_IMAGE, Original_COC_CODIGO, Original_COL_CODIGO, Original_MOD_CODIGO, Original_MCA_CODIGO, Original_TE_CODIGO, Original_DESIG_CODIGO, Original_COC_CODIGO_PRODUCTO, Original_COC_ACTIVO, Original_COC_HAS_IMAGE, Original_COC_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PLANES_ANUALESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PLANES_ANUALESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PLANES_ANUALES";
            tableMapping.ColumnMappings.Add("PAN_CODIGO", "PAN_CODIGO");
            tableMapping.ColumnMappings.Add("PAN_ANIO", "PAN_ANIO");
            tableMapping.ColumnMappings.Add("DEMAN_CODIGO", "DEMAN_CODIGO");
            tableMapping.ColumnMappings.Add("PAN_FECHACREACION", "PAN_FECHACREACION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PLANES_ANUALES] WHERE (([PAN_CODIGO] = @Original_PAN_CODIGO) AND ([PAN_ANIO] = @Original_PAN_ANIO) AND ([DEMAN_CODIGO] = @Original_DEMAN_CODIGO) AND ((@IsNull_PAN_FECHACREACION = 1 AND [PAN_FECHACREACION] IS NULL) OR ([PAN_FECHACREACION] = @Original_PAN_FECHACREACION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAN_ANIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 4, 0, "PAN_ANIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DEMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PAN_FECHACREACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAN_FECHACREACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAN_FECHACREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAN_FECHACREACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PLANES_ANUALES] ([PAN_ANIO], [DEMAN_CODIGO], [PAN_FECHACREACION]) VALUES (@PAN_ANIO, @DEMAN_CODIGO, @PAN_FECHACREACION);
SELECT PAN_CODIGO, PAN_ANIO, DEMAN_CODIGO, PAN_FECHACREACION FROM PLANES_ANUALES WHERE (PAN_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAN_ANIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 4, 0, "PAN_ANIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DEMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAN_FECHACREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAN_FECHACREACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PLANES_ANUALES] SET [PAN_ANIO] = @PAN_ANIO, [DEMAN_CODIGO] = @DEMAN_CODIGO, [PAN_FECHACREACION] = @PAN_FECHACREACION WHERE (([PAN_CODIGO] = @Original_PAN_CODIGO) AND ([PAN_ANIO] = @Original_PAN_ANIO) AND ([DEMAN_CODIGO] = @Original_DEMAN_CODIGO) AND ((@IsNull_PAN_FECHACREACION = 1 AND [PAN_FECHACREACION] IS NULL) OR ([PAN_FECHACREACION] = @Original_PAN_FECHACREACION)));
SELECT PAN_CODIGO, PAN_ANIO, DEMAN_CODIGO, PAN_FECHACREACION FROM PLANES_ANUALES WHERE (PAN_CODIGO = @PAN_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAN_ANIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 4, 0, "PAN_ANIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DEMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAN_FECHACREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAN_FECHACREACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAN_ANIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 4, 0, "PAN_ANIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DEMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PAN_FECHACREACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAN_FECHACREACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAN_FECHACREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAN_FECHACREACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAN_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "PAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PAN_CODIGO, PAN_ANIO, DEMAN_CODIGO, PAN_FECHACREACION FROM dbo.PLANES_ANUA" +
                "LES";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsInventarioABC.PLANES_ANUALESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsInventarioABC.PLANES_ANUALESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsInventarioABC.PLANES_ANUALESDataTable dataTable = new dsInventarioABC.PLANES_ANUALESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsInventarioABC.PLANES_ANUALESDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsInventarioABC dataSet) {
            return this.Adapter.Update(dataSet, "PLANES_ANUALES");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_PAN_CODIGO, decimal Original_PAN_ANIO, decimal Original_DEMAN_CODIGO, global::System.Nullable<global::System.DateTime> Original_PAN_FECHACREACION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_PAN_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_PAN_ANIO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_DEMAN_CODIGO));
            if ((Original_PAN_FECHACREACION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_PAN_FECHACREACION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal PAN_ANIO, decimal DEMAN_CODIGO, global::System.Nullable<global::System.DateTime> PAN_FECHACREACION) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(PAN_ANIO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(DEMAN_CODIGO));
            if ((PAN_FECHACREACION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(PAN_FECHACREACION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal PAN_ANIO, decimal DEMAN_CODIGO, global::System.Nullable<global::System.DateTime> PAN_FECHACREACION, decimal Original_PAN_CODIGO, decimal Original_PAN_ANIO, decimal Original_DEMAN_CODIGO, global::System.Nullable<global::System.DateTime> Original_PAN_FECHACREACION, decimal PAN_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(PAN_ANIO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(DEMAN_CODIGO));
            if ((PAN_FECHACREACION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(PAN_FECHACREACION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_PAN_CODIGO));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_PAN_ANIO));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_DEMAN_CODIGO));
            if ((Original_PAN_FECHACREACION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_PAN_FECHACREACION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(PAN_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal PAN_ANIO, decimal DEMAN_CODIGO, global::System.Nullable<global::System.DateTime> PAN_FECHACREACION, decimal Original_PAN_CODIGO, decimal Original_PAN_ANIO, decimal Original_DEMAN_CODIGO, global::System.Nullable<global::System.DateTime> Original_PAN_FECHACREACION) {
            return this.Update(PAN_ANIO, DEMAN_CODIGO, PAN_FECHACREACION, Original_PAN_CODIGO, Original_PAN_ANIO, Original_DEMAN_CODIGO, Original_PAN_FECHACREACION, Original_PAN_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MATERIAS_PRIMASTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MATERIAS_PRIMASTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MATERIAS_PRIMAS";
            tableMapping.ColumnMappings.Add("MP_CODIGO", "MP_CODIGO");
            tableMapping.ColumnMappings.Add("UMED_CODIGO", "UMED_CODIGO");
            tableMapping.ColumnMappings.Add("MP_NOMBRE", "MP_NOMBRE");
            tableMapping.ColumnMappings.Add("MP_DESCRIPCION", "MP_DESCRIPCION");
            tableMapping.ColumnMappings.Add("MP_COSTO", "MP_COSTO");
            tableMapping.ColumnMappings.Add("USTCK_NUMERO", "USTCK_NUMERO");
            tableMapping.ColumnMappings.Add("MP_ESPRINCIPAL", "MP_ESPRINCIPAL");
            tableMapping.ColumnMappings.Add("MP_CANTIDAD", "MP_CANTIDAD");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[MATERIAS_PRIMAS] WHERE (([MP_CODIGO] = @Original_MP_CODIGO) AND ([UMED_CODIGO] = @Original_UMED_CODIGO) AND ([MP_NOMBRE] = @Original_MP_NOMBRE) AND ((@IsNull_MP_DESCRIPCION = 1 AND [MP_DESCRIPCION] IS NULL) OR ([MP_DESCRIPCION] = @Original_MP_DESCRIPCION)) AND ([MP_COSTO] = @Original_MP_COSTO) AND ((@IsNull_USTCK_NUMERO = 1 AND [USTCK_NUMERO] IS NULL) OR ([USTCK_NUMERO] = @Original_USTCK_NUMERO)) AND ((@IsNull_MP_ESPRINCIPAL = 1 AND [MP_ESPRINCIPAL] IS NULL) OR ([MP_ESPRINCIPAL] = @Original_MP_ESPRINCIPAL)) AND ((@IsNull_MP_CANTIDAD = 1 AND [MP_CANTIDAD] IS NULL) OR ([MP_CANTIDAD] = @Original_MP_CANTIDAD)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MP_COSTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_NUMERO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_NUMERO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_ESPRINCIPAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_ESPRINCIPAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_ESPRINCIPAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "MP_ESPRINCIPAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_CANTIDAD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CANTIDAD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MP_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[MATERIAS_PRIMAS] ([UMED_CODIGO], [MP_NOMBRE], [MP_DESCRIPCION], [MP_COSTO], [USTCK_NUMERO], [MP_ESPRINCIPAL], [MP_CANTIDAD]) VALUES (@UMED_CODIGO, @MP_NOMBRE, @MP_DESCRIPCION, @MP_COSTO, @USTCK_NUMERO, @MP_ESPRINCIPAL, @MP_CANTIDAD);
SELECT MP_CODIGO, UMED_CODIGO, MP_NOMBRE, MP_DESCRIPCION, MP_COSTO, USTCK_NUMERO, MP_ESPRINCIPAL, MP_CANTIDAD FROM MATERIAS_PRIMAS WHERE (MP_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MP_COSTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_ESPRINCIPAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "MP_ESPRINCIPAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MP_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[MATERIAS_PRIMAS] SET [UMED_CODIGO] = @UMED_CODIGO, [MP_NOMBRE] = @MP_NOMBRE, [MP_DESCRIPCION] = @MP_DESCRIPCION, [MP_COSTO] = @MP_COSTO, [USTCK_NUMERO] = @USTCK_NUMERO, [MP_ESPRINCIPAL] = @MP_ESPRINCIPAL, [MP_CANTIDAD] = @MP_CANTIDAD WHERE (([MP_CODIGO] = @Original_MP_CODIGO) AND ([UMED_CODIGO] = @Original_UMED_CODIGO) AND ([MP_NOMBRE] = @Original_MP_NOMBRE) AND ((@IsNull_MP_DESCRIPCION = 1 AND [MP_DESCRIPCION] IS NULL) OR ([MP_DESCRIPCION] = @Original_MP_DESCRIPCION)) AND ([MP_COSTO] = @Original_MP_COSTO) AND ((@IsNull_USTCK_NUMERO = 1 AND [USTCK_NUMERO] IS NULL) OR ([USTCK_NUMERO] = @Original_USTCK_NUMERO)) AND ((@IsNull_MP_ESPRINCIPAL = 1 AND [MP_ESPRINCIPAL] IS NULL) OR ([MP_ESPRINCIPAL] = @Original_MP_ESPRINCIPAL)) AND ((@IsNull_MP_CANTIDAD = 1 AND [MP_CANTIDAD] IS NULL) OR ([MP_CANTIDAD] = @Original_MP_CANTIDAD)));
SELECT MP_CODIGO, UMED_CODIGO, MP_NOMBRE, MP_DESCRIPCION, MP_COSTO, USTCK_NUMERO, MP_ESPRINCIPAL, MP_CANTIDAD FROM MATERIAS_PRIMAS WHERE (MP_CODIGO = @MP_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MP_COSTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USTCK_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_NUMERO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_ESPRINCIPAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "MP_ESPRINCIPAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MP_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_COSTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MP_COSTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USTCK_NUMERO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USTCK_NUMERO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USTCK_NUMERO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "USTCK_NUMERO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_ESPRINCIPAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_ESPRINCIPAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_ESPRINCIPAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "MP_ESPRINCIPAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_CANTIDAD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CANTIDAD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MP_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MP_CODIGO, UMED_CODIGO, MP_NOMBRE, MP_DESCRIPCION, MP_COSTO, USTCK_NUMERO," +
                " MP_ESPRINCIPAL, MP_CANTIDAD FROM dbo.MATERIAS_PRIMAS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsInventarioABC.MATERIAS_PRIMASDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsInventarioABC.MATERIAS_PRIMASDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsInventarioABC.MATERIAS_PRIMASDataTable dataTable = new dsInventarioABC.MATERIAS_PRIMASDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsInventarioABC.MATERIAS_PRIMASDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsInventarioABC dataSet) {
            return this.Adapter.Update(dataSet, "MATERIAS_PRIMAS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_MP_CODIGO, decimal Original_UMED_CODIGO, string Original_MP_NOMBRE, string Original_MP_DESCRIPCION, decimal Original_MP_COSTO, global::System.Nullable<decimal> Original_USTCK_NUMERO, global::System.Nullable<decimal> Original_MP_ESPRINCIPAL, global::System.Nullable<decimal> Original_MP_CANTIDAD) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_MP_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_UMED_CODIGO));
            if ((Original_MP_NOMBRE == null)) {
                throw new global::System.ArgumentNullException("Original_MP_NOMBRE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MP_NOMBRE));
            }
            if ((Original_MP_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_MP_DESCRIPCION));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_MP_COSTO));
            if ((Original_USTCK_NUMERO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_USTCK_NUMERO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_MP_ESPRINCIPAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_MP_ESPRINCIPAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_MP_CANTIDAD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_MP_CANTIDAD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal UMED_CODIGO, string MP_NOMBRE, string MP_DESCRIPCION, decimal MP_COSTO, global::System.Nullable<decimal> USTCK_NUMERO, global::System.Nullable<decimal> MP_ESPRINCIPAL, global::System.Nullable<decimal> MP_CANTIDAD) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(UMED_CODIGO));
            if ((MP_NOMBRE == null)) {
                throw new global::System.ArgumentNullException("MP_NOMBRE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MP_NOMBRE));
            }
            if ((MP_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MP_DESCRIPCION));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(MP_COSTO));
            if ((USTCK_NUMERO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(USTCK_NUMERO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((MP_ESPRINCIPAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(MP_ESPRINCIPAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((MP_CANTIDAD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(MP_CANTIDAD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal UMED_CODIGO, 
                    string MP_NOMBRE, 
                    string MP_DESCRIPCION, 
                    decimal MP_COSTO, 
                    global::System.Nullable<decimal> USTCK_NUMERO, 
                    global::System.Nullable<decimal> MP_ESPRINCIPAL, 
                    global::System.Nullable<decimal> MP_CANTIDAD, 
                    decimal Original_MP_CODIGO, 
                    decimal Original_UMED_CODIGO, 
                    string Original_MP_NOMBRE, 
                    string Original_MP_DESCRIPCION, 
                    decimal Original_MP_COSTO, 
                    global::System.Nullable<decimal> Original_USTCK_NUMERO, 
                    global::System.Nullable<decimal> Original_MP_ESPRINCIPAL, 
                    global::System.Nullable<decimal> Original_MP_CANTIDAD, 
                    decimal MP_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(UMED_CODIGO));
            if ((MP_NOMBRE == null)) {
                throw new global::System.ArgumentNullException("MP_NOMBRE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MP_NOMBRE));
            }
            if ((MP_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MP_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(MP_COSTO));
            if ((USTCK_NUMERO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(USTCK_NUMERO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((MP_ESPRINCIPAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(MP_ESPRINCIPAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((MP_CANTIDAD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(MP_CANTIDAD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_MP_CODIGO));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_UMED_CODIGO));
            if ((Original_MP_NOMBRE == null)) {
                throw new global::System.ArgumentNullException("Original_MP_NOMBRE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_MP_NOMBRE));
            }
            if ((Original_MP_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_MP_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_MP_COSTO));
            if ((Original_USTCK_NUMERO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_USTCK_NUMERO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_MP_ESPRINCIPAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_MP_ESPRINCIPAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_MP_CANTIDAD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_MP_CANTIDAD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(MP_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal UMED_CODIGO, string MP_NOMBRE, string MP_DESCRIPCION, decimal MP_COSTO, global::System.Nullable<decimal> USTCK_NUMERO, global::System.Nullable<decimal> MP_ESPRINCIPAL, global::System.Nullable<decimal> MP_CANTIDAD, decimal Original_MP_CODIGO, decimal Original_UMED_CODIGO, string Original_MP_NOMBRE, string Original_MP_DESCRIPCION, decimal Original_MP_COSTO, global::System.Nullable<decimal> Original_USTCK_NUMERO, global::System.Nullable<decimal> Original_MP_ESPRINCIPAL, global::System.Nullable<decimal> Original_MP_CANTIDAD) {
            return this.Update(UMED_CODIGO, MP_NOMBRE, MP_DESCRIPCION, MP_COSTO, USTCK_NUMERO, MP_ESPRINCIPAL, MP_CANTIDAD, Original_MP_CODIGO, Original_UMED_CODIGO, Original_MP_NOMBRE, Original_MP_DESCRIPCION, Original_MP_COSTO, Original_USTCK_NUMERO, Original_MP_ESPRINCIPAL, Original_MP_CANTIDAD, Original_MP_CODIGO);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private COCINASTableAdapter _cOCINASTableAdapter;
        
        private PLANES_ANUALESTableAdapter _pLANES_ANUALESTableAdapter;
        
        private MATERIAS_PRIMASTableAdapter _mATERIAS_PRIMASTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public COCINASTableAdapter COCINASTableAdapter {
            get {
                return this._cOCINASTableAdapter;
            }
            set {
                this._cOCINASTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PLANES_ANUALESTableAdapter PLANES_ANUALESTableAdapter {
            get {
                return this._pLANES_ANUALESTableAdapter;
            }
            set {
                this._pLANES_ANUALESTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MATERIAS_PRIMASTableAdapter MATERIAS_PRIMASTableAdapter {
            get {
                return this._mATERIAS_PRIMASTableAdapter;
            }
            set {
                this._mATERIAS_PRIMASTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._cOCINASTableAdapter != null) 
                            && (this._cOCINASTableAdapter.Connection != null))) {
                    return this._cOCINASTableAdapter.Connection;
                }
                if (((this._pLANES_ANUALESTableAdapter != null) 
                            && (this._pLANES_ANUALESTableAdapter.Connection != null))) {
                    return this._pLANES_ANUALESTableAdapter.Connection;
                }
                if (((this._mATERIAS_PRIMASTableAdapter != null) 
                            && (this._mATERIAS_PRIMASTableAdapter.Connection != null))) {
                    return this._mATERIAS_PRIMASTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._cOCINASTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pLANES_ANUALESTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mATERIAS_PRIMASTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(dsInventarioABC dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pLANES_ANUALESTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PLANES_ANUALES.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pLANES_ANUALESTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mATERIAS_PRIMASTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MATERIAS_PRIMAS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mATERIAS_PRIMASTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cOCINASTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.COCINAS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cOCINASTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(dsInventarioABC dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pLANES_ANUALESTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PLANES_ANUALES.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pLANES_ANUALESTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mATERIAS_PRIMASTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MATERIAS_PRIMAS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mATERIAS_PRIMASTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cOCINASTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.COCINAS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cOCINASTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(dsInventarioABC dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._cOCINASTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.COCINAS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cOCINASTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mATERIAS_PRIMASTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MATERIAS_PRIMAS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mATERIAS_PRIMASTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pLANES_ANUALESTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PLANES_ANUALES.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pLANES_ANUALESTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(dsInventarioABC dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._cOCINASTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cOCINASTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._pLANES_ANUALESTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pLANES_ANUALESTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._mATERIAS_PRIMASTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mATERIAS_PRIMASTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda" +
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co" +
                        "n las transacciones o el estado actual no permite que comience la transacción.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._cOCINASTableAdapter != null)) {
                    revertConnections.Add(this._cOCINASTableAdapter, this._cOCINASTableAdapter.Connection);
                    this._cOCINASTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cOCINASTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cOCINASTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cOCINASTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cOCINASTableAdapter.Adapter);
                    }
                }
                if ((this._pLANES_ANUALESTableAdapter != null)) {
                    revertConnections.Add(this._pLANES_ANUALESTableAdapter, this._pLANES_ANUALESTableAdapter.Connection);
                    this._pLANES_ANUALESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pLANES_ANUALESTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pLANES_ANUALESTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pLANES_ANUALESTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pLANES_ANUALESTableAdapter.Adapter);
                    }
                }
                if ((this._mATERIAS_PRIMASTableAdapter != null)) {
                    revertConnections.Add(this._mATERIAS_PRIMASTableAdapter, this._mATERIAS_PRIMASTableAdapter.Connection);
                    this._mATERIAS_PRIMASTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mATERIAS_PRIMASTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mATERIAS_PRIMASTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mATERIAS_PRIMASTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mATERIAS_PRIMASTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._cOCINASTableAdapter != null)) {
                    this._cOCINASTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cOCINASTableAdapter]));
                    this._cOCINASTableAdapter.Transaction = null;
                }
                if ((this._pLANES_ANUALESTableAdapter != null)) {
                    this._pLANES_ANUALESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pLANES_ANUALESTableAdapter]));
                    this._pLANES_ANUALESTableAdapter.Transaction = null;
                }
                if ((this._mATERIAS_PRIMASTableAdapter != null)) {
                    this._mATERIAS_PRIMASTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mATERIAS_PRIMASTableAdapter]));
                    this._mATERIAS_PRIMASTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591