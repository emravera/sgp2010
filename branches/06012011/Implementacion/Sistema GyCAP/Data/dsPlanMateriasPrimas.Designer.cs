//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.3603
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GyCAP.Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsPlanMateriasPrimas")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsPlanMateriasPrimas : global::System.Data.DataSet {
        
        private PLANES_ANUALESDataTable tablePLANES_ANUALES;
        
        private MATERIAS_PRIMASDataTable tableMATERIAS_PRIMAS;
        
        private MATERIASPRIMASPRINCIPALESDataTable tableMATERIASPRIMASPRINCIPALES;
        
        private UNIDADES_MEDIDADataTable tableUNIDADES_MEDIDA;
        
        private PLANES_MATERIAS_PRIMAS_ANUALESDataTable tablePLANES_MATERIAS_PRIMAS_ANUALES;
        
        private DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL;
        
        private DETALLE_PLAN_ANUALDataTable tableDETALLE_PLAN_ANUAL;
        
        private global::System.Data.DataRelation relationmateriaPrimaPrincipal_materiaPrima_fk;
        
        private global::System.Data.DataRelation relationmateriaPrima_unidadMedida_fk;
        
        private global::System.Data.DataRelation relationdetalleMateriaPrimaAnual_materiaPrima_fk;
        
        private global::System.Data.DataRelation relationdetalleMateriaPrimaAnual_planMateriaPrimaAnual_fk;
        
        private global::System.Data.DataRelation relationdetallePlanAnual_planAnual_fk;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsPlanMateriasPrimas() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsPlanMateriasPrimas(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PLANES_ANUALES"] != null)) {
                    base.Tables.Add(new PLANES_ANUALESDataTable(ds.Tables["PLANES_ANUALES"]));
                }
                if ((ds.Tables["MATERIAS_PRIMAS"] != null)) {
                    base.Tables.Add(new MATERIAS_PRIMASDataTable(ds.Tables["MATERIAS_PRIMAS"]));
                }
                if ((ds.Tables["MATERIASPRIMASPRINCIPALES"] != null)) {
                    base.Tables.Add(new MATERIASPRIMASPRINCIPALESDataTable(ds.Tables["MATERIASPRIMASPRINCIPALES"]));
                }
                if ((ds.Tables["UNIDADES_MEDIDA"] != null)) {
                    base.Tables.Add(new UNIDADES_MEDIDADataTable(ds.Tables["UNIDADES_MEDIDA"]));
                }
                if ((ds.Tables["PLANES_MATERIAS_PRIMAS_ANUALES"] != null)) {
                    base.Tables.Add(new PLANES_MATERIAS_PRIMAS_ANUALESDataTable(ds.Tables["PLANES_MATERIAS_PRIMAS_ANUALES"]));
                }
                if ((ds.Tables["DETALLE_PLAN_MATERIAS_PRIMAS_ANUAL"] != null)) {
                    base.Tables.Add(new DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable(ds.Tables["DETALLE_PLAN_MATERIAS_PRIMAS_ANUAL"]));
                }
                if ((ds.Tables["DETALLE_PLAN_ANUAL"] != null)) {
                    base.Tables.Add(new DETALLE_PLAN_ANUALDataTable(ds.Tables["DETALLE_PLAN_ANUAL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PLANES_ANUALESDataTable PLANES_ANUALES {
            get {
                return this.tablePLANES_ANUALES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MATERIAS_PRIMASDataTable MATERIAS_PRIMAS {
            get {
                return this.tableMATERIAS_PRIMAS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MATERIASPRIMASPRINCIPALESDataTable MATERIASPRIMASPRINCIPALES {
            get {
                return this.tableMATERIASPRIMASPRINCIPALES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UNIDADES_MEDIDADataTable UNIDADES_MEDIDA {
            get {
                return this.tableUNIDADES_MEDIDA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PLANES_MATERIAS_PRIMAS_ANUALESDataTable PLANES_MATERIAS_PRIMAS_ANUALES {
            get {
                return this.tablePLANES_MATERIAS_PRIMAS_ANUALES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable DETALLE_PLAN_MATERIAS_PRIMAS_ANUAL {
            get {
                return this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DETALLE_PLAN_ANUALDataTable DETALLE_PLAN_ANUAL {
            get {
                return this.tableDETALLE_PLAN_ANUAL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsPlanMateriasPrimas cln = ((dsPlanMateriasPrimas)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PLANES_ANUALES"] != null)) {
                    base.Tables.Add(new PLANES_ANUALESDataTable(ds.Tables["PLANES_ANUALES"]));
                }
                if ((ds.Tables["MATERIAS_PRIMAS"] != null)) {
                    base.Tables.Add(new MATERIAS_PRIMASDataTable(ds.Tables["MATERIAS_PRIMAS"]));
                }
                if ((ds.Tables["MATERIASPRIMASPRINCIPALES"] != null)) {
                    base.Tables.Add(new MATERIASPRIMASPRINCIPALESDataTable(ds.Tables["MATERIASPRIMASPRINCIPALES"]));
                }
                if ((ds.Tables["UNIDADES_MEDIDA"] != null)) {
                    base.Tables.Add(new UNIDADES_MEDIDADataTable(ds.Tables["UNIDADES_MEDIDA"]));
                }
                if ((ds.Tables["PLANES_MATERIAS_PRIMAS_ANUALES"] != null)) {
                    base.Tables.Add(new PLANES_MATERIAS_PRIMAS_ANUALESDataTable(ds.Tables["PLANES_MATERIAS_PRIMAS_ANUALES"]));
                }
                if ((ds.Tables["DETALLE_PLAN_MATERIAS_PRIMAS_ANUAL"] != null)) {
                    base.Tables.Add(new DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable(ds.Tables["DETALLE_PLAN_MATERIAS_PRIMAS_ANUAL"]));
                }
                if ((ds.Tables["DETALLE_PLAN_ANUAL"] != null)) {
                    base.Tables.Add(new DETALLE_PLAN_ANUALDataTable(ds.Tables["DETALLE_PLAN_ANUAL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePLANES_ANUALES = ((PLANES_ANUALESDataTable)(base.Tables["PLANES_ANUALES"]));
            if ((initTable == true)) {
                if ((this.tablePLANES_ANUALES != null)) {
                    this.tablePLANES_ANUALES.InitVars();
                }
            }
            this.tableMATERIAS_PRIMAS = ((MATERIAS_PRIMASDataTable)(base.Tables["MATERIAS_PRIMAS"]));
            if ((initTable == true)) {
                if ((this.tableMATERIAS_PRIMAS != null)) {
                    this.tableMATERIAS_PRIMAS.InitVars();
                }
            }
            this.tableMATERIASPRIMASPRINCIPALES = ((MATERIASPRIMASPRINCIPALESDataTable)(base.Tables["MATERIASPRIMASPRINCIPALES"]));
            if ((initTable == true)) {
                if ((this.tableMATERIASPRIMASPRINCIPALES != null)) {
                    this.tableMATERIASPRIMASPRINCIPALES.InitVars();
                }
            }
            this.tableUNIDADES_MEDIDA = ((UNIDADES_MEDIDADataTable)(base.Tables["UNIDADES_MEDIDA"]));
            if ((initTable == true)) {
                if ((this.tableUNIDADES_MEDIDA != null)) {
                    this.tableUNIDADES_MEDIDA.InitVars();
                }
            }
            this.tablePLANES_MATERIAS_PRIMAS_ANUALES = ((PLANES_MATERIAS_PRIMAS_ANUALESDataTable)(base.Tables["PLANES_MATERIAS_PRIMAS_ANUALES"]));
            if ((initTable == true)) {
                if ((this.tablePLANES_MATERIAS_PRIMAS_ANUALES != null)) {
                    this.tablePLANES_MATERIAS_PRIMAS_ANUALES.InitVars();
                }
            }
            this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL = ((DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable)(base.Tables["DETALLE_PLAN_MATERIAS_PRIMAS_ANUAL"]));
            if ((initTable == true)) {
                if ((this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL != null)) {
                    this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.InitVars();
                }
            }
            this.tableDETALLE_PLAN_ANUAL = ((DETALLE_PLAN_ANUALDataTable)(base.Tables["DETALLE_PLAN_ANUAL"]));
            if ((initTable == true)) {
                if ((this.tableDETALLE_PLAN_ANUAL != null)) {
                    this.tableDETALLE_PLAN_ANUAL.InitVars();
                }
            }
            this.relationmateriaPrimaPrincipal_materiaPrima_fk = this.Relations["materiaPrimaPrincipal_materiaPrima_fk"];
            this.relationmateriaPrima_unidadMedida_fk = this.Relations["materiaPrima_unidadMedida_fk"];
            this.relationdetalleMateriaPrimaAnual_materiaPrima_fk = this.Relations["detalleMateriaPrimaAnual_materiaPrima_fk"];
            this.relationdetalleMateriaPrimaAnual_planMateriaPrimaAnual_fk = this.Relations["detalleMateriaPrimaAnual_planMateriaPrimaAnual_fk"];
            this.relationdetallePlanAnual_planAnual_fk = this.Relations["detallePlanAnual_planAnual_fk"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsPlanMateriasPrimas";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsPlanMateriasPrimas.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePLANES_ANUALES = new PLANES_ANUALESDataTable();
            base.Tables.Add(this.tablePLANES_ANUALES);
            this.tableMATERIAS_PRIMAS = new MATERIAS_PRIMASDataTable();
            base.Tables.Add(this.tableMATERIAS_PRIMAS);
            this.tableMATERIASPRIMASPRINCIPALES = new MATERIASPRIMASPRINCIPALESDataTable();
            base.Tables.Add(this.tableMATERIASPRIMASPRINCIPALES);
            this.tableUNIDADES_MEDIDA = new UNIDADES_MEDIDADataTable();
            base.Tables.Add(this.tableUNIDADES_MEDIDA);
            this.tablePLANES_MATERIAS_PRIMAS_ANUALES = new PLANES_MATERIAS_PRIMAS_ANUALESDataTable();
            base.Tables.Add(this.tablePLANES_MATERIAS_PRIMAS_ANUALES);
            this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL = new DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable();
            base.Tables.Add(this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL);
            this.tableDETALLE_PLAN_ANUAL = new DETALLE_PLAN_ANUALDataTable();
            base.Tables.Add(this.tableDETALLE_PLAN_ANUAL);
            this.relationmateriaPrimaPrincipal_materiaPrima_fk = new global::System.Data.DataRelation("materiaPrimaPrincipal_materiaPrima_fk", new global::System.Data.DataColumn[] {
                        this.tableMATERIAS_PRIMAS.MP_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableMATERIASPRIMASPRINCIPALES.MP_CODIGOColumn}, false);
            this.Relations.Add(this.relationmateriaPrimaPrincipal_materiaPrima_fk);
            this.relationmateriaPrima_unidadMedida_fk = new global::System.Data.DataRelation("materiaPrima_unidadMedida_fk", new global::System.Data.DataColumn[] {
                        this.tableUNIDADES_MEDIDA.UMED_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableMATERIAS_PRIMAS.UMED_CODIGOColumn}, false);
            this.Relations.Add(this.relationmateriaPrima_unidadMedida_fk);
            this.relationdetalleMateriaPrimaAnual_materiaPrima_fk = new global::System.Data.DataRelation("detalleMateriaPrimaAnual_materiaPrima_fk", new global::System.Data.DataColumn[] {
                        this.tableMATERIAS_PRIMAS.MP_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.MP_CODIGOColumn}, false);
            this.Relations.Add(this.relationdetalleMateriaPrimaAnual_materiaPrima_fk);
            this.relationdetalleMateriaPrimaAnual_planMateriaPrimaAnual_fk = new global::System.Data.DataRelation("detalleMateriaPrimaAnual_planMateriaPrimaAnual_fk", new global::System.Data.DataColumn[] {
                        this.tablePLANES_MATERIAS_PRIMAS_ANUALES.PMPA_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.PMPA_CODIGOColumn}, false);
            this.Relations.Add(this.relationdetalleMateriaPrimaAnual_planMateriaPrimaAnual_fk);
            this.relationdetallePlanAnual_planAnual_fk = new global::System.Data.DataRelation("detallePlanAnual_planAnual_fk", new global::System.Data.DataColumn[] {
                        this.tablePLANES_ANUALES.PAN_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableDETALLE_PLAN_ANUAL.PAN_CODIGOColumn}, false);
            this.Relations.Add(this.relationdetallePlanAnual_planAnual_fk);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePLANES_ANUALES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMATERIAS_PRIMAS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMATERIASPRIMASPRINCIPALES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUNIDADES_MEDIDA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePLANES_MATERIAS_PRIMAS_ANUALES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDETALLE_PLAN_ANUAL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsPlanMateriasPrimas ds = new dsPlanMateriasPrimas();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void PLANES_ANUALESRowChangeEventHandler(object sender, PLANES_ANUALESRowChangeEvent e);
        
        public delegate void MATERIAS_PRIMASRowChangeEventHandler(object sender, MATERIAS_PRIMASRowChangeEvent e);
        
        public delegate void MATERIASPRIMASPRINCIPALESRowChangeEventHandler(object sender, MATERIASPRIMASPRINCIPALESRowChangeEvent e);
        
        public delegate void UNIDADES_MEDIDARowChangeEventHandler(object sender, UNIDADES_MEDIDARowChangeEvent e);
        
        public delegate void PLANES_MATERIAS_PRIMAS_ANUALESRowChangeEventHandler(object sender, PLANES_MATERIAS_PRIMAS_ANUALESRowChangeEvent e);
        
        public delegate void DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowChangeEventHandler(object sender, DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowChangeEvent e);
        
        public delegate void DETALLE_PLAN_ANUALRowChangeEventHandler(object sender, DETALLE_PLAN_ANUALRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PLANES_ANUALESDataTable : global::System.Data.TypedTableBase<PLANES_ANUALESRow> {
            
            private global::System.Data.DataColumn columnPAN_CODIGO;
            
            private global::System.Data.DataColumn columnPAN_ANIO;
            
            private global::System.Data.DataColumn columnDEMAN_CODIGO;
            
            private global::System.Data.DataColumn columnPAN_FECHACREACION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_ANUALESDataTable() {
                this.TableName = "PLANES_ANUALES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PLANES_ANUALESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PLANES_ANUALESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAN_CODIGOColumn {
                get {
                    return this.columnPAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAN_ANIOColumn {
                get {
                    return this.columnPAN_ANIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEMAN_CODIGOColumn {
                get {
                    return this.columnDEMAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAN_FECHACREACIONColumn {
                get {
                    return this.columnPAN_FECHACREACION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_ANUALESRow this[int index] {
                get {
                    return ((PLANES_ANUALESRow)(this.Rows[index]));
                }
            }
            
            public event PLANES_ANUALESRowChangeEventHandler PLANES_ANUALESRowChanging;
            
            public event PLANES_ANUALESRowChangeEventHandler PLANES_ANUALESRowChanged;
            
            public event PLANES_ANUALESRowChangeEventHandler PLANES_ANUALESRowDeleting;
            
            public event PLANES_ANUALESRowChangeEventHandler PLANES_ANUALESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPLANES_ANUALESRow(PLANES_ANUALESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_ANUALESRow AddPLANES_ANUALESRow(decimal PAN_ANIO, decimal DEMAN_CODIGO, System.DateTime PAN_FECHACREACION) {
                PLANES_ANUALESRow rowPLANES_ANUALESRow = ((PLANES_ANUALESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PAN_ANIO,
                        DEMAN_CODIGO,
                        PAN_FECHACREACION};
                rowPLANES_ANUALESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPLANES_ANUALESRow);
                return rowPLANES_ANUALESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_ANUALESRow FindByPAN_CODIGO(decimal PAN_CODIGO) {
                return ((PLANES_ANUALESRow)(this.Rows.Find(new object[] {
                            PAN_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PLANES_ANUALESDataTable cln = ((PLANES_ANUALESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PLANES_ANUALESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPAN_CODIGO = base.Columns["PAN_CODIGO"];
                this.columnPAN_ANIO = base.Columns["PAN_ANIO"];
                this.columnDEMAN_CODIGO = base.Columns["DEMAN_CODIGO"];
                this.columnPAN_FECHACREACION = base.Columns["PAN_FECHACREACION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPAN_CODIGO = new global::System.Data.DataColumn("PAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAN_CODIGO);
                this.columnPAN_ANIO = new global::System.Data.DataColumn("PAN_ANIO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAN_ANIO);
                this.columnDEMAN_CODIGO = new global::System.Data.DataColumn("DEMAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEMAN_CODIGO);
                this.columnPAN_FECHACREACION = new global::System.Data.DataColumn("PAN_FECHACREACION", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAN_FECHACREACION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPAN_CODIGO}, true));
                this.columnPAN_CODIGO.AutoIncrement = true;
                this.columnPAN_CODIGO.AutoIncrementSeed = -1;
                this.columnPAN_CODIGO.AutoIncrementStep = -1;
                this.columnPAN_CODIGO.AllowDBNull = false;
                this.columnPAN_CODIGO.ReadOnly = true;
                this.columnPAN_CODIGO.Unique = true;
                this.columnPAN_ANIO.AllowDBNull = false;
                this.columnDEMAN_CODIGO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_ANUALESRow NewPLANES_ANUALESRow() {
                return ((PLANES_ANUALESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PLANES_ANUALESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PLANES_ANUALESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PLANES_ANUALESRowChanged != null)) {
                    this.PLANES_ANUALESRowChanged(this, new PLANES_ANUALESRowChangeEvent(((PLANES_ANUALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PLANES_ANUALESRowChanging != null)) {
                    this.PLANES_ANUALESRowChanging(this, new PLANES_ANUALESRowChangeEvent(((PLANES_ANUALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PLANES_ANUALESRowDeleted != null)) {
                    this.PLANES_ANUALESRowDeleted(this, new PLANES_ANUALESRowChangeEvent(((PLANES_ANUALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PLANES_ANUALESRowDeleting != null)) {
                    this.PLANES_ANUALESRowDeleting(this, new PLANES_ANUALESRowChangeEvent(((PLANES_ANUALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePLANES_ANUALESRow(PLANES_ANUALESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPlanMateriasPrimas ds = new dsPlanMateriasPrimas();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PLANES_ANUALESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MATERIAS_PRIMASDataTable : global::System.Data.TypedTableBase<MATERIAS_PRIMASRow> {
            
            private global::System.Data.DataColumn columnMP_CODIGO;
            
            private global::System.Data.DataColumn columnUMED_CODIGO;
            
            private global::System.Data.DataColumn columnMP_NOMBRE;
            
            private global::System.Data.DataColumn columnMP_DESCRIPCION;
            
            private global::System.Data.DataColumn columnMP_CANTIDADSTOCK;
            
            private global::System.Data.DataColumn columnMP_PRECIO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASDataTable() {
                this.TableName = "MATERIAS_PRIMAS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MATERIAS_PRIMASDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MATERIAS_PRIMASDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_CODIGOColumn {
                get {
                    return this.columnMP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_CODIGOColumn {
                get {
                    return this.columnUMED_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_NOMBREColumn {
                get {
                    return this.columnMP_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_DESCRIPCIONColumn {
                get {
                    return this.columnMP_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_CANTIDADSTOCKColumn {
                get {
                    return this.columnMP_CANTIDADSTOCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_PRECIOColumn {
                get {
                    return this.columnMP_PRECIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow this[int index] {
                get {
                    return ((MATERIAS_PRIMASRow)(this.Rows[index]));
                }
            }
            
            public event MATERIAS_PRIMASRowChangeEventHandler MATERIAS_PRIMASRowChanging;
            
            public event MATERIAS_PRIMASRowChangeEventHandler MATERIAS_PRIMASRowChanged;
            
            public event MATERIAS_PRIMASRowChangeEventHandler MATERIAS_PRIMASRowDeleting;
            
            public event MATERIAS_PRIMASRowChangeEventHandler MATERIAS_PRIMASRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMATERIAS_PRIMASRow(MATERIAS_PRIMASRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow AddMATERIAS_PRIMASRow(UNIDADES_MEDIDARow parentUNIDADES_MEDIDARowBymateriaPrima_unidadMedida_fk, string MP_NOMBRE, string MP_DESCRIPCION, int MP_CANTIDADSTOCK, decimal MP_PRECIO) {
                MATERIAS_PRIMASRow rowMATERIAS_PRIMASRow = ((MATERIAS_PRIMASRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        MP_NOMBRE,
                        MP_DESCRIPCION,
                        MP_CANTIDADSTOCK,
                        MP_PRECIO};
                if ((parentUNIDADES_MEDIDARowBymateriaPrima_unidadMedida_fk != null)) {
                    columnValuesArray[1] = parentUNIDADES_MEDIDARowBymateriaPrima_unidadMedida_fk[0];
                }
                rowMATERIAS_PRIMASRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMATERIAS_PRIMASRow);
                return rowMATERIAS_PRIMASRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow FindByMP_CODIGO(decimal MP_CODIGO) {
                return ((MATERIAS_PRIMASRow)(this.Rows.Find(new object[] {
                            MP_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MATERIAS_PRIMASDataTable cln = ((MATERIAS_PRIMASDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MATERIAS_PRIMASDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMP_CODIGO = base.Columns["MP_CODIGO"];
                this.columnUMED_CODIGO = base.Columns["UMED_CODIGO"];
                this.columnMP_NOMBRE = base.Columns["MP_NOMBRE"];
                this.columnMP_DESCRIPCION = base.Columns["MP_DESCRIPCION"];
                this.columnMP_CANTIDADSTOCK = base.Columns["MP_CANTIDADSTOCK"];
                this.columnMP_PRECIO = base.Columns["MP_PRECIO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMP_CODIGO = new global::System.Data.DataColumn("MP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_CODIGO);
                this.columnUMED_CODIGO = new global::System.Data.DataColumn("UMED_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_CODIGO);
                this.columnMP_NOMBRE = new global::System.Data.DataColumn("MP_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_NOMBRE);
                this.columnMP_DESCRIPCION = new global::System.Data.DataColumn("MP_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_DESCRIPCION);
                this.columnMP_CANTIDADSTOCK = new global::System.Data.DataColumn("MP_CANTIDADSTOCK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_CANTIDADSTOCK);
                this.columnMP_PRECIO = new global::System.Data.DataColumn("MP_PRECIO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_PRECIO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMP_CODIGO}, true));
                this.columnMP_CODIGO.AutoIncrement = true;
                this.columnMP_CODIGO.AutoIncrementSeed = -1;
                this.columnMP_CODIGO.AutoIncrementStep = -1;
                this.columnMP_CODIGO.AllowDBNull = false;
                this.columnMP_CODIGO.ReadOnly = true;
                this.columnMP_CODIGO.Unique = true;
                this.columnMP_NOMBRE.MaxLength = 80;
                this.columnMP_DESCRIPCION.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow NewMATERIAS_PRIMASRow() {
                return ((MATERIAS_PRIMASRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MATERIAS_PRIMASRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MATERIAS_PRIMASRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MATERIAS_PRIMASRowChanged != null)) {
                    this.MATERIAS_PRIMASRowChanged(this, new MATERIAS_PRIMASRowChangeEvent(((MATERIAS_PRIMASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MATERIAS_PRIMASRowChanging != null)) {
                    this.MATERIAS_PRIMASRowChanging(this, new MATERIAS_PRIMASRowChangeEvent(((MATERIAS_PRIMASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MATERIAS_PRIMASRowDeleted != null)) {
                    this.MATERIAS_PRIMASRowDeleted(this, new MATERIAS_PRIMASRowChangeEvent(((MATERIAS_PRIMASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MATERIAS_PRIMASRowDeleting != null)) {
                    this.MATERIAS_PRIMASRowDeleting(this, new MATERIAS_PRIMASRowChangeEvent(((MATERIAS_PRIMASRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMATERIAS_PRIMASRow(MATERIAS_PRIMASRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPlanMateriasPrimas ds = new dsPlanMateriasPrimas();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MATERIAS_PRIMASDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MATERIASPRIMASPRINCIPALESDataTable : global::System.Data.TypedTableBase<MATERIASPRIMASPRINCIPALESRow> {
            
            private global::System.Data.DataColumn columnMPPR_CODIGO;
            
            private global::System.Data.DataColumn columnMP_CODIGO;
            
            private global::System.Data.DataColumn columnMPPR_CANTIDAD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASPRINCIPALESDataTable() {
                this.TableName = "MATERIASPRIMASPRINCIPALES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MATERIASPRIMASPRINCIPALESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MATERIASPRIMASPRINCIPALESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MPPR_CODIGOColumn {
                get {
                    return this.columnMPPR_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_CODIGOColumn {
                get {
                    return this.columnMP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MPPR_CANTIDADColumn {
                get {
                    return this.columnMPPR_CANTIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASPRINCIPALESRow this[int index] {
                get {
                    return ((MATERIASPRIMASPRINCIPALESRow)(this.Rows[index]));
                }
            }
            
            public event MATERIASPRIMASPRINCIPALESRowChangeEventHandler MATERIASPRIMASPRINCIPALESRowChanging;
            
            public event MATERIASPRIMASPRINCIPALESRowChangeEventHandler MATERIASPRIMASPRINCIPALESRowChanged;
            
            public event MATERIASPRIMASPRINCIPALESRowChangeEventHandler MATERIASPRIMASPRINCIPALESRowDeleting;
            
            public event MATERIASPRIMASPRINCIPALESRowChangeEventHandler MATERIASPRIMASPRINCIPALESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMATERIASPRIMASPRINCIPALESRow(MATERIASPRIMASPRINCIPALESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASPRINCIPALESRow AddMATERIASPRIMASPRINCIPALESRow(MATERIAS_PRIMASRow parentMATERIAS_PRIMASRowBymateriaPrimaPrincipal_materiaPrima_fk, decimal MPPR_CANTIDAD) {
                MATERIASPRIMASPRINCIPALESRow rowMATERIASPRIMASPRINCIPALESRow = ((MATERIASPRIMASPRINCIPALESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        MPPR_CANTIDAD};
                if ((parentMATERIAS_PRIMASRowBymateriaPrimaPrincipal_materiaPrima_fk != null)) {
                    columnValuesArray[1] = parentMATERIAS_PRIMASRowBymateriaPrimaPrincipal_materiaPrima_fk[0];
                }
                rowMATERIASPRIMASPRINCIPALESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMATERIASPRIMASPRINCIPALESRow);
                return rowMATERIASPRIMASPRINCIPALESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASPRINCIPALESRow FindByMPPR_CODIGO(decimal MPPR_CODIGO) {
                return ((MATERIASPRIMASPRINCIPALESRow)(this.Rows.Find(new object[] {
                            MPPR_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MATERIASPRIMASPRINCIPALESDataTable cln = ((MATERIASPRIMASPRINCIPALESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MATERIASPRIMASPRINCIPALESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMPPR_CODIGO = base.Columns["MPPR_CODIGO"];
                this.columnMP_CODIGO = base.Columns["MP_CODIGO"];
                this.columnMPPR_CANTIDAD = base.Columns["MPPR_CANTIDAD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMPPR_CODIGO = new global::System.Data.DataColumn("MPPR_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMPPR_CODIGO);
                this.columnMP_CODIGO = new global::System.Data.DataColumn("MP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_CODIGO);
                this.columnMPPR_CANTIDAD = new global::System.Data.DataColumn("MPPR_CANTIDAD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMPPR_CANTIDAD);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMPPR_CODIGO}, true));
                this.columnMPPR_CODIGO.AutoIncrement = true;
                this.columnMPPR_CODIGO.AutoIncrementSeed = -1;
                this.columnMPPR_CODIGO.AutoIncrementStep = -1;
                this.columnMPPR_CODIGO.AllowDBNull = false;
                this.columnMPPR_CODIGO.ReadOnly = true;
                this.columnMPPR_CODIGO.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASPRINCIPALESRow NewMATERIASPRIMASPRINCIPALESRow() {
                return ((MATERIASPRIMASPRINCIPALESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MATERIASPRIMASPRINCIPALESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MATERIASPRIMASPRINCIPALESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MATERIASPRIMASPRINCIPALESRowChanged != null)) {
                    this.MATERIASPRIMASPRINCIPALESRowChanged(this, new MATERIASPRIMASPRINCIPALESRowChangeEvent(((MATERIASPRIMASPRINCIPALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MATERIASPRIMASPRINCIPALESRowChanging != null)) {
                    this.MATERIASPRIMASPRINCIPALESRowChanging(this, new MATERIASPRIMASPRINCIPALESRowChangeEvent(((MATERIASPRIMASPRINCIPALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MATERIASPRIMASPRINCIPALESRowDeleted != null)) {
                    this.MATERIASPRIMASPRINCIPALESRowDeleted(this, new MATERIASPRIMASPRINCIPALESRowChangeEvent(((MATERIASPRIMASPRINCIPALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MATERIASPRIMASPRINCIPALESRowDeleting != null)) {
                    this.MATERIASPRIMASPRINCIPALESRowDeleting(this, new MATERIASPRIMASPRINCIPALESRowChangeEvent(((MATERIASPRIMASPRINCIPALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMATERIASPRIMASPRINCIPALESRow(MATERIASPRIMASPRINCIPALESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPlanMateriasPrimas ds = new dsPlanMateriasPrimas();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MATERIASPRIMASPRINCIPALESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UNIDADES_MEDIDADataTable : global::System.Data.TypedTableBase<UNIDADES_MEDIDARow> {
            
            private global::System.Data.DataColumn columnUMED_CODIGO;
            
            private global::System.Data.DataColumn columnTUMED_CODIGO;
            
            private global::System.Data.DataColumn columnUMED_NOMBRE;
            
            private global::System.Data.DataColumn columnUMED_ABREVIATURA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDADataTable() {
                this.TableName = "UNIDADES_MEDIDA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UNIDADES_MEDIDADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UNIDADES_MEDIDADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_CODIGOColumn {
                get {
                    return this.columnUMED_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TUMED_CODIGOColumn {
                get {
                    return this.columnTUMED_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_NOMBREColumn {
                get {
                    return this.columnUMED_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UMED_ABREVIATURAColumn {
                get {
                    return this.columnUMED_ABREVIATURA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow this[int index] {
                get {
                    return ((UNIDADES_MEDIDARow)(this.Rows[index]));
                }
            }
            
            public event UNIDADES_MEDIDARowChangeEventHandler UNIDADES_MEDIDARowChanging;
            
            public event UNIDADES_MEDIDARowChangeEventHandler UNIDADES_MEDIDARowChanged;
            
            public event UNIDADES_MEDIDARowChangeEventHandler UNIDADES_MEDIDARowDeleting;
            
            public event UNIDADES_MEDIDARowChangeEventHandler UNIDADES_MEDIDARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUNIDADES_MEDIDARow(UNIDADES_MEDIDARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow AddUNIDADES_MEDIDARow(decimal TUMED_CODIGO, string UMED_NOMBRE, string UMED_ABREVIATURA) {
                UNIDADES_MEDIDARow rowUNIDADES_MEDIDARow = ((UNIDADES_MEDIDARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TUMED_CODIGO,
                        UMED_NOMBRE,
                        UMED_ABREVIATURA};
                rowUNIDADES_MEDIDARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUNIDADES_MEDIDARow);
                return rowUNIDADES_MEDIDARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow FindByUMED_CODIGO(decimal UMED_CODIGO) {
                return ((UNIDADES_MEDIDARow)(this.Rows.Find(new object[] {
                            UMED_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UNIDADES_MEDIDADataTable cln = ((UNIDADES_MEDIDADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UNIDADES_MEDIDADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUMED_CODIGO = base.Columns["UMED_CODIGO"];
                this.columnTUMED_CODIGO = base.Columns["TUMED_CODIGO"];
                this.columnUMED_NOMBRE = base.Columns["UMED_NOMBRE"];
                this.columnUMED_ABREVIATURA = base.Columns["UMED_ABREVIATURA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUMED_CODIGO = new global::System.Data.DataColumn("UMED_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_CODIGO);
                this.columnTUMED_CODIGO = new global::System.Data.DataColumn("TUMED_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTUMED_CODIGO);
                this.columnUMED_NOMBRE = new global::System.Data.DataColumn("UMED_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_NOMBRE);
                this.columnUMED_ABREVIATURA = new global::System.Data.DataColumn("UMED_ABREVIATURA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUMED_ABREVIATURA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUMED_CODIGO}, true));
                this.columnUMED_CODIGO.AutoIncrement = true;
                this.columnUMED_CODIGO.AutoIncrementSeed = -1;
                this.columnUMED_CODIGO.AutoIncrementStep = -1;
                this.columnUMED_CODIGO.AllowDBNull = false;
                this.columnUMED_CODIGO.ReadOnly = true;
                this.columnUMED_CODIGO.Unique = true;
                this.columnUMED_NOMBRE.MaxLength = 80;
                this.columnUMED_ABREVIATURA.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow NewUNIDADES_MEDIDARow() {
                return ((UNIDADES_MEDIDARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UNIDADES_MEDIDARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UNIDADES_MEDIDARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UNIDADES_MEDIDARowChanged != null)) {
                    this.UNIDADES_MEDIDARowChanged(this, new UNIDADES_MEDIDARowChangeEvent(((UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UNIDADES_MEDIDARowChanging != null)) {
                    this.UNIDADES_MEDIDARowChanging(this, new UNIDADES_MEDIDARowChangeEvent(((UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UNIDADES_MEDIDARowDeleted != null)) {
                    this.UNIDADES_MEDIDARowDeleted(this, new UNIDADES_MEDIDARowChangeEvent(((UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UNIDADES_MEDIDARowDeleting != null)) {
                    this.UNIDADES_MEDIDARowDeleting(this, new UNIDADES_MEDIDARowChangeEvent(((UNIDADES_MEDIDARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUNIDADES_MEDIDARow(UNIDADES_MEDIDARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPlanMateriasPrimas ds = new dsPlanMateriasPrimas();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UNIDADES_MEDIDADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PLANES_MATERIAS_PRIMAS_ANUALESDataTable : global::System.Data.TypedTableBase<PLANES_MATERIAS_PRIMAS_ANUALESRow> {
            
            private global::System.Data.DataColumn columnPMPA_CODIGO;
            
            private global::System.Data.DataColumn columnPMPA_FECHACREACION;
            
            private global::System.Data.DataColumn columnPMPA_ANIO;
            
            private global::System.Data.DataColumn columnPMPA_MES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_MATERIAS_PRIMAS_ANUALESDataTable() {
                this.TableName = "PLANES_MATERIAS_PRIMAS_ANUALES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PLANES_MATERIAS_PRIMAS_ANUALESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PLANES_MATERIAS_PRIMAS_ANUALESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PMPA_CODIGOColumn {
                get {
                    return this.columnPMPA_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PMPA_FECHACREACIONColumn {
                get {
                    return this.columnPMPA_FECHACREACION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PMPA_ANIOColumn {
                get {
                    return this.columnPMPA_ANIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PMPA_MESColumn {
                get {
                    return this.columnPMPA_MES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_MATERIAS_PRIMAS_ANUALESRow this[int index] {
                get {
                    return ((PLANES_MATERIAS_PRIMAS_ANUALESRow)(this.Rows[index]));
                }
            }
            
            public event PLANES_MATERIAS_PRIMAS_ANUALESRowChangeEventHandler PLANES_MATERIAS_PRIMAS_ANUALESRowChanging;
            
            public event PLANES_MATERIAS_PRIMAS_ANUALESRowChangeEventHandler PLANES_MATERIAS_PRIMAS_ANUALESRowChanged;
            
            public event PLANES_MATERIAS_PRIMAS_ANUALESRowChangeEventHandler PLANES_MATERIAS_PRIMAS_ANUALESRowDeleting;
            
            public event PLANES_MATERIAS_PRIMAS_ANUALESRowChangeEventHandler PLANES_MATERIAS_PRIMAS_ANUALESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPLANES_MATERIAS_PRIMAS_ANUALESRow(PLANES_MATERIAS_PRIMAS_ANUALESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_MATERIAS_PRIMAS_ANUALESRow AddPLANES_MATERIAS_PRIMAS_ANUALESRow(System.DateTime PMPA_FECHACREACION, decimal PMPA_ANIO, string PMPA_MES) {
                PLANES_MATERIAS_PRIMAS_ANUALESRow rowPLANES_MATERIAS_PRIMAS_ANUALESRow = ((PLANES_MATERIAS_PRIMAS_ANUALESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PMPA_FECHACREACION,
                        PMPA_ANIO,
                        PMPA_MES};
                rowPLANES_MATERIAS_PRIMAS_ANUALESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPLANES_MATERIAS_PRIMAS_ANUALESRow);
                return rowPLANES_MATERIAS_PRIMAS_ANUALESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_MATERIAS_PRIMAS_ANUALESRow FindByPMPA_CODIGO(decimal PMPA_CODIGO) {
                return ((PLANES_MATERIAS_PRIMAS_ANUALESRow)(this.Rows.Find(new object[] {
                            PMPA_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PLANES_MATERIAS_PRIMAS_ANUALESDataTable cln = ((PLANES_MATERIAS_PRIMAS_ANUALESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PLANES_MATERIAS_PRIMAS_ANUALESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPMPA_CODIGO = base.Columns["PMPA_CODIGO"];
                this.columnPMPA_FECHACREACION = base.Columns["PMPA_FECHACREACION"];
                this.columnPMPA_ANIO = base.Columns["PMPA_ANIO"];
                this.columnPMPA_MES = base.Columns["PMPA_MES"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPMPA_CODIGO = new global::System.Data.DataColumn("PMPA_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMPA_CODIGO);
                this.columnPMPA_FECHACREACION = new global::System.Data.DataColumn("PMPA_FECHACREACION", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMPA_FECHACREACION);
                this.columnPMPA_ANIO = new global::System.Data.DataColumn("PMPA_ANIO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMPA_ANIO);
                this.columnPMPA_MES = new global::System.Data.DataColumn("PMPA_MES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMPA_MES);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPMPA_CODIGO}, true));
                this.columnPMPA_CODIGO.AutoIncrement = true;
                this.columnPMPA_CODIGO.AutoIncrementSeed = -1;
                this.columnPMPA_CODIGO.AutoIncrementStep = -1;
                this.columnPMPA_CODIGO.AllowDBNull = false;
                this.columnPMPA_CODIGO.ReadOnly = true;
                this.columnPMPA_CODIGO.Unique = true;
                this.columnPMPA_MES.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_MATERIAS_PRIMAS_ANUALESRow NewPLANES_MATERIAS_PRIMAS_ANUALESRow() {
                return ((PLANES_MATERIAS_PRIMAS_ANUALESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PLANES_MATERIAS_PRIMAS_ANUALESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PLANES_MATERIAS_PRIMAS_ANUALESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PLANES_MATERIAS_PRIMAS_ANUALESRowChanged != null)) {
                    this.PLANES_MATERIAS_PRIMAS_ANUALESRowChanged(this, new PLANES_MATERIAS_PRIMAS_ANUALESRowChangeEvent(((PLANES_MATERIAS_PRIMAS_ANUALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PLANES_MATERIAS_PRIMAS_ANUALESRowChanging != null)) {
                    this.PLANES_MATERIAS_PRIMAS_ANUALESRowChanging(this, new PLANES_MATERIAS_PRIMAS_ANUALESRowChangeEvent(((PLANES_MATERIAS_PRIMAS_ANUALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PLANES_MATERIAS_PRIMAS_ANUALESRowDeleted != null)) {
                    this.PLANES_MATERIAS_PRIMAS_ANUALESRowDeleted(this, new PLANES_MATERIAS_PRIMAS_ANUALESRowChangeEvent(((PLANES_MATERIAS_PRIMAS_ANUALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PLANES_MATERIAS_PRIMAS_ANUALESRowDeleting != null)) {
                    this.PLANES_MATERIAS_PRIMAS_ANUALESRowDeleting(this, new PLANES_MATERIAS_PRIMAS_ANUALESRowChangeEvent(((PLANES_MATERIAS_PRIMAS_ANUALESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePLANES_MATERIAS_PRIMAS_ANUALESRow(PLANES_MATERIAS_PRIMAS_ANUALESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPlanMateriasPrimas ds = new dsPlanMateriasPrimas();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PLANES_MATERIAS_PRIMAS_ANUALESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable : global::System.Data.TypedTableBase<DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow> {
            
            private global::System.Data.DataColumn columnDPMPA_CODIGO;
            
            private global::System.Data.DataColumn columnPMPA_CODIGO;
            
            private global::System.Data.DataColumn columnMP_CODIGO;
            
            private global::System.Data.DataColumn columnDPMPA_CANTIDAD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable() {
                this.TableName = "DETALLE_PLAN_MATERIAS_PRIMAS_ANUAL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DPMPA_CODIGOColumn {
                get {
                    return this.columnDPMPA_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PMPA_CODIGOColumn {
                get {
                    return this.columnPMPA_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MP_CODIGOColumn {
                get {
                    return this.columnMP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DPMPA_CANTIDADColumn {
                get {
                    return this.columnDPMPA_CANTIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow this[int index] {
                get {
                    return ((DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow)(this.Rows[index]));
                }
            }
            
            public event DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowChangeEventHandler DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowChanging;
            
            public event DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowChangeEventHandler DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowChanged;
            
            public event DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowChangeEventHandler DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowDeleting;
            
            public event DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowChangeEventHandler DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow(DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow AddDETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow(PLANES_MATERIAS_PRIMAS_ANUALESRow parentPLANES_MATERIAS_PRIMAS_ANUALESRowBydetalleMateriaPrimaAnual_planMateriaPrimaAnual_fk, MATERIAS_PRIMASRow parentMATERIAS_PRIMASRowBydetalleMateriaPrimaAnual_materiaPrima_fk, decimal DPMPA_CANTIDAD) {
                DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow rowDETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow = ((DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        DPMPA_CANTIDAD};
                if ((parentPLANES_MATERIAS_PRIMAS_ANUALESRowBydetalleMateriaPrimaAnual_planMateriaPrimaAnual_fk != null)) {
                    columnValuesArray[1] = parentPLANES_MATERIAS_PRIMAS_ANUALESRowBydetalleMateriaPrimaAnual_planMateriaPrimaAnual_fk[0];
                }
                if ((parentMATERIAS_PRIMASRowBydetalleMateriaPrimaAnual_materiaPrima_fk != null)) {
                    columnValuesArray[2] = parentMATERIAS_PRIMASRowBydetalleMateriaPrimaAnual_materiaPrima_fk[0];
                }
                rowDETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow);
                return rowDETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow FindByDPMPA_CODIGO(decimal DPMPA_CODIGO) {
                return ((DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow)(this.Rows.Find(new object[] {
                            DPMPA_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable cln = ((DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDPMPA_CODIGO = base.Columns["DPMPA_CODIGO"];
                this.columnPMPA_CODIGO = base.Columns["PMPA_CODIGO"];
                this.columnMP_CODIGO = base.Columns["MP_CODIGO"];
                this.columnDPMPA_CANTIDAD = base.Columns["DPMPA_CANTIDAD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDPMPA_CODIGO = new global::System.Data.DataColumn("DPMPA_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPMPA_CODIGO);
                this.columnPMPA_CODIGO = new global::System.Data.DataColumn("PMPA_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMPA_CODIGO);
                this.columnMP_CODIGO = new global::System.Data.DataColumn("MP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMP_CODIGO);
                this.columnDPMPA_CANTIDAD = new global::System.Data.DataColumn("DPMPA_CANTIDAD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPMPA_CANTIDAD);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDPMPA_CODIGO}, true));
                this.columnDPMPA_CODIGO.AutoIncrement = true;
                this.columnDPMPA_CODIGO.AutoIncrementSeed = -1;
                this.columnDPMPA_CODIGO.AutoIncrementStep = -1;
                this.columnDPMPA_CODIGO.AllowDBNull = false;
                this.columnDPMPA_CODIGO.ReadOnly = true;
                this.columnDPMPA_CODIGO.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow NewDETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow() {
                return ((DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowChanged != null)) {
                    this.DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowChanged(this, new DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowChangeEvent(((DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowChanging != null)) {
                    this.DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowChanging(this, new DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowChangeEvent(((DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowDeleted != null)) {
                    this.DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowDeleted(this, new DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowChangeEvent(((DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowDeleting != null)) {
                    this.DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowDeleting(this, new DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowChangeEvent(((DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow(DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPlanMateriasPrimas ds = new dsPlanMateriasPrimas();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DETALLE_PLAN_ANUALDataTable : global::System.Data.TypedTableBase<DETALLE_PLAN_ANUALRow> {
            
            private global::System.Data.DataColumn columnDPAN_CODIGO;
            
            private global::System.Data.DataColumn columnPAN_CODIGO;
            
            private global::System.Data.DataColumn columnDPAN_MES;
            
            private global::System.Data.DataColumn columnDPAN_CANTIDADMES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLAN_ANUALDataTable() {
                this.TableName = "DETALLE_PLAN_ANUAL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DETALLE_PLAN_ANUALDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DETALLE_PLAN_ANUALDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DPAN_CODIGOColumn {
                get {
                    return this.columnDPAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAN_CODIGOColumn {
                get {
                    return this.columnPAN_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DPAN_MESColumn {
                get {
                    return this.columnDPAN_MES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DPAN_CANTIDADMESColumn {
                get {
                    return this.columnDPAN_CANTIDADMES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLAN_ANUALRow this[int index] {
                get {
                    return ((DETALLE_PLAN_ANUALRow)(this.Rows[index]));
                }
            }
            
            public event DETALLE_PLAN_ANUALRowChangeEventHandler DETALLE_PLAN_ANUALRowChanging;
            
            public event DETALLE_PLAN_ANUALRowChangeEventHandler DETALLE_PLAN_ANUALRowChanged;
            
            public event DETALLE_PLAN_ANUALRowChangeEventHandler DETALLE_PLAN_ANUALRowDeleting;
            
            public event DETALLE_PLAN_ANUALRowChangeEventHandler DETALLE_PLAN_ANUALRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDETALLE_PLAN_ANUALRow(DETALLE_PLAN_ANUALRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLAN_ANUALRow AddDETALLE_PLAN_ANUALRow(PLANES_ANUALESRow parentPLANES_ANUALESRowBydetallePlanAnual_planAnual_fk, string DPAN_MES, decimal DPAN_CANTIDADMES) {
                DETALLE_PLAN_ANUALRow rowDETALLE_PLAN_ANUALRow = ((DETALLE_PLAN_ANUALRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        DPAN_MES,
                        DPAN_CANTIDADMES};
                if ((parentPLANES_ANUALESRowBydetallePlanAnual_planAnual_fk != null)) {
                    columnValuesArray[1] = parentPLANES_ANUALESRowBydetallePlanAnual_planAnual_fk[0];
                }
                rowDETALLE_PLAN_ANUALRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDETALLE_PLAN_ANUALRow);
                return rowDETALLE_PLAN_ANUALRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLAN_ANUALRow FindByDPAN_CODIGO(decimal DPAN_CODIGO) {
                return ((DETALLE_PLAN_ANUALRow)(this.Rows.Find(new object[] {
                            DPAN_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DETALLE_PLAN_ANUALDataTable cln = ((DETALLE_PLAN_ANUALDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DETALLE_PLAN_ANUALDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDPAN_CODIGO = base.Columns["DPAN_CODIGO"];
                this.columnPAN_CODIGO = base.Columns["PAN_CODIGO"];
                this.columnDPAN_MES = base.Columns["DPAN_MES"];
                this.columnDPAN_CANTIDADMES = base.Columns["DPAN_CANTIDADMES"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDPAN_CODIGO = new global::System.Data.DataColumn("DPAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPAN_CODIGO);
                this.columnPAN_CODIGO = new global::System.Data.DataColumn("PAN_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAN_CODIGO);
                this.columnDPAN_MES = new global::System.Data.DataColumn("DPAN_MES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPAN_MES);
                this.columnDPAN_CANTIDADMES = new global::System.Data.DataColumn("DPAN_CANTIDADMES", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPAN_CANTIDADMES);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDPAN_CODIGO}, true));
                this.columnDPAN_CODIGO.AutoIncrement = true;
                this.columnDPAN_CODIGO.AutoIncrementSeed = -1;
                this.columnDPAN_CODIGO.AutoIncrementStep = -1;
                this.columnDPAN_CODIGO.AllowDBNull = false;
                this.columnDPAN_CODIGO.ReadOnly = true;
                this.columnDPAN_CODIGO.Unique = true;
                this.columnPAN_CODIGO.AllowDBNull = false;
                this.columnDPAN_MES.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLAN_ANUALRow NewDETALLE_PLAN_ANUALRow() {
                return ((DETALLE_PLAN_ANUALRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DETALLE_PLAN_ANUALRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DETALLE_PLAN_ANUALRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DETALLE_PLAN_ANUALRowChanged != null)) {
                    this.DETALLE_PLAN_ANUALRowChanged(this, new DETALLE_PLAN_ANUALRowChangeEvent(((DETALLE_PLAN_ANUALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DETALLE_PLAN_ANUALRowChanging != null)) {
                    this.DETALLE_PLAN_ANUALRowChanging(this, new DETALLE_PLAN_ANUALRowChangeEvent(((DETALLE_PLAN_ANUALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DETALLE_PLAN_ANUALRowDeleted != null)) {
                    this.DETALLE_PLAN_ANUALRowDeleted(this, new DETALLE_PLAN_ANUALRowChangeEvent(((DETALLE_PLAN_ANUALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DETALLE_PLAN_ANUALRowDeleting != null)) {
                    this.DETALLE_PLAN_ANUALRowDeleting(this, new DETALLE_PLAN_ANUALRowChangeEvent(((DETALLE_PLAN_ANUALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDETALLE_PLAN_ANUALRow(DETALLE_PLAN_ANUALRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPlanMateriasPrimas ds = new dsPlanMateriasPrimas();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DETALLE_PLAN_ANUALDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PLANES_ANUALESRow : global::System.Data.DataRow {
            
            private PLANES_ANUALESDataTable tablePLANES_ANUALES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PLANES_ANUALESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePLANES_ANUALES = ((PLANES_ANUALESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PAN_CODIGO {
                get {
                    return ((decimal)(this[this.tablePLANES_ANUALES.PAN_CODIGOColumn]));
                }
                set {
                    this[this.tablePLANES_ANUALES.PAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PAN_ANIO {
                get {
                    return ((decimal)(this[this.tablePLANES_ANUALES.PAN_ANIOColumn]));
                }
                set {
                    this[this.tablePLANES_ANUALES.PAN_ANIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DEMAN_CODIGO {
                get {
                    return ((decimal)(this[this.tablePLANES_ANUALES.DEMAN_CODIGOColumn]));
                }
                set {
                    this[this.tablePLANES_ANUALES.DEMAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PAN_FECHACREACION {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePLANES_ANUALES.PAN_FECHACREACIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PAN_FECHACREACION\' de la tabla \'PLANES_ANUALES\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePLANES_ANUALES.PAN_FECHACREACIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAN_FECHACREACIONNull() {
                return this.IsNull(this.tablePLANES_ANUALES.PAN_FECHACREACIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAN_FECHACREACIONNull() {
                this[this.tablePLANES_ANUALES.PAN_FECHACREACIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLAN_ANUALRow[] GetDETALLE_PLAN_ANUALRows() {
                if ((this.Table.ChildRelations["detallePlanAnual_planAnual_fk"] == null)) {
                    return new DETALLE_PLAN_ANUALRow[0];
                }
                else {
                    return ((DETALLE_PLAN_ANUALRow[])(base.GetChildRows(this.Table.ChildRelations["detallePlanAnual_planAnual_fk"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MATERIAS_PRIMASRow : global::System.Data.DataRow {
            
            private MATERIAS_PRIMASDataTable tableMATERIAS_PRIMAS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MATERIAS_PRIMASRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMATERIAS_PRIMAS = ((MATERIAS_PRIMASDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MP_CODIGO {
                get {
                    return ((decimal)(this[this.tableMATERIAS_PRIMAS.MP_CODIGOColumn]));
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.MP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UMED_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableMATERIAS_PRIMAS.UMED_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'UMED_CODIGO\' de la tabla \'MATERIAS_PRIMAS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.UMED_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MP_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableMATERIAS_PRIMAS.MP_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MP_NOMBRE\' de la tabla \'MATERIAS_PRIMAS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.MP_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MP_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableMATERIAS_PRIMAS.MP_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MP_DESCRIPCION\' de la tabla \'MATERIAS_PRIMAS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.MP_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MP_CANTIDADSTOCK {
                get {
                    try {
                        return ((int)(this[this.tableMATERIAS_PRIMAS.MP_CANTIDADSTOCKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MP_CANTIDADSTOCK\' de la tabla \'MATERIAS_PRIMAS\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.MP_CANTIDADSTOCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MP_PRECIO {
                get {
                    try {
                        return ((decimal)(this[this.tableMATERIAS_PRIMAS.MP_PRECIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MP_PRECIO\' de la tabla \'MATERIAS_PRIMAS\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATERIAS_PRIMAS.MP_PRECIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow UNIDADES_MEDIDARow {
                get {
                    return ((UNIDADES_MEDIDARow)(this.GetParentRow(this.Table.ParentRelations["materiaPrima_unidadMedida_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["materiaPrima_unidadMedida_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUMED_CODIGONull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS.UMED_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUMED_CODIGONull() {
                this[this.tableMATERIAS_PRIMAS.UMED_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMP_NOMBRENull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS.MP_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMP_NOMBRENull() {
                this[this.tableMATERIAS_PRIMAS.MP_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMP_DESCRIPCIONNull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS.MP_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMP_DESCRIPCIONNull() {
                this[this.tableMATERIAS_PRIMAS.MP_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMP_CANTIDADSTOCKNull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS.MP_CANTIDADSTOCKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMP_CANTIDADSTOCKNull() {
                this[this.tableMATERIAS_PRIMAS.MP_CANTIDADSTOCKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMP_PRECIONull() {
                return this.IsNull(this.tableMATERIAS_PRIMAS.MP_PRECIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMP_PRECIONull() {
                this[this.tableMATERIAS_PRIMAS.MP_PRECIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASPRINCIPALESRow[] GetMATERIASPRIMASPRINCIPALESRows() {
                if ((this.Table.ChildRelations["materiaPrimaPrincipal_materiaPrima_fk"] == null)) {
                    return new MATERIASPRIMASPRINCIPALESRow[0];
                }
                else {
                    return ((MATERIASPRIMASPRINCIPALESRow[])(base.GetChildRows(this.Table.ChildRelations["materiaPrimaPrincipal_materiaPrima_fk"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow[] GetDETALLE_PLAN_MATERIAS_PRIMAS_ANUALRows() {
                if ((this.Table.ChildRelations["detalleMateriaPrimaAnual_materiaPrima_fk"] == null)) {
                    return new DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow[0];
                }
                else {
                    return ((DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow[])(base.GetChildRows(this.Table.ChildRelations["detalleMateriaPrimaAnual_materiaPrima_fk"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MATERIASPRIMASPRINCIPALESRow : global::System.Data.DataRow {
            
            private MATERIASPRIMASPRINCIPALESDataTable tableMATERIASPRIMASPRINCIPALES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MATERIASPRIMASPRINCIPALESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMATERIASPRIMASPRINCIPALES = ((MATERIASPRIMASPRINCIPALESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MPPR_CODIGO {
                get {
                    return ((decimal)(this[this.tableMATERIASPRIMASPRINCIPALES.MPPR_CODIGOColumn]));
                }
                set {
                    this[this.tableMATERIASPRIMASPRINCIPALES.MPPR_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MP_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableMATERIASPRIMASPRINCIPALES.MP_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MP_CODIGO\' de la tabla \'MATERIASPRIMASPRINCIPALES\' es DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableMATERIASPRIMASPRINCIPALES.MP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MPPR_CANTIDAD {
                get {
                    try {
                        return ((decimal)(this[this.tableMATERIASPRIMASPRINCIPALES.MPPR_CANTIDADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MPPR_CANTIDAD\' de la tabla \'MATERIASPRIMASPRINCIPALES\' es" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableMATERIASPRIMASPRINCIPALES.MPPR_CANTIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow MATERIAS_PRIMASRow {
                get {
                    return ((MATERIAS_PRIMASRow)(this.GetParentRow(this.Table.ParentRelations["materiaPrimaPrincipal_materiaPrima_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["materiaPrimaPrincipal_materiaPrima_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMP_CODIGONull() {
                return this.IsNull(this.tableMATERIASPRIMASPRINCIPALES.MP_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMP_CODIGONull() {
                this[this.tableMATERIASPRIMASPRINCIPALES.MP_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMPPR_CANTIDADNull() {
                return this.IsNull(this.tableMATERIASPRIMASPRINCIPALES.MPPR_CANTIDADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMPPR_CANTIDADNull() {
                this[this.tableMATERIASPRIMASPRINCIPALES.MPPR_CANTIDADColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UNIDADES_MEDIDARow : global::System.Data.DataRow {
            
            private UNIDADES_MEDIDADataTable tableUNIDADES_MEDIDA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UNIDADES_MEDIDARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUNIDADES_MEDIDA = ((UNIDADES_MEDIDADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UMED_CODIGO {
                get {
                    return ((decimal)(this[this.tableUNIDADES_MEDIDA.UMED_CODIGOColumn]));
                }
                set {
                    this[this.tableUNIDADES_MEDIDA.UMED_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TUMED_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableUNIDADES_MEDIDA.TUMED_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TUMED_CODIGO\' de la tabla \'UNIDADES_MEDIDA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableUNIDADES_MEDIDA.TUMED_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UMED_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableUNIDADES_MEDIDA.UMED_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'UMED_NOMBRE\' de la tabla \'UNIDADES_MEDIDA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableUNIDADES_MEDIDA.UMED_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UMED_ABREVIATURA {
                get {
                    try {
                        return ((string)(this[this.tableUNIDADES_MEDIDA.UMED_ABREVIATURAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'UMED_ABREVIATURA\' de la tabla \'UNIDADES_MEDIDA\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableUNIDADES_MEDIDA.UMED_ABREVIATURAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTUMED_CODIGONull() {
                return this.IsNull(this.tableUNIDADES_MEDIDA.TUMED_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTUMED_CODIGONull() {
                this[this.tableUNIDADES_MEDIDA.TUMED_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUMED_NOMBRENull() {
                return this.IsNull(this.tableUNIDADES_MEDIDA.UMED_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUMED_NOMBRENull() {
                this[this.tableUNIDADES_MEDIDA.UMED_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUMED_ABREVIATURANull() {
                return this.IsNull(this.tableUNIDADES_MEDIDA.UMED_ABREVIATURAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUMED_ABREVIATURANull() {
                this[this.tableUNIDADES_MEDIDA.UMED_ABREVIATURAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow[] GetMATERIAS_PRIMASRows() {
                if ((this.Table.ChildRelations["materiaPrima_unidadMedida_fk"] == null)) {
                    return new MATERIAS_PRIMASRow[0];
                }
                else {
                    return ((MATERIAS_PRIMASRow[])(base.GetChildRows(this.Table.ChildRelations["materiaPrima_unidadMedida_fk"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PLANES_MATERIAS_PRIMAS_ANUALESRow : global::System.Data.DataRow {
            
            private PLANES_MATERIAS_PRIMAS_ANUALESDataTable tablePLANES_MATERIAS_PRIMAS_ANUALES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PLANES_MATERIAS_PRIMAS_ANUALESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePLANES_MATERIAS_PRIMAS_ANUALES = ((PLANES_MATERIAS_PRIMAS_ANUALESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PMPA_CODIGO {
                get {
                    return ((decimal)(this[this.tablePLANES_MATERIAS_PRIMAS_ANUALES.PMPA_CODIGOColumn]));
                }
                set {
                    this[this.tablePLANES_MATERIAS_PRIMAS_ANUALES.PMPA_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PMPA_FECHACREACION {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePLANES_MATERIAS_PRIMAS_ANUALES.PMPA_FECHACREACIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PMPA_FECHACREACION\' de la tabla \'PLANES_MATERIAS_PRIMAS_A" +
                                "NUALES\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLANES_MATERIAS_PRIMAS_ANUALES.PMPA_FECHACREACIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PMPA_ANIO {
                get {
                    try {
                        return ((decimal)(this[this.tablePLANES_MATERIAS_PRIMAS_ANUALES.PMPA_ANIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PMPA_ANIO\' de la tabla \'PLANES_MATERIAS_PRIMAS_ANUALES\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLANES_MATERIAS_PRIMAS_ANUALES.PMPA_ANIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PMPA_MES {
                get {
                    try {
                        return ((string)(this[this.tablePLANES_MATERIAS_PRIMAS_ANUALES.PMPA_MESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PMPA_MES\' de la tabla \'PLANES_MATERIAS_PRIMAS_ANUALES\' es" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLANES_MATERIAS_PRIMAS_ANUALES.PMPA_MESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPMPA_FECHACREACIONNull() {
                return this.IsNull(this.tablePLANES_MATERIAS_PRIMAS_ANUALES.PMPA_FECHACREACIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPMPA_FECHACREACIONNull() {
                this[this.tablePLANES_MATERIAS_PRIMAS_ANUALES.PMPA_FECHACREACIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPMPA_ANIONull() {
                return this.IsNull(this.tablePLANES_MATERIAS_PRIMAS_ANUALES.PMPA_ANIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPMPA_ANIONull() {
                this[this.tablePLANES_MATERIAS_PRIMAS_ANUALES.PMPA_ANIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPMPA_MESNull() {
                return this.IsNull(this.tablePLANES_MATERIAS_PRIMAS_ANUALES.PMPA_MESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPMPA_MESNull() {
                this[this.tablePLANES_MATERIAS_PRIMAS_ANUALES.PMPA_MESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow[] GetDETALLE_PLAN_MATERIAS_PRIMAS_ANUALRows() {
                if ((this.Table.ChildRelations["detalleMateriaPrimaAnual_planMateriaPrimaAnual_fk"] == null)) {
                    return new DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow[0];
                }
                else {
                    return ((DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow[])(base.GetChildRows(this.Table.ChildRelations["detalleMateriaPrimaAnual_planMateriaPrimaAnual_fk"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow : global::System.Data.DataRow {
            
            private DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL = ((DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DPMPA_CODIGO {
                get {
                    return ((decimal)(this[this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.DPMPA_CODIGOColumn]));
                }
                set {
                    this[this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.DPMPA_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PMPA_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.PMPA_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PMPA_CODIGO\' de la tabla \'DETALLE_PLAN_MATERIAS_PRIMAS_AN" +
                                "UAL\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.PMPA_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MP_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.MP_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MP_CODIGO\' de la tabla \'DETALLE_PLAN_MATERIAS_PRIMAS_ANUA" +
                                "L\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.MP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DPMPA_CANTIDAD {
                get {
                    try {
                        return ((decimal)(this[this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.DPMPA_CANTIDADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DPMPA_CANTIDAD\' de la tabla \'DETALLE_PLAN_MATERIAS_PRIMAS" +
                                "_ANUAL\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.DPMPA_CANTIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow MATERIAS_PRIMASRow {
                get {
                    return ((MATERIAS_PRIMASRow)(this.GetParentRow(this.Table.ParentRelations["detalleMateriaPrimaAnual_materiaPrima_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["detalleMateriaPrimaAnual_materiaPrima_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_MATERIAS_PRIMAS_ANUALESRow PLANES_MATERIAS_PRIMAS_ANUALESRow {
                get {
                    return ((PLANES_MATERIAS_PRIMAS_ANUALESRow)(this.GetParentRow(this.Table.ParentRelations["detalleMateriaPrimaAnual_planMateriaPrimaAnual_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["detalleMateriaPrimaAnual_planMateriaPrimaAnual_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPMPA_CODIGONull() {
                return this.IsNull(this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.PMPA_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPMPA_CODIGONull() {
                this[this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.PMPA_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMP_CODIGONull() {
                return this.IsNull(this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.MP_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMP_CODIGONull() {
                this[this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.MP_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDPMPA_CANTIDADNull() {
                return this.IsNull(this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.DPMPA_CANTIDADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDPMPA_CANTIDADNull() {
                this[this.tableDETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.DPMPA_CANTIDADColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DETALLE_PLAN_ANUALRow : global::System.Data.DataRow {
            
            private DETALLE_PLAN_ANUALDataTable tableDETALLE_PLAN_ANUAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DETALLE_PLAN_ANUALRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDETALLE_PLAN_ANUAL = ((DETALLE_PLAN_ANUALDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DPAN_CODIGO {
                get {
                    return ((decimal)(this[this.tableDETALLE_PLAN_ANUAL.DPAN_CODIGOColumn]));
                }
                set {
                    this[this.tableDETALLE_PLAN_ANUAL.DPAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PAN_CODIGO {
                get {
                    return ((decimal)(this[this.tableDETALLE_PLAN_ANUAL.PAN_CODIGOColumn]));
                }
                set {
                    this[this.tableDETALLE_PLAN_ANUAL.PAN_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DPAN_MES {
                get {
                    try {
                        return ((string)(this[this.tableDETALLE_PLAN_ANUAL.DPAN_MESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DPAN_MES\' de la tabla \'DETALLE_PLAN_ANUAL\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE_PLAN_ANUAL.DPAN_MESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DPAN_CANTIDADMES {
                get {
                    try {
                        return ((decimal)(this[this.tableDETALLE_PLAN_ANUAL.DPAN_CANTIDADMESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DPAN_CANTIDADMES\' de la tabla \'DETALLE_PLAN_ANUAL\' es DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableDETALLE_PLAN_ANUAL.DPAN_CANTIDADMESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_ANUALESRow PLANES_ANUALESRow {
                get {
                    return ((PLANES_ANUALESRow)(this.GetParentRow(this.Table.ParentRelations["detallePlanAnual_planAnual_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["detallePlanAnual_planAnual_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDPAN_MESNull() {
                return this.IsNull(this.tableDETALLE_PLAN_ANUAL.DPAN_MESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDPAN_MESNull() {
                this[this.tableDETALLE_PLAN_ANUAL.DPAN_MESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDPAN_CANTIDADMESNull() {
                return this.IsNull(this.tableDETALLE_PLAN_ANUAL.DPAN_CANTIDADMESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDPAN_CANTIDADMESNull() {
                this[this.tableDETALLE_PLAN_ANUAL.DPAN_CANTIDADMESColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PLANES_ANUALESRowChangeEvent : global::System.EventArgs {
            
            private PLANES_ANUALESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_ANUALESRowChangeEvent(PLANES_ANUALESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_ANUALESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MATERIAS_PRIMASRowChangeEvent : global::System.EventArgs {
            
            private MATERIAS_PRIMASRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRowChangeEvent(MATERIAS_PRIMASRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIAS_PRIMASRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MATERIASPRIMASPRINCIPALESRowChangeEvent : global::System.EventArgs {
            
            private MATERIASPRIMASPRINCIPALESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASPRINCIPALESRowChangeEvent(MATERIASPRIMASPRINCIPALESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MATERIASPRIMASPRINCIPALESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UNIDADES_MEDIDARowChangeEvent : global::System.EventArgs {
            
            private UNIDADES_MEDIDARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARowChangeEvent(UNIDADES_MEDIDARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNIDADES_MEDIDARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PLANES_MATERIAS_PRIMAS_ANUALESRowChangeEvent : global::System.EventArgs {
            
            private PLANES_MATERIAS_PRIMAS_ANUALESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_MATERIAS_PRIMAS_ANUALESRowChangeEvent(PLANES_MATERIAS_PRIMAS_ANUALESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PLANES_MATERIAS_PRIMAS_ANUALESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowChangeEvent : global::System.EventArgs {
            
            private DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRowChangeEvent(DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLAN_MATERIAS_PRIMAS_ANUALRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DETALLE_PLAN_ANUALRowChangeEvent : global::System.EventArgs {
            
            private DETALLE_PLAN_ANUALRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLAN_ANUALRowChangeEvent(DETALLE_PLAN_ANUALRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DETALLE_PLAN_ANUALRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GyCAP.Data.dsPlanMateriasPrimasTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PLANES_ANUALESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PLANES_ANUALESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PLANES_ANUALES";
            tableMapping.ColumnMappings.Add("PAN_CODIGO", "PAN_CODIGO");
            tableMapping.ColumnMappings.Add("PAN_ANIO", "PAN_ANIO");
            tableMapping.ColumnMappings.Add("DEMAN_CODIGO", "DEMAN_CODIGO");
            tableMapping.ColumnMappings.Add("PAN_FECHACREACION", "PAN_FECHACREACION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PLANES_ANUALES] WHERE (([PAN_CODIGO] = @Original_PAN_CODIGO) AND ([PAN_ANIO] = @Original_PAN_ANIO) AND ([DEMAN_CODIGO] = @Original_DEMAN_CODIGO) AND ((@IsNull_PAN_FECHACREACION = 1 AND [PAN_FECHACREACION] IS NULL) OR ([PAN_FECHACREACION] = @Original_PAN_FECHACREACION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAN_ANIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 4, 0, "PAN_ANIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DEMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PAN_FECHACREACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAN_FECHACREACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAN_FECHACREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAN_FECHACREACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PLANES_ANUALES] ([PAN_ANIO], [DEMAN_CODIGO], [PAN_FECHACREACION]) VALUES (@PAN_ANIO, @DEMAN_CODIGO, @PAN_FECHACREACION);
SELECT PAN_CODIGO, PAN_ANIO, DEMAN_CODIGO, PAN_FECHACREACION FROM PLANES_ANUALES WHERE (PAN_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAN_ANIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 4, 0, "PAN_ANIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DEMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAN_FECHACREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAN_FECHACREACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PLANES_ANUALES] SET [PAN_ANIO] = @PAN_ANIO, [DEMAN_CODIGO] = @DEMAN_CODIGO, [PAN_FECHACREACION] = @PAN_FECHACREACION WHERE (([PAN_CODIGO] = @Original_PAN_CODIGO) AND ([PAN_ANIO] = @Original_PAN_ANIO) AND ([DEMAN_CODIGO] = @Original_DEMAN_CODIGO) AND ((@IsNull_PAN_FECHACREACION = 1 AND [PAN_FECHACREACION] IS NULL) OR ([PAN_FECHACREACION] = @Original_PAN_FECHACREACION)));
SELECT PAN_CODIGO, PAN_ANIO, DEMAN_CODIGO, PAN_FECHACREACION FROM PLANES_ANUALES WHERE (PAN_CODIGO = @PAN_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAN_ANIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 4, 0, "PAN_ANIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DEMAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAN_FECHACREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAN_FECHACREACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAN_ANIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 4, 0, "PAN_ANIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEMAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DEMAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PAN_FECHACREACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAN_FECHACREACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAN_FECHACREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAN_FECHACREACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAN_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "PAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PAN_CODIGO, PAN_ANIO, DEMAN_CODIGO, PAN_FECHACREACION FROM dbo.PLANES_ANUA" +
                "LES";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsPlanMateriasPrimas.PLANES_ANUALESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsPlanMateriasPrimas.PLANES_ANUALESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsPlanMateriasPrimas.PLANES_ANUALESDataTable dataTable = new dsPlanMateriasPrimas.PLANES_ANUALESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsPlanMateriasPrimas.PLANES_ANUALESDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsPlanMateriasPrimas dataSet) {
            return this.Adapter.Update(dataSet, "PLANES_ANUALES");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_PAN_CODIGO, decimal Original_PAN_ANIO, decimal Original_DEMAN_CODIGO, global::System.Nullable<global::System.DateTime> Original_PAN_FECHACREACION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_PAN_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_PAN_ANIO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_DEMAN_CODIGO));
            if ((Original_PAN_FECHACREACION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_PAN_FECHACREACION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal PAN_ANIO, decimal DEMAN_CODIGO, global::System.Nullable<global::System.DateTime> PAN_FECHACREACION) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(PAN_ANIO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(DEMAN_CODIGO));
            if ((PAN_FECHACREACION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(PAN_FECHACREACION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal PAN_ANIO, decimal DEMAN_CODIGO, global::System.Nullable<global::System.DateTime> PAN_FECHACREACION, decimal Original_PAN_CODIGO, decimal Original_PAN_ANIO, decimal Original_DEMAN_CODIGO, global::System.Nullable<global::System.DateTime> Original_PAN_FECHACREACION, decimal PAN_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(PAN_ANIO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(DEMAN_CODIGO));
            if ((PAN_FECHACREACION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(PAN_FECHACREACION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_PAN_CODIGO));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_PAN_ANIO));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_DEMAN_CODIGO));
            if ((Original_PAN_FECHACREACION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_PAN_FECHACREACION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(PAN_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal PAN_ANIO, decimal DEMAN_CODIGO, global::System.Nullable<global::System.DateTime> PAN_FECHACREACION, decimal Original_PAN_CODIGO, decimal Original_PAN_ANIO, decimal Original_DEMAN_CODIGO, global::System.Nullable<global::System.DateTime> Original_PAN_FECHACREACION) {
            return this.Update(PAN_ANIO, DEMAN_CODIGO, PAN_FECHACREACION, Original_PAN_CODIGO, Original_PAN_ANIO, Original_DEMAN_CODIGO, Original_PAN_FECHACREACION, Original_PAN_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MATERIAS_PRIMASTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MATERIAS_PRIMASTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MATERIAS_PRIMAS";
            tableMapping.ColumnMappings.Add("MP_CODIGO", "MP_CODIGO");
            tableMapping.ColumnMappings.Add("UMED_CODIGO", "UMED_CODIGO");
            tableMapping.ColumnMappings.Add("MP_NOMBRE", "MP_NOMBRE");
            tableMapping.ColumnMappings.Add("MP_DESCRIPCION", "MP_DESCRIPCION");
            tableMapping.ColumnMappings.Add("MP_CANTIDADSTOCK", "MP_CANTIDADSTOCK");
            tableMapping.ColumnMappings.Add("MP_PRECIO", "MP_PRECIO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[MATERIAS_PRIMAS] WHERE (([MP_CODIGO] = @Original_MP_CODIGO) AND ((@IsNull_UMED_CODIGO = 1 AND [UMED_CODIGO] IS NULL) OR ([UMED_CODIGO] = @Original_UMED_CODIGO)) AND ((@IsNull_MP_NOMBRE = 1 AND [MP_NOMBRE] IS NULL) OR ([MP_NOMBRE] = @Original_MP_NOMBRE)) AND ((@IsNull_MP_DESCRIPCION = 1 AND [MP_DESCRIPCION] IS NULL) OR ([MP_DESCRIPCION] = @Original_MP_DESCRIPCION)) AND ((@IsNull_MP_CANTIDADSTOCK = 1 AND [MP_CANTIDADSTOCK] IS NULL) OR ([MP_CANTIDADSTOCK] = @Original_MP_CANTIDADSTOCK)) AND ((@IsNull_MP_PRECIO = 1 AND [MP_PRECIO] IS NULL) OR ([MP_PRECIO] = @Original_MP_PRECIO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_PRECIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_PRECIO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_PRECIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MP_PRECIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[MATERIAS_PRIMAS] ([UMED_CODIGO], [MP_NOMBRE], [MP_DESCRIPCION], [MP_CANTIDADSTOCK], [MP_PRECIO]) VALUES (@UMED_CODIGO, @MP_NOMBRE, @MP_DESCRIPCION, @MP_CANTIDADSTOCK, @MP_PRECIO);
SELECT MP_CODIGO, UMED_CODIGO, MP_NOMBRE, MP_DESCRIPCION, MP_CANTIDADSTOCK, MP_PRECIO FROM MATERIAS_PRIMAS WHERE (MP_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CANTIDADSTOCK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_PRECIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MP_PRECIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[MATERIAS_PRIMAS] SET [UMED_CODIGO] = @UMED_CODIGO, [MP_NOMBRE] = @MP_NOMBRE, [MP_DESCRIPCION] = @MP_DESCRIPCION, [MP_CANTIDADSTOCK] = @MP_CANTIDADSTOCK, [MP_PRECIO] = @MP_PRECIO WHERE (([MP_CODIGO] = @Original_MP_CODIGO) AND ((@IsNull_UMED_CODIGO = 1 AND [UMED_CODIGO] IS NULL) OR ([UMED_CODIGO] = @Original_UMED_CODIGO)) AND ((@IsNull_MP_NOMBRE = 1 AND [MP_NOMBRE] IS NULL) OR ([MP_NOMBRE] = @Original_MP_NOMBRE)) AND ((@IsNull_MP_DESCRIPCION = 1 AND [MP_DESCRIPCION] IS NULL) OR ([MP_DESCRIPCION] = @Original_MP_DESCRIPCION)) AND ((@IsNull_MP_CANTIDADSTOCK = 1 AND [MP_CANTIDADSTOCK] IS NULL) OR ([MP_CANTIDADSTOCK] = @Original_MP_CANTIDADSTOCK)) AND ((@IsNull_MP_PRECIO = 1 AND [MP_PRECIO] IS NULL) OR ([MP_PRECIO] = @Original_MP_PRECIO)));
SELECT MP_CODIGO, UMED_CODIGO, MP_NOMBRE, MP_DESCRIPCION, MP_CANTIDADSTOCK, MP_PRECIO FROM MATERIAS_PRIMAS WHERE (MP_CODIGO = @MP_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CANTIDADSTOCK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_PRECIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MP_PRECIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CANTIDADSTOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CANTIDADSTOCK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_PRECIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_PRECIO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_PRECIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "MP_PRECIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MP_CODIGO, UMED_CODIGO, MP_NOMBRE, MP_DESCRIPCION, MP_CANTIDADSTOCK, MP_PR" +
                "ECIO FROM dbo.MATERIAS_PRIMAS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsPlanMateriasPrimas.MATERIAS_PRIMASDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsPlanMateriasPrimas.MATERIAS_PRIMASDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsPlanMateriasPrimas.MATERIAS_PRIMASDataTable dataTable = new dsPlanMateriasPrimas.MATERIAS_PRIMASDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsPlanMateriasPrimas.MATERIAS_PRIMASDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsPlanMateriasPrimas dataSet) {
            return this.Adapter.Update(dataSet, "MATERIAS_PRIMAS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_MP_CODIGO, global::System.Nullable<decimal> Original_UMED_CODIGO, string Original_MP_NOMBRE, string Original_MP_DESCRIPCION, global::System.Nullable<int> Original_MP_CANTIDADSTOCK, global::System.Nullable<decimal> Original_MP_PRECIO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_MP_CODIGO));
            if ((Original_UMED_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_UMED_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_MP_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_MP_NOMBRE));
            }
            if ((Original_MP_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_MP_DESCRIPCION));
            }
            if ((Original_MP_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_MP_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_MP_PRECIO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_MP_PRECIO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<decimal> UMED_CODIGO, string MP_NOMBRE, string MP_DESCRIPCION, global::System.Nullable<int> MP_CANTIDADSTOCK, global::System.Nullable<decimal> MP_PRECIO) {
            if ((UMED_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(UMED_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MP_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MP_NOMBRE));
            }
            if ((MP_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MP_DESCRIPCION));
            }
            if ((MP_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(MP_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((MP_PRECIO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(MP_PRECIO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> UMED_CODIGO, string MP_NOMBRE, string MP_DESCRIPCION, global::System.Nullable<int> MP_CANTIDADSTOCK, global::System.Nullable<decimal> MP_PRECIO, decimal Original_MP_CODIGO, global::System.Nullable<decimal> Original_UMED_CODIGO, string Original_MP_NOMBRE, string Original_MP_DESCRIPCION, global::System.Nullable<int> Original_MP_CANTIDADSTOCK, global::System.Nullable<decimal> Original_MP_PRECIO, decimal MP_CODIGO) {
            if ((UMED_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(UMED_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MP_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MP_NOMBRE));
            }
            if ((MP_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MP_DESCRIPCION));
            }
            if ((MP_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(MP_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((MP_PRECIO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(MP_PRECIO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_MP_CODIGO));
            if ((Original_UMED_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_UMED_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_MP_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_MP_NOMBRE));
            }
            if ((Original_MP_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_MP_DESCRIPCION));
            }
            if ((Original_MP_CANTIDADSTOCK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_MP_CANTIDADSTOCK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_MP_PRECIO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_MP_PRECIO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(MP_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> UMED_CODIGO, string MP_NOMBRE, string MP_DESCRIPCION, global::System.Nullable<int> MP_CANTIDADSTOCK, global::System.Nullable<decimal> MP_PRECIO, decimal Original_MP_CODIGO, global::System.Nullable<decimal> Original_UMED_CODIGO, string Original_MP_NOMBRE, string Original_MP_DESCRIPCION, global::System.Nullable<int> Original_MP_CANTIDADSTOCK, global::System.Nullable<decimal> Original_MP_PRECIO) {
            return this.Update(UMED_CODIGO, MP_NOMBRE, MP_DESCRIPCION, MP_CANTIDADSTOCK, MP_PRECIO, Original_MP_CODIGO, Original_UMED_CODIGO, Original_MP_NOMBRE, Original_MP_DESCRIPCION, Original_MP_CANTIDADSTOCK, Original_MP_PRECIO, Original_MP_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MATERIASPRIMASPRINCIPALESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MATERIASPRIMASPRINCIPALESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MATERIASPRIMASPRINCIPALES";
            tableMapping.ColumnMappings.Add("MPPR_CODIGO", "MPPR_CODIGO");
            tableMapping.ColumnMappings.Add("MP_CODIGO", "MP_CODIGO");
            tableMapping.ColumnMappings.Add("MPPR_CANTIDAD", "MPPR_CANTIDAD");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[MATERIASPRIMASPRINCIPALES] WHERE (([MPPR_CODIGO] = @Original_MPPR_CODIGO) AND ((@IsNull_MP_CODIGO = 1 AND [MP_CODIGO] IS NULL) OR ([MP_CODIGO] = @Original_MP_CODIGO)) AND ((@IsNull_MPPR_CANTIDAD = 1 AND [MPPR_CANTIDAD] IS NULL) OR ([MPPR_CANTIDAD] = @Original_MPPR_CANTIDAD)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MPPR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MPPR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MPPR_CANTIDAD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MPPR_CANTIDAD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MPPR_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "MPPR_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[MATERIASPRIMASPRINCIPALES] ([MP_CODIGO], [MPPR_CANTIDAD]) VALU" +
                "ES (@MP_CODIGO, @MPPR_CANTIDAD);\r\nSELECT MPPR_CODIGO, MP_CODIGO, MPPR_CANTIDAD F" +
                "ROM MATERIASPRIMASPRINCIPALES WHERE (MPPR_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MPPR_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "MPPR_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[MATERIASPRIMASPRINCIPALES] SET [MP_CODIGO] = @MP_CODIGO, [MPPR_CANTIDAD] = @MPPR_CANTIDAD WHERE (([MPPR_CODIGO] = @Original_MPPR_CODIGO) AND ((@IsNull_MP_CODIGO = 1 AND [MP_CODIGO] IS NULL) OR ([MP_CODIGO] = @Original_MP_CODIGO)) AND ((@IsNull_MPPR_CANTIDAD = 1 AND [MPPR_CANTIDAD] IS NULL) OR ([MPPR_CANTIDAD] = @Original_MPPR_CANTIDAD)));
SELECT MPPR_CODIGO, MP_CODIGO, MPPR_CANTIDAD FROM MATERIASPRIMASPRINCIPALES WHERE (MPPR_CODIGO = @MPPR_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MPPR_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "MPPR_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MPPR_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MPPR_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MPPR_CANTIDAD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MPPR_CANTIDAD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MPPR_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 3, "MPPR_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MPPR_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "MPPR_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MPPR_CODIGO, MP_CODIGO, MPPR_CANTIDAD FROM dbo.MATERIASPRIMASPRINCIPALES";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsPlanMateriasPrimas.MATERIASPRIMASPRINCIPALESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsPlanMateriasPrimas.MATERIASPRIMASPRINCIPALESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsPlanMateriasPrimas.MATERIASPRIMASPRINCIPALESDataTable dataTable = new dsPlanMateriasPrimas.MATERIASPRIMASPRINCIPALESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsPlanMateriasPrimas.MATERIASPRIMASPRINCIPALESDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsPlanMateriasPrimas dataSet) {
            return this.Adapter.Update(dataSet, "MATERIASPRIMASPRINCIPALES");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_MPPR_CODIGO, global::System.Nullable<decimal> Original_MP_CODIGO, global::System.Nullable<decimal> Original_MPPR_CANTIDAD) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_MPPR_CODIGO));
            if ((Original_MP_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_MP_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_MPPR_CANTIDAD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_MPPR_CANTIDAD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<decimal> MP_CODIGO, global::System.Nullable<decimal> MPPR_CANTIDAD) {
            if ((MP_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(MP_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MPPR_CANTIDAD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(MPPR_CANTIDAD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> MP_CODIGO, global::System.Nullable<decimal> MPPR_CANTIDAD, decimal Original_MPPR_CODIGO, global::System.Nullable<decimal> Original_MP_CODIGO, global::System.Nullable<decimal> Original_MPPR_CANTIDAD, decimal MPPR_CODIGO) {
            if ((MP_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(MP_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MPPR_CANTIDAD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(MPPR_CANTIDAD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_MPPR_CODIGO));
            if ((Original_MP_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_MP_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_MPPR_CANTIDAD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_MPPR_CANTIDAD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(MPPR_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> MP_CODIGO, global::System.Nullable<decimal> MPPR_CANTIDAD, decimal Original_MPPR_CODIGO, global::System.Nullable<decimal> Original_MP_CODIGO, global::System.Nullable<decimal> Original_MPPR_CANTIDAD) {
            return this.Update(MP_CODIGO, MPPR_CANTIDAD, Original_MPPR_CODIGO, Original_MP_CODIGO, Original_MPPR_CANTIDAD, Original_MPPR_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UNIDADES_MEDIDATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UNIDADES_MEDIDATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UNIDADES_MEDIDA";
            tableMapping.ColumnMappings.Add("UMED_CODIGO", "UMED_CODIGO");
            tableMapping.ColumnMappings.Add("TUMED_CODIGO", "TUMED_CODIGO");
            tableMapping.ColumnMappings.Add("UMED_NOMBRE", "UMED_NOMBRE");
            tableMapping.ColumnMappings.Add("UMED_ABREVIATURA", "UMED_ABREVIATURA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[UNIDADES_MEDIDA] WHERE (([UMED_CODIGO] = @Original_UMED_CODIGO) AND ((@IsNull_TUMED_CODIGO = 1 AND [TUMED_CODIGO] IS NULL) OR ([TUMED_CODIGO] = @Original_TUMED_CODIGO)) AND ((@IsNull_UMED_NOMBRE = 1 AND [UMED_NOMBRE] IS NULL) OR ([UMED_NOMBRE] = @Original_UMED_NOMBRE)) AND ((@IsNull_UMED_ABREVIATURA = 1 AND [UMED_ABREVIATURA] IS NULL) OR ([UMED_ABREVIATURA] = @Original_UMED_ABREVIATURA)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUMED_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_ABREVIATURA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[UNIDADES_MEDIDA] ([TUMED_CODIGO], [UMED_NOMBRE], [UMED_ABREVIATURA]) VALUES (@TUMED_CODIGO, @UMED_NOMBRE, @UMED_ABREVIATURA);
SELECT UMED_CODIGO, TUMED_CODIGO, UMED_NOMBRE, UMED_ABREVIATURA FROM UNIDADES_MEDIDA WHERE (UMED_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[UNIDADES_MEDIDA] SET [TUMED_CODIGO] = @TUMED_CODIGO, [UMED_NOMBRE] = @UMED_NOMBRE, [UMED_ABREVIATURA] = @UMED_ABREVIATURA WHERE (([UMED_CODIGO] = @Original_UMED_CODIGO) AND ((@IsNull_TUMED_CODIGO = 1 AND [TUMED_CODIGO] IS NULL) OR ([TUMED_CODIGO] = @Original_TUMED_CODIGO)) AND ((@IsNull_UMED_NOMBRE = 1 AND [UMED_NOMBRE] IS NULL) OR ([UMED_NOMBRE] = @Original_UMED_NOMBRE)) AND ((@IsNull_UMED_ABREVIATURA = 1 AND [UMED_ABREVIATURA] IS NULL) OR ([UMED_ABREVIATURA] = @Original_UMED_ABREVIATURA)));
SELECT UMED_CODIGO, TUMED_CODIGO, UMED_NOMBRE, UMED_ABREVIATURA FROM UNIDADES_MEDIDA WHERE (UMED_CODIGO = @UMED_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TUMED_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TUMED_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "TUMED_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UMED_ABREVIATURA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UMED_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UMED_ABREVIATURA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UMED_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "UMED_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT UMED_CODIGO, TUMED_CODIGO, UMED_NOMBRE, UMED_ABREVIATURA FROM dbo.UNIDADES" +
                "_MEDIDA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsPlanMateriasPrimas.UNIDADES_MEDIDADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsPlanMateriasPrimas.UNIDADES_MEDIDADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsPlanMateriasPrimas.UNIDADES_MEDIDADataTable dataTable = new dsPlanMateriasPrimas.UNIDADES_MEDIDADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsPlanMateriasPrimas.UNIDADES_MEDIDADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsPlanMateriasPrimas dataSet) {
            return this.Adapter.Update(dataSet, "UNIDADES_MEDIDA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_UMED_CODIGO, global::System.Nullable<decimal> Original_TUMED_CODIGO, string Original_UMED_NOMBRE, string Original_UMED_ABREVIATURA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_UMED_CODIGO));
            if ((Original_TUMED_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_TUMED_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_UMED_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_UMED_NOMBRE));
            }
            if ((Original_UMED_ABREVIATURA == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_UMED_ABREVIATURA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<decimal> TUMED_CODIGO, string UMED_NOMBRE, string UMED_ABREVIATURA) {
            if ((TUMED_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(TUMED_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((UMED_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(UMED_NOMBRE));
            }
            if ((UMED_ABREVIATURA == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(UMED_ABREVIATURA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> TUMED_CODIGO, string UMED_NOMBRE, string UMED_ABREVIATURA, decimal Original_UMED_CODIGO, global::System.Nullable<decimal> Original_TUMED_CODIGO, string Original_UMED_NOMBRE, string Original_UMED_ABREVIATURA, decimal UMED_CODIGO) {
            if ((TUMED_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(TUMED_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((UMED_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(UMED_NOMBRE));
            }
            if ((UMED_ABREVIATURA == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(UMED_ABREVIATURA));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_UMED_CODIGO));
            if ((Original_TUMED_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_TUMED_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_UMED_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_UMED_NOMBRE));
            }
            if ((Original_UMED_ABREVIATURA == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_UMED_ABREVIATURA));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(UMED_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> TUMED_CODIGO, string UMED_NOMBRE, string UMED_ABREVIATURA, decimal Original_UMED_CODIGO, global::System.Nullable<decimal> Original_TUMED_CODIGO, string Original_UMED_NOMBRE, string Original_UMED_ABREVIATURA) {
            return this.Update(TUMED_CODIGO, UMED_NOMBRE, UMED_ABREVIATURA, Original_UMED_CODIGO, Original_TUMED_CODIGO, Original_UMED_NOMBRE, Original_UMED_ABREVIATURA, Original_UMED_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PLANES_MATERIAS_PRIMAS_ANUALESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PLANES_MATERIAS_PRIMAS_ANUALESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PLANES_MATERIAS_PRIMAS_ANUALES";
            tableMapping.ColumnMappings.Add("PMPA_CODIGO", "PMPA_CODIGO");
            tableMapping.ColumnMappings.Add("PMPA_FECHACREACION", "PMPA_FECHACREACION");
            tableMapping.ColumnMappings.Add("PMPA_ANIO", "PMPA_ANIO");
            tableMapping.ColumnMappings.Add("PMPA_MES", "PMPA_MES");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PLANES_MATERIAS_PRIMAS_ANUALES] WHERE (([PMPA_CODIGO] = @Original_PMPA_CODIGO) AND ((@IsNull_PMPA_FECHACREACION = 1 AND [PMPA_FECHACREACION] IS NULL) OR ([PMPA_FECHACREACION] = @Original_PMPA_FECHACREACION)) AND ((@IsNull_PMPA_ANIO = 1 AND [PMPA_ANIO] IS NULL) OR ([PMPA_ANIO] = @Original_PMPA_ANIO)) AND ((@IsNull_PMPA_MES = 1 AND [PMPA_MES] IS NULL) OR ([PMPA_MES] = @Original_PMPA_MES)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMPA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMPA_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PMPA_FECHACREACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMPA_FECHACREACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMPA_FECHACREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMPA_FECHACREACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PMPA_ANIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMPA_ANIO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMPA_ANIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 4, 0, "PMPA_ANIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PMPA_MES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMPA_MES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMPA_MES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMPA_MES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PLANES_MATERIAS_PRIMAS_ANUALES] ([PMPA_FECHACREACION], [PMPA_ANIO], [PMPA_MES]) VALUES (@PMPA_FECHACREACION, @PMPA_ANIO, @PMPA_MES);
SELECT PMPA_CODIGO, PMPA_FECHACREACION, PMPA_ANIO, PMPA_MES FROM PLANES_MATERIAS_PRIMAS_ANUALES WHERE (PMPA_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMPA_FECHACREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMPA_FECHACREACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMPA_ANIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 4, 0, "PMPA_ANIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMPA_MES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMPA_MES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PLANES_MATERIAS_PRIMAS_ANUALES] SET [PMPA_FECHACREACION] = @PMPA_FECHACREACION, [PMPA_ANIO] = @PMPA_ANIO, [PMPA_MES] = @PMPA_MES WHERE (([PMPA_CODIGO] = @Original_PMPA_CODIGO) AND ((@IsNull_PMPA_FECHACREACION = 1 AND [PMPA_FECHACREACION] IS NULL) OR ([PMPA_FECHACREACION] = @Original_PMPA_FECHACREACION)) AND ((@IsNull_PMPA_ANIO = 1 AND [PMPA_ANIO] IS NULL) OR ([PMPA_ANIO] = @Original_PMPA_ANIO)) AND ((@IsNull_PMPA_MES = 1 AND [PMPA_MES] IS NULL) OR ([PMPA_MES] = @Original_PMPA_MES)));
SELECT PMPA_CODIGO, PMPA_FECHACREACION, PMPA_ANIO, PMPA_MES FROM PLANES_MATERIAS_PRIMAS_ANUALES WHERE (PMPA_CODIGO = @PMPA_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMPA_FECHACREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMPA_FECHACREACION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMPA_ANIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 4, 0, "PMPA_ANIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMPA_MES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMPA_MES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMPA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMPA_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PMPA_FECHACREACION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMPA_FECHACREACION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMPA_FECHACREACION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMPA_FECHACREACION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PMPA_ANIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMPA_ANIO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMPA_ANIO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 4, 0, "PMPA_ANIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PMPA_MES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMPA_MES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMPA_MES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMPA_MES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMPA_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "PMPA_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PMPA_CODIGO, PMPA_FECHACREACION, PMPA_ANIO, PMPA_MES FROM dbo.PLANES_MATER" +
                "IAS_PRIMAS_ANUALES";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsPlanMateriasPrimas.PLANES_MATERIAS_PRIMAS_ANUALESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsPlanMateriasPrimas.PLANES_MATERIAS_PRIMAS_ANUALESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsPlanMateriasPrimas.PLANES_MATERIAS_PRIMAS_ANUALESDataTable dataTable = new dsPlanMateriasPrimas.PLANES_MATERIAS_PRIMAS_ANUALESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsPlanMateriasPrimas.PLANES_MATERIAS_PRIMAS_ANUALESDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsPlanMateriasPrimas dataSet) {
            return this.Adapter.Update(dataSet, "PLANES_MATERIAS_PRIMAS_ANUALES");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_PMPA_CODIGO, global::System.Nullable<global::System.DateTime> Original_PMPA_FECHACREACION, global::System.Nullable<decimal> Original_PMPA_ANIO, string Original_PMPA_MES) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_PMPA_CODIGO));
            if ((Original_PMPA_FECHACREACION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_PMPA_FECHACREACION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_PMPA_ANIO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_PMPA_ANIO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_PMPA_MES == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_PMPA_MES));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<global::System.DateTime> PMPA_FECHACREACION, global::System.Nullable<decimal> PMPA_ANIO, string PMPA_MES) {
            if ((PMPA_FECHACREACION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(PMPA_FECHACREACION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMPA_ANIO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(PMPA_ANIO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PMPA_MES == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PMPA_MES));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> PMPA_FECHACREACION, global::System.Nullable<decimal> PMPA_ANIO, string PMPA_MES, decimal Original_PMPA_CODIGO, global::System.Nullable<global::System.DateTime> Original_PMPA_FECHACREACION, global::System.Nullable<decimal> Original_PMPA_ANIO, string Original_PMPA_MES, decimal PMPA_CODIGO) {
            if ((PMPA_FECHACREACION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(PMPA_FECHACREACION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PMPA_ANIO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(PMPA_ANIO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PMPA_MES == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PMPA_MES));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_PMPA_CODIGO));
            if ((Original_PMPA_FECHACREACION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_PMPA_FECHACREACION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_PMPA_ANIO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_PMPA_ANIO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_PMPA_MES == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_PMPA_MES));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(PMPA_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> PMPA_FECHACREACION, global::System.Nullable<decimal> PMPA_ANIO, string PMPA_MES, decimal Original_PMPA_CODIGO, global::System.Nullable<global::System.DateTime> Original_PMPA_FECHACREACION, global::System.Nullable<decimal> Original_PMPA_ANIO, string Original_PMPA_MES) {
            return this.Update(PMPA_FECHACREACION, PMPA_ANIO, PMPA_MES, Original_PMPA_CODIGO, Original_PMPA_FECHACREACION, Original_PMPA_ANIO, Original_PMPA_MES, Original_PMPA_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DETALLE_PLAN_MATERIAS_PRIMAS_ANUAL";
            tableMapping.ColumnMappings.Add("DPMPA_CODIGO", "DPMPA_CODIGO");
            tableMapping.ColumnMappings.Add("PMPA_CODIGO", "PMPA_CODIGO");
            tableMapping.ColumnMappings.Add("MP_CODIGO", "MP_CODIGO");
            tableMapping.ColumnMappings.Add("DPMPA_CANTIDAD", "DPMPA_CANTIDAD");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[DETALLE_PLAN_MATERIAS_PRIMAS_ANUAL] WHERE (([DPMPA_CODIGO] = @Original_DPMPA_CODIGO) AND ((@IsNull_PMPA_CODIGO = 1 AND [PMPA_CODIGO] IS NULL) OR ([PMPA_CODIGO] = @Original_PMPA_CODIGO)) AND ((@IsNull_MP_CODIGO = 1 AND [MP_CODIGO] IS NULL) OR ([MP_CODIGO] = @Original_MP_CODIGO)) AND ((@IsNull_DPMPA_CANTIDAD = 1 AND [DPMPA_CANTIDAD] IS NULL) OR ([DPMPA_CANTIDAD] = @Original_DPMPA_CANTIDAD)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMPA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPMPA_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PMPA_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMPA_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMPA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMPA_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DPMPA_CANTIDAD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMPA_CANTIDAD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMPA_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPMPA_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[DETALLE_PLAN_MATERIAS_PRIMAS_ANUAL] ([PMPA_CODIGO], [MP_CODIGO], [DPMPA_CANTIDAD]) VALUES (@PMPA_CODIGO, @MP_CODIGO, @DPMPA_CANTIDAD);
SELECT DPMPA_CODIGO, PMPA_CODIGO, MP_CODIGO, DPMPA_CANTIDAD FROM DETALLE_PLAN_MATERIAS_PRIMAS_ANUAL WHERE (DPMPA_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMPA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMPA_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPMPA_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPMPA_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[DETALLE_PLAN_MATERIAS_PRIMAS_ANUAL] SET [PMPA_CODIGO] = @PMPA_CODIGO, [MP_CODIGO] = @MP_CODIGO, [DPMPA_CANTIDAD] = @DPMPA_CANTIDAD WHERE (([DPMPA_CODIGO] = @Original_DPMPA_CODIGO) AND ((@IsNull_PMPA_CODIGO = 1 AND [PMPA_CODIGO] IS NULL) OR ([PMPA_CODIGO] = @Original_PMPA_CODIGO)) AND ((@IsNull_MP_CODIGO = 1 AND [MP_CODIGO] IS NULL) OR ([MP_CODIGO] = @Original_MP_CODIGO)) AND ((@IsNull_DPMPA_CANTIDAD = 1 AND [DPMPA_CANTIDAD] IS NULL) OR ([DPMPA_CANTIDAD] = @Original_DPMPA_CANTIDAD)));
SELECT DPMPA_CODIGO, PMPA_CODIGO, MP_CODIGO, DPMPA_CANTIDAD FROM DETALLE_PLAN_MATERIAS_PRIMAS_ANUAL WHERE (DPMPA_CODIGO = @DPMPA_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PMPA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMPA_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPMPA_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPMPA_CANTIDAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMPA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPMPA_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PMPA_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PMPA_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PMPA_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PMPA_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MP_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "MP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DPMPA_CANTIDAD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPMPA_CANTIDAD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPMPA_CANTIDAD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPMPA_CANTIDAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPMPA_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "DPMPA_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DPMPA_CODIGO, PMPA_CODIGO, MP_CODIGO, DPMPA_CANTIDAD FROM dbo.DETALLE_PLAN" +
                "_MATERIAS_PRIMAS_ANUAL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsPlanMateriasPrimas.DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsPlanMateriasPrimas.DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsPlanMateriasPrimas.DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable dataTable = new dsPlanMateriasPrimas.DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsPlanMateriasPrimas.DETALLE_PLAN_MATERIAS_PRIMAS_ANUALDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsPlanMateriasPrimas dataSet) {
            return this.Adapter.Update(dataSet, "DETALLE_PLAN_MATERIAS_PRIMAS_ANUAL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_DPMPA_CODIGO, global::System.Nullable<decimal> Original_PMPA_CODIGO, global::System.Nullable<decimal> Original_MP_CODIGO, global::System.Nullable<decimal> Original_DPMPA_CANTIDAD) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_DPMPA_CODIGO));
            if ((Original_PMPA_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_PMPA_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_MP_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_MP_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_DPMPA_CANTIDAD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_DPMPA_CANTIDAD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<decimal> PMPA_CODIGO, global::System.Nullable<decimal> MP_CODIGO, global::System.Nullable<decimal> DPMPA_CANTIDAD) {
            if ((PMPA_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(PMPA_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MP_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(MP_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DPMPA_CANTIDAD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(DPMPA_CANTIDAD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> PMPA_CODIGO, global::System.Nullable<decimal> MP_CODIGO, global::System.Nullable<decimal> DPMPA_CANTIDAD, decimal Original_DPMPA_CODIGO, global::System.Nullable<decimal> Original_PMPA_CODIGO, global::System.Nullable<decimal> Original_MP_CODIGO, global::System.Nullable<decimal> Original_DPMPA_CANTIDAD, decimal DPMPA_CODIGO) {
            if ((PMPA_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(PMPA_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MP_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(MP_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DPMPA_CANTIDAD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(DPMPA_CANTIDAD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_DPMPA_CODIGO));
            if ((Original_PMPA_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_PMPA_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_MP_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_MP_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_DPMPA_CANTIDAD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_DPMPA_CANTIDAD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(DPMPA_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> PMPA_CODIGO, global::System.Nullable<decimal> MP_CODIGO, global::System.Nullable<decimal> DPMPA_CANTIDAD, decimal Original_DPMPA_CODIGO, global::System.Nullable<decimal> Original_PMPA_CODIGO, global::System.Nullable<decimal> Original_MP_CODIGO, global::System.Nullable<decimal> Original_DPMPA_CANTIDAD) {
            return this.Update(PMPA_CODIGO, MP_CODIGO, DPMPA_CANTIDAD, Original_DPMPA_CODIGO, Original_PMPA_CODIGO, Original_MP_CODIGO, Original_DPMPA_CANTIDAD, Original_DPMPA_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DETALLE_PLAN_ANUALTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DETALLE_PLAN_ANUALTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DETALLE_PLAN_ANUAL";
            tableMapping.ColumnMappings.Add("DPAN_CODIGO", "DPAN_CODIGO");
            tableMapping.ColumnMappings.Add("PAN_CODIGO", "PAN_CODIGO");
            tableMapping.ColumnMappings.Add("DPAN_MES", "DPAN_MES");
            tableMapping.ColumnMappings.Add("DPAN_CANTIDADMES", "DPAN_CANTIDADMES");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[DETALLE_PLAN_ANUAL] WHERE (([DPAN_CODIGO] = @Original_DPAN_CODIGO) AND ([PAN_CODIGO] = @Original_PAN_CODIGO) AND ((@IsNull_DPAN_MES = 1 AND [DPAN_MES] IS NULL) OR ([DPAN_MES] = @Original_DPAN_MES)) AND ((@IsNull_DPAN_CANTIDADMES = 1 AND [DPAN_CANTIDADMES] IS NULL) OR ([DPAN_CANTIDADMES] = @Original_DPAN_CANTIDADMES)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DPAN_MES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPAN_MES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPAN_MES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPAN_MES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DPAN_CANTIDADMES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPAN_CANTIDADMES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPAN_CANTIDADMES", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPAN_CANTIDADMES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[DETALLE_PLAN_ANUAL] ([PAN_CODIGO], [DPAN_MES], [DPAN_CANTIDADMES]) VALUES (@PAN_CODIGO, @DPAN_MES, @DPAN_CANTIDADMES);
SELECT DPAN_CODIGO, PAN_CODIGO, DPAN_MES, DPAN_CANTIDADMES FROM DETALLE_PLAN_ANUAL WHERE (DPAN_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPAN_MES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPAN_MES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPAN_CANTIDADMES", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPAN_CANTIDADMES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[DETALLE_PLAN_ANUAL] SET [PAN_CODIGO] = @PAN_CODIGO, [DPAN_MES] = @DPAN_MES, [DPAN_CANTIDADMES] = @DPAN_CANTIDADMES WHERE (([DPAN_CODIGO] = @Original_DPAN_CODIGO) AND ([PAN_CODIGO] = @Original_PAN_CODIGO) AND ((@IsNull_DPAN_MES = 1 AND [DPAN_MES] IS NULL) OR ([DPAN_MES] = @Original_DPAN_MES)) AND ((@IsNull_DPAN_CANTIDADMES = 1 AND [DPAN_CANTIDADMES] IS NULL) OR ([DPAN_CANTIDADMES] = @Original_DPAN_CANTIDADMES)));
SELECT DPAN_CODIGO, PAN_CODIGO, DPAN_MES, DPAN_CANTIDADMES FROM DETALLE_PLAN_ANUAL WHERE (DPAN_CODIGO = @DPAN_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPAN_MES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPAN_MES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPAN_CANTIDADMES", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPAN_CANTIDADMES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PAN_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "PAN_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DPAN_MES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPAN_MES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPAN_MES", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPAN_MES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DPAN_CANTIDADMES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPAN_CANTIDADMES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DPAN_CANTIDADMES", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "DPAN_CANTIDADMES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPAN_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "DPAN_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DPAN_CODIGO, PAN_CODIGO, DPAN_MES, DPAN_CANTIDADMES FROM dbo.DETALLE_PLAN_" +
                "ANUAL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsPlanMateriasPrimas.DETALLE_PLAN_ANUALDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsPlanMateriasPrimas.DETALLE_PLAN_ANUALDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsPlanMateriasPrimas.DETALLE_PLAN_ANUALDataTable dataTable = new dsPlanMateriasPrimas.DETALLE_PLAN_ANUALDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsPlanMateriasPrimas.DETALLE_PLAN_ANUALDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsPlanMateriasPrimas dataSet) {
            return this.Adapter.Update(dataSet, "DETALLE_PLAN_ANUAL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_DPAN_CODIGO, decimal Original_PAN_CODIGO, string Original_DPAN_MES, global::System.Nullable<decimal> Original_DPAN_CANTIDADMES) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_DPAN_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_PAN_CODIGO));
            if ((Original_DPAN_MES == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_DPAN_MES));
            }
            if ((Original_DPAN_CANTIDADMES.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_DPAN_CANTIDADMES.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal PAN_CODIGO, string DPAN_MES, global::System.Nullable<decimal> DPAN_CANTIDADMES) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(PAN_CODIGO));
            if ((DPAN_MES == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DPAN_MES));
            }
            if ((DPAN_CANTIDADMES.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(DPAN_CANTIDADMES.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal PAN_CODIGO, string DPAN_MES, global::System.Nullable<decimal> DPAN_CANTIDADMES, decimal Original_DPAN_CODIGO, decimal Original_PAN_CODIGO, string Original_DPAN_MES, global::System.Nullable<decimal> Original_DPAN_CANTIDADMES, decimal DPAN_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(PAN_CODIGO));
            if ((DPAN_MES == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DPAN_MES));
            }
            if ((DPAN_CANTIDADMES.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(DPAN_CANTIDADMES.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_DPAN_CODIGO));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_PAN_CODIGO));
            if ((Original_DPAN_MES == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_DPAN_MES));
            }
            if ((Original_DPAN_CANTIDADMES.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_DPAN_CANTIDADMES.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(DPAN_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal PAN_CODIGO, string DPAN_MES, global::System.Nullable<decimal> DPAN_CANTIDADMES, decimal Original_DPAN_CODIGO, decimal Original_PAN_CODIGO, string Original_DPAN_MES, global::System.Nullable<decimal> Original_DPAN_CANTIDADMES) {
            return this.Update(PAN_CODIGO, DPAN_MES, DPAN_CANTIDADMES, Original_DPAN_CODIGO, Original_PAN_CODIGO, Original_DPAN_MES, Original_DPAN_CANTIDADMES, Original_DPAN_CODIGO);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private PLANES_ANUALESTableAdapter _pLANES_ANUALESTableAdapter;
        
        private MATERIAS_PRIMASTableAdapter _mATERIAS_PRIMASTableAdapter;
        
        private MATERIASPRIMASPRINCIPALESTableAdapter _mATERIASPRIMASPRINCIPALESTableAdapter;
        
        private UNIDADES_MEDIDATableAdapter _uNIDADES_MEDIDATableAdapter;
        
        private PLANES_MATERIAS_PRIMAS_ANUALESTableAdapter _pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter;
        
        private DETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter _dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter;
        
        private DETALLE_PLAN_ANUALTableAdapter _dETALLE_PLAN_ANUALTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PLANES_ANUALESTableAdapter PLANES_ANUALESTableAdapter {
            get {
                return this._pLANES_ANUALESTableAdapter;
            }
            set {
                this._pLANES_ANUALESTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MATERIAS_PRIMASTableAdapter MATERIAS_PRIMASTableAdapter {
            get {
                return this._mATERIAS_PRIMASTableAdapter;
            }
            set {
                this._mATERIAS_PRIMASTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MATERIASPRIMASPRINCIPALESTableAdapter MATERIASPRIMASPRINCIPALESTableAdapter {
            get {
                return this._mATERIASPRIMASPRINCIPALESTableAdapter;
            }
            set {
                this._mATERIASPRIMASPRINCIPALESTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public UNIDADES_MEDIDATableAdapter UNIDADES_MEDIDATableAdapter {
            get {
                return this._uNIDADES_MEDIDATableAdapter;
            }
            set {
                this._uNIDADES_MEDIDATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PLANES_MATERIAS_PRIMAS_ANUALESTableAdapter PLANES_MATERIAS_PRIMAS_ANUALESTableAdapter {
            get {
                return this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter;
            }
            set {
                this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public DETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter DETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter {
            get {
                return this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter;
            }
            set {
                this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public DETALLE_PLAN_ANUALTableAdapter DETALLE_PLAN_ANUALTableAdapter {
            get {
                return this._dETALLE_PLAN_ANUALTableAdapter;
            }
            set {
                this._dETALLE_PLAN_ANUALTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._pLANES_ANUALESTableAdapter != null) 
                            && (this._pLANES_ANUALESTableAdapter.Connection != null))) {
                    return this._pLANES_ANUALESTableAdapter.Connection;
                }
                if (((this._mATERIAS_PRIMASTableAdapter != null) 
                            && (this._mATERIAS_PRIMASTableAdapter.Connection != null))) {
                    return this._mATERIAS_PRIMASTableAdapter.Connection;
                }
                if (((this._mATERIASPRIMASPRINCIPALESTableAdapter != null) 
                            && (this._mATERIASPRIMASPRINCIPALESTableAdapter.Connection != null))) {
                    return this._mATERIASPRIMASPRINCIPALESTableAdapter.Connection;
                }
                if (((this._uNIDADES_MEDIDATableAdapter != null) 
                            && (this._uNIDADES_MEDIDATableAdapter.Connection != null))) {
                    return this._uNIDADES_MEDIDATableAdapter.Connection;
                }
                if (((this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter != null) 
                            && (this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter.Connection != null))) {
                    return this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter.Connection;
                }
                if (((this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter != null) 
                            && (this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter.Connection != null))) {
                    return this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter.Connection;
                }
                if (((this._dETALLE_PLAN_ANUALTableAdapter != null) 
                            && (this._dETALLE_PLAN_ANUALTableAdapter.Connection != null))) {
                    return this._dETALLE_PLAN_ANUALTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._pLANES_ANUALESTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mATERIAS_PRIMASTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mATERIASPRIMASPRINCIPALESTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dETALLE_PLAN_ANUALTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(dsPlanMateriasPrimas dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UNIDADES_MEDIDA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._uNIDADES_MEDIDATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pLANES_ANUALESTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PLANES_ANUALES.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pLANES_ANUALESTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PLANES_MATERIAS_PRIMAS_ANUALES.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mATERIAS_PRIMASTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MATERIAS_PRIMAS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mATERIAS_PRIMASTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dETALLE_PLAN_ANUALTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DETALLE_PLAN_ANUAL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dETALLE_PLAN_ANUALTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mATERIASPRIMASPRINCIPALESTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MATERIASPRIMASPRINCIPALES.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mATERIASPRIMASPRINCIPALESTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(dsPlanMateriasPrimas dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UNIDADES_MEDIDA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._uNIDADES_MEDIDATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pLANES_ANUALESTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PLANES_ANUALES.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pLANES_ANUALESTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PLANES_MATERIAS_PRIMAS_ANUALES.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mATERIAS_PRIMASTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MATERIAS_PRIMAS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mATERIAS_PRIMASTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dETALLE_PLAN_ANUALTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DETALLE_PLAN_ANUAL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dETALLE_PLAN_ANUALTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mATERIASPRIMASPRINCIPALESTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MATERIASPRIMASPRINCIPALES.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mATERIASPRIMASPRINCIPALESTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(dsPlanMateriasPrimas dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._mATERIASPRIMASPRINCIPALESTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MATERIASPRIMASPRINCIPALES.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mATERIASPRIMASPRINCIPALESTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DETALLE_PLAN_MATERIAS_PRIMAS_ANUAL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dETALLE_PLAN_ANUALTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DETALLE_PLAN_ANUAL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dETALLE_PLAN_ANUALTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mATERIAS_PRIMASTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MATERIAS_PRIMAS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mATERIAS_PRIMASTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PLANES_MATERIAS_PRIMAS_ANUALES.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pLANES_ANUALESTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PLANES_ANUALES.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pLANES_ANUALESTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UNIDADES_MEDIDA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._uNIDADES_MEDIDATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(dsPlanMateriasPrimas dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._pLANES_ANUALESTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pLANES_ANUALESTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._mATERIAS_PRIMASTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mATERIAS_PRIMASTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._mATERIASPRIMASPRINCIPALESTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mATERIASPRIMASPRINCIPALESTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._uNIDADES_MEDIDATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._uNIDADES_MEDIDATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            if (((this._dETALLE_PLAN_ANUALTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dETALLE_PLAN_ANUALTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda" +
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co" +
                        "n las transacciones o el estado actual no permite que comience la transacción.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._pLANES_ANUALESTableAdapter != null)) {
                    revertConnections.Add(this._pLANES_ANUALESTableAdapter, this._pLANES_ANUALESTableAdapter.Connection);
                    this._pLANES_ANUALESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pLANES_ANUALESTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pLANES_ANUALESTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pLANES_ANUALESTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pLANES_ANUALESTableAdapter.Adapter);
                    }
                }
                if ((this._mATERIAS_PRIMASTableAdapter != null)) {
                    revertConnections.Add(this._mATERIAS_PRIMASTableAdapter, this._mATERIAS_PRIMASTableAdapter.Connection);
                    this._mATERIAS_PRIMASTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mATERIAS_PRIMASTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mATERIAS_PRIMASTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mATERIAS_PRIMASTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mATERIAS_PRIMASTableAdapter.Adapter);
                    }
                }
                if ((this._mATERIASPRIMASPRINCIPALESTableAdapter != null)) {
                    revertConnections.Add(this._mATERIASPRIMASPRINCIPALESTableAdapter, this._mATERIASPRIMASPRINCIPALESTableAdapter.Connection);
                    this._mATERIASPRIMASPRINCIPALESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mATERIASPRIMASPRINCIPALESTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mATERIASPRIMASPRINCIPALESTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mATERIASPRIMASPRINCIPALESTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mATERIASPRIMASPRINCIPALESTableAdapter.Adapter);
                    }
                }
                if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                    revertConnections.Add(this._uNIDADES_MEDIDATableAdapter, this._uNIDADES_MEDIDATableAdapter.Connection);
                    this._uNIDADES_MEDIDATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._uNIDADES_MEDIDATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._uNIDADES_MEDIDATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._uNIDADES_MEDIDATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._uNIDADES_MEDIDATableAdapter.Adapter);
                    }
                }
                if ((this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter != null)) {
                    revertConnections.Add(this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter, this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter.Connection);
                    this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter.Adapter);
                    }
                }
                if ((this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter != null)) {
                    revertConnections.Add(this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter, this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter.Connection);
                    this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter.Adapter);
                    }
                }
                if ((this._dETALLE_PLAN_ANUALTableAdapter != null)) {
                    revertConnections.Add(this._dETALLE_PLAN_ANUALTableAdapter, this._dETALLE_PLAN_ANUALTableAdapter.Connection);
                    this._dETALLE_PLAN_ANUALTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dETALLE_PLAN_ANUALTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dETALLE_PLAN_ANUALTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dETALLE_PLAN_ANUALTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dETALLE_PLAN_ANUALTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._pLANES_ANUALESTableAdapter != null)) {
                    this._pLANES_ANUALESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pLANES_ANUALESTableAdapter]));
                    this._pLANES_ANUALESTableAdapter.Transaction = null;
                }
                if ((this._mATERIAS_PRIMASTableAdapter != null)) {
                    this._mATERIAS_PRIMASTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mATERIAS_PRIMASTableAdapter]));
                    this._mATERIAS_PRIMASTableAdapter.Transaction = null;
                }
                if ((this._mATERIASPRIMASPRINCIPALESTableAdapter != null)) {
                    this._mATERIASPRIMASPRINCIPALESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mATERIASPRIMASPRINCIPALESTableAdapter]));
                    this._mATERIASPRIMASPRINCIPALESTableAdapter.Transaction = null;
                }
                if ((this._uNIDADES_MEDIDATableAdapter != null)) {
                    this._uNIDADES_MEDIDATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._uNIDADES_MEDIDATableAdapter]));
                    this._uNIDADES_MEDIDATableAdapter.Transaction = null;
                }
                if ((this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter != null)) {
                    this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter]));
                    this._pLANES_MATERIAS_PRIMAS_ANUALESTableAdapter.Transaction = null;
                }
                if ((this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter != null)) {
                    this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter]));
                    this._dETALLE_PLAN_MATERIAS_PRIMAS_ANUALTableAdapter.Transaction = null;
                }
                if ((this._dETALLE_PLAN_ANUALTableAdapter != null)) {
                    this._dETALLE_PLAN_ANUALTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dETALLE_PLAN_ANUALTableAdapter]));
                    this._dETALLE_PLAN_ANUALTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591