//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GyCAP.Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsEmpleado")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsEmpleado : global::System.Data.DataSet {
        
        private CAPACIDAD_EMPLEADOSDataTable tableCAPACIDAD_EMPLEADOS;
        
        private CAPACIDADESXEMPLEADODataTable tableCAPACIDADESXEMPLEADO;
        
        private EMPLEADOSDataTable tableEMPLEADOS;
        
        private SECTORESDataTable tableSECTORES;
        
        private ESTADO_EMPLEADOSDataTable tableESTADO_EMPLEADOS;
        
        private global::System.Data.DataRelation relationcapacidadXEmpleado_capacidadEmpleado_fk;
        
        private global::System.Data.DataRelation relationcapacidadXEmpleado_empleado_fk;
        
        private global::System.Data.DataRelation relationempleado_sector_fk;
        
        private global::System.Data.DataRelation relationempleado_estadoEmpleado_fk;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsEmpleado() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsEmpleado(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CAPACIDAD_EMPLEADOS"] != null)) {
                    base.Tables.Add(new CAPACIDAD_EMPLEADOSDataTable(ds.Tables["CAPACIDAD_EMPLEADOS"]));
                }
                if ((ds.Tables["CAPACIDADESXEMPLEADO"] != null)) {
                    base.Tables.Add(new CAPACIDADESXEMPLEADODataTable(ds.Tables["CAPACIDADESXEMPLEADO"]));
                }
                if ((ds.Tables["EMPLEADOS"] != null)) {
                    base.Tables.Add(new EMPLEADOSDataTable(ds.Tables["EMPLEADOS"]));
                }
                if ((ds.Tables["SECTORES"] != null)) {
                    base.Tables.Add(new SECTORESDataTable(ds.Tables["SECTORES"]));
                }
                if ((ds.Tables["ESTADO_EMPLEADOS"] != null)) {
                    base.Tables.Add(new ESTADO_EMPLEADOSDataTable(ds.Tables["ESTADO_EMPLEADOS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CAPACIDAD_EMPLEADOSDataTable CAPACIDAD_EMPLEADOS {
            get {
                return this.tableCAPACIDAD_EMPLEADOS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CAPACIDADESXEMPLEADODataTable CAPACIDADESXEMPLEADO {
            get {
                return this.tableCAPACIDADESXEMPLEADO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EMPLEADOSDataTable EMPLEADOS {
            get {
                return this.tableEMPLEADOS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SECTORESDataTable SECTORES {
            get {
                return this.tableSECTORES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ESTADO_EMPLEADOSDataTable ESTADO_EMPLEADOS {
            get {
                return this.tableESTADO_EMPLEADOS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsEmpleado cln = ((dsEmpleado)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CAPACIDAD_EMPLEADOS"] != null)) {
                    base.Tables.Add(new CAPACIDAD_EMPLEADOSDataTable(ds.Tables["CAPACIDAD_EMPLEADOS"]));
                }
                if ((ds.Tables["CAPACIDADESXEMPLEADO"] != null)) {
                    base.Tables.Add(new CAPACIDADESXEMPLEADODataTable(ds.Tables["CAPACIDADESXEMPLEADO"]));
                }
                if ((ds.Tables["EMPLEADOS"] != null)) {
                    base.Tables.Add(new EMPLEADOSDataTable(ds.Tables["EMPLEADOS"]));
                }
                if ((ds.Tables["SECTORES"] != null)) {
                    base.Tables.Add(new SECTORESDataTable(ds.Tables["SECTORES"]));
                }
                if ((ds.Tables["ESTADO_EMPLEADOS"] != null)) {
                    base.Tables.Add(new ESTADO_EMPLEADOSDataTable(ds.Tables["ESTADO_EMPLEADOS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCAPACIDAD_EMPLEADOS = ((CAPACIDAD_EMPLEADOSDataTable)(base.Tables["CAPACIDAD_EMPLEADOS"]));
            if ((initTable == true)) {
                if ((this.tableCAPACIDAD_EMPLEADOS != null)) {
                    this.tableCAPACIDAD_EMPLEADOS.InitVars();
                }
            }
            this.tableCAPACIDADESXEMPLEADO = ((CAPACIDADESXEMPLEADODataTable)(base.Tables["CAPACIDADESXEMPLEADO"]));
            if ((initTable == true)) {
                if ((this.tableCAPACIDADESXEMPLEADO != null)) {
                    this.tableCAPACIDADESXEMPLEADO.InitVars();
                }
            }
            this.tableEMPLEADOS = ((EMPLEADOSDataTable)(base.Tables["EMPLEADOS"]));
            if ((initTable == true)) {
                if ((this.tableEMPLEADOS != null)) {
                    this.tableEMPLEADOS.InitVars();
                }
            }
            this.tableSECTORES = ((SECTORESDataTable)(base.Tables["SECTORES"]));
            if ((initTable == true)) {
                if ((this.tableSECTORES != null)) {
                    this.tableSECTORES.InitVars();
                }
            }
            this.tableESTADO_EMPLEADOS = ((ESTADO_EMPLEADOSDataTable)(base.Tables["ESTADO_EMPLEADOS"]));
            if ((initTable == true)) {
                if ((this.tableESTADO_EMPLEADOS != null)) {
                    this.tableESTADO_EMPLEADOS.InitVars();
                }
            }
            this.relationcapacidadXEmpleado_capacidadEmpleado_fk = this.Relations["capacidadXEmpleado_capacidadEmpleado_fk"];
            this.relationcapacidadXEmpleado_empleado_fk = this.Relations["capacidadXEmpleado_empleado_fk"];
            this.relationempleado_sector_fk = this.Relations["empleado_sector_fk"];
            this.relationempleado_estadoEmpleado_fk = this.Relations["empleado_estadoEmpleado_fk"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsEmpleado";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsEmpleado.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCAPACIDAD_EMPLEADOS = new CAPACIDAD_EMPLEADOSDataTable();
            base.Tables.Add(this.tableCAPACIDAD_EMPLEADOS);
            this.tableCAPACIDADESXEMPLEADO = new CAPACIDADESXEMPLEADODataTable();
            base.Tables.Add(this.tableCAPACIDADESXEMPLEADO);
            this.tableEMPLEADOS = new EMPLEADOSDataTable();
            base.Tables.Add(this.tableEMPLEADOS);
            this.tableSECTORES = new SECTORESDataTable();
            base.Tables.Add(this.tableSECTORES);
            this.tableESTADO_EMPLEADOS = new ESTADO_EMPLEADOSDataTable();
            base.Tables.Add(this.tableESTADO_EMPLEADOS);
            this.relationcapacidadXEmpleado_capacidadEmpleado_fk = new global::System.Data.DataRelation("capacidadXEmpleado_capacidadEmpleado_fk", new global::System.Data.DataColumn[] {
                        this.tableCAPACIDAD_EMPLEADOS.CEMP_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCAPACIDADESXEMPLEADO.CEMP_CODIGOColumn}, false);
            this.Relations.Add(this.relationcapacidadXEmpleado_capacidadEmpleado_fk);
            this.relationcapacidadXEmpleado_empleado_fk = new global::System.Data.DataRelation("capacidadXEmpleado_empleado_fk", new global::System.Data.DataColumn[] {
                        this.tableEMPLEADOS.E_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCAPACIDADESXEMPLEADO.E_CODIGOColumn}, false);
            this.Relations.Add(this.relationcapacidadXEmpleado_empleado_fk);
            this.relationempleado_sector_fk = new global::System.Data.DataRelation("empleado_sector_fk", new global::System.Data.DataColumn[] {
                        this.tableSECTORES.SEC_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableEMPLEADOS.SEC_CODIGOColumn}, false);
            this.Relations.Add(this.relationempleado_sector_fk);
            this.relationempleado_estadoEmpleado_fk = new global::System.Data.DataRelation("empleado_estadoEmpleado_fk", new global::System.Data.DataColumn[] {
                        this.tableESTADO_EMPLEADOS.EE_CODIGOColumn}, new global::System.Data.DataColumn[] {
                        this.tableEMPLEADOS.EE_CODIGOColumn}, false);
            this.Relations.Add(this.relationempleado_estadoEmpleado_fk);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCAPACIDAD_EMPLEADOS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCAPACIDADESXEMPLEADO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEMPLEADOS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSECTORES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeESTADO_EMPLEADOS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsEmpleado ds = new dsEmpleado();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CAPACIDAD_EMPLEADOSRowChangeEventHandler(object sender, CAPACIDAD_EMPLEADOSRowChangeEvent e);
        
        public delegate void CAPACIDADESXEMPLEADORowChangeEventHandler(object sender, CAPACIDADESXEMPLEADORowChangeEvent e);
        
        public delegate void EMPLEADOSRowChangeEventHandler(object sender, EMPLEADOSRowChangeEvent e);
        
        public delegate void SECTORESRowChangeEventHandler(object sender, SECTORESRowChangeEvent e);
        
        public delegate void ESTADO_EMPLEADOSRowChangeEventHandler(object sender, ESTADO_EMPLEADOSRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CAPACIDAD_EMPLEADOSDataTable : global::System.Data.TypedTableBase<CAPACIDAD_EMPLEADOSRow> {
            
            private global::System.Data.DataColumn columnCEMP_CODIGO;
            
            private global::System.Data.DataColumn columnCEMP_NOMBRE;
            
            private global::System.Data.DataColumn columnCEMP_DESCRIPCION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACIDAD_EMPLEADOSDataTable() {
                this.TableName = "CAPACIDAD_EMPLEADOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CAPACIDAD_EMPLEADOSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CAPACIDAD_EMPLEADOSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CEMP_CODIGOColumn {
                get {
                    return this.columnCEMP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CEMP_NOMBREColumn {
                get {
                    return this.columnCEMP_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CEMP_DESCRIPCIONColumn {
                get {
                    return this.columnCEMP_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACIDAD_EMPLEADOSRow this[int index] {
                get {
                    return ((CAPACIDAD_EMPLEADOSRow)(this.Rows[index]));
                }
            }
            
            public event CAPACIDAD_EMPLEADOSRowChangeEventHandler CAPACIDAD_EMPLEADOSRowChanging;
            
            public event CAPACIDAD_EMPLEADOSRowChangeEventHandler CAPACIDAD_EMPLEADOSRowChanged;
            
            public event CAPACIDAD_EMPLEADOSRowChangeEventHandler CAPACIDAD_EMPLEADOSRowDeleting;
            
            public event CAPACIDAD_EMPLEADOSRowChangeEventHandler CAPACIDAD_EMPLEADOSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCAPACIDAD_EMPLEADOSRow(CAPACIDAD_EMPLEADOSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACIDAD_EMPLEADOSRow AddCAPACIDAD_EMPLEADOSRow(string CEMP_NOMBRE, string CEMP_DESCRIPCION) {
                CAPACIDAD_EMPLEADOSRow rowCAPACIDAD_EMPLEADOSRow = ((CAPACIDAD_EMPLEADOSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CEMP_NOMBRE,
                        CEMP_DESCRIPCION};
                rowCAPACIDAD_EMPLEADOSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCAPACIDAD_EMPLEADOSRow);
                return rowCAPACIDAD_EMPLEADOSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACIDAD_EMPLEADOSRow FindByCEMP_CODIGO(decimal CEMP_CODIGO) {
                return ((CAPACIDAD_EMPLEADOSRow)(this.Rows.Find(new object[] {
                            CEMP_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CAPACIDAD_EMPLEADOSDataTable cln = ((CAPACIDAD_EMPLEADOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CAPACIDAD_EMPLEADOSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCEMP_CODIGO = base.Columns["CEMP_CODIGO"];
                this.columnCEMP_NOMBRE = base.Columns["CEMP_NOMBRE"];
                this.columnCEMP_DESCRIPCION = base.Columns["CEMP_DESCRIPCION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCEMP_CODIGO = new global::System.Data.DataColumn("CEMP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEMP_CODIGO);
                this.columnCEMP_NOMBRE = new global::System.Data.DataColumn("CEMP_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEMP_NOMBRE);
                this.columnCEMP_DESCRIPCION = new global::System.Data.DataColumn("CEMP_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEMP_DESCRIPCION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCEMP_CODIGO}, true));
                this.columnCEMP_CODIGO.AutoIncrement = true;
                this.columnCEMP_CODIGO.AutoIncrementSeed = -1;
                this.columnCEMP_CODIGO.AutoIncrementStep = -1;
                this.columnCEMP_CODIGO.AllowDBNull = false;
                this.columnCEMP_CODIGO.ReadOnly = true;
                this.columnCEMP_CODIGO.Unique = true;
                this.columnCEMP_NOMBRE.MaxLength = 80;
                this.columnCEMP_DESCRIPCION.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACIDAD_EMPLEADOSRow NewCAPACIDAD_EMPLEADOSRow() {
                return ((CAPACIDAD_EMPLEADOSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CAPACIDAD_EMPLEADOSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CAPACIDAD_EMPLEADOSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAPACIDAD_EMPLEADOSRowChanged != null)) {
                    this.CAPACIDAD_EMPLEADOSRowChanged(this, new CAPACIDAD_EMPLEADOSRowChangeEvent(((CAPACIDAD_EMPLEADOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAPACIDAD_EMPLEADOSRowChanging != null)) {
                    this.CAPACIDAD_EMPLEADOSRowChanging(this, new CAPACIDAD_EMPLEADOSRowChangeEvent(((CAPACIDAD_EMPLEADOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAPACIDAD_EMPLEADOSRowDeleted != null)) {
                    this.CAPACIDAD_EMPLEADOSRowDeleted(this, new CAPACIDAD_EMPLEADOSRowChangeEvent(((CAPACIDAD_EMPLEADOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAPACIDAD_EMPLEADOSRowDeleting != null)) {
                    this.CAPACIDAD_EMPLEADOSRowDeleting(this, new CAPACIDAD_EMPLEADOSRowChangeEvent(((CAPACIDAD_EMPLEADOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCAPACIDAD_EMPLEADOSRow(CAPACIDAD_EMPLEADOSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEmpleado ds = new dsEmpleado();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CAPACIDAD_EMPLEADOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CAPACIDADESXEMPLEADODataTable : global::System.Data.TypedTableBase<CAPACIDADESXEMPLEADORow> {
            
            private global::System.Data.DataColumn columnCXE_CODIGO;
            
            private global::System.Data.DataColumn columnE_CODIGO;
            
            private global::System.Data.DataColumn columnCEMP_CODIGO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACIDADESXEMPLEADODataTable() {
                this.TableName = "CAPACIDADESXEMPLEADO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CAPACIDADESXEMPLEADODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CAPACIDADESXEMPLEADODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CXE_CODIGOColumn {
                get {
                    return this.columnCXE_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_CODIGOColumn {
                get {
                    return this.columnE_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CEMP_CODIGOColumn {
                get {
                    return this.columnCEMP_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACIDADESXEMPLEADORow this[int index] {
                get {
                    return ((CAPACIDADESXEMPLEADORow)(this.Rows[index]));
                }
            }
            
            public event CAPACIDADESXEMPLEADORowChangeEventHandler CAPACIDADESXEMPLEADORowChanging;
            
            public event CAPACIDADESXEMPLEADORowChangeEventHandler CAPACIDADESXEMPLEADORowChanged;
            
            public event CAPACIDADESXEMPLEADORowChangeEventHandler CAPACIDADESXEMPLEADORowDeleting;
            
            public event CAPACIDADESXEMPLEADORowChangeEventHandler CAPACIDADESXEMPLEADORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCAPACIDADESXEMPLEADORow(CAPACIDADESXEMPLEADORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACIDADESXEMPLEADORow AddCAPACIDADESXEMPLEADORow(EMPLEADOSRow parentEMPLEADOSRowBycapacidadXEmpleado_empleado_fk, CAPACIDAD_EMPLEADOSRow parentCAPACIDAD_EMPLEADOSRowBycapacidadXEmpleado_capacidadEmpleado_fk) {
                CAPACIDADESXEMPLEADORow rowCAPACIDADESXEMPLEADORow = ((CAPACIDADESXEMPLEADORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null};
                if ((parentEMPLEADOSRowBycapacidadXEmpleado_empleado_fk != null)) {
                    columnValuesArray[1] = parentEMPLEADOSRowBycapacidadXEmpleado_empleado_fk[0];
                }
                if ((parentCAPACIDAD_EMPLEADOSRowBycapacidadXEmpleado_capacidadEmpleado_fk != null)) {
                    columnValuesArray[2] = parentCAPACIDAD_EMPLEADOSRowBycapacidadXEmpleado_capacidadEmpleado_fk[0];
                }
                rowCAPACIDADESXEMPLEADORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCAPACIDADESXEMPLEADORow);
                return rowCAPACIDADESXEMPLEADORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACIDADESXEMPLEADORow FindByCXE_CODIGO(decimal CXE_CODIGO) {
                return ((CAPACIDADESXEMPLEADORow)(this.Rows.Find(new object[] {
                            CXE_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CAPACIDADESXEMPLEADODataTable cln = ((CAPACIDADESXEMPLEADODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CAPACIDADESXEMPLEADODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCXE_CODIGO = base.Columns["CXE_CODIGO"];
                this.columnE_CODIGO = base.Columns["E_CODIGO"];
                this.columnCEMP_CODIGO = base.Columns["CEMP_CODIGO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCXE_CODIGO = new global::System.Data.DataColumn("CXE_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXE_CODIGO);
                this.columnE_CODIGO = new global::System.Data.DataColumn("E_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_CODIGO);
                this.columnCEMP_CODIGO = new global::System.Data.DataColumn("CEMP_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCEMP_CODIGO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCXE_CODIGO}, true));
                this.columnCXE_CODIGO.AutoIncrement = true;
                this.columnCXE_CODIGO.AutoIncrementSeed = -1;
                this.columnCXE_CODIGO.AutoIncrementStep = -1;
                this.columnCXE_CODIGO.AllowDBNull = false;
                this.columnCXE_CODIGO.ReadOnly = true;
                this.columnCXE_CODIGO.Unique = true;
                this.columnE_CODIGO.AllowDBNull = false;
                this.columnCEMP_CODIGO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACIDADESXEMPLEADORow NewCAPACIDADESXEMPLEADORow() {
                return ((CAPACIDADESXEMPLEADORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CAPACIDADESXEMPLEADORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CAPACIDADESXEMPLEADORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAPACIDADESXEMPLEADORowChanged != null)) {
                    this.CAPACIDADESXEMPLEADORowChanged(this, new CAPACIDADESXEMPLEADORowChangeEvent(((CAPACIDADESXEMPLEADORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAPACIDADESXEMPLEADORowChanging != null)) {
                    this.CAPACIDADESXEMPLEADORowChanging(this, new CAPACIDADESXEMPLEADORowChangeEvent(((CAPACIDADESXEMPLEADORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAPACIDADESXEMPLEADORowDeleted != null)) {
                    this.CAPACIDADESXEMPLEADORowDeleted(this, new CAPACIDADESXEMPLEADORowChangeEvent(((CAPACIDADESXEMPLEADORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAPACIDADESXEMPLEADORowDeleting != null)) {
                    this.CAPACIDADESXEMPLEADORowDeleting(this, new CAPACIDADESXEMPLEADORowChangeEvent(((CAPACIDADESXEMPLEADORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCAPACIDADESXEMPLEADORow(CAPACIDADESXEMPLEADORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEmpleado ds = new dsEmpleado();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CAPACIDADESXEMPLEADODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EMPLEADOSDataTable : global::System.Data.TypedTableBase<EMPLEADOSRow> {
            
            private global::System.Data.DataColumn columnE_CODIGO;
            
            private global::System.Data.DataColumn columnE_LEGAJO;
            
            private global::System.Data.DataColumn columnEE_CODIGO;
            
            private global::System.Data.DataColumn columnSEC_CODIGO;
            
            private global::System.Data.DataColumn columnE_APELLIDO;
            
            private global::System.Data.DataColumn columnE_NOMBRE;
            
            private global::System.Data.DataColumn columnE_FECHANACIMIENTO;
            
            private global::System.Data.DataColumn columnE_FECHA_ALTA;
            
            private global::System.Data.DataColumn columnE_FECHA_BAJA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLEADOSDataTable() {
                this.TableName = "EMPLEADOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EMPLEADOSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EMPLEADOSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_CODIGOColumn {
                get {
                    return this.columnE_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_LEGAJOColumn {
                get {
                    return this.columnE_LEGAJO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EE_CODIGOColumn {
                get {
                    return this.columnEE_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEC_CODIGOColumn {
                get {
                    return this.columnSEC_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_APELLIDOColumn {
                get {
                    return this.columnE_APELLIDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_NOMBREColumn {
                get {
                    return this.columnE_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_FECHANACIMIENTOColumn {
                get {
                    return this.columnE_FECHANACIMIENTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_FECHA_ALTAColumn {
                get {
                    return this.columnE_FECHA_ALTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_FECHA_BAJAColumn {
                get {
                    return this.columnE_FECHA_BAJA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLEADOSRow this[int index] {
                get {
                    return ((EMPLEADOSRow)(this.Rows[index]));
                }
            }
            
            public event EMPLEADOSRowChangeEventHandler EMPLEADOSRowChanging;
            
            public event EMPLEADOSRowChangeEventHandler EMPLEADOSRowChanged;
            
            public event EMPLEADOSRowChangeEventHandler EMPLEADOSRowDeleting;
            
            public event EMPLEADOSRowChangeEventHandler EMPLEADOSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEMPLEADOSRow(EMPLEADOSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLEADOSRow AddEMPLEADOSRow(string E_LEGAJO, ESTADO_EMPLEADOSRow parentESTADO_EMPLEADOSRowByempleado_estadoEmpleado_fk, SECTORESRow parentSECTORESRowByempleado_sector_fk, string E_APELLIDO, string E_NOMBRE, System.DateTime E_FECHANACIMIENTO, System.DateTime E_FECHA_ALTA, System.DateTime E_FECHA_BAJA) {
                EMPLEADOSRow rowEMPLEADOSRow = ((EMPLEADOSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        E_LEGAJO,
                        null,
                        null,
                        E_APELLIDO,
                        E_NOMBRE,
                        E_FECHANACIMIENTO,
                        E_FECHA_ALTA,
                        E_FECHA_BAJA};
                if ((parentESTADO_EMPLEADOSRowByempleado_estadoEmpleado_fk != null)) {
                    columnValuesArray[2] = parentESTADO_EMPLEADOSRowByempleado_estadoEmpleado_fk[0];
                }
                if ((parentSECTORESRowByempleado_sector_fk != null)) {
                    columnValuesArray[3] = parentSECTORESRowByempleado_sector_fk[0];
                }
                rowEMPLEADOSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEMPLEADOSRow);
                return rowEMPLEADOSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLEADOSRow FindByE_CODIGO(decimal E_CODIGO) {
                return ((EMPLEADOSRow)(this.Rows.Find(new object[] {
                            E_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EMPLEADOSDataTable cln = ((EMPLEADOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EMPLEADOSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnE_CODIGO = base.Columns["E_CODIGO"];
                this.columnE_LEGAJO = base.Columns["E_LEGAJO"];
                this.columnEE_CODIGO = base.Columns["EE_CODIGO"];
                this.columnSEC_CODIGO = base.Columns["SEC_CODIGO"];
                this.columnE_APELLIDO = base.Columns["E_APELLIDO"];
                this.columnE_NOMBRE = base.Columns["E_NOMBRE"];
                this.columnE_FECHANACIMIENTO = base.Columns["E_FECHANACIMIENTO"];
                this.columnE_FECHA_ALTA = base.Columns["E_FECHA_ALTA"];
                this.columnE_FECHA_BAJA = base.Columns["E_FECHA_BAJA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnE_CODIGO = new global::System.Data.DataColumn("E_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_CODIGO);
                this.columnE_LEGAJO = new global::System.Data.DataColumn("E_LEGAJO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_LEGAJO);
                this.columnEE_CODIGO = new global::System.Data.DataColumn("EE_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEE_CODIGO);
                this.columnSEC_CODIGO = new global::System.Data.DataColumn("SEC_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEC_CODIGO);
                this.columnE_APELLIDO = new global::System.Data.DataColumn("E_APELLIDO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_APELLIDO);
                this.columnE_NOMBRE = new global::System.Data.DataColumn("E_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_NOMBRE);
                this.columnE_FECHANACIMIENTO = new global::System.Data.DataColumn("E_FECHANACIMIENTO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_FECHANACIMIENTO);
                this.columnE_FECHA_ALTA = new global::System.Data.DataColumn("E_FECHA_ALTA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_FECHA_ALTA);
                this.columnE_FECHA_BAJA = new global::System.Data.DataColumn("E_FECHA_BAJA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_FECHA_BAJA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnE_CODIGO}, true));
                this.columnE_CODIGO.AutoIncrement = true;
                this.columnE_CODIGO.AutoIncrementSeed = -1;
                this.columnE_CODIGO.AutoIncrementStep = -1;
                this.columnE_CODIGO.AllowDBNull = false;
                this.columnE_CODIGO.ReadOnly = true;
                this.columnE_CODIGO.Unique = true;
                this.columnE_LEGAJO.MaxLength = 20;
                this.columnEE_CODIGO.AllowDBNull = false;
                this.columnE_APELLIDO.MaxLength = 80;
                this.columnE_NOMBRE.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLEADOSRow NewEMPLEADOSRow() {
                return ((EMPLEADOSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EMPLEADOSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EMPLEADOSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EMPLEADOSRowChanged != null)) {
                    this.EMPLEADOSRowChanged(this, new EMPLEADOSRowChangeEvent(((EMPLEADOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EMPLEADOSRowChanging != null)) {
                    this.EMPLEADOSRowChanging(this, new EMPLEADOSRowChangeEvent(((EMPLEADOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EMPLEADOSRowDeleted != null)) {
                    this.EMPLEADOSRowDeleted(this, new EMPLEADOSRowChangeEvent(((EMPLEADOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EMPLEADOSRowDeleting != null)) {
                    this.EMPLEADOSRowDeleting(this, new EMPLEADOSRowChangeEvent(((EMPLEADOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEMPLEADOSRow(EMPLEADOSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEmpleado ds = new dsEmpleado();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EMPLEADOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SECTORESDataTable : global::System.Data.TypedTableBase<SECTORESRow> {
            
            private global::System.Data.DataColumn columnSEC_CODIGO;
            
            private global::System.Data.DataColumn columnSEC_NOMBRE;
            
            private global::System.Data.DataColumn columnSEC_DESCRIPCION;
            
            private global::System.Data.DataColumn columnSEC_ABREVIATURA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SECTORESDataTable() {
                this.TableName = "SECTORES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SECTORESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SECTORESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEC_CODIGOColumn {
                get {
                    return this.columnSEC_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEC_NOMBREColumn {
                get {
                    return this.columnSEC_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEC_DESCRIPCIONColumn {
                get {
                    return this.columnSEC_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEC_ABREVIATURAColumn {
                get {
                    return this.columnSEC_ABREVIATURA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SECTORESRow this[int index] {
                get {
                    return ((SECTORESRow)(this.Rows[index]));
                }
            }
            
            public event SECTORESRowChangeEventHandler SECTORESRowChanging;
            
            public event SECTORESRowChangeEventHandler SECTORESRowChanged;
            
            public event SECTORESRowChangeEventHandler SECTORESRowDeleting;
            
            public event SECTORESRowChangeEventHandler SECTORESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSECTORESRow(SECTORESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SECTORESRow AddSECTORESRow(string SEC_NOMBRE, string SEC_DESCRIPCION, string SEC_ABREVIATURA) {
                SECTORESRow rowSECTORESRow = ((SECTORESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SEC_NOMBRE,
                        SEC_DESCRIPCION,
                        SEC_ABREVIATURA};
                rowSECTORESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSECTORESRow);
                return rowSECTORESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SECTORESRow FindBySEC_CODIGO(decimal SEC_CODIGO) {
                return ((SECTORESRow)(this.Rows.Find(new object[] {
                            SEC_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SECTORESDataTable cln = ((SECTORESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SECTORESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSEC_CODIGO = base.Columns["SEC_CODIGO"];
                this.columnSEC_NOMBRE = base.Columns["SEC_NOMBRE"];
                this.columnSEC_DESCRIPCION = base.Columns["SEC_DESCRIPCION"];
                this.columnSEC_ABREVIATURA = base.Columns["SEC_ABREVIATURA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSEC_CODIGO = new global::System.Data.DataColumn("SEC_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEC_CODIGO);
                this.columnSEC_NOMBRE = new global::System.Data.DataColumn("SEC_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEC_NOMBRE);
                this.columnSEC_DESCRIPCION = new global::System.Data.DataColumn("SEC_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEC_DESCRIPCION);
                this.columnSEC_ABREVIATURA = new global::System.Data.DataColumn("SEC_ABREVIATURA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEC_ABREVIATURA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSEC_CODIGO}, true));
                this.columnSEC_CODIGO.AutoIncrement = true;
                this.columnSEC_CODIGO.AutoIncrementSeed = -1;
                this.columnSEC_CODIGO.AutoIncrementStep = -1;
                this.columnSEC_CODIGO.AllowDBNull = false;
                this.columnSEC_CODIGO.ReadOnly = true;
                this.columnSEC_CODIGO.Unique = true;
                this.columnSEC_NOMBRE.MaxLength = 80;
                this.columnSEC_DESCRIPCION.MaxLength = 200;
                this.columnSEC_ABREVIATURA.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SECTORESRow NewSECTORESRow() {
                return ((SECTORESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SECTORESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SECTORESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SECTORESRowChanged != null)) {
                    this.SECTORESRowChanged(this, new SECTORESRowChangeEvent(((SECTORESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SECTORESRowChanging != null)) {
                    this.SECTORESRowChanging(this, new SECTORESRowChangeEvent(((SECTORESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SECTORESRowDeleted != null)) {
                    this.SECTORESRowDeleted(this, new SECTORESRowChangeEvent(((SECTORESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SECTORESRowDeleting != null)) {
                    this.SECTORESRowDeleting(this, new SECTORESRowChangeEvent(((SECTORESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSECTORESRow(SECTORESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEmpleado ds = new dsEmpleado();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SECTORESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ESTADO_EMPLEADOSDataTable : global::System.Data.TypedTableBase<ESTADO_EMPLEADOSRow> {
            
            private global::System.Data.DataColumn columnEE_CODIGO;
            
            private global::System.Data.DataColumn columnEE_NOMBRE;
            
            private global::System.Data.DataColumn columnEE_DESCRIPCION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_EMPLEADOSDataTable() {
                this.TableName = "ESTADO_EMPLEADOS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ESTADO_EMPLEADOSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ESTADO_EMPLEADOSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EE_CODIGOColumn {
                get {
                    return this.columnEE_CODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EE_NOMBREColumn {
                get {
                    return this.columnEE_NOMBRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EE_DESCRIPCIONColumn {
                get {
                    return this.columnEE_DESCRIPCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_EMPLEADOSRow this[int index] {
                get {
                    return ((ESTADO_EMPLEADOSRow)(this.Rows[index]));
                }
            }
            
            public event ESTADO_EMPLEADOSRowChangeEventHandler ESTADO_EMPLEADOSRowChanging;
            
            public event ESTADO_EMPLEADOSRowChangeEventHandler ESTADO_EMPLEADOSRowChanged;
            
            public event ESTADO_EMPLEADOSRowChangeEventHandler ESTADO_EMPLEADOSRowDeleting;
            
            public event ESTADO_EMPLEADOSRowChangeEventHandler ESTADO_EMPLEADOSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddESTADO_EMPLEADOSRow(ESTADO_EMPLEADOSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_EMPLEADOSRow AddESTADO_EMPLEADOSRow(string EE_NOMBRE, string EE_DESCRIPCION) {
                ESTADO_EMPLEADOSRow rowESTADO_EMPLEADOSRow = ((ESTADO_EMPLEADOSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EE_NOMBRE,
                        EE_DESCRIPCION};
                rowESTADO_EMPLEADOSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowESTADO_EMPLEADOSRow);
                return rowESTADO_EMPLEADOSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_EMPLEADOSRow FindByEE_CODIGO(decimal EE_CODIGO) {
                return ((ESTADO_EMPLEADOSRow)(this.Rows.Find(new object[] {
                            EE_CODIGO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ESTADO_EMPLEADOSDataTable cln = ((ESTADO_EMPLEADOSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ESTADO_EMPLEADOSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEE_CODIGO = base.Columns["EE_CODIGO"];
                this.columnEE_NOMBRE = base.Columns["EE_NOMBRE"];
                this.columnEE_DESCRIPCION = base.Columns["EE_DESCRIPCION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEE_CODIGO = new global::System.Data.DataColumn("EE_CODIGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEE_CODIGO);
                this.columnEE_NOMBRE = new global::System.Data.DataColumn("EE_NOMBRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEE_NOMBRE);
                this.columnEE_DESCRIPCION = new global::System.Data.DataColumn("EE_DESCRIPCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEE_DESCRIPCION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEE_CODIGO}, true));
                this.columnEE_CODIGO.AutoIncrement = true;
                this.columnEE_CODIGO.AutoIncrementSeed = -1;
                this.columnEE_CODIGO.AutoIncrementStep = -1;
                this.columnEE_CODIGO.AllowDBNull = false;
                this.columnEE_CODIGO.ReadOnly = true;
                this.columnEE_CODIGO.Unique = true;
                this.columnEE_NOMBRE.MaxLength = 80;
                this.columnEE_DESCRIPCION.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_EMPLEADOSRow NewESTADO_EMPLEADOSRow() {
                return ((ESTADO_EMPLEADOSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ESTADO_EMPLEADOSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ESTADO_EMPLEADOSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ESTADO_EMPLEADOSRowChanged != null)) {
                    this.ESTADO_EMPLEADOSRowChanged(this, new ESTADO_EMPLEADOSRowChangeEvent(((ESTADO_EMPLEADOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ESTADO_EMPLEADOSRowChanging != null)) {
                    this.ESTADO_EMPLEADOSRowChanging(this, new ESTADO_EMPLEADOSRowChangeEvent(((ESTADO_EMPLEADOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ESTADO_EMPLEADOSRowDeleted != null)) {
                    this.ESTADO_EMPLEADOSRowDeleted(this, new ESTADO_EMPLEADOSRowChangeEvent(((ESTADO_EMPLEADOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ESTADO_EMPLEADOSRowDeleting != null)) {
                    this.ESTADO_EMPLEADOSRowDeleting(this, new ESTADO_EMPLEADOSRowChangeEvent(((ESTADO_EMPLEADOSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveESTADO_EMPLEADOSRow(ESTADO_EMPLEADOSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEmpleado ds = new dsEmpleado();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ESTADO_EMPLEADOSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CAPACIDAD_EMPLEADOSRow : global::System.Data.DataRow {
            
            private CAPACIDAD_EMPLEADOSDataTable tableCAPACIDAD_EMPLEADOS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CAPACIDAD_EMPLEADOSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAPACIDAD_EMPLEADOS = ((CAPACIDAD_EMPLEADOSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CEMP_CODIGO {
                get {
                    return ((decimal)(this[this.tableCAPACIDAD_EMPLEADOS.CEMP_CODIGOColumn]));
                }
                set {
                    this[this.tableCAPACIDAD_EMPLEADOS.CEMP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CEMP_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableCAPACIDAD_EMPLEADOS.CEMP_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CEMP_NOMBRE\' in table \'CAPACIDAD_EMPLEADOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCAPACIDAD_EMPLEADOS.CEMP_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CEMP_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableCAPACIDAD_EMPLEADOS.CEMP_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CEMP_DESCRIPCION\' in table \'CAPACIDAD_EMPLEADOS\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCAPACIDAD_EMPLEADOS.CEMP_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCEMP_NOMBRENull() {
                return this.IsNull(this.tableCAPACIDAD_EMPLEADOS.CEMP_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCEMP_NOMBRENull() {
                this[this.tableCAPACIDAD_EMPLEADOS.CEMP_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCEMP_DESCRIPCIONNull() {
                return this.IsNull(this.tableCAPACIDAD_EMPLEADOS.CEMP_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCEMP_DESCRIPCIONNull() {
                this[this.tableCAPACIDAD_EMPLEADOS.CEMP_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACIDADESXEMPLEADORow[] GetCAPACIDADESXEMPLEADORows() {
                if ((this.Table.ChildRelations["capacidadXEmpleado_capacidadEmpleado_fk"] == null)) {
                    return new CAPACIDADESXEMPLEADORow[0];
                }
                else {
                    return ((CAPACIDADESXEMPLEADORow[])(base.GetChildRows(this.Table.ChildRelations["capacidadXEmpleado_capacidadEmpleado_fk"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CAPACIDADESXEMPLEADORow : global::System.Data.DataRow {
            
            private CAPACIDADESXEMPLEADODataTable tableCAPACIDADESXEMPLEADO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CAPACIDADESXEMPLEADORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAPACIDADESXEMPLEADO = ((CAPACIDADESXEMPLEADODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CXE_CODIGO {
                get {
                    return ((decimal)(this[this.tableCAPACIDADESXEMPLEADO.CXE_CODIGOColumn]));
                }
                set {
                    this[this.tableCAPACIDADESXEMPLEADO.CXE_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal E_CODIGO {
                get {
                    return ((decimal)(this[this.tableCAPACIDADESXEMPLEADO.E_CODIGOColumn]));
                }
                set {
                    this[this.tableCAPACIDADESXEMPLEADO.E_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CEMP_CODIGO {
                get {
                    return ((decimal)(this[this.tableCAPACIDADESXEMPLEADO.CEMP_CODIGOColumn]));
                }
                set {
                    this[this.tableCAPACIDADESXEMPLEADO.CEMP_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACIDAD_EMPLEADOSRow CAPACIDAD_EMPLEADOSRow {
                get {
                    return ((CAPACIDAD_EMPLEADOSRow)(this.GetParentRow(this.Table.ParentRelations["capacidadXEmpleado_capacidadEmpleado_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["capacidadXEmpleado_capacidadEmpleado_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLEADOSRow EMPLEADOSRow {
                get {
                    return ((EMPLEADOSRow)(this.GetParentRow(this.Table.ParentRelations["capacidadXEmpleado_empleado_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["capacidadXEmpleado_empleado_fk"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EMPLEADOSRow : global::System.Data.DataRow {
            
            private EMPLEADOSDataTable tableEMPLEADOS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EMPLEADOSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEMPLEADOS = ((EMPLEADOSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal E_CODIGO {
                get {
                    return ((decimal)(this[this.tableEMPLEADOS.E_CODIGOColumn]));
                }
                set {
                    this[this.tableEMPLEADOS.E_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string E_LEGAJO {
                get {
                    try {
                        return ((string)(this[this.tableEMPLEADOS.E_LEGAJOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_LEGAJO\' in table \'EMPLEADOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPLEADOS.E_LEGAJOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EE_CODIGO {
                get {
                    return ((decimal)(this[this.tableEMPLEADOS.EE_CODIGOColumn]));
                }
                set {
                    this[this.tableEMPLEADOS.EE_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SEC_CODIGO {
                get {
                    try {
                        return ((decimal)(this[this.tableEMPLEADOS.SEC_CODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEC_CODIGO\' in table \'EMPLEADOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPLEADOS.SEC_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string E_APELLIDO {
                get {
                    try {
                        return ((string)(this[this.tableEMPLEADOS.E_APELLIDOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_APELLIDO\' in table \'EMPLEADOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPLEADOS.E_APELLIDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string E_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableEMPLEADOS.E_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_NOMBRE\' in table \'EMPLEADOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPLEADOS.E_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime E_FECHANACIMIENTO {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEMPLEADOS.E_FECHANACIMIENTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_FECHANACIMIENTO\' in table \'EMPLEADOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPLEADOS.E_FECHANACIMIENTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime E_FECHA_ALTA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEMPLEADOS.E_FECHA_ALTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_FECHA_ALTA\' in table \'EMPLEADOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPLEADOS.E_FECHA_ALTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime E_FECHA_BAJA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEMPLEADOS.E_FECHA_BAJAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E_FECHA_BAJA\' in table \'EMPLEADOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPLEADOS.E_FECHA_BAJAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SECTORESRow SECTORESRow {
                get {
                    return ((SECTORESRow)(this.GetParentRow(this.Table.ParentRelations["empleado_sector_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["empleado_sector_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_EMPLEADOSRow ESTADO_EMPLEADOSRow {
                get {
                    return ((ESTADO_EMPLEADOSRow)(this.GetParentRow(this.Table.ParentRelations["empleado_estadoEmpleado_fk"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["empleado_estadoEmpleado_fk"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_LEGAJONull() {
                return this.IsNull(this.tableEMPLEADOS.E_LEGAJOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_LEGAJONull() {
                this[this.tableEMPLEADOS.E_LEGAJOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEC_CODIGONull() {
                return this.IsNull(this.tableEMPLEADOS.SEC_CODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEC_CODIGONull() {
                this[this.tableEMPLEADOS.SEC_CODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_APELLIDONull() {
                return this.IsNull(this.tableEMPLEADOS.E_APELLIDOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_APELLIDONull() {
                this[this.tableEMPLEADOS.E_APELLIDOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_NOMBRENull() {
                return this.IsNull(this.tableEMPLEADOS.E_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_NOMBRENull() {
                this[this.tableEMPLEADOS.E_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_FECHANACIMIENTONull() {
                return this.IsNull(this.tableEMPLEADOS.E_FECHANACIMIENTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_FECHANACIMIENTONull() {
                this[this.tableEMPLEADOS.E_FECHANACIMIENTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_FECHA_ALTANull() {
                return this.IsNull(this.tableEMPLEADOS.E_FECHA_ALTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_FECHA_ALTANull() {
                this[this.tableEMPLEADOS.E_FECHA_ALTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_FECHA_BAJANull() {
                return this.IsNull(this.tableEMPLEADOS.E_FECHA_BAJAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_FECHA_BAJANull() {
                this[this.tableEMPLEADOS.E_FECHA_BAJAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACIDADESXEMPLEADORow[] GetCAPACIDADESXEMPLEADORows() {
                if ((this.Table.ChildRelations["capacidadXEmpleado_empleado_fk"] == null)) {
                    return new CAPACIDADESXEMPLEADORow[0];
                }
                else {
                    return ((CAPACIDADESXEMPLEADORow[])(base.GetChildRows(this.Table.ChildRelations["capacidadXEmpleado_empleado_fk"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SECTORESRow : global::System.Data.DataRow {
            
            private SECTORESDataTable tableSECTORES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SECTORESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSECTORES = ((SECTORESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SEC_CODIGO {
                get {
                    return ((decimal)(this[this.tableSECTORES.SEC_CODIGOColumn]));
                }
                set {
                    this[this.tableSECTORES.SEC_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEC_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableSECTORES.SEC_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEC_NOMBRE\' in table \'SECTORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSECTORES.SEC_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEC_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableSECTORES.SEC_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEC_DESCRIPCION\' in table \'SECTORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSECTORES.SEC_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEC_ABREVIATURA {
                get {
                    try {
                        return ((string)(this[this.tableSECTORES.SEC_ABREVIATURAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEC_ABREVIATURA\' in table \'SECTORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSECTORES.SEC_ABREVIATURAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEC_NOMBRENull() {
                return this.IsNull(this.tableSECTORES.SEC_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEC_NOMBRENull() {
                this[this.tableSECTORES.SEC_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEC_DESCRIPCIONNull() {
                return this.IsNull(this.tableSECTORES.SEC_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEC_DESCRIPCIONNull() {
                this[this.tableSECTORES.SEC_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEC_ABREVIATURANull() {
                return this.IsNull(this.tableSECTORES.SEC_ABREVIATURAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEC_ABREVIATURANull() {
                this[this.tableSECTORES.SEC_ABREVIATURAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLEADOSRow[] GetEMPLEADOSRows() {
                if ((this.Table.ChildRelations["empleado_sector_fk"] == null)) {
                    return new EMPLEADOSRow[0];
                }
                else {
                    return ((EMPLEADOSRow[])(base.GetChildRows(this.Table.ChildRelations["empleado_sector_fk"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ESTADO_EMPLEADOSRow : global::System.Data.DataRow {
            
            private ESTADO_EMPLEADOSDataTable tableESTADO_EMPLEADOS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ESTADO_EMPLEADOSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableESTADO_EMPLEADOS = ((ESTADO_EMPLEADOSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EE_CODIGO {
                get {
                    return ((decimal)(this[this.tableESTADO_EMPLEADOS.EE_CODIGOColumn]));
                }
                set {
                    this[this.tableESTADO_EMPLEADOS.EE_CODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EE_NOMBRE {
                get {
                    try {
                        return ((string)(this[this.tableESTADO_EMPLEADOS.EE_NOMBREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EE_NOMBRE\' in table \'ESTADO_EMPLEADOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableESTADO_EMPLEADOS.EE_NOMBREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EE_DESCRIPCION {
                get {
                    try {
                        return ((string)(this[this.tableESTADO_EMPLEADOS.EE_DESCRIPCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EE_DESCRIPCION\' in table \'ESTADO_EMPLEADOS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableESTADO_EMPLEADOS.EE_DESCRIPCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEE_NOMBRENull() {
                return this.IsNull(this.tableESTADO_EMPLEADOS.EE_NOMBREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEE_NOMBRENull() {
                this[this.tableESTADO_EMPLEADOS.EE_NOMBREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEE_DESCRIPCIONNull() {
                return this.IsNull(this.tableESTADO_EMPLEADOS.EE_DESCRIPCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEE_DESCRIPCIONNull() {
                this[this.tableESTADO_EMPLEADOS.EE_DESCRIPCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLEADOSRow[] GetEMPLEADOSRows() {
                if ((this.Table.ChildRelations["empleado_estadoEmpleado_fk"] == null)) {
                    return new EMPLEADOSRow[0];
                }
                else {
                    return ((EMPLEADOSRow[])(base.GetChildRows(this.Table.ChildRelations["empleado_estadoEmpleado_fk"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CAPACIDAD_EMPLEADOSRowChangeEvent : global::System.EventArgs {
            
            private CAPACIDAD_EMPLEADOSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACIDAD_EMPLEADOSRowChangeEvent(CAPACIDAD_EMPLEADOSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACIDAD_EMPLEADOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CAPACIDADESXEMPLEADORowChangeEvent : global::System.EventArgs {
            
            private CAPACIDADESXEMPLEADORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACIDADESXEMPLEADORowChangeEvent(CAPACIDADESXEMPLEADORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACIDADESXEMPLEADORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EMPLEADOSRowChangeEvent : global::System.EventArgs {
            
            private EMPLEADOSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLEADOSRowChangeEvent(EMPLEADOSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EMPLEADOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SECTORESRowChangeEvent : global::System.EventArgs {
            
            private SECTORESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SECTORESRowChangeEvent(SECTORESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SECTORESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ESTADO_EMPLEADOSRowChangeEvent : global::System.EventArgs {
            
            private ESTADO_EMPLEADOSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_EMPLEADOSRowChangeEvent(ESTADO_EMPLEADOSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ESTADO_EMPLEADOSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GyCAP.Data.dsEmpleadoTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CAPACIDAD_EMPLEADOSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CAPACIDAD_EMPLEADOSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CAPACIDAD_EMPLEADOS";
            tableMapping.ColumnMappings.Add("CEMP_CODIGO", "CEMP_CODIGO");
            tableMapping.ColumnMappings.Add("CEMP_NOMBRE", "CEMP_NOMBRE");
            tableMapping.ColumnMappings.Add("CEMP_DESCRIPCION", "CEMP_DESCRIPCION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CAPACIDAD_EMPLEADOS] WHERE (([CEMP_CODIGO] = @Original_CEMP_CO" +
                "DIGO) AND ((@IsNull_CEMP_NOMBRE = 1 AND [CEMP_NOMBRE] IS NULL) OR ([CEMP_NOMBRE]" +
                " = @Original_CEMP_NOMBRE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEMP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CEMP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CEMP_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEMP_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEMP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEMP_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CAPACIDAD_EMPLEADOS] ([CEMP_NOMBRE], [CEMP_DESCRIPCION]) VALUE" +
                "S (@CEMP_NOMBRE, @CEMP_DESCRIPCION);\r\nSELECT CEMP_CODIGO, CEMP_NOMBRE, CEMP_DESC" +
                "RIPCION FROM CAPACIDAD_EMPLEADOS WHERE (CEMP_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEMP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEMP_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEMP_DESCRIPCION", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEMP_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CAPACIDAD_EMPLEADOS] SET [CEMP_NOMBRE] = @CEMP_NOMBRE, [CEMP_DESCRIPCION] = @CEMP_DESCRIPCION WHERE (([CEMP_CODIGO] = @Original_CEMP_CODIGO) AND ((@IsNull_CEMP_NOMBRE = 1 AND [CEMP_NOMBRE] IS NULL) OR ([CEMP_NOMBRE] = @Original_CEMP_NOMBRE)));
SELECT CEMP_CODIGO, CEMP_NOMBRE, CEMP_DESCRIPCION FROM CAPACIDAD_EMPLEADOS WHERE (CEMP_CODIGO = @CEMP_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEMP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEMP_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEMP_DESCRIPCION", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEMP_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEMP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CEMP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CEMP_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEMP_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEMP_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CEMP_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEMP_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "CEMP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CEMP_CODIGO, CEMP_NOMBRE, CEMP_DESCRIPCION FROM dbo.CAPACIDAD_EMPLEADOS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEmpleado.CAPACIDAD_EMPLEADOSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEmpleado.CAPACIDAD_EMPLEADOSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEmpleado.CAPACIDAD_EMPLEADOSDataTable dataTable = new dsEmpleado.CAPACIDAD_EMPLEADOSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEmpleado.CAPACIDAD_EMPLEADOSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEmpleado dataSet) {
            return this.Adapter.Update(dataSet, "CAPACIDAD_EMPLEADOS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_CEMP_CODIGO, string Original_CEMP_NOMBRE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_CEMP_CODIGO));
            if ((Original_CEMP_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CEMP_NOMBRE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CEMP_NOMBRE, string CEMP_DESCRIPCION) {
            if ((CEMP_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CEMP_NOMBRE));
            }
            if ((CEMP_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CEMP_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CEMP_NOMBRE, string CEMP_DESCRIPCION, decimal Original_CEMP_CODIGO, string Original_CEMP_NOMBRE, decimal CEMP_CODIGO) {
            if ((CEMP_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CEMP_NOMBRE));
            }
            if ((CEMP_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CEMP_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_CEMP_CODIGO));
            if ((Original_CEMP_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_CEMP_NOMBRE));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(CEMP_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CEMP_NOMBRE, string CEMP_DESCRIPCION, decimal Original_CEMP_CODIGO, string Original_CEMP_NOMBRE) {
            return this.Update(CEMP_NOMBRE, CEMP_DESCRIPCION, Original_CEMP_CODIGO, Original_CEMP_NOMBRE, Original_CEMP_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CAPACIDADESXEMPLEADOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CAPACIDADESXEMPLEADOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CAPACIDADESXEMPLEADO";
            tableMapping.ColumnMappings.Add("CXE_CODIGO", "CXE_CODIGO");
            tableMapping.ColumnMappings.Add("E_CODIGO", "E_CODIGO");
            tableMapping.ColumnMappings.Add("CEMP_CODIGO", "CEMP_CODIGO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CAPACIDADESXEMPLEADO] WHERE (([CXE_CODIGO] = @Original_CXE_COD" +
                "IGO) AND ([E_CODIGO] = @Original_E_CODIGO) AND ([CEMP_CODIGO] = @Original_CEMP_C" +
                "ODIGO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CXE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEMP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CEMP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CAPACIDADESXEMPLEADO] ([E_CODIGO], [CEMP_CODIGO]) VALUES (@E_C" +
                "ODIGO, @CEMP_CODIGO);\r\nSELECT CXE_CODIGO, E_CODIGO, CEMP_CODIGO FROM CAPACIDADES" +
                "XEMPLEADO WHERE (CXE_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEMP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CEMP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CAPACIDADESXEMPLEADO] SET [E_CODIGO] = @E_CODIGO, [CEMP_CODIGO] = @CEMP_CODIGO WHERE (([CXE_CODIGO] = @Original_CXE_CODIGO) AND ([E_CODIGO] = @Original_E_CODIGO) AND ([CEMP_CODIGO] = @Original_CEMP_CODIGO));
SELECT CXE_CODIGO, E_CODIGO, CEMP_CODIGO FROM CAPACIDADESXEMPLEADO WHERE (CXE_CODIGO = @CXE_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CEMP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CEMP_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CXE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CEMP_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "CEMP_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CXE_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "CXE_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CXE_CODIGO, E_CODIGO, CEMP_CODIGO FROM dbo.CAPACIDADESXEMPLEADO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEmpleado.CAPACIDADESXEMPLEADODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEmpleado.CAPACIDADESXEMPLEADODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEmpleado.CAPACIDADESXEMPLEADODataTable dataTable = new dsEmpleado.CAPACIDADESXEMPLEADODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEmpleado.CAPACIDADESXEMPLEADODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEmpleado dataSet) {
            return this.Adapter.Update(dataSet, "CAPACIDADESXEMPLEADO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_CXE_CODIGO, decimal Original_E_CODIGO, decimal Original_CEMP_CODIGO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_CXE_CODIGO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_E_CODIGO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_CEMP_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal E_CODIGO, decimal CEMP_CODIGO) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(E_CODIGO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(CEMP_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal E_CODIGO, decimal CEMP_CODIGO, decimal Original_CXE_CODIGO, decimal Original_E_CODIGO, decimal Original_CEMP_CODIGO, decimal CXE_CODIGO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(E_CODIGO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(CEMP_CODIGO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_CXE_CODIGO));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_E_CODIGO));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_CEMP_CODIGO));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(CXE_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal E_CODIGO, decimal CEMP_CODIGO, decimal Original_CXE_CODIGO, decimal Original_E_CODIGO, decimal Original_CEMP_CODIGO) {
            return this.Update(E_CODIGO, CEMP_CODIGO, Original_CXE_CODIGO, Original_E_CODIGO, Original_CEMP_CODIGO, Original_CXE_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EMPLEADOSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EMPLEADOSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EMPLEADOS";
            tableMapping.ColumnMappings.Add("E_CODIGO", "E_CODIGO");
            tableMapping.ColumnMappings.Add("E_LEGAJO", "E_LEGAJO");
            tableMapping.ColumnMappings.Add("EE_CODIGO", "EE_CODIGO");
            tableMapping.ColumnMappings.Add("SEC_CODIGO", "SEC_CODIGO");
            tableMapping.ColumnMappings.Add("E_APELLIDO", "E_APELLIDO");
            tableMapping.ColumnMappings.Add("E_NOMBRE", "E_NOMBRE");
            tableMapping.ColumnMappings.Add("E_FECHANACIMIENTO", "E_FECHANACIMIENTO");
            tableMapping.ColumnMappings.Add("E_FECHA_ALTA", "E_FECHA_ALTA");
            tableMapping.ColumnMappings.Add("E_FECHA_BAJA", "E_FECHA_BAJA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[EMPLEADOS] WHERE (([E_CODIGO] = @Original_E_CODIGO) AND ((@IsNull_E_LEGAJO = 1 AND [E_LEGAJO] IS NULL) OR ([E_LEGAJO] = @Original_E_LEGAJO)) AND ([EE_CODIGO] = @Original_EE_CODIGO) AND ((@IsNull_SEC_CODIGO = 1 AND [SEC_CODIGO] IS NULL) OR ([SEC_CODIGO] = @Original_SEC_CODIGO)) AND ((@IsNull_E_APELLIDO = 1 AND [E_APELLIDO] IS NULL) OR ([E_APELLIDO] = @Original_E_APELLIDO)) AND ((@IsNull_E_NOMBRE = 1 AND [E_NOMBRE] IS NULL) OR ([E_NOMBRE] = @Original_E_NOMBRE)) AND ((@IsNull_E_FECHANACIMIENTO = 1 AND [E_FECHANACIMIENTO] IS NULL) OR ([E_FECHANACIMIENTO] = @Original_E_FECHANACIMIENTO)) AND ((@IsNull_E_FECHA_ALTA = 1 AND [E_FECHA_ALTA] IS NULL) OR ([E_FECHA_ALTA] = @Original_E_FECHA_ALTA)) AND ((@IsNull_E_FECHA_BAJA = 1 AND [E_FECHA_BAJA] IS NULL) OR ([E_FECHA_BAJA] = @Original_E_FECHA_BAJA)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_LEGAJO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_LEGAJO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_LEGAJO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_LEGAJO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEC_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_APELLIDO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_APELLIDO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_APELLIDO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_APELLIDO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_FECHANACIMIENTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHANACIMIENTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_FECHANACIMIENTO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHANACIMIENTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_FECHA_ALTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_ALTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_FECHA_ALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_ALTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_FECHA_BAJA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_BAJA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_FECHA_BAJA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_BAJA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[EMPLEADOS] ([E_LEGAJO], [EE_CODIGO], [SEC_CODIGO], [E_APELLIDO], [E_NOMBRE], [E_FECHANACIMIENTO], [E_FECHA_ALTA], [E_FECHA_BAJA]) VALUES (@E_LEGAJO, @EE_CODIGO, @SEC_CODIGO, @E_APELLIDO, @E_NOMBRE, @E_FECHANACIMIENTO, @E_FECHA_ALTA, @E_FECHA_BAJA);
SELECT E_CODIGO, E_LEGAJO, EE_CODIGO, SEC_CODIGO, E_APELLIDO, E_NOMBRE, E_FECHANACIMIENTO, E_FECHA_ALTA, E_FECHA_BAJA FROM EMPLEADOS WHERE (E_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_LEGAJO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_LEGAJO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EE_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_APELLIDO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_APELLIDO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_FECHANACIMIENTO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHANACIMIENTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_FECHA_ALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_ALTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_FECHA_BAJA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_BAJA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[EMPLEADOS] SET [E_LEGAJO] = @E_LEGAJO, [EE_CODIGO] = @EE_CODIGO, [SEC_CODIGO] = @SEC_CODIGO, [E_APELLIDO] = @E_APELLIDO, [E_NOMBRE] = @E_NOMBRE, [E_FECHANACIMIENTO] = @E_FECHANACIMIENTO, [E_FECHA_ALTA] = @E_FECHA_ALTA, [E_FECHA_BAJA] = @E_FECHA_BAJA WHERE (([E_CODIGO] = @Original_E_CODIGO) AND ((@IsNull_E_LEGAJO = 1 AND [E_LEGAJO] IS NULL) OR ([E_LEGAJO] = @Original_E_LEGAJO)) AND ([EE_CODIGO] = @Original_EE_CODIGO) AND ((@IsNull_SEC_CODIGO = 1 AND [SEC_CODIGO] IS NULL) OR ([SEC_CODIGO] = @Original_SEC_CODIGO)) AND ((@IsNull_E_APELLIDO = 1 AND [E_APELLIDO] IS NULL) OR ([E_APELLIDO] = @Original_E_APELLIDO)) AND ((@IsNull_E_NOMBRE = 1 AND [E_NOMBRE] IS NULL) OR ([E_NOMBRE] = @Original_E_NOMBRE)) AND ((@IsNull_E_FECHANACIMIENTO = 1 AND [E_FECHANACIMIENTO] IS NULL) OR ([E_FECHANACIMIENTO] = @Original_E_FECHANACIMIENTO)) AND ((@IsNull_E_FECHA_ALTA = 1 AND [E_FECHA_ALTA] IS NULL) OR ([E_FECHA_ALTA] = @Original_E_FECHA_ALTA)) AND ((@IsNull_E_FECHA_BAJA = 1 AND [E_FECHA_BAJA] IS NULL) OR ([E_FECHA_BAJA] = @Original_E_FECHA_BAJA)));
SELECT E_CODIGO, E_LEGAJO, EE_CODIGO, SEC_CODIGO, E_APELLIDO, E_NOMBRE, E_FECHANACIMIENTO, E_FECHA_ALTA, E_FECHA_BAJA FROM EMPLEADOS WHERE (E_CODIGO = @E_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_LEGAJO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_LEGAJO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EE_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_APELLIDO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_APELLIDO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_FECHANACIMIENTO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHANACIMIENTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_FECHA_ALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_ALTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_FECHA_BAJA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_BAJA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_LEGAJO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_LEGAJO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_LEGAJO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_LEGAJO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEC_CODIGO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_APELLIDO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_APELLIDO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_APELLIDO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_APELLIDO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_FECHANACIMIENTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHANACIMIENTO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_FECHANACIMIENTO", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHANACIMIENTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_FECHA_ALTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_ALTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_FECHA_ALTA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_ALTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_E_FECHA_BAJA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_BAJA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_FECHA_BAJA", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E_FECHA_BAJA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "E_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT E_CODIGO, E_LEGAJO, EE_CODIGO, SEC_CODIGO, E_APELLIDO, E_NOMBRE, E_FECHANA" +
                "CIMIENTO, E_FECHA_ALTA, E_FECHA_BAJA FROM dbo.EMPLEADOS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEmpleado.EMPLEADOSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEmpleado.EMPLEADOSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEmpleado.EMPLEADOSDataTable dataTable = new dsEmpleado.EMPLEADOSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEmpleado.EMPLEADOSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEmpleado dataSet) {
            return this.Adapter.Update(dataSet, "EMPLEADOS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_E_CODIGO, string Original_E_LEGAJO, decimal Original_EE_CODIGO, global::System.Nullable<decimal> Original_SEC_CODIGO, string Original_E_APELLIDO, string Original_E_NOMBRE, global::System.Nullable<global::System.DateTime> Original_E_FECHANACIMIENTO, global::System.Nullable<global::System.DateTime> Original_E_FECHA_ALTA, global::System.Nullable<global::System.DateTime> Original_E_FECHA_BAJA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_E_CODIGO));
            if ((Original_E_LEGAJO == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_E_LEGAJO));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_EE_CODIGO));
            if ((Original_SEC_CODIGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_SEC_CODIGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_E_APELLIDO == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_E_APELLIDO));
            }
            if ((Original_E_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_E_NOMBRE));
            }
            if ((Original_E_FECHANACIMIENTO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_E_FECHANACIMIENTO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_E_FECHA_ALTA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_E_FECHA_ALTA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_E_FECHA_BAJA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_E_FECHA_BAJA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string E_LEGAJO, decimal EE_CODIGO, global::System.Nullable<decimal> SEC_CODIGO, string E_APELLIDO, string E_NOMBRE, global::System.Nullable<global::System.DateTime> E_FECHANACIMIENTO, global::System.Nullable<global::System.DateTime> E_FECHA_ALTA, global::System.Nullable<global::System.DateTime> E_FECHA_BAJA) {
            if ((E_LEGAJO == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(E_LEGAJO));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(EE_CODIGO));
            if ((SEC_CODIGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(SEC_CODIGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((E_APELLIDO == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(E_APELLIDO));
            }
            if ((E_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(E_NOMBRE));
            }
            if ((E_FECHANACIMIENTO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(E_FECHANACIMIENTO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((E_FECHA_ALTA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(E_FECHA_ALTA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((E_FECHA_BAJA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(E_FECHA_BAJA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string E_LEGAJO, 
                    decimal EE_CODIGO, 
                    global::System.Nullable<decimal> SEC_CODIGO, 
                    string E_APELLIDO, 
                    string E_NOMBRE, 
                    global::System.Nullable<global::System.DateTime> E_FECHANACIMIENTO, 
                    global::System.Nullable<global::System.DateTime> E_FECHA_ALTA, 
                    global::System.Nullable<global::System.DateTime> E_FECHA_BAJA, 
                    decimal Original_E_CODIGO, 
                    string Original_E_LEGAJO, 
                    decimal Original_EE_CODIGO, 
                    global::System.Nullable<decimal> Original_SEC_CODIGO, 
                    string Original_E_APELLIDO, 
                    string Original_E_NOMBRE, 
                    global::System.Nullable<global::System.DateTime> Original_E_FECHANACIMIENTO, 
                    global::System.Nullable<global::System.DateTime> Original_E_FECHA_ALTA, 
                    global::System.Nullable<global::System.DateTime> Original_E_FECHA_BAJA, 
                    decimal E_CODIGO) {
            if ((E_LEGAJO == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(E_LEGAJO));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(EE_CODIGO));
            if ((SEC_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(SEC_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((E_APELLIDO == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(E_APELLIDO));
            }
            if ((E_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(E_NOMBRE));
            }
            if ((E_FECHANACIMIENTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(E_FECHANACIMIENTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((E_FECHA_ALTA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(E_FECHA_ALTA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((E_FECHA_BAJA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(E_FECHA_BAJA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_E_CODIGO));
            if ((Original_E_LEGAJO == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_E_LEGAJO));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_EE_CODIGO));
            if ((Original_SEC_CODIGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_SEC_CODIGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_E_APELLIDO == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_E_APELLIDO));
            }
            if ((Original_E_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_E_NOMBRE));
            }
            if ((Original_E_FECHANACIMIENTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_E_FECHANACIMIENTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_E_FECHA_ALTA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_E_FECHA_ALTA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_E_FECHA_BAJA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_E_FECHA_BAJA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(E_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string E_LEGAJO, 
                    decimal EE_CODIGO, 
                    global::System.Nullable<decimal> SEC_CODIGO, 
                    string E_APELLIDO, 
                    string E_NOMBRE, 
                    global::System.Nullable<global::System.DateTime> E_FECHANACIMIENTO, 
                    global::System.Nullable<global::System.DateTime> E_FECHA_ALTA, 
                    global::System.Nullable<global::System.DateTime> E_FECHA_BAJA, 
                    decimal Original_E_CODIGO, 
                    string Original_E_LEGAJO, 
                    decimal Original_EE_CODIGO, 
                    global::System.Nullable<decimal> Original_SEC_CODIGO, 
                    string Original_E_APELLIDO, 
                    string Original_E_NOMBRE, 
                    global::System.Nullable<global::System.DateTime> Original_E_FECHANACIMIENTO, 
                    global::System.Nullable<global::System.DateTime> Original_E_FECHA_ALTA, 
                    global::System.Nullable<global::System.DateTime> Original_E_FECHA_BAJA) {
            return this.Update(E_LEGAJO, EE_CODIGO, SEC_CODIGO, E_APELLIDO, E_NOMBRE, E_FECHANACIMIENTO, E_FECHA_ALTA, E_FECHA_BAJA, Original_E_CODIGO, Original_E_LEGAJO, Original_EE_CODIGO, Original_SEC_CODIGO, Original_E_APELLIDO, Original_E_NOMBRE, Original_E_FECHANACIMIENTO, Original_E_FECHA_ALTA, Original_E_FECHA_BAJA, Original_E_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SECTORESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SECTORESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SECTORES";
            tableMapping.ColumnMappings.Add("SEC_CODIGO", "SEC_CODIGO");
            tableMapping.ColumnMappings.Add("SEC_NOMBRE", "SEC_NOMBRE");
            tableMapping.ColumnMappings.Add("SEC_DESCRIPCION", "SEC_DESCRIPCION");
            tableMapping.ColumnMappings.Add("SEC_ABREVIATURA", "SEC_ABREVIATURA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SECTORES] WHERE (([SEC_CODIGO] = @Original_SEC_CODIGO) AND ((@IsNull_SEC_NOMBRE = 1 AND [SEC_NOMBRE] IS NULL) OR ([SEC_NOMBRE] = @Original_SEC_NOMBRE)) AND ((@IsNull_SEC_DESCRIPCION = 1 AND [SEC_DESCRIPCION] IS NULL) OR ([SEC_DESCRIPCION] = @Original_SEC_DESCRIPCION)) AND ((@IsNull_SEC_ABREVIATURA = 1 AND [SEC_ABREVIATURA] IS NULL) OR ([SEC_ABREVIATURA] = @Original_SEC_ABREVIATURA)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEC_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEC_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEC_ABREVIATURA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_ABREVIATURA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_ABREVIATURA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SECTORES] ([SEC_NOMBRE], [SEC_DESCRIPCION], [SEC_ABREVIATURA]) VALUES (@SEC_NOMBRE, @SEC_DESCRIPCION, @SEC_ABREVIATURA);
SELECT SEC_CODIGO, SEC_NOMBRE, SEC_DESCRIPCION, SEC_ABREVIATURA FROM SECTORES WHERE (SEC_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_ABREVIATURA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[SECTORES] SET [SEC_NOMBRE] = @SEC_NOMBRE, [SEC_DESCRIPCION] = @SEC_DESCRIPCION, [SEC_ABREVIATURA] = @SEC_ABREVIATURA WHERE (([SEC_CODIGO] = @Original_SEC_CODIGO) AND ((@IsNull_SEC_NOMBRE = 1 AND [SEC_NOMBRE] IS NULL) OR ([SEC_NOMBRE] = @Original_SEC_NOMBRE)) AND ((@IsNull_SEC_DESCRIPCION = 1 AND [SEC_DESCRIPCION] IS NULL) OR ([SEC_DESCRIPCION] = @Original_SEC_DESCRIPCION)) AND ((@IsNull_SEC_ABREVIATURA = 1 AND [SEC_ABREVIATURA] IS NULL) OR ([SEC_ABREVIATURA] = @Original_SEC_ABREVIATURA)));
SELECT SEC_CODIGO, SEC_NOMBRE, SEC_DESCRIPCION, SEC_ABREVIATURA FROM SECTORES WHERE (SEC_CODIGO = @SEC_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_ABREVIATURA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEC_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEC_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SEC_ABREVIATURA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_ABREVIATURA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEC_ABREVIATURA", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEC_ABREVIATURA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEC_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "SEC_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SEC_CODIGO, SEC_NOMBRE, SEC_DESCRIPCION, SEC_ABREVIATURA FROM dbo.SECTORES" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEmpleado.SECTORESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEmpleado.SECTORESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEmpleado.SECTORESDataTable dataTable = new dsEmpleado.SECTORESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEmpleado.SECTORESDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEmpleado dataSet) {
            return this.Adapter.Update(dataSet, "SECTORES");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_SEC_CODIGO, string Original_SEC_NOMBRE, string Original_SEC_DESCRIPCION, string Original_SEC_ABREVIATURA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_SEC_CODIGO));
            if ((Original_SEC_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SEC_NOMBRE));
            }
            if ((Original_SEC_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SEC_DESCRIPCION));
            }
            if ((Original_SEC_ABREVIATURA == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_SEC_ABREVIATURA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SEC_NOMBRE, string SEC_DESCRIPCION, string SEC_ABREVIATURA) {
            if ((SEC_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SEC_NOMBRE));
            }
            if ((SEC_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SEC_DESCRIPCION));
            }
            if ((SEC_ABREVIATURA == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SEC_ABREVIATURA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SEC_NOMBRE, string SEC_DESCRIPCION, string SEC_ABREVIATURA, decimal Original_SEC_CODIGO, string Original_SEC_NOMBRE, string Original_SEC_DESCRIPCION, string Original_SEC_ABREVIATURA, decimal SEC_CODIGO) {
            if ((SEC_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SEC_NOMBRE));
            }
            if ((SEC_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SEC_DESCRIPCION));
            }
            if ((SEC_ABREVIATURA == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SEC_ABREVIATURA));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_SEC_CODIGO));
            if ((Original_SEC_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_SEC_NOMBRE));
            }
            if ((Original_SEC_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_SEC_DESCRIPCION));
            }
            if ((Original_SEC_ABREVIATURA == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_SEC_ABREVIATURA));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(SEC_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SEC_NOMBRE, string SEC_DESCRIPCION, string SEC_ABREVIATURA, decimal Original_SEC_CODIGO, string Original_SEC_NOMBRE, string Original_SEC_DESCRIPCION, string Original_SEC_ABREVIATURA) {
            return this.Update(SEC_NOMBRE, SEC_DESCRIPCION, SEC_ABREVIATURA, Original_SEC_CODIGO, Original_SEC_NOMBRE, Original_SEC_DESCRIPCION, Original_SEC_ABREVIATURA, Original_SEC_CODIGO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ESTADO_EMPLEADOSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ESTADO_EMPLEADOSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ESTADO_EMPLEADOS";
            tableMapping.ColumnMappings.Add("EE_CODIGO", "EE_CODIGO");
            tableMapping.ColumnMappings.Add("EE_NOMBRE", "EE_NOMBRE");
            tableMapping.ColumnMappings.Add("EE_DESCRIPCION", "EE_DESCRIPCION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ESTADO_EMPLEADOS] WHERE (([EE_CODIGO] = @Original_EE_CODIGO) AND ((@IsNull_EE_NOMBRE = 1 AND [EE_NOMBRE] IS NULL) OR ([EE_NOMBRE] = @Original_EE_NOMBRE)) AND ((@IsNull_EE_DESCRIPCION = 1 AND [EE_DESCRIPCION] IS NULL) OR ([EE_DESCRIPCION] = @Original_EE_DESCRIPCION)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EE_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EE_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EE_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EE_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EE_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EE_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EE_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EE_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ESTADO_EMPLEADOS] ([EE_NOMBRE], [EE_DESCRIPCION]) VALUES (@EE_" +
                "NOMBRE, @EE_DESCRIPCION);\r\nSELECT EE_CODIGO, EE_NOMBRE, EE_DESCRIPCION FROM ESTA" +
                "DO_EMPLEADOS WHERE (EE_CODIGO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EE_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EE_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EE_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EE_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ESTADO_EMPLEADOS] SET [EE_NOMBRE] = @EE_NOMBRE, [EE_DESCRIPCION] = @EE_DESCRIPCION WHERE (([EE_CODIGO] = @Original_EE_CODIGO) AND ((@IsNull_EE_NOMBRE = 1 AND [EE_NOMBRE] IS NULL) OR ([EE_NOMBRE] = @Original_EE_NOMBRE)) AND ((@IsNull_EE_DESCRIPCION = 1 AND [EE_DESCRIPCION] IS NULL) OR ([EE_DESCRIPCION] = @Original_EE_DESCRIPCION)));
SELECT EE_CODIGO, EE_NOMBRE, EE_DESCRIPCION FROM ESTADO_EMPLEADOS WHERE (EE_CODIGO = @EE_CODIGO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EE_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EE_NOMBRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EE_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EE_DESCRIPCION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EE_CODIGO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "EE_CODIGO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EE_NOMBRE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EE_NOMBRE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EE_NOMBRE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EE_NOMBRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EE_DESCRIPCION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EE_DESCRIPCION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EE_DESCRIPCION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EE_DESCRIPCION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EE_CODIGO", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, "EE_CODIGO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GyCAP.Data.Properties.Settings.Default.ProyectoConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT EE_CODIGO, EE_NOMBRE, EE_DESCRIPCION FROM dbo.ESTADO_EMPLEADOS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEmpleado.ESTADO_EMPLEADOSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEmpleado.ESTADO_EMPLEADOSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsEmpleado.ESTADO_EMPLEADOSDataTable dataTable = new dsEmpleado.ESTADO_EMPLEADOSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEmpleado.ESTADO_EMPLEADOSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsEmpleado dataSet) {
            return this.Adapter.Update(dataSet, "ESTADO_EMPLEADOS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_EE_CODIGO, string Original_EE_NOMBRE, string Original_EE_DESCRIPCION) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_EE_CODIGO));
            if ((Original_EE_NOMBRE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_EE_NOMBRE));
            }
            if ((Original_EE_DESCRIPCION == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_EE_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string EE_NOMBRE, string EE_DESCRIPCION) {
            if ((EE_NOMBRE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EE_NOMBRE));
            }
            if ((EE_DESCRIPCION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(EE_DESCRIPCION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string EE_NOMBRE, string EE_DESCRIPCION, decimal Original_EE_CODIGO, string Original_EE_NOMBRE, string Original_EE_DESCRIPCION, decimal EE_CODIGO) {
            if ((EE_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(EE_NOMBRE));
            }
            if ((EE_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(EE_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_EE_CODIGO));
            if ((Original_EE_NOMBRE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_EE_NOMBRE));
            }
            if ((Original_EE_DESCRIPCION == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_EE_DESCRIPCION));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(EE_CODIGO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string EE_NOMBRE, string EE_DESCRIPCION, decimal Original_EE_CODIGO, string Original_EE_NOMBRE, string Original_EE_DESCRIPCION) {
            return this.Update(EE_NOMBRE, EE_DESCRIPCION, Original_EE_CODIGO, Original_EE_NOMBRE, Original_EE_DESCRIPCION, Original_EE_CODIGO);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private CAPACIDAD_EMPLEADOSTableAdapter _cAPACIDAD_EMPLEADOSTableAdapter;
        
        private CAPACIDADESXEMPLEADOTableAdapter _cAPACIDADESXEMPLEADOTableAdapter;
        
        private EMPLEADOSTableAdapter _eMPLEADOSTableAdapter;
        
        private SECTORESTableAdapter _sECTORESTableAdapter;
        
        private ESTADO_EMPLEADOSTableAdapter _eSTADO_EMPLEADOSTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CAPACIDAD_EMPLEADOSTableAdapter CAPACIDAD_EMPLEADOSTableAdapter {
            get {
                return this._cAPACIDAD_EMPLEADOSTableAdapter;
            }
            set {
                this._cAPACIDAD_EMPLEADOSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CAPACIDADESXEMPLEADOTableAdapter CAPACIDADESXEMPLEADOTableAdapter {
            get {
                return this._cAPACIDADESXEMPLEADOTableAdapter;
            }
            set {
                this._cAPACIDADESXEMPLEADOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public EMPLEADOSTableAdapter EMPLEADOSTableAdapter {
            get {
                return this._eMPLEADOSTableAdapter;
            }
            set {
                this._eMPLEADOSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public SECTORESTableAdapter SECTORESTableAdapter {
            get {
                return this._sECTORESTableAdapter;
            }
            set {
                this._sECTORESTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ESTADO_EMPLEADOSTableAdapter ESTADO_EMPLEADOSTableAdapter {
            get {
                return this._eSTADO_EMPLEADOSTableAdapter;
            }
            set {
                this._eSTADO_EMPLEADOSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._cAPACIDAD_EMPLEADOSTableAdapter != null) 
                            && (this._cAPACIDAD_EMPLEADOSTableAdapter.Connection != null))) {
                    return this._cAPACIDAD_EMPLEADOSTableAdapter.Connection;
                }
                if (((this._cAPACIDADESXEMPLEADOTableAdapter != null) 
                            && (this._cAPACIDADESXEMPLEADOTableAdapter.Connection != null))) {
                    return this._cAPACIDADESXEMPLEADOTableAdapter.Connection;
                }
                if (((this._eMPLEADOSTableAdapter != null) 
                            && (this._eMPLEADOSTableAdapter.Connection != null))) {
                    return this._eMPLEADOSTableAdapter.Connection;
                }
                if (((this._sECTORESTableAdapter != null) 
                            && (this._sECTORESTableAdapter.Connection != null))) {
                    return this._sECTORESTableAdapter.Connection;
                }
                if (((this._eSTADO_EMPLEADOSTableAdapter != null) 
                            && (this._eSTADO_EMPLEADOSTableAdapter.Connection != null))) {
                    return this._eSTADO_EMPLEADOSTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._cAPACIDAD_EMPLEADOSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cAPACIDADESXEMPLEADOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eMPLEADOSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sECTORESTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eSTADO_EMPLEADOSTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(dsEmpleado dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sECTORESTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SECTORES.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sECTORESTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eSTADO_EMPLEADOSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ESTADO_EMPLEADOS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eSTADO_EMPLEADOSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cAPACIDAD_EMPLEADOSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CAPACIDAD_EMPLEADOS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cAPACIDAD_EMPLEADOSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eMPLEADOSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.EMPLEADOS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eMPLEADOSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cAPACIDADESXEMPLEADOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CAPACIDADESXEMPLEADO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cAPACIDADESXEMPLEADOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(dsEmpleado dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sECTORESTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SECTORES.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sECTORESTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eSTADO_EMPLEADOSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ESTADO_EMPLEADOS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eSTADO_EMPLEADOSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cAPACIDAD_EMPLEADOSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CAPACIDAD_EMPLEADOS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cAPACIDAD_EMPLEADOSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eMPLEADOSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.EMPLEADOS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eMPLEADOSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cAPACIDADESXEMPLEADOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CAPACIDADESXEMPLEADO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cAPACIDADESXEMPLEADOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(dsEmpleado dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._cAPACIDADESXEMPLEADOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CAPACIDADESXEMPLEADO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cAPACIDADESXEMPLEADOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eMPLEADOSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.EMPLEADOS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eMPLEADOSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cAPACIDAD_EMPLEADOSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CAPACIDAD_EMPLEADOS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cAPACIDAD_EMPLEADOSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eSTADO_EMPLEADOSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ESTADO_EMPLEADOS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eSTADO_EMPLEADOSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sECTORESTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SECTORES.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sECTORESTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(dsEmpleado dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._cAPACIDAD_EMPLEADOSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cAPACIDAD_EMPLEADOSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cAPACIDADESXEMPLEADOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cAPACIDADESXEMPLEADOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._eMPLEADOSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eMPLEADOSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sECTORESTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sECTORESTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._eSTADO_EMPLEADOSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eSTADO_EMPLEADOSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._cAPACIDAD_EMPLEADOSTableAdapter != null)) {
                    revertConnections.Add(this._cAPACIDAD_EMPLEADOSTableAdapter, this._cAPACIDAD_EMPLEADOSTableAdapter.Connection);
                    this._cAPACIDAD_EMPLEADOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cAPACIDAD_EMPLEADOSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cAPACIDAD_EMPLEADOSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cAPACIDAD_EMPLEADOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cAPACIDAD_EMPLEADOSTableAdapter.Adapter);
                    }
                }
                if ((this._cAPACIDADESXEMPLEADOTableAdapter != null)) {
                    revertConnections.Add(this._cAPACIDADESXEMPLEADOTableAdapter, this._cAPACIDADESXEMPLEADOTableAdapter.Connection);
                    this._cAPACIDADESXEMPLEADOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cAPACIDADESXEMPLEADOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cAPACIDADESXEMPLEADOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cAPACIDADESXEMPLEADOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cAPACIDADESXEMPLEADOTableAdapter.Adapter);
                    }
                }
                if ((this._eMPLEADOSTableAdapter != null)) {
                    revertConnections.Add(this._eMPLEADOSTableAdapter, this._eMPLEADOSTableAdapter.Connection);
                    this._eMPLEADOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eMPLEADOSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eMPLEADOSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eMPLEADOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eMPLEADOSTableAdapter.Adapter);
                    }
                }
                if ((this._sECTORESTableAdapter != null)) {
                    revertConnections.Add(this._sECTORESTableAdapter, this._sECTORESTableAdapter.Connection);
                    this._sECTORESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sECTORESTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sECTORESTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sECTORESTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sECTORESTableAdapter.Adapter);
                    }
                }
                if ((this._eSTADO_EMPLEADOSTableAdapter != null)) {
                    revertConnections.Add(this._eSTADO_EMPLEADOSTableAdapter, this._eSTADO_EMPLEADOSTableAdapter.Connection);
                    this._eSTADO_EMPLEADOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eSTADO_EMPLEADOSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eSTADO_EMPLEADOSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eSTADO_EMPLEADOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eSTADO_EMPLEADOSTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._cAPACIDAD_EMPLEADOSTableAdapter != null)) {
                    this._cAPACIDAD_EMPLEADOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cAPACIDAD_EMPLEADOSTableAdapter]));
                    this._cAPACIDAD_EMPLEADOSTableAdapter.Transaction = null;
                }
                if ((this._cAPACIDADESXEMPLEADOTableAdapter != null)) {
                    this._cAPACIDADESXEMPLEADOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cAPACIDADESXEMPLEADOTableAdapter]));
                    this._cAPACIDADESXEMPLEADOTableAdapter.Transaction = null;
                }
                if ((this._eMPLEADOSTableAdapter != null)) {
                    this._eMPLEADOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eMPLEADOSTableAdapter]));
                    this._eMPLEADOSTableAdapter.Transaction = null;
                }
                if ((this._sECTORESTableAdapter != null)) {
                    this._sECTORESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sECTORESTableAdapter]));
                    this._sECTORESTableAdapter.Transaction = null;
                }
                if ((this._eSTADO_EMPLEADOSTableAdapter != null)) {
                    this._eSTADO_EMPLEADOSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eSTADO_EMPLEADOSTableAdapter]));
                    this._eSTADO_EMPLEADOSTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591